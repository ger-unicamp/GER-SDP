
SDP_2016.elf:     file format elf32-littlearm
SDP_2016.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000020f5

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x000000c0 memsz 0x000000c0 flags r--
    LOAD off    0x00008400 vaddr 0x00000400 paddr 0x00000400 align 2**15
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00008410 vaddr 0x00000410 paddr 0x00000410 align 2**15
         filesz 0x00003704 memsz 0x00003704 flags rwx
    LOAD off    0x0000f000 vaddr 0x1ffff000 paddr 0x00003b14 align 2**15
         filesz 0x00000060 memsz 0x00000350 flags rw-
    LOAD off    0x0000f350 vaddr 0x1ffff350 paddr 0x00003b74 align 2**15
         filesz 0x00000018 memsz 0x00000418 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts   000000c0  00000000  00000000  00008000  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .cfmprotect   00000010  00000400  00000400  00008400  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000036f4  00000410  00000410  00008410  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM          00000008  00003b04  00003b04  0000bb04  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  00003b0c  00003b0c  0000bb0c  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  00003b10  00003b10  0000bb10  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000060  1ffff000  00003b14  0000f000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000002f0  1ffff060  00003b74  0000f060  2**2  ALLOC
  8 .romp         00000018  1ffff350  00003b74  0000f350  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 ._user_heap_stack 00000400  1ffff368  00003b8c  0000f368  2**0  ALLOC
 10 .ARM.attributes 00000028  00000000  00000000  0000f368  2**0  CONTENTS, READONLY
 11 .debug_info   000079ff  00000000  00000000  0000f390  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 0000275d  00000000  00000000  00016d8f  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 000007e8  00000000  00000000  000194ec  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000005c0  00000000  00000000  00019cd4  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro  000151fe  00000000  00000000  0001a294  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   000085ff  00000000  00000000  0002f492  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    000455ef  00000000  00000000  00037a91  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment      00000070  00000000  00000000  0007d080  2**0  CONTENTS, READONLY
 19 .debug_frame  000017d4  00000000  00000000  0007d0f0  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .interrupts	00000000 .interrupts
00000400 l    d  .cfmprotect	00000000 .cfmprotect
00000410 l    d  .text	00000000 .text
00003b04 l    d  .ARM	00000000 .ARM
00003b0c l    d  .init_array	00000000 .init_array
00003b10 l    d  .fini_array	00000000 .fini_array
1ffff000 l    d  .data	00000000 .data
1ffff060 l    d  .bss	00000000 .bss
1ffff350 l    d  .romp	00000000 .romp
1ffff368 l    d  ._user_heap_stack	00000000 ._user_heap_stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 Vectors.c
00000000 l    df *ABS*	00000000 Cpu.c
00000000 l    df *ABS*	00000000 crtstuff.c
00003aec l     O .text	00000000 __EH_FRAME_BEGIN__
00000410 l     F .text	00000000 __do_global_dtors_aux
1ffff060 l       .bss	00000000 completed.7863
00003b10 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00000438 l     F .text	00000000 frame_dummy
1ffff064 l       .bss	00000000 object.7868
00003b0c l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/../../../../arm-none-eabi/lib/armv6-m/crt0.o
00000000 l    df *ABS*	00000000 _udivsi3.o
000004ec l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
00000588 l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 _clzsi2.o
00000000 l    df *ABS*	00000000 BatteryController.c
00000000 l    df *ABS*	00000000 CameraController.c
00000000 l    df *ABS*	00000000 Events.c
00000000 l    df *ABS*	00000000 ImageProcessing.c
00000000 l    df *ABS*	00000000 SerialCommunication.c
1ffff07c l     O .bss	00000008 deviceData
00001dc0 l     F .text	00000020 init_Serial
00001de0 l     F .text	00000044 sendAChar
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 startup.c
00002108 l       .text	00000000 skip_sp
00000000 l    df *ABS*	00000000 AD_Converter.c
1ffff084 l     O .bss	00000001 SumChan
1ffff085 l     O .bss	00000001 ModeFlg
1ffff088 l     O .bss	00000002 SampleGroup
00003adc l     O .text	00000002 Table
1ffff08c l     O .bss	00000001 OutFlg
00002124 l     F .text	00000018 ClrSumV
00000000 l    df *ABS*	00000000 AdcLdd1.c
00003ae0 l     O .text	00000002 ChannelToPin
1ffff090 l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff098 l     O .bss	00000004 INT_ADC0__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 BitIoLdd1.c
1ffff09c l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd10.c
1ffff0a0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd11.c
1ffff0a4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd2.c
1ffff0a8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd3.c
1ffff0ac l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd4.c
1ffff0b0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd5.c
1ffff0b4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd6.c
1ffff0b8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd7.c
1ffff0bc l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd8.c
1ffff0c0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd9.c
1ffff0c4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 Camera_CLK_Interruption.c
00000000 l    df *ABS*	00000000 PwmLdd1.c
1ffff124 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 PwmLdd2.c
1ffff130 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 PwmLdd3.c
1ffff13c l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 PwmLdd4.c
1ffff148 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 PwmLdd5.c
1ffff154 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 SerialCom.c
1ffff160 l     O .bss	00000018 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff178 l     O .bss	00000004 INT_UART0__DEFAULT_RTOS_ISRPARAM
000033c8 l     F .text	00000050 InterruptRx
00003418 l     F .text	00000080 InterruptTx
00000000 l    df *ABS*	00000000 TU1.c
1ffff17c l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff184 l     O .bss	00000004 INT_PIT__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 TU2.c
1ffff188 l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 TU3.c
1ffff190 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 TimerIntLdd1.c
1ffff19c l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 impure.c
1ffff000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 PE_LDD.c
00000000 l    df *ABS*	00000000 
00000400 l       *ABS*	00000000 __stack_size
00020000 l       *ABS*	00000000 text_end
1ffff000 l       .data	00000000 _sdata
00003b8c l       .fini_array	00000000 data_init_end
00003b14 l       .fini_array	00000000 ___ROM_AT
00000000 l       *ABS*	00000000 __heap_size
00003b10 l       .init_array	00000000 __init_array_end
00003b0c l       .init_array	00000000 __preinit_array_end
20003000 l       *ABS*	00000000 _estack
1ffff060 l       .data	00000000 _edata
00003b0c l       .init_array	00000000 __init_array_start
00003b0c l       .init_array	00000000 __preinit_array_start
00002660 g     F .text	00000030 AdcLdd1_MeasurementCompleteInterrupt
0000181c g     F .text	00000028 updateBatteryLevel
1ffff1b4 g     O .bss	00000004 clockCounter
1ffff368 g       ._user_heap_stack	00000000 __HeapBase
00000688 g     F .text	00000012 .hidden __aeabi_dcmple
00002a48 g     F .text	0000001c BitIoLdd5_NegVal
00003154 g     F .text	000001b0 SerialCom_Init
00000e78 g     F .text	00000094 .hidden __eqdf2
000035d0 g     F .text	0000002c TU1_Enable
0000223c g     F .text	00000058 AD_Converter_GetChanValue
00001b8c g     F .text	00000120 Camera_CLK_Interruption_OnInterrupt
1ffff368 g       ._user_heap_stack	00000000 __heap_addr
1ffff0c8 g     O .bss	00000001 SR_lock
1ffff1b8 g     O .bss	00000004 samplesNumber
1ffff1a8 g     O .bss	00000001 handlingPowerUpdate
00002b88 g     F .text	0000001c BitIoLdd7_ClrVal
00003074 g     F .text	00000058 PwmLdd4_Init
00003b0c g       .ARM	00000000 __exidx_end
00002940 g     F .text	00000068 BitIoLdd4_Init
00000f0c g     F .text	000000fc .hidden __gtdf2
1ffff1bc g     O .bss	00000004 transferTime
00001d30 g     F .text	00000090 binarization
000028a8 g     F .text	00000018 BitIoLdd2_SetVal
00002690 g     F .text	00000060 BitIoLdd1_Init
00003b04 g       .text	00000000 _etext
00000658 g     F .text	00000010 .hidden __aeabi_cdcmple
1ffff1c0 g     O .bss	00000004 currentSample
00000738 g     F .text	000002d8 .hidden __aeabi_fadd
00000000 g     O .interrupts	000000c0 __vect_table
00001848 g     F .text	0000022c updatePowerState
00002acc g     F .text	0000001c BitIoLdd6_ClrVal
000021d8 g     F .text	00000064 AD_Converter_MeasureChan
00002498 g     F .text	00000044 AdcLdd1_StartSingleMeasurement
00002c7c g     F .text	0000001c BitIoLdd8_NegVal
000035fc g     F .text	00000074 TU1_SetEventMask
00000648 g     F .text	00000020 .hidden __aeabi_cdrcmple
00000710 g     F .text	00000012 .hidden __aeabi_fcmpgt
00001008 g     F .text	000000fc .hidden __ltdf2
00003b0c g       .init_array	00000000 __DTOR_END__
000004e8 g     F .text	00000088 .hidden __udivsi3
1ffff060 g       .bss	00000000 __START_BSS
00003124 g     F .text	0000002e PwmLdd5_Enable
00000d40 g     F .text	00000096 .hidden __lesf2
1ffff368 g       ._user_heap_stack	00000000 __HeapLimit
1ffff060 g       .bss	00000000 __bss_start__
00001ce0 g     F .text	00000018 SerialCom_OnBlockSent
000025a8 g     F .text	000000b8 AdcLdd1_GetCalibrationResultStatus
00002748 g     F .text	00000060 BitIoLdd10_Init
00001a78 g     F .text	00000028 initializeCamera
00001b14 g     F .text	00000070 verifySample
00000674 g     F .text	00000012 .hidden __aeabi_dcmplt
000020f4 g     F .text	00000030 __thumb_startup
00000c5c g     F .text	00000054 .hidden __nesf2
00001e24 g     F .text	0000009a itoa_8_bit
0000238c g     F .text	0000002c AD_Converter_Init
00003b04 g       .ARM	00000000 __exidx_start
00001104 g     F .text	00000520 .hidden __aeabi_dmul
00003ae8 g     O .text	00000004 _global_impure_ptr
000039e8 g     F .text	0000004c __libc_init_array
000020ec  w    F .text	00000008 __init_user
00000470 g     F .text	00000000 _mainCRTStartup
1ffff2c8 g     O .bss	00000080 referenceImage
1ffff1a9 g     O .bss	00000001 serialTest
00001aa0 g     F .text	00000074 getRawImageMean
00003aec g     F .text	00000000 _init
1ffff1c4 g     O .bss	00000004 state
00003928 g     F .text	0000002e TimerIntLdd1_Enable
000016c8 g     F .text	00000118 .hidden __aeabi_d2f
00000000  w      *UND*	00000000 __libc_fini_array
00002fc4 g     F .text	00000058 PwmLdd2_Init
00002d28 g     F .text	00000110 __init_hardware
00002808 g     F .text	00000060 BitIoLdd2_Init
000029a8 g     F .text	0000001c BitIoLdd4_SetVal
00000724 g     F .text	00000012 .hidden __aeabi_fcmpge
1ffff1c8 g     O .bss	00000080 rawImage
00003498 g     F .text	00000064 SerialCom_Interrupt
00003998 g     F .text	00000024 TU1_OnCounterRestart
00000cb0 g     F .text	0000008e .hidden __gtsf2
0000213c g     F .text	0000009c AD_Converter_HWEnDi
1ffff348 g     O .bss	00000004 AdcLdd1_DeviceDataPtr
00001008 g     F .text	000000fc .hidden __ledf2
00002718 g     F .text	00000018 BitIoLdd1_ClrVal
000006fc g     F .text	00000012 .hidden __aeabi_fcmple
00000000  w      *UND*	00000000 __sf_fake_stderr
00000000  w      *UND*	00000000 __deregister_frame_info
00000584 g     F .text	00000000 .hidden __aeabi_idiv
00001f74 g     F .text	000000d6 __copy_rom_section
00001b84 g     F .text	00000008 Cpu_OnNMIINT
00003b0c g       .init_array	00000000 __CTOR_LIST__
0000069c g     F .text	00000012 .hidden __aeabi_dcmpgt
000017e0 g     F .text	0000003c .hidden __clzsi2
00002bc0 g     F .text	0000001c BitIoLdd7_NegVal
1ffff350 g       .bss	00000000 __bss_end__
000006b0 g     F .text	00000012 .hidden __aeabi_dcmpge
00000000  w      *UND*	00000000 __call_exitprocs
00002890 g     F .text	00000018 BitIoLdd2_ClrVal
00000470 g     F .text	00000000 _start
000023b8 g     F .text	000000e0 AdcLdd1_Init
00002730 g     F .text	00000018 BitIoLdd1_SetVal
00000400 g     O .cfmprotect	00000010 _cfm
00000000 g       .interrupts	00000000 __vector_table
00000c5c g     F .text	00000054 .hidden __eqsf2
20003000 g       *ABS*	00000000 __SP_INIT
00000000  w      *UND*	00000000 software_init_hook
00002b04 g     F .text	0000001c BitIoLdd6_NegVal
00000a10 g     F .text	0000024c .hidden __aeabi_fdiv
000024dc g     F .text	0000006c AdcLdd1_CreateSampleGroup
00002918 g     F .text	00000028 BitIoLdd3_GetVal
00002e38 g     F .text	00000134 PE_low_level_init
00000644  w    F .text	00000002 .hidden __aeabi_ldiv0
00002548 g     F .text	00000060 AdcLdd1_GetMeasuredValues
00000dd8 g     F .text	000000a0 .hidden __aeabi_ui2f
1ffff1ac g     O .bss	00000004 batteryLevel
0000204c g     F .text	00000098 __copy_rom_sections_to_ram
000029c4 g     F .text	00000068 BitIoLdd5_Init
00001cf8 g     F .text	00000038 calibration
00000000  w      *UND*	00000000 __sf_fake_stdin
1ffff34e g     O .bss	00000001 SR_reg
00002b20 g     F .text	00000068 BitIoLdd7_Init
00003a34 g     F .text	00000010 memset
00001f10 g     F .text	00000064 main
00000d40 g     F .text	00000096 .hidden __ltsf2
00002294 g     F .text	000000f8 AdcLdd1_OnMeasurementComplete
000004e8 g     F .text	00000000 .hidden __aeabi_uidiv
00002d1c g     F .text	0000000a Cpu_Interrupt
00002a64 g     F .text	00000068 BitIoLdd6_Init
00002c98 g     F .text	00000064 BitIoLdd9_Init
1ffff0cc g     O .bss	00000058 PE_LDD_DeviceDataList
00000000  w      *UND*	00000000 hardware_init_hook
00002f6c g     F .text	00000058 PwmLdd1_Init
00002cfc g     F .text	00000012 TimerIntLdd1_OnInterrupt
0000301c g     F .text	00000058 PwmLdd3_Init
000006cc g     F .text	00000010 .hidden __aeabi_cfcmple
00000584 g     F .text	000000ac .hidden __divsi3
00003958 g     F .text	00000040 TimerIntLdd1_SetEventMask
00003b0c g       .init_array	00000000 __CTOR_END__
00002c44 g     F .text	0000001c BitIoLdd8_ClrVal
00003b0c g       .init_array	00000000 __DTOR_LIST__
1ffff350 g       .bss	00000000 __END_BSS
00000e78 g     F .text	00000094 .hidden __nedf2
00003af8 g     F .text	00000000 _fini
00003b74 g       .fini_array	00000000 _romp_at
000036a8 g     F .text	00000134 TU2_Init
00000000  w      *UND*	00000000 atexit
00000cb0 g     F .text	0000008e .hidden __gesf2
1ffff1b0 g     O .bss	00000001 serialFinished
1ffff1b1 g     O .bss	00000001 serialTestStart
000006dc g     F .text	0000000c .hidden __aeabi_fcmpeq
1ffff000 g       .data	00000000 _mtb_end
00001ec0 g     F .text	00000050 sendArrayOfPixels
00003670 g     F .text	00000038 TU1_Interrupt
000006c4 g     F .text	00000018 .hidden __aeabi_cfrcmple
000028c0 g     F .text	00000058 BitIoLdd3_Init
00002bdc g     F .text	00000068 BitIoLdd8_Init
00002a2c g     F .text	0000001c BitIoLdd5_SetVal
00002ba4 g     F .text	0000001c BitIoLdd7_SetVal
000006e8 g     F .text	00000012 .hidden __aeabi_fcmplt
00003b74 g       .fini_array	00000000 __S_romp
20003000 g       *ABS*	00000000 __stack
00000570 g     F .text	00000012 .hidden __aeabi_uidivmod
00000668 g     F .text	0000000c .hidden __aeabi_dcmpeq
000026f0 g     F .text	00000028 BitIoLdd1_GetVal
00002868 g     F .text	00000028 BitIoLdd2_GetVal
00002c60 g     F .text	0000001c BitIoLdd8_SetVal
000027a8 g     F .text	00000060 BitIoLdd11_Init
000039bc g     F .text	0000002c exit
1ffff34c g     O .bss	00000002 AD_Converter_OutV
000037dc g     F .text	000000cc TU3_Init
000020e4  w    F .text	00000008 __init_registers
000006cc g     F .text	00000010 .hidden __aeabi_cfcmpeq
1ffff000 g       .data	00000000 _mtb_start
00000000  w      *UND*	00000000 __sf_fake_stdout
000038d8 g     F .text	00000050 TimerIntLdd1_Init
000034fc g     F .text	000000d4 TU1_Init
00000644  w    F .text	00000002 .hidden __aeabi_idiv0
000030cc g     F .text	00000058 PwmLdd5_Init
00003a44 g     F .text	00000002 _exit
00003304 g     F .text	000000c4 SerialCom_SendBlock
000038a8 g     F .text	00000030 TU3_Enable
1ffff248 g     O .bss	00000080 rawImageBuffer
00000658 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00000f0c g     F .text	000000fc .hidden __gedf2
00001cac g     F .text	00000034 AD_Converter_OnEnd
00001624 g     F .text	000000a4 .hidden __aeabi_f2d
00000000  w      *UND*	00000000 _Jv_RegisterClasses
00000630 g     F .text	00000012 .hidden __aeabi_idivmod
00000060 g       *ABS*	00000000 ___data_size
00002d10 g     F .text	0000000c Cpu_INT_NMIInterrupt
00000000  w      *UND*	00000000 __register_frame_info
00002ae8 g     F .text	0000001c BitIoLdd6_SetVal



Disassembly of section .text:

00000410 <__do_global_dtors_aux>:
$t():
     410:	b510      	push	{r4, lr}
     412:	4c06      	ldr	r4, [pc, #24]	; (42c <__do_global_dtors_aux+0x1c>)
     414:	7823      	ldrb	r3, [r4, #0]
     416:	2b00      	cmp	r3, #0
     418:	d107      	bne.n	42a <__do_global_dtors_aux+0x1a>
     41a:	4b05      	ldr	r3, [pc, #20]	; (430 <__do_global_dtors_aux+0x20>)
     41c:	2b00      	cmp	r3, #0
     41e:	d002      	beq.n	426 <__do_global_dtors_aux+0x16>
     420:	4804      	ldr	r0, [pc, #16]	; (434 <__do_global_dtors_aux+0x24>)
     422:	e000      	b.n	426 <__do_global_dtors_aux+0x16>
     424:	bf00      	nop
     426:	2301      	movs	r3, #1
     428:	7023      	strb	r3, [r4, #0]
     42a:	bd10      	pop	{r4, pc}
$d():
     42c:	1ffff060 	.word	0x1ffff060
     430:	00000000 	.word	0x00000000
     434:	00003aec 	.word	0x00003aec

00000438 <frame_dummy>:
$t():
     438:	b508      	push	{r3, lr}
     43a:	4b08      	ldr	r3, [pc, #32]	; (45c <frame_dummy+0x24>)
     43c:	2b00      	cmp	r3, #0
     43e:	d003      	beq.n	448 <frame_dummy+0x10>
     440:	4807      	ldr	r0, [pc, #28]	; (460 <frame_dummy+0x28>)
     442:	4908      	ldr	r1, [pc, #32]	; (464 <frame_dummy+0x2c>)
     444:	e000      	b.n	448 <frame_dummy+0x10>
     446:	bf00      	nop
     448:	4807      	ldr	r0, [pc, #28]	; (468 <frame_dummy+0x30>)
     44a:	6803      	ldr	r3, [r0, #0]
     44c:	2b00      	cmp	r3, #0
     44e:	d003      	beq.n	458 <frame_dummy+0x20>
     450:	4b06      	ldr	r3, [pc, #24]	; (46c <frame_dummy+0x34>)
     452:	2b00      	cmp	r3, #0
     454:	d000      	beq.n	458 <frame_dummy+0x20>
     456:	4798      	blx	r3
     458:	bd08      	pop	{r3, pc}
     45a:	46c0      	nop			; (mov r8, r8)
$d():
     45c:	00000000 	.word	0x00000000
     460:	00003aec 	.word	0x00003aec
     464:	1ffff064 	.word	0x1ffff064
     468:	1ffff060 	.word	0x1ffff060
     46c:	00000000 	.word	0x00000000

00000470 <_mainCRTStartup>:
$t():
     470:	4b16      	ldr	r3, [pc, #88]	; (4cc <_mainCRTStartup+0x5c>)
     472:	2b00      	cmp	r3, #0
     474:	d100      	bne.n	478 <_mainCRTStartup+0x8>
     476:	4b14      	ldr	r3, [pc, #80]	; (4c8 <_mainCRTStartup+0x58>)
     478:	469d      	mov	sp, r3
     47a:	2240      	movs	r2, #64	; 0x40
     47c:	0292      	lsls	r2, r2, #10
     47e:	1a9a      	subs	r2, r3, r2
     480:	4692      	mov	sl, r2
     482:	2100      	movs	r1, #0
     484:	468b      	mov	fp, r1
     486:	460f      	mov	r7, r1
     488:	4813      	ldr	r0, [pc, #76]	; (4d8 <_mainCRTStartup+0x68>)
     48a:	4a14      	ldr	r2, [pc, #80]	; (4dc <_mainCRTStartup+0x6c>)
     48c:	1a12      	subs	r2, r2, r0
     48e:	f003 fad1 	bl	3a34 <memset>
     492:	4b0f      	ldr	r3, [pc, #60]	; (4d0 <_mainCRTStartup+0x60>)
     494:	2b00      	cmp	r3, #0
     496:	d000      	beq.n	49a <_mainCRTStartup+0x2a>
     498:	4798      	blx	r3
     49a:	4b0e      	ldr	r3, [pc, #56]	; (4d4 <_mainCRTStartup+0x64>)
     49c:	2b00      	cmp	r3, #0
     49e:	d000      	beq.n	4a2 <_mainCRTStartup+0x32>
     4a0:	4798      	blx	r3
     4a2:	2000      	movs	r0, #0
     4a4:	2100      	movs	r1, #0
     4a6:	0004      	movs	r4, r0
     4a8:	000d      	movs	r5, r1
     4aa:	480d      	ldr	r0, [pc, #52]	; (4e0 <_mainCRTStartup+0x70>)
     4ac:	2800      	cmp	r0, #0
     4ae:	d002      	beq.n	4b6 <_mainCRTStartup+0x46>
     4b0:	480c      	ldr	r0, [pc, #48]	; (4e4 <_mainCRTStartup+0x74>)
     4b2:	e000      	b.n	4b6 <_mainCRTStartup+0x46>
     4b4:	bf00      	nop
     4b6:	f003 fa97 	bl	39e8 <__libc_init_array>
     4ba:	0020      	movs	r0, r4
     4bc:	0029      	movs	r1, r5
     4be:	f001 fd27 	bl	1f10 <main>
     4c2:	f003 fa7b 	bl	39bc <exit>
     4c6:	46c0      	nop			; (mov r8, r8)
$d():
     4c8:	00080000 	.word	0x00080000
     4cc:	20003000 	.word	0x20003000
	...
     4d8:	1ffff060 	.word	0x1ffff060
     4dc:	1ffff350 	.word	0x1ffff350
	...

000004e8 <__aeabi_uidiv>:
__udivsi3():
     4e8:	2900      	cmp	r1, #0
     4ea:	d034      	beq.n	556 <.udivsi3_skip_div0_test+0x6a>

000004ec <.udivsi3_skip_div0_test>:
     4ec:	2301      	movs	r3, #1
     4ee:	2200      	movs	r2, #0
     4f0:	b410      	push	{r4}
     4f2:	4288      	cmp	r0, r1
     4f4:	d32c      	bcc.n	550 <.udivsi3_skip_div0_test+0x64>
     4f6:	2401      	movs	r4, #1
     4f8:	0724      	lsls	r4, r4, #28
     4fa:	42a1      	cmp	r1, r4
     4fc:	d204      	bcs.n	508 <.udivsi3_skip_div0_test+0x1c>
     4fe:	4281      	cmp	r1, r0
     500:	d202      	bcs.n	508 <.udivsi3_skip_div0_test+0x1c>
     502:	0109      	lsls	r1, r1, #4
     504:	011b      	lsls	r3, r3, #4
     506:	e7f8      	b.n	4fa <.udivsi3_skip_div0_test+0xe>
     508:	00e4      	lsls	r4, r4, #3
     50a:	42a1      	cmp	r1, r4
     50c:	d204      	bcs.n	518 <.udivsi3_skip_div0_test+0x2c>
     50e:	4281      	cmp	r1, r0
     510:	d202      	bcs.n	518 <.udivsi3_skip_div0_test+0x2c>
     512:	0049      	lsls	r1, r1, #1
     514:	005b      	lsls	r3, r3, #1
     516:	e7f8      	b.n	50a <.udivsi3_skip_div0_test+0x1e>
     518:	4288      	cmp	r0, r1
     51a:	d301      	bcc.n	520 <.udivsi3_skip_div0_test+0x34>
     51c:	1a40      	subs	r0, r0, r1
     51e:	431a      	orrs	r2, r3
     520:	084c      	lsrs	r4, r1, #1
     522:	42a0      	cmp	r0, r4
     524:	d302      	bcc.n	52c <.udivsi3_skip_div0_test+0x40>
     526:	1b00      	subs	r0, r0, r4
     528:	085c      	lsrs	r4, r3, #1
     52a:	4322      	orrs	r2, r4
     52c:	088c      	lsrs	r4, r1, #2
     52e:	42a0      	cmp	r0, r4
     530:	d302      	bcc.n	538 <.udivsi3_skip_div0_test+0x4c>
     532:	1b00      	subs	r0, r0, r4
     534:	089c      	lsrs	r4, r3, #2
     536:	4322      	orrs	r2, r4
     538:	08cc      	lsrs	r4, r1, #3
     53a:	42a0      	cmp	r0, r4
     53c:	d302      	bcc.n	544 <.udivsi3_skip_div0_test+0x58>
     53e:	1b00      	subs	r0, r0, r4
     540:	08dc      	lsrs	r4, r3, #3
     542:	4322      	orrs	r2, r4
     544:	2800      	cmp	r0, #0
     546:	d003      	beq.n	550 <.udivsi3_skip_div0_test+0x64>
     548:	091b      	lsrs	r3, r3, #4
     54a:	d001      	beq.n	550 <.udivsi3_skip_div0_test+0x64>
     54c:	0909      	lsrs	r1, r1, #4
     54e:	e7e3      	b.n	518 <.udivsi3_skip_div0_test+0x2c>
     550:	1c10      	adds	r0, r2, #0
     552:	bc10      	pop	{r4}
     554:	4770      	bx	lr
     556:	2800      	cmp	r0, #0
     558:	d001      	beq.n	55e <.udivsi3_skip_div0_test+0x72>
     55a:	2000      	movs	r0, #0
     55c:	43c0      	mvns	r0, r0
     55e:	b407      	push	{r0, r1, r2}
     560:	4802      	ldr	r0, [pc, #8]	; (56c <.udivsi3_skip_div0_test+0x80>)
     562:	a102      	add	r1, pc, #8	; (adr r1, 56c <.udivsi3_skip_div0_test+0x80>)
     564:	1840      	adds	r0, r0, r1
     566:	9002      	str	r0, [sp, #8]
     568:	bd03      	pop	{r0, r1, pc}
     56a:	46c0      	nop			; (mov r8, r8)
     56c:	000000d9 	.word	0x000000d9

00000570 <__aeabi_uidivmod>:
__aeabi_uidivmod():
     570:	2900      	cmp	r1, #0
     572:	d0f0      	beq.n	556 <.udivsi3_skip_div0_test+0x6a>
     574:	b503      	push	{r0, r1, lr}
     576:	f7ff ffb9 	bl	4ec <.udivsi3_skip_div0_test>
     57a:	bc0e      	pop	{r1, r2, r3}
     57c:	4342      	muls	r2, r0
     57e:	1a89      	subs	r1, r1, r2
     580:	4718      	bx	r3
     582:	46c0      	nop			; (mov r8, r8)

00000584 <__aeabi_idiv>:
__divsi3():
     584:	2900      	cmp	r1, #0
     586:	d041      	beq.n	60c <.divsi3_skip_div0_test+0x84>

00000588 <.divsi3_skip_div0_test>:
     588:	b410      	push	{r4}
     58a:	1c04      	adds	r4, r0, #0
     58c:	404c      	eors	r4, r1
     58e:	46a4      	mov	ip, r4
     590:	2301      	movs	r3, #1
     592:	2200      	movs	r2, #0
     594:	2900      	cmp	r1, #0
     596:	d500      	bpl.n	59a <.divsi3_skip_div0_test+0x12>
     598:	4249      	negs	r1, r1
     59a:	2800      	cmp	r0, #0
     59c:	d500      	bpl.n	5a0 <.divsi3_skip_div0_test+0x18>
     59e:	4240      	negs	r0, r0
     5a0:	4288      	cmp	r0, r1
     5a2:	d32c      	bcc.n	5fe <.divsi3_skip_div0_test+0x76>
     5a4:	2401      	movs	r4, #1
     5a6:	0724      	lsls	r4, r4, #28
     5a8:	42a1      	cmp	r1, r4
     5aa:	d204      	bcs.n	5b6 <.divsi3_skip_div0_test+0x2e>
     5ac:	4281      	cmp	r1, r0
     5ae:	d202      	bcs.n	5b6 <.divsi3_skip_div0_test+0x2e>
     5b0:	0109      	lsls	r1, r1, #4
     5b2:	011b      	lsls	r3, r3, #4
     5b4:	e7f8      	b.n	5a8 <.divsi3_skip_div0_test+0x20>
     5b6:	00e4      	lsls	r4, r4, #3
     5b8:	42a1      	cmp	r1, r4
     5ba:	d204      	bcs.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5bc:	4281      	cmp	r1, r0
     5be:	d202      	bcs.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5c0:	0049      	lsls	r1, r1, #1
     5c2:	005b      	lsls	r3, r3, #1
     5c4:	e7f8      	b.n	5b8 <.divsi3_skip_div0_test+0x30>
     5c6:	4288      	cmp	r0, r1
     5c8:	d301      	bcc.n	5ce <.divsi3_skip_div0_test+0x46>
     5ca:	1a40      	subs	r0, r0, r1
     5cc:	431a      	orrs	r2, r3
     5ce:	084c      	lsrs	r4, r1, #1
     5d0:	42a0      	cmp	r0, r4
     5d2:	d302      	bcc.n	5da <.divsi3_skip_div0_test+0x52>
     5d4:	1b00      	subs	r0, r0, r4
     5d6:	085c      	lsrs	r4, r3, #1
     5d8:	4322      	orrs	r2, r4
     5da:	088c      	lsrs	r4, r1, #2
     5dc:	42a0      	cmp	r0, r4
     5de:	d302      	bcc.n	5e6 <.divsi3_skip_div0_test+0x5e>
     5e0:	1b00      	subs	r0, r0, r4
     5e2:	089c      	lsrs	r4, r3, #2
     5e4:	4322      	orrs	r2, r4
     5e6:	08cc      	lsrs	r4, r1, #3
     5e8:	42a0      	cmp	r0, r4
     5ea:	d302      	bcc.n	5f2 <.divsi3_skip_div0_test+0x6a>
     5ec:	1b00      	subs	r0, r0, r4
     5ee:	08dc      	lsrs	r4, r3, #3
     5f0:	4322      	orrs	r2, r4
     5f2:	2800      	cmp	r0, #0
     5f4:	d003      	beq.n	5fe <.divsi3_skip_div0_test+0x76>
     5f6:	091b      	lsrs	r3, r3, #4
     5f8:	d001      	beq.n	5fe <.divsi3_skip_div0_test+0x76>
     5fa:	0909      	lsrs	r1, r1, #4
     5fc:	e7e3      	b.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5fe:	1c10      	adds	r0, r2, #0
     600:	4664      	mov	r4, ip
     602:	2c00      	cmp	r4, #0
     604:	d500      	bpl.n	608 <.divsi3_skip_div0_test+0x80>
     606:	4240      	negs	r0, r0
     608:	bc10      	pop	{r4}
     60a:	4770      	bx	lr
     60c:	2800      	cmp	r0, #0
     60e:	d006      	beq.n	61e <.divsi3_skip_div0_test+0x96>
     610:	db03      	blt.n	61a <.divsi3_skip_div0_test+0x92>
     612:	2000      	movs	r0, #0
     614:	43c0      	mvns	r0, r0
     616:	0840      	lsrs	r0, r0, #1
     618:	e001      	b.n	61e <.divsi3_skip_div0_test+0x96>
     61a:	2080      	movs	r0, #128	; 0x80
     61c:	0600      	lsls	r0, r0, #24
     61e:	b407      	push	{r0, r1, r2}
     620:	4802      	ldr	r0, [pc, #8]	; (62c <.divsi3_skip_div0_test+0xa4>)
     622:	a102      	add	r1, pc, #8	; (adr r1, 62c <.divsi3_skip_div0_test+0xa4>)
     624:	1840      	adds	r0, r0, r1
     626:	9002      	str	r0, [sp, #8]
     628:	bd03      	pop	{r0, r1, pc}
     62a:	46c0      	nop			; (mov r8, r8)
     62c:	00000019 	.word	0x00000019

00000630 <__aeabi_idivmod>:
__aeabi_idivmod():
     630:	2900      	cmp	r1, #0
     632:	d0eb      	beq.n	60c <.divsi3_skip_div0_test+0x84>
     634:	b503      	push	{r0, r1, lr}
     636:	f7ff ffa7 	bl	588 <.divsi3_skip_div0_test>
     63a:	bc0e      	pop	{r1, r2, r3}
     63c:	4342      	muls	r2, r0
     63e:	1a89      	subs	r1, r1, r2
     640:	4718      	bx	r3
     642:	46c0      	nop			; (mov r8, r8)

00000644 <__aeabi_idiv0>:
__aeabi_ldiv0():
     644:	4770      	bx	lr
     646:	46c0      	nop			; (mov r8, r8)

00000648 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
     648:	4684      	mov	ip, r0
     64a:	1c10      	adds	r0, r2, #0
     64c:	4662      	mov	r2, ip
     64e:	468c      	mov	ip, r1
     650:	1c19      	adds	r1, r3, #0
     652:	4663      	mov	r3, ip
     654:	e000      	b.n	658 <__aeabi_cdcmpeq>
     656:	46c0      	nop			; (mov r8, r8)

00000658 <__aeabi_cdcmpeq>:
     658:	b51f      	push	{r0, r1, r2, r3, r4, lr}
     65a:	f000 fcd5 	bl	1008 <__ledf2>
     65e:	2800      	cmp	r0, #0
     660:	d401      	bmi.n	666 <__aeabi_cdcmpeq+0xe>
     662:	2100      	movs	r1, #0
     664:	42c8      	cmn	r0, r1
     666:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00000668 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
     668:	b510      	push	{r4, lr}
     66a:	f000 fc05 	bl	e78 <__eqdf2>
     66e:	4240      	negs	r0, r0
     670:	3001      	adds	r0, #1
     672:	bd10      	pop	{r4, pc}

00000674 <__aeabi_dcmplt>:
__aeabi_dcmplt():
     674:	b510      	push	{r4, lr}
     676:	f000 fcc7 	bl	1008 <__ledf2>
     67a:	2800      	cmp	r0, #0
     67c:	db01      	blt.n	682 <__aeabi_dcmplt+0xe>
     67e:	2000      	movs	r0, #0
     680:	bd10      	pop	{r4, pc}
     682:	2001      	movs	r0, #1
     684:	bd10      	pop	{r4, pc}
     686:	46c0      	nop			; (mov r8, r8)

00000688 <__aeabi_dcmple>:
__aeabi_dcmple():
     688:	b510      	push	{r4, lr}
     68a:	f000 fcbd 	bl	1008 <__ledf2>
     68e:	2800      	cmp	r0, #0
     690:	dd01      	ble.n	696 <__aeabi_dcmple+0xe>
     692:	2000      	movs	r0, #0
     694:	bd10      	pop	{r4, pc}
     696:	2001      	movs	r0, #1
     698:	bd10      	pop	{r4, pc}
     69a:	46c0      	nop			; (mov r8, r8)

0000069c <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
     69c:	b510      	push	{r4, lr}
     69e:	f000 fc35 	bl	f0c <__gedf2>
     6a2:	2800      	cmp	r0, #0
     6a4:	dc01      	bgt.n	6aa <__aeabi_dcmpgt+0xe>
     6a6:	2000      	movs	r0, #0
     6a8:	bd10      	pop	{r4, pc}
     6aa:	2001      	movs	r0, #1
     6ac:	bd10      	pop	{r4, pc}
     6ae:	46c0      	nop			; (mov r8, r8)

000006b0 <__aeabi_dcmpge>:
__aeabi_dcmpge():
     6b0:	b510      	push	{r4, lr}
     6b2:	f000 fc2b 	bl	f0c <__gedf2>
     6b6:	2800      	cmp	r0, #0
     6b8:	da01      	bge.n	6be <__aeabi_dcmpge+0xe>
     6ba:	2000      	movs	r0, #0
     6bc:	bd10      	pop	{r4, pc}
     6be:	2001      	movs	r0, #1
     6c0:	bd10      	pop	{r4, pc}
     6c2:	46c0      	nop			; (mov r8, r8)

000006c4 <__aeabi_cfrcmple>:
__aeabi_cfrcmple():
     6c4:	4684      	mov	ip, r0
     6c6:	1c08      	adds	r0, r1, #0
     6c8:	4661      	mov	r1, ip
     6ca:	e7ff      	b.n	6cc <__aeabi_cfcmpeq>

000006cc <__aeabi_cfcmpeq>:
     6cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
     6ce:	f000 fb37 	bl	d40 <__lesf2>
     6d2:	2800      	cmp	r0, #0
     6d4:	d401      	bmi.n	6da <__aeabi_cfcmpeq+0xe>
     6d6:	2100      	movs	r1, #0
     6d8:	42c8      	cmn	r0, r1
     6da:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000006dc <__aeabi_fcmpeq>:
__aeabi_fcmpeq():
     6dc:	b510      	push	{r4, lr}
     6de:	f000 fabd 	bl	c5c <__eqsf2>
     6e2:	4240      	negs	r0, r0
     6e4:	3001      	adds	r0, #1
     6e6:	bd10      	pop	{r4, pc}

000006e8 <__aeabi_fcmplt>:
__aeabi_fcmplt():
     6e8:	b510      	push	{r4, lr}
     6ea:	f000 fb29 	bl	d40 <__lesf2>
     6ee:	2800      	cmp	r0, #0
     6f0:	db01      	blt.n	6f6 <__aeabi_fcmplt+0xe>
     6f2:	2000      	movs	r0, #0
     6f4:	bd10      	pop	{r4, pc}
     6f6:	2001      	movs	r0, #1
     6f8:	bd10      	pop	{r4, pc}
     6fa:	46c0      	nop			; (mov r8, r8)

000006fc <__aeabi_fcmple>:
__aeabi_fcmple():
     6fc:	b510      	push	{r4, lr}
     6fe:	f000 fb1f 	bl	d40 <__lesf2>
     702:	2800      	cmp	r0, #0
     704:	dd01      	ble.n	70a <__aeabi_fcmple+0xe>
     706:	2000      	movs	r0, #0
     708:	bd10      	pop	{r4, pc}
     70a:	2001      	movs	r0, #1
     70c:	bd10      	pop	{r4, pc}
     70e:	46c0      	nop			; (mov r8, r8)

00000710 <__aeabi_fcmpgt>:
__aeabi_fcmpgt():
     710:	b510      	push	{r4, lr}
     712:	f000 facd 	bl	cb0 <__gesf2>
     716:	2800      	cmp	r0, #0
     718:	dc01      	bgt.n	71e <__aeabi_fcmpgt+0xe>
     71a:	2000      	movs	r0, #0
     71c:	bd10      	pop	{r4, pc}
     71e:	2001      	movs	r0, #1
     720:	bd10      	pop	{r4, pc}
     722:	46c0      	nop			; (mov r8, r8)

00000724 <__aeabi_fcmpge>:
__aeabi_fcmpge():
     724:	b510      	push	{r4, lr}
     726:	f000 fac3 	bl	cb0 <__gesf2>
     72a:	2800      	cmp	r0, #0
     72c:	da01      	bge.n	732 <__aeabi_fcmpge+0xe>
     72e:	2000      	movs	r0, #0
     730:	bd10      	pop	{r4, pc}
     732:	2001      	movs	r0, #1
     734:	bd10      	pop	{r4, pc}
     736:	46c0      	nop			; (mov r8, r8)

00000738 <__aeabi_fadd>:
__aeabi_fadd():
     738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     73a:	0243      	lsls	r3, r0, #9
     73c:	0044      	lsls	r4, r0, #1
     73e:	0fc5      	lsrs	r5, r0, #31
     740:	024e      	lsls	r6, r1, #9
     742:	0048      	lsls	r0, r1, #1
     744:	0e24      	lsrs	r4, r4, #24
     746:	1c2a      	adds	r2, r5, #0
     748:	099b      	lsrs	r3, r3, #6
     74a:	0e00      	lsrs	r0, r0, #24
     74c:	0fc9      	lsrs	r1, r1, #31
     74e:	09b6      	lsrs	r6, r6, #6
     750:	428d      	cmp	r5, r1
     752:	d05b      	beq.n	80c <__aeabi_fadd+0xd4>
     754:	1a22      	subs	r2, r4, r0
     756:	2a00      	cmp	r2, #0
     758:	dc00      	bgt.n	75c <__aeabi_fadd+0x24>
     75a:	e089      	b.n	870 <__aeabi_fadd+0x138>
     75c:	2800      	cmp	r0, #0
     75e:	d11d      	bne.n	79c <__aeabi_fadd+0x64>
     760:	2e00      	cmp	r6, #0
     762:	d000      	beq.n	766 <__aeabi_fadd+0x2e>
     764:	e075      	b.n	852 <__aeabi_fadd+0x11a>
     766:	0758      	lsls	r0, r3, #29
     768:	d004      	beq.n	774 <__aeabi_fadd+0x3c>
     76a:	220f      	movs	r2, #15
     76c:	401a      	ands	r2, r3
     76e:	2a04      	cmp	r2, #4
     770:	d000      	beq.n	774 <__aeabi_fadd+0x3c>
     772:	3304      	adds	r3, #4
     774:	2180      	movs	r1, #128	; 0x80
     776:	04c9      	lsls	r1, r1, #19
     778:	4019      	ands	r1, r3
     77a:	1c2a      	adds	r2, r5, #0
     77c:	2900      	cmp	r1, #0
     77e:	d03a      	beq.n	7f6 <__aeabi_fadd+0xbe>
     780:	3401      	adds	r4, #1
     782:	2cff      	cmp	r4, #255	; 0xff
     784:	d100      	bne.n	788 <__aeabi_fadd+0x50>
     786:	e07f      	b.n	888 <__aeabi_fadd+0x150>
     788:	019b      	lsls	r3, r3, #6
     78a:	0a5b      	lsrs	r3, r3, #9
     78c:	025b      	lsls	r3, r3, #9
     78e:	b2e4      	uxtb	r4, r4
     790:	05e4      	lsls	r4, r4, #23
     792:	0a58      	lsrs	r0, r3, #9
     794:	07d2      	lsls	r2, r2, #31
     796:	4320      	orrs	r0, r4
     798:	4310      	orrs	r0, r2
     79a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     79c:	2cff      	cmp	r4, #255	; 0xff
     79e:	d0e2      	beq.n	766 <__aeabi_fadd+0x2e>
     7a0:	2180      	movs	r1, #128	; 0x80
     7a2:	04c9      	lsls	r1, r1, #19
     7a4:	430e      	orrs	r6, r1
     7a6:	2a1b      	cmp	r2, #27
     7a8:	dd00      	ble.n	7ac <__aeabi_fadd+0x74>
     7aa:	e12d      	b.n	a08 <__aeabi_fadd+0x2d0>
     7ac:	1c31      	adds	r1, r6, #0
     7ae:	2020      	movs	r0, #32
     7b0:	40d1      	lsrs	r1, r2
     7b2:	1a82      	subs	r2, r0, r2
     7b4:	4096      	lsls	r6, r2
     7b6:	1e72      	subs	r2, r6, #1
     7b8:	4196      	sbcs	r6, r2
     7ba:	430e      	orrs	r6, r1
     7bc:	1b9b      	subs	r3, r3, r6
     7be:	0158      	lsls	r0, r3, #5
     7c0:	d5d1      	bpl.n	766 <__aeabi_fadd+0x2e>
     7c2:	019b      	lsls	r3, r3, #6
     7c4:	099f      	lsrs	r7, r3, #6
     7c6:	1c38      	adds	r0, r7, #0
     7c8:	f001 f80a 	bl	17e0 <__clzsi2>
     7cc:	1f42      	subs	r2, r0, #5
     7ce:	4097      	lsls	r7, r2
     7d0:	4294      	cmp	r4, r2
     7d2:	dc5b      	bgt.n	88c <__aeabi_fadd+0x154>
     7d4:	1b14      	subs	r4, r2, r4
     7d6:	231f      	movs	r3, #31
     7d8:	1b1b      	subs	r3, r3, r4
     7da:	1c3a      	adds	r2, r7, #0
     7dc:	409f      	lsls	r7, r3
     7de:	1c61      	adds	r1, r4, #1
     7e0:	1c3b      	adds	r3, r7, #0
     7e2:	40ca      	lsrs	r2, r1
     7e4:	1e5f      	subs	r7, r3, #1
     7e6:	41bb      	sbcs	r3, r7
     7e8:	4313      	orrs	r3, r2
     7ea:	2400      	movs	r4, #0
     7ec:	e7bb      	b.n	766 <__aeabi_fadd+0x2e>
     7ee:	1e13      	subs	r3, r2, #0
     7f0:	d1b9      	bne.n	766 <__aeabi_fadd+0x2e>
     7f2:	2300      	movs	r3, #0
     7f4:	2200      	movs	r2, #0
     7f6:	08db      	lsrs	r3, r3, #3
     7f8:	2cff      	cmp	r4, #255	; 0xff
     7fa:	d104      	bne.n	806 <__aeabi_fadd+0xce>
     7fc:	2b00      	cmp	r3, #0
     7fe:	d043      	beq.n	888 <__aeabi_fadd+0x150>
     800:	2080      	movs	r0, #128	; 0x80
     802:	03c0      	lsls	r0, r0, #15
     804:	4303      	orrs	r3, r0
     806:	025b      	lsls	r3, r3, #9
     808:	0a5b      	lsrs	r3, r3, #9
     80a:	e7bf      	b.n	78c <__aeabi_fadd+0x54>
     80c:	1a21      	subs	r1, r4, r0
     80e:	2900      	cmp	r1, #0
     810:	dd40      	ble.n	894 <__aeabi_fadd+0x15c>
     812:	2800      	cmp	r0, #0
     814:	d023      	beq.n	85e <__aeabi_fadd+0x126>
     816:	2cff      	cmp	r4, #255	; 0xff
     818:	d0a5      	beq.n	766 <__aeabi_fadd+0x2e>
     81a:	2080      	movs	r0, #128	; 0x80
     81c:	04c0      	lsls	r0, r0, #19
     81e:	4306      	orrs	r6, r0
     820:	291b      	cmp	r1, #27
     822:	dd00      	ble.n	826 <__aeabi_fadd+0xee>
     824:	e0ee      	b.n	a04 <__aeabi_fadd+0x2cc>
     826:	1c30      	adds	r0, r6, #0
     828:	2720      	movs	r7, #32
     82a:	40c8      	lsrs	r0, r1
     82c:	1a79      	subs	r1, r7, r1
     82e:	408e      	lsls	r6, r1
     830:	1e71      	subs	r1, r6, #1
     832:	418e      	sbcs	r6, r1
     834:	4306      	orrs	r6, r0
     836:	199b      	adds	r3, r3, r6
     838:	0159      	lsls	r1, r3, #5
     83a:	d400      	bmi.n	83e <__aeabi_fadd+0x106>
     83c:	e793      	b.n	766 <__aeabi_fadd+0x2e>
     83e:	3401      	adds	r4, #1
     840:	2cff      	cmp	r4, #255	; 0xff
     842:	d055      	beq.n	8f0 <__aeabi_fadd+0x1b8>
     844:	4971      	ldr	r1, [pc, #452]	; (a0c <__aeabi_fadd+0x2d4>)
     846:	2201      	movs	r2, #1
     848:	401a      	ands	r2, r3
     84a:	400b      	ands	r3, r1
     84c:	085b      	lsrs	r3, r3, #1
     84e:	4313      	orrs	r3, r2
     850:	e789      	b.n	766 <__aeabi_fadd+0x2e>
     852:	3a01      	subs	r2, #1
     854:	2a00      	cmp	r2, #0
     856:	d0b1      	beq.n	7bc <__aeabi_fadd+0x84>
     858:	2cff      	cmp	r4, #255	; 0xff
     85a:	d1a4      	bne.n	7a6 <__aeabi_fadd+0x6e>
     85c:	e783      	b.n	766 <__aeabi_fadd+0x2e>
     85e:	2e00      	cmp	r6, #0
     860:	d100      	bne.n	864 <__aeabi_fadd+0x12c>
     862:	e780      	b.n	766 <__aeabi_fadd+0x2e>
     864:	3901      	subs	r1, #1
     866:	2900      	cmp	r1, #0
     868:	d0e5      	beq.n	836 <__aeabi_fadd+0xfe>
     86a:	2cff      	cmp	r4, #255	; 0xff
     86c:	d1d8      	bne.n	820 <__aeabi_fadd+0xe8>
     86e:	e77a      	b.n	766 <__aeabi_fadd+0x2e>
     870:	2a00      	cmp	r2, #0
     872:	d11b      	bne.n	8ac <__aeabi_fadd+0x174>
     874:	1c62      	adds	r2, r4, #1
     876:	b2d2      	uxtb	r2, r2
     878:	2a01      	cmp	r2, #1
     87a:	dd4b      	ble.n	914 <__aeabi_fadd+0x1dc>
     87c:	1b9f      	subs	r7, r3, r6
     87e:	017a      	lsls	r2, r7, #5
     880:	d523      	bpl.n	8ca <__aeabi_fadd+0x192>
     882:	1af7      	subs	r7, r6, r3
     884:	1c0d      	adds	r5, r1, #0
     886:	e79e      	b.n	7c6 <__aeabi_fadd+0x8e>
     888:	2300      	movs	r3, #0
     88a:	e77f      	b.n	78c <__aeabi_fadd+0x54>
     88c:	4b5f      	ldr	r3, [pc, #380]	; (a0c <__aeabi_fadd+0x2d4>)
     88e:	1aa4      	subs	r4, r4, r2
     890:	403b      	ands	r3, r7
     892:	e768      	b.n	766 <__aeabi_fadd+0x2e>
     894:	2900      	cmp	r1, #0
     896:	d146      	bne.n	926 <__aeabi_fadd+0x1ee>
     898:	1c61      	adds	r1, r4, #1
     89a:	b2c8      	uxtb	r0, r1
     89c:	2801      	cmp	r0, #1
     89e:	dd29      	ble.n	8f4 <__aeabi_fadd+0x1bc>
     8a0:	29ff      	cmp	r1, #255	; 0xff
     8a2:	d024      	beq.n	8ee <__aeabi_fadd+0x1b6>
     8a4:	18f3      	adds	r3, r6, r3
     8a6:	085b      	lsrs	r3, r3, #1
     8a8:	1c0c      	adds	r4, r1, #0
     8aa:	e75c      	b.n	766 <__aeabi_fadd+0x2e>
     8ac:	2c00      	cmp	r4, #0
     8ae:	d013      	beq.n	8d8 <__aeabi_fadd+0x1a0>
     8b0:	28ff      	cmp	r0, #255	; 0xff
     8b2:	d018      	beq.n	8e6 <__aeabi_fadd+0x1ae>
     8b4:	2480      	movs	r4, #128	; 0x80
     8b6:	04e4      	lsls	r4, r4, #19
     8b8:	4252      	negs	r2, r2
     8ba:	4323      	orrs	r3, r4
     8bc:	2a1b      	cmp	r2, #27
     8be:	dd4d      	ble.n	95c <__aeabi_fadd+0x224>
     8c0:	2301      	movs	r3, #1
     8c2:	1af3      	subs	r3, r6, r3
     8c4:	1c04      	adds	r4, r0, #0
     8c6:	1c0d      	adds	r5, r1, #0
     8c8:	e779      	b.n	7be <__aeabi_fadd+0x86>
     8ca:	2f00      	cmp	r7, #0
     8cc:	d000      	beq.n	8d0 <__aeabi_fadd+0x198>
     8ce:	e77a      	b.n	7c6 <__aeabi_fadd+0x8e>
     8d0:	2300      	movs	r3, #0
     8d2:	2200      	movs	r2, #0
     8d4:	2400      	movs	r4, #0
     8d6:	e78e      	b.n	7f6 <__aeabi_fadd+0xbe>
     8d8:	2b00      	cmp	r3, #0
     8da:	d03b      	beq.n	954 <__aeabi_fadd+0x21c>
     8dc:	43d2      	mvns	r2, r2
     8de:	2a00      	cmp	r2, #0
     8e0:	d0ef      	beq.n	8c2 <__aeabi_fadd+0x18a>
     8e2:	28ff      	cmp	r0, #255	; 0xff
     8e4:	d1ea      	bne.n	8bc <__aeabi_fadd+0x184>
     8e6:	1c33      	adds	r3, r6, #0
     8e8:	24ff      	movs	r4, #255	; 0xff
     8ea:	1c0d      	adds	r5, r1, #0
     8ec:	e73b      	b.n	766 <__aeabi_fadd+0x2e>
     8ee:	24ff      	movs	r4, #255	; 0xff
     8f0:	2300      	movs	r3, #0
     8f2:	e780      	b.n	7f6 <__aeabi_fadd+0xbe>
     8f4:	2c00      	cmp	r4, #0
     8f6:	d15c      	bne.n	9b2 <__aeabi_fadd+0x27a>
     8f8:	2b00      	cmp	r3, #0
     8fa:	d100      	bne.n	8fe <__aeabi_fadd+0x1c6>
     8fc:	e080      	b.n	a00 <__aeabi_fadd+0x2c8>
     8fe:	2e00      	cmp	r6, #0
     900:	d100      	bne.n	904 <__aeabi_fadd+0x1cc>
     902:	e730      	b.n	766 <__aeabi_fadd+0x2e>
     904:	199b      	adds	r3, r3, r6
     906:	0158      	lsls	r0, r3, #5
     908:	d400      	bmi.n	90c <__aeabi_fadd+0x1d4>
     90a:	e72c      	b.n	766 <__aeabi_fadd+0x2e>
     90c:	4a3f      	ldr	r2, [pc, #252]	; (a0c <__aeabi_fadd+0x2d4>)
     90e:	2401      	movs	r4, #1
     910:	4013      	ands	r3, r2
     912:	e728      	b.n	766 <__aeabi_fadd+0x2e>
     914:	2c00      	cmp	r4, #0
     916:	d115      	bne.n	944 <__aeabi_fadd+0x20c>
     918:	2b00      	cmp	r3, #0
     91a:	d140      	bne.n	99e <__aeabi_fadd+0x266>
     91c:	2e00      	cmp	r6, #0
     91e:	d063      	beq.n	9e8 <__aeabi_fadd+0x2b0>
     920:	1c33      	adds	r3, r6, #0
     922:	1c0d      	adds	r5, r1, #0
     924:	e71f      	b.n	766 <__aeabi_fadd+0x2e>
     926:	2c00      	cmp	r4, #0
     928:	d121      	bne.n	96e <__aeabi_fadd+0x236>
     92a:	2b00      	cmp	r3, #0
     92c:	d054      	beq.n	9d8 <__aeabi_fadd+0x2a0>
     92e:	43c9      	mvns	r1, r1
     930:	2900      	cmp	r1, #0
     932:	d004      	beq.n	93e <__aeabi_fadd+0x206>
     934:	28ff      	cmp	r0, #255	; 0xff
     936:	d04c      	beq.n	9d2 <__aeabi_fadd+0x29a>
     938:	291b      	cmp	r1, #27
     93a:	dd58      	ble.n	9ee <__aeabi_fadd+0x2b6>
     93c:	2301      	movs	r3, #1
     93e:	199b      	adds	r3, r3, r6
     940:	1c04      	adds	r4, r0, #0
     942:	e779      	b.n	838 <__aeabi_fadd+0x100>
     944:	2b00      	cmp	r3, #0
     946:	d119      	bne.n	97c <__aeabi_fadd+0x244>
     948:	2e00      	cmp	r6, #0
     94a:	d048      	beq.n	9de <__aeabi_fadd+0x2a6>
     94c:	1c33      	adds	r3, r6, #0
     94e:	1c0d      	adds	r5, r1, #0
     950:	24ff      	movs	r4, #255	; 0xff
     952:	e708      	b.n	766 <__aeabi_fadd+0x2e>
     954:	1c33      	adds	r3, r6, #0
     956:	1c04      	adds	r4, r0, #0
     958:	1c0d      	adds	r5, r1, #0
     95a:	e704      	b.n	766 <__aeabi_fadd+0x2e>
     95c:	1c1c      	adds	r4, r3, #0
     95e:	2520      	movs	r5, #32
     960:	40d4      	lsrs	r4, r2
     962:	1aaa      	subs	r2, r5, r2
     964:	4093      	lsls	r3, r2
     966:	1e5a      	subs	r2, r3, #1
     968:	4193      	sbcs	r3, r2
     96a:	4323      	orrs	r3, r4
     96c:	e7a9      	b.n	8c2 <__aeabi_fadd+0x18a>
     96e:	28ff      	cmp	r0, #255	; 0xff
     970:	d02f      	beq.n	9d2 <__aeabi_fadd+0x29a>
     972:	2480      	movs	r4, #128	; 0x80
     974:	04e4      	lsls	r4, r4, #19
     976:	4249      	negs	r1, r1
     978:	4323      	orrs	r3, r4
     97a:	e7dd      	b.n	938 <__aeabi_fadd+0x200>
     97c:	24ff      	movs	r4, #255	; 0xff
     97e:	2e00      	cmp	r6, #0
     980:	d100      	bne.n	984 <__aeabi_fadd+0x24c>
     982:	e6f0      	b.n	766 <__aeabi_fadd+0x2e>
     984:	2280      	movs	r2, #128	; 0x80
     986:	08db      	lsrs	r3, r3, #3
     988:	03d2      	lsls	r2, r2, #15
     98a:	4213      	tst	r3, r2
     98c:	d004      	beq.n	998 <__aeabi_fadd+0x260>
     98e:	08f6      	lsrs	r6, r6, #3
     990:	4216      	tst	r6, r2
     992:	d101      	bne.n	998 <__aeabi_fadd+0x260>
     994:	1c33      	adds	r3, r6, #0
     996:	1c0d      	adds	r5, r1, #0
     998:	00db      	lsls	r3, r3, #3
     99a:	24ff      	movs	r4, #255	; 0xff
     99c:	e6e3      	b.n	766 <__aeabi_fadd+0x2e>
     99e:	2e00      	cmp	r6, #0
     9a0:	d100      	bne.n	9a4 <__aeabi_fadd+0x26c>
     9a2:	e6e0      	b.n	766 <__aeabi_fadd+0x2e>
     9a4:	1b9a      	subs	r2, r3, r6
     9a6:	0150      	lsls	r0, r2, #5
     9a8:	d400      	bmi.n	9ac <__aeabi_fadd+0x274>
     9aa:	e720      	b.n	7ee <__aeabi_fadd+0xb6>
     9ac:	1af3      	subs	r3, r6, r3
     9ae:	1c0d      	adds	r5, r1, #0
     9b0:	e6d9      	b.n	766 <__aeabi_fadd+0x2e>
     9b2:	2b00      	cmp	r3, #0
     9b4:	d00d      	beq.n	9d2 <__aeabi_fadd+0x29a>
     9b6:	24ff      	movs	r4, #255	; 0xff
     9b8:	2e00      	cmp	r6, #0
     9ba:	d100      	bne.n	9be <__aeabi_fadd+0x286>
     9bc:	e6d3      	b.n	766 <__aeabi_fadd+0x2e>
     9be:	2280      	movs	r2, #128	; 0x80
     9c0:	08db      	lsrs	r3, r3, #3
     9c2:	03d2      	lsls	r2, r2, #15
     9c4:	4213      	tst	r3, r2
     9c6:	d0e7      	beq.n	998 <__aeabi_fadd+0x260>
     9c8:	08f6      	lsrs	r6, r6, #3
     9ca:	4216      	tst	r6, r2
     9cc:	d1e4      	bne.n	998 <__aeabi_fadd+0x260>
     9ce:	1c33      	adds	r3, r6, #0
     9d0:	e7e2      	b.n	998 <__aeabi_fadd+0x260>
     9d2:	1c33      	adds	r3, r6, #0
     9d4:	24ff      	movs	r4, #255	; 0xff
     9d6:	e6c6      	b.n	766 <__aeabi_fadd+0x2e>
     9d8:	1c33      	adds	r3, r6, #0
     9da:	1c04      	adds	r4, r0, #0
     9dc:	e6c3      	b.n	766 <__aeabi_fadd+0x2e>
     9de:	2380      	movs	r3, #128	; 0x80
     9e0:	2200      	movs	r2, #0
     9e2:	049b      	lsls	r3, r3, #18
     9e4:	24ff      	movs	r4, #255	; 0xff
     9e6:	e706      	b.n	7f6 <__aeabi_fadd+0xbe>
     9e8:	1c23      	adds	r3, r4, #0
     9ea:	2200      	movs	r2, #0
     9ec:	e703      	b.n	7f6 <__aeabi_fadd+0xbe>
     9ee:	1c1c      	adds	r4, r3, #0
     9f0:	2720      	movs	r7, #32
     9f2:	40cc      	lsrs	r4, r1
     9f4:	1a79      	subs	r1, r7, r1
     9f6:	408b      	lsls	r3, r1
     9f8:	1e59      	subs	r1, r3, #1
     9fa:	418b      	sbcs	r3, r1
     9fc:	4323      	orrs	r3, r4
     9fe:	e79e      	b.n	93e <__aeabi_fadd+0x206>
     a00:	1c33      	adds	r3, r6, #0
     a02:	e6b0      	b.n	766 <__aeabi_fadd+0x2e>
     a04:	2601      	movs	r6, #1
     a06:	e716      	b.n	836 <__aeabi_fadd+0xfe>
     a08:	2601      	movs	r6, #1
     a0a:	e6d7      	b.n	7bc <__aeabi_fadd+0x84>
     a0c:	fbffffff 	.word	0xfbffffff

00000a10 <__aeabi_fdiv>:
__aeabi_fdiv():
     a10:	b5f0      	push	{r4, r5, r6, r7, lr}
     a12:	465f      	mov	r7, fp
     a14:	4656      	mov	r6, sl
     a16:	464d      	mov	r5, r9
     a18:	4644      	mov	r4, r8
     a1a:	b4f0      	push	{r4, r5, r6, r7}
     a1c:	0246      	lsls	r6, r0, #9
     a1e:	0045      	lsls	r5, r0, #1
     a20:	0fc0      	lsrs	r0, r0, #31
     a22:	b085      	sub	sp, #20
     a24:	1c0f      	adds	r7, r1, #0
     a26:	0a76      	lsrs	r6, r6, #9
     a28:	0e2d      	lsrs	r5, r5, #24
     a2a:	4680      	mov	r8, r0
     a2c:	d041      	beq.n	ab2 <__aeabi_fdiv+0xa2>
     a2e:	2dff      	cmp	r5, #255	; 0xff
     a30:	d026      	beq.n	a80 <__aeabi_fdiv+0x70>
     a32:	2480      	movs	r4, #128	; 0x80
     a34:	0424      	lsls	r4, r4, #16
     a36:	2100      	movs	r1, #0
     a38:	4326      	orrs	r6, r4
     a3a:	00f6      	lsls	r6, r6, #3
     a3c:	3d7f      	subs	r5, #127	; 0x7f
     a3e:	4689      	mov	r9, r1
     a40:	468b      	mov	fp, r1
     a42:	0ff9      	lsrs	r1, r7, #31
     a44:	027c      	lsls	r4, r7, #9
     a46:	0078      	lsls	r0, r7, #1
     a48:	0a64      	lsrs	r4, r4, #9
     a4a:	0e00      	lsrs	r0, r0, #24
     a4c:	9100      	str	r1, [sp, #0]
     a4e:	468a      	mov	sl, r1
     a50:	d03c      	beq.n	acc <__aeabi_fdiv+0xbc>
     a52:	28ff      	cmp	r0, #255	; 0xff
     a54:	d034      	beq.n	ac0 <__aeabi_fdiv+0xb0>
     a56:	2380      	movs	r3, #128	; 0x80
     a58:	041b      	lsls	r3, r3, #16
     a5a:	431c      	orrs	r4, r3
     a5c:	2300      	movs	r3, #0
     a5e:	00e4      	lsls	r4, r4, #3
     a60:	387f      	subs	r0, #127	; 0x7f
     a62:	9301      	str	r3, [sp, #4]
     a64:	9f00      	ldr	r7, [sp, #0]
     a66:	4643      	mov	r3, r8
     a68:	9a01      	ldr	r2, [sp, #4]
     a6a:	407b      	eors	r3, r7
     a6c:	4649      	mov	r1, r9
     a6e:	469c      	mov	ip, r3
     a70:	4311      	orrs	r1, r2
     a72:	290f      	cmp	r1, #15
     a74:	d900      	bls.n	a78 <__aeabi_fdiv+0x68>
     a76:	e071      	b.n	b5c <__aeabi_fdiv+0x14c>
     a78:	4f76      	ldr	r7, [pc, #472]	; (c54 <__aeabi_fdiv+0x244>)
     a7a:	0089      	lsls	r1, r1, #2
     a7c:	587f      	ldr	r7, [r7, r1]
     a7e:	46bf      	mov	pc, r7
     a80:	2e00      	cmp	r6, #0
     a82:	d13e      	bne.n	b02 <__aeabi_fdiv+0xf2>
     a84:	2208      	movs	r2, #8
     a86:	2302      	movs	r3, #2
     a88:	4691      	mov	r9, r2
     a8a:	469b      	mov	fp, r3
     a8c:	e7d9      	b.n	a42 <__aeabi_fdiv+0x32>
     a8e:	465a      	mov	r2, fp
     a90:	1c34      	adds	r4, r6, #0
     a92:	46c2      	mov	sl, r8
     a94:	9201      	str	r2, [sp, #4]
     a96:	9901      	ldr	r1, [sp, #4]
     a98:	2902      	cmp	r1, #2
     a9a:	d037      	beq.n	b0c <__aeabi_fdiv+0xfc>
     a9c:	2903      	cmp	r1, #3
     a9e:	d100      	bne.n	aa2 <__aeabi_fdiv+0x92>
     aa0:	e0cf      	b.n	c42 <__aeabi_fdiv+0x232>
     aa2:	2901      	cmp	r1, #1
     aa4:	d000      	beq.n	aa8 <__aeabi_fdiv+0x98>
     aa6:	e0ab      	b.n	c00 <__aeabi_fdiv+0x1f0>
     aa8:	4653      	mov	r3, sl
     aaa:	400b      	ands	r3, r1
     aac:	2200      	movs	r2, #0
     aae:	2600      	movs	r6, #0
     ab0:	e032      	b.n	b18 <__aeabi_fdiv+0x108>
     ab2:	2e00      	cmp	r6, #0
     ab4:	d119      	bne.n	aea <__aeabi_fdiv+0xda>
     ab6:	2104      	movs	r1, #4
     ab8:	2201      	movs	r2, #1
     aba:	4689      	mov	r9, r1
     abc:	4693      	mov	fp, r2
     abe:	e7c0      	b.n	a42 <__aeabi_fdiv+0x32>
     ac0:	1c22      	adds	r2, r4, #0
     ac2:	1e53      	subs	r3, r2, #1
     ac4:	419a      	sbcs	r2, r3
     ac6:	3202      	adds	r2, #2
     ac8:	9201      	str	r2, [sp, #4]
     aca:	e7cb      	b.n	a64 <__aeabi_fdiv+0x54>
     acc:	2701      	movs	r7, #1
     ace:	9701      	str	r7, [sp, #4]
     ad0:	2c00      	cmp	r4, #0
     ad2:	d0c7      	beq.n	a64 <__aeabi_fdiv+0x54>
     ad4:	1c20      	adds	r0, r4, #0
     ad6:	f000 fe83 	bl	17e0 <__clzsi2>
     ada:	1f43      	subs	r3, r0, #5
     adc:	409c      	lsls	r4, r3
     ade:	2376      	movs	r3, #118	; 0x76
     ae0:	425b      	negs	r3, r3
     ae2:	2100      	movs	r1, #0
     ae4:	1a18      	subs	r0, r3, r0
     ae6:	9101      	str	r1, [sp, #4]
     ae8:	e7bc      	b.n	a64 <__aeabi_fdiv+0x54>
     aea:	1c30      	adds	r0, r6, #0
     aec:	f000 fe78 	bl	17e0 <__clzsi2>
     af0:	2576      	movs	r5, #118	; 0x76
     af2:	1f43      	subs	r3, r0, #5
     af4:	409e      	lsls	r6, r3
     af6:	426d      	negs	r5, r5
     af8:	2300      	movs	r3, #0
     afa:	1a2d      	subs	r5, r5, r0
     afc:	4699      	mov	r9, r3
     afe:	469b      	mov	fp, r3
     b00:	e79f      	b.n	a42 <__aeabi_fdiv+0x32>
     b02:	230c      	movs	r3, #12
     b04:	2103      	movs	r1, #3
     b06:	4699      	mov	r9, r3
     b08:	468b      	mov	fp, r1
     b0a:	e79a      	b.n	a42 <__aeabi_fdiv+0x32>
     b0c:	46d4      	mov	ip, sl
     b0e:	2301      	movs	r3, #1
     b10:	4667      	mov	r7, ip
     b12:	403b      	ands	r3, r7
     b14:	22ff      	movs	r2, #255	; 0xff
     b16:	2600      	movs	r6, #0
     b18:	0276      	lsls	r6, r6, #9
     b1a:	05d2      	lsls	r2, r2, #23
     b1c:	0a70      	lsrs	r0, r6, #9
     b1e:	07db      	lsls	r3, r3, #31
     b20:	4310      	orrs	r0, r2
     b22:	4318      	orrs	r0, r3
     b24:	b005      	add	sp, #20
     b26:	bc3c      	pop	{r2, r3, r4, r5}
     b28:	4690      	mov	r8, r2
     b2a:	4699      	mov	r9, r3
     b2c:	46a2      	mov	sl, r4
     b2e:	46ab      	mov	fp, r5
     b30:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b32:	2680      	movs	r6, #128	; 0x80
     b34:	2300      	movs	r3, #0
     b36:	03f6      	lsls	r6, r6, #15
     b38:	22ff      	movs	r2, #255	; 0xff
     b3a:	e7ed      	b.n	b18 <__aeabi_fdiv+0x108>
     b3c:	2200      	movs	r2, #0
     b3e:	2600      	movs	r6, #0
     b40:	e7ea      	b.n	b18 <__aeabi_fdiv+0x108>
     b42:	2080      	movs	r0, #128	; 0x80
     b44:	03c0      	lsls	r0, r0, #15
     b46:	4206      	tst	r6, r0
     b48:	d03b      	beq.n	bc2 <__aeabi_fdiv+0x1b2>
     b4a:	4204      	tst	r4, r0
     b4c:	d139      	bne.n	bc2 <__aeabi_fdiv+0x1b2>
     b4e:	1c06      	adds	r6, r0, #0
     b50:	4326      	orrs	r6, r4
     b52:	0276      	lsls	r6, r6, #9
     b54:	0a76      	lsrs	r6, r6, #9
     b56:	9b00      	ldr	r3, [sp, #0]
     b58:	22ff      	movs	r2, #255	; 0xff
     b5a:	e7dd      	b.n	b18 <__aeabi_fdiv+0x108>
     b5c:	1a28      	subs	r0, r5, r0
     b5e:	9003      	str	r0, [sp, #12]
     b60:	0176      	lsls	r6, r6, #5
     b62:	0164      	lsls	r4, r4, #5
     b64:	42a6      	cmp	r6, r4
     b66:	d339      	bcc.n	bdc <__aeabi_fdiv+0x1cc>
     b68:	1b36      	subs	r6, r6, r4
     b6a:	221a      	movs	r2, #26
     b6c:	2301      	movs	r3, #1
     b6e:	2001      	movs	r0, #1
     b70:	1c31      	adds	r1, r6, #0
     b72:	005b      	lsls	r3, r3, #1
     b74:	0076      	lsls	r6, r6, #1
     b76:	2900      	cmp	r1, #0
     b78:	db01      	blt.n	b7e <__aeabi_fdiv+0x16e>
     b7a:	42b4      	cmp	r4, r6
     b7c:	d801      	bhi.n	b82 <__aeabi_fdiv+0x172>
     b7e:	1b36      	subs	r6, r6, r4
     b80:	4303      	orrs	r3, r0
     b82:	3a01      	subs	r2, #1
     b84:	2a00      	cmp	r2, #0
     b86:	dcf3      	bgt.n	b70 <__aeabi_fdiv+0x160>
     b88:	1e74      	subs	r4, r6, #1
     b8a:	41a6      	sbcs	r6, r4
     b8c:	1c34      	adds	r4, r6, #0
     b8e:	431c      	orrs	r4, r3
     b90:	9a03      	ldr	r2, [sp, #12]
     b92:	327f      	adds	r2, #127	; 0x7f
     b94:	2a00      	cmp	r2, #0
     b96:	dd27      	ble.n	be8 <__aeabi_fdiv+0x1d8>
     b98:	0763      	lsls	r3, r4, #29
     b9a:	d004      	beq.n	ba6 <__aeabi_fdiv+0x196>
     b9c:	230f      	movs	r3, #15
     b9e:	4023      	ands	r3, r4
     ba0:	2b04      	cmp	r3, #4
     ba2:	d000      	beq.n	ba6 <__aeabi_fdiv+0x196>
     ba4:	3404      	adds	r4, #4
     ba6:	0127      	lsls	r7, r4, #4
     ba8:	d503      	bpl.n	bb2 <__aeabi_fdiv+0x1a2>
     baa:	4b2b      	ldr	r3, [pc, #172]	; (c58 <__aeabi_fdiv+0x248>)
     bac:	9a03      	ldr	r2, [sp, #12]
     bae:	401c      	ands	r4, r3
     bb0:	3280      	adds	r2, #128	; 0x80
     bb2:	2afe      	cmp	r2, #254	; 0xfe
     bb4:	dd0b      	ble.n	bce <__aeabi_fdiv+0x1be>
     bb6:	2301      	movs	r3, #1
     bb8:	4661      	mov	r1, ip
     bba:	400b      	ands	r3, r1
     bbc:	22ff      	movs	r2, #255	; 0xff
     bbe:	2600      	movs	r6, #0
     bc0:	e7aa      	b.n	b18 <__aeabi_fdiv+0x108>
     bc2:	4306      	orrs	r6, r0
     bc4:	0276      	lsls	r6, r6, #9
     bc6:	0a76      	lsrs	r6, r6, #9
     bc8:	4643      	mov	r3, r8
     bca:	22ff      	movs	r2, #255	; 0xff
     bcc:	e7a4      	b.n	b18 <__aeabi_fdiv+0x108>
     bce:	01a4      	lsls	r4, r4, #6
     bd0:	2301      	movs	r3, #1
     bd2:	4667      	mov	r7, ip
     bd4:	0a66      	lsrs	r6, r4, #9
     bd6:	b2d2      	uxtb	r2, r2
     bd8:	403b      	ands	r3, r7
     bda:	e79d      	b.n	b18 <__aeabi_fdiv+0x108>
     bdc:	9f03      	ldr	r7, [sp, #12]
     bde:	221b      	movs	r2, #27
     be0:	3f01      	subs	r7, #1
     be2:	9703      	str	r7, [sp, #12]
     be4:	2300      	movs	r3, #0
     be6:	e7c2      	b.n	b6e <__aeabi_fdiv+0x15e>
     be8:	237e      	movs	r3, #126	; 0x7e
     bea:	9f03      	ldr	r7, [sp, #12]
     bec:	425b      	negs	r3, r3
     bee:	1bdb      	subs	r3, r3, r7
     bf0:	2b1b      	cmp	r3, #27
     bf2:	dd07      	ble.n	c04 <__aeabi_fdiv+0x1f4>
     bf4:	2301      	movs	r3, #1
     bf6:	4661      	mov	r1, ip
     bf8:	400b      	ands	r3, r1
     bfa:	2200      	movs	r2, #0
     bfc:	2600      	movs	r6, #0
     bfe:	e78b      	b.n	b18 <__aeabi_fdiv+0x108>
     c00:	46d4      	mov	ip, sl
     c02:	e7c5      	b.n	b90 <__aeabi_fdiv+0x180>
     c04:	1c22      	adds	r2, r4, #0
     c06:	40da      	lsrs	r2, r3
     c08:	9b03      	ldr	r3, [sp, #12]
     c0a:	339e      	adds	r3, #158	; 0x9e
     c0c:	409c      	lsls	r4, r3
     c0e:	1c23      	adds	r3, r4, #0
     c10:	1e5c      	subs	r4, r3, #1
     c12:	41a3      	sbcs	r3, r4
     c14:	4313      	orrs	r3, r2
     c16:	075a      	lsls	r2, r3, #29
     c18:	d004      	beq.n	c24 <__aeabi_fdiv+0x214>
     c1a:	220f      	movs	r2, #15
     c1c:	401a      	ands	r2, r3
     c1e:	2a04      	cmp	r2, #4
     c20:	d000      	beq.n	c24 <__aeabi_fdiv+0x214>
     c22:	3304      	adds	r3, #4
     c24:	015f      	lsls	r7, r3, #5
     c26:	d505      	bpl.n	c34 <__aeabi_fdiv+0x224>
     c28:	2301      	movs	r3, #1
     c2a:	4661      	mov	r1, ip
     c2c:	400b      	ands	r3, r1
     c2e:	2201      	movs	r2, #1
     c30:	2600      	movs	r6, #0
     c32:	e771      	b.n	b18 <__aeabi_fdiv+0x108>
     c34:	019e      	lsls	r6, r3, #6
     c36:	4662      	mov	r2, ip
     c38:	2301      	movs	r3, #1
     c3a:	4013      	ands	r3, r2
     c3c:	0a76      	lsrs	r6, r6, #9
     c3e:	2200      	movs	r2, #0
     c40:	e76a      	b.n	b18 <__aeabi_fdiv+0x108>
     c42:	2680      	movs	r6, #128	; 0x80
     c44:	03f6      	lsls	r6, r6, #15
     c46:	4326      	orrs	r6, r4
     c48:	0276      	lsls	r6, r6, #9
     c4a:	0a76      	lsrs	r6, r6, #9
     c4c:	4653      	mov	r3, sl
     c4e:	22ff      	movs	r2, #255	; 0xff
     c50:	e762      	b.n	b18 <__aeabi_fdiv+0x108>
     c52:	46c0      	nop			; (mov r8, r8)
     c54:	00003a48 	.word	0x00003a48
     c58:	f7ffffff 	.word	0xf7ffffff

00000c5c <__eqsf2>:
__nesf2():
     c5c:	024a      	lsls	r2, r1, #9
     c5e:	0243      	lsls	r3, r0, #9
     c60:	b570      	push	{r4, r5, r6, lr}
     c62:	0a5c      	lsrs	r4, r3, #9
     c64:	0a55      	lsrs	r5, r2, #9
     c66:	0043      	lsls	r3, r0, #1
     c68:	004a      	lsls	r2, r1, #1
     c6a:	0e1b      	lsrs	r3, r3, #24
     c6c:	0fc6      	lsrs	r6, r0, #31
     c6e:	0e12      	lsrs	r2, r2, #24
     c70:	0fc9      	lsrs	r1, r1, #31
     c72:	2bff      	cmp	r3, #255	; 0xff
     c74:	d005      	beq.n	c82 <__eqsf2+0x26>
     c76:	2aff      	cmp	r2, #255	; 0xff
     c78:	d008      	beq.n	c8c <__eqsf2+0x30>
     c7a:	2001      	movs	r0, #1
     c7c:	4293      	cmp	r3, r2
     c7e:	d00b      	beq.n	c98 <__eqsf2+0x3c>
     c80:	bd70      	pop	{r4, r5, r6, pc}
     c82:	2001      	movs	r0, #1
     c84:	2c00      	cmp	r4, #0
     c86:	d1fb      	bne.n	c80 <__eqsf2+0x24>
     c88:	2aff      	cmp	r2, #255	; 0xff
     c8a:	d1f6      	bne.n	c7a <__eqsf2+0x1e>
     c8c:	2001      	movs	r0, #1
     c8e:	2d00      	cmp	r5, #0
     c90:	d1f6      	bne.n	c80 <__eqsf2+0x24>
     c92:	2001      	movs	r0, #1
     c94:	4293      	cmp	r3, r2
     c96:	d1f3      	bne.n	c80 <__eqsf2+0x24>
     c98:	42ac      	cmp	r4, r5
     c9a:	d1f1      	bne.n	c80 <__eqsf2+0x24>
     c9c:	428e      	cmp	r6, r1
     c9e:	d005      	beq.n	cac <__eqsf2+0x50>
     ca0:	2b00      	cmp	r3, #0
     ca2:	d1ed      	bne.n	c80 <__eqsf2+0x24>
     ca4:	1c20      	adds	r0, r4, #0
     ca6:	1e44      	subs	r4, r0, #1
     ca8:	41a0      	sbcs	r0, r4
     caa:	e7e9      	b.n	c80 <__eqsf2+0x24>
     cac:	2000      	movs	r0, #0
     cae:	e7e7      	b.n	c80 <__eqsf2+0x24>

00000cb0 <__gesf2>:
__gtsf2():
     cb0:	024a      	lsls	r2, r1, #9
     cb2:	0243      	lsls	r3, r0, #9
     cb4:	b5f0      	push	{r4, r5, r6, r7, lr}
     cb6:	0a5c      	lsrs	r4, r3, #9
     cb8:	0a55      	lsrs	r5, r2, #9
     cba:	0043      	lsls	r3, r0, #1
     cbc:	004a      	lsls	r2, r1, #1
     cbe:	0e1b      	lsrs	r3, r3, #24
     cc0:	0fc6      	lsrs	r6, r0, #31
     cc2:	0e12      	lsrs	r2, r2, #24
     cc4:	0fc9      	lsrs	r1, r1, #31
     cc6:	2bff      	cmp	r3, #255	; 0xff
     cc8:	d031      	beq.n	d2e <__gesf2+0x7e>
     cca:	2aff      	cmp	r2, #255	; 0xff
     ccc:	d034      	beq.n	d38 <__gesf2+0x88>
     cce:	2b00      	cmp	r3, #0
     cd0:	d116      	bne.n	d00 <__gesf2+0x50>
     cd2:	4260      	negs	r0, r4
     cd4:	4160      	adcs	r0, r4
     cd6:	4684      	mov	ip, r0
     cd8:	2a00      	cmp	r2, #0
     cda:	d014      	beq.n	d06 <__gesf2+0x56>
     cdc:	2800      	cmp	r0, #0
     cde:	d120      	bne.n	d22 <__gesf2+0x72>
     ce0:	428e      	cmp	r6, r1
     ce2:	d117      	bne.n	d14 <__gesf2+0x64>
     ce4:	4293      	cmp	r3, r2
     ce6:	dc15      	bgt.n	d14 <__gesf2+0x64>
     ce8:	db04      	blt.n	cf4 <__gesf2+0x44>
     cea:	42ac      	cmp	r4, r5
     cec:	d812      	bhi.n	d14 <__gesf2+0x64>
     cee:	2000      	movs	r0, #0
     cf0:	42ac      	cmp	r4, r5
     cf2:	d212      	bcs.n	d1a <__gesf2+0x6a>
     cf4:	4270      	negs	r0, r6
     cf6:	4170      	adcs	r0, r6
     cf8:	4240      	negs	r0, r0
     cfa:	2301      	movs	r3, #1
     cfc:	4318      	orrs	r0, r3
     cfe:	e00c      	b.n	d1a <__gesf2+0x6a>
     d00:	2a00      	cmp	r2, #0
     d02:	d1ed      	bne.n	ce0 <__gesf2+0x30>
     d04:	4694      	mov	ip, r2
     d06:	426f      	negs	r7, r5
     d08:	416f      	adcs	r7, r5
     d0a:	4660      	mov	r0, ip
     d0c:	2800      	cmp	r0, #0
     d0e:	d105      	bne.n	d1c <__gesf2+0x6c>
     d10:	2f00      	cmp	r7, #0
     d12:	d0e5      	beq.n	ce0 <__gesf2+0x30>
     d14:	4270      	negs	r0, r6
     d16:	2301      	movs	r3, #1
     d18:	4318      	orrs	r0, r3
     d1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d1c:	2000      	movs	r0, #0
     d1e:	2f00      	cmp	r7, #0
     d20:	d1fb      	bne.n	d1a <__gesf2+0x6a>
     d22:	4248      	negs	r0, r1
     d24:	4148      	adcs	r0, r1
     d26:	4240      	negs	r0, r0
     d28:	2301      	movs	r3, #1
     d2a:	4318      	orrs	r0, r3
     d2c:	e7f5      	b.n	d1a <__gesf2+0x6a>
     d2e:	2c00      	cmp	r4, #0
     d30:	d0cb      	beq.n	cca <__gesf2+0x1a>
     d32:	2002      	movs	r0, #2
     d34:	4240      	negs	r0, r0
     d36:	e7f0      	b.n	d1a <__gesf2+0x6a>
     d38:	2d00      	cmp	r5, #0
     d3a:	d0c8      	beq.n	cce <__gesf2+0x1e>
     d3c:	e7f9      	b.n	d32 <__gesf2+0x82>
     d3e:	46c0      	nop			; (mov r8, r8)

00000d40 <__lesf2>:
__lesf2():
     d40:	024a      	lsls	r2, r1, #9
     d42:	0243      	lsls	r3, r0, #9
     d44:	b5f0      	push	{r4, r5, r6, r7, lr}
     d46:	0a5c      	lsrs	r4, r3, #9
     d48:	0a55      	lsrs	r5, r2, #9
     d4a:	0043      	lsls	r3, r0, #1
     d4c:	004a      	lsls	r2, r1, #1
     d4e:	0e1b      	lsrs	r3, r3, #24
     d50:	0fc6      	lsrs	r6, r0, #31
     d52:	0e12      	lsrs	r2, r2, #24
     d54:	0fc9      	lsrs	r1, r1, #31
     d56:	2bff      	cmp	r3, #255	; 0xff
     d58:	d027      	beq.n	daa <__lesf2+0x6a>
     d5a:	2aff      	cmp	r2, #255	; 0xff
     d5c:	d029      	beq.n	db2 <__lesf2+0x72>
     d5e:	2b00      	cmp	r3, #0
     d60:	d010      	beq.n	d84 <__lesf2+0x44>
     d62:	2a00      	cmp	r2, #0
     d64:	d115      	bne.n	d92 <__lesf2+0x52>
     d66:	4694      	mov	ip, r2
     d68:	426f      	negs	r7, r5
     d6a:	416f      	adcs	r7, r5
     d6c:	4660      	mov	r0, ip
     d6e:	2800      	cmp	r0, #0
     d70:	d015      	beq.n	d9e <__lesf2+0x5e>
     d72:	2000      	movs	r0, #0
     d74:	2f00      	cmp	r7, #0
     d76:	d104      	bne.n	d82 <__lesf2+0x42>
     d78:	4248      	negs	r0, r1
     d7a:	4148      	adcs	r0, r1
     d7c:	4240      	negs	r0, r0
     d7e:	2301      	movs	r3, #1
     d80:	4318      	orrs	r0, r3
     d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d84:	4260      	negs	r0, r4
     d86:	4160      	adcs	r0, r4
     d88:	4684      	mov	ip, r0
     d8a:	2a00      	cmp	r2, #0
     d8c:	d0ec      	beq.n	d68 <__lesf2+0x28>
     d8e:	2800      	cmp	r0, #0
     d90:	d1f2      	bne.n	d78 <__lesf2+0x38>
     d92:	428e      	cmp	r6, r1
     d94:	d011      	beq.n	dba <__lesf2+0x7a>
     d96:	4270      	negs	r0, r6
     d98:	2301      	movs	r3, #1
     d9a:	4318      	orrs	r0, r3
     d9c:	e7f1      	b.n	d82 <__lesf2+0x42>
     d9e:	2f00      	cmp	r7, #0
     da0:	d0f7      	beq.n	d92 <__lesf2+0x52>
     da2:	4270      	negs	r0, r6
     da4:	2301      	movs	r3, #1
     da6:	4318      	orrs	r0, r3
     da8:	e7eb      	b.n	d82 <__lesf2+0x42>
     daa:	2002      	movs	r0, #2
     dac:	2c00      	cmp	r4, #0
     dae:	d1e8      	bne.n	d82 <__lesf2+0x42>
     db0:	e7d3      	b.n	d5a <__lesf2+0x1a>
     db2:	2002      	movs	r0, #2
     db4:	2d00      	cmp	r5, #0
     db6:	d1e4      	bne.n	d82 <__lesf2+0x42>
     db8:	e7d1      	b.n	d5e <__lesf2+0x1e>
     dba:	4293      	cmp	r3, r2
     dbc:	dceb      	bgt.n	d96 <__lesf2+0x56>
     dbe:	db04      	blt.n	dca <__lesf2+0x8a>
     dc0:	42ac      	cmp	r4, r5
     dc2:	d8e8      	bhi.n	d96 <__lesf2+0x56>
     dc4:	2000      	movs	r0, #0
     dc6:	42ac      	cmp	r4, r5
     dc8:	d2db      	bcs.n	d82 <__lesf2+0x42>
     dca:	4270      	negs	r0, r6
     dcc:	4170      	adcs	r0, r6
     dce:	4240      	negs	r0, r0
     dd0:	2301      	movs	r3, #1
     dd2:	4318      	orrs	r0, r3
     dd4:	e7d5      	b.n	d82 <__lesf2+0x42>
     dd6:	46c0      	nop			; (mov r8, r8)

00000dd8 <__aeabi_ui2f>:
__aeabi_ui2f():
     dd8:	b510      	push	{r4, lr}
     dda:	1e04      	subs	r4, r0, #0
     ddc:	d033      	beq.n	e46 <__aeabi_ui2f+0x6e>
     dde:	f000 fcff 	bl	17e0 <__clzsi2>
     de2:	239e      	movs	r3, #158	; 0x9e
     de4:	1a1b      	subs	r3, r3, r0
     de6:	2b96      	cmp	r3, #150	; 0x96
     de8:	dc09      	bgt.n	dfe <__aeabi_ui2f+0x26>
     dea:	3808      	subs	r0, #8
     dec:	4084      	lsls	r4, r0
     dee:	0264      	lsls	r4, r4, #9
     df0:	0a64      	lsrs	r4, r4, #9
     df2:	b2db      	uxtb	r3, r3
     df4:	0264      	lsls	r4, r4, #9
     df6:	05db      	lsls	r3, r3, #23
     df8:	0a60      	lsrs	r0, r4, #9
     dfa:	4318      	orrs	r0, r3
     dfc:	bd10      	pop	{r4, pc}
     dfe:	2b99      	cmp	r3, #153	; 0x99
     e00:	dd0a      	ble.n	e18 <__aeabi_ui2f+0x40>
     e02:	2205      	movs	r2, #5
     e04:	1a12      	subs	r2, r2, r0
     e06:	1c21      	adds	r1, r4, #0
     e08:	40d1      	lsrs	r1, r2
     e0a:	1c0a      	adds	r2, r1, #0
     e0c:	1c01      	adds	r1, r0, #0
     e0e:	311b      	adds	r1, #27
     e10:	408c      	lsls	r4, r1
     e12:	1e61      	subs	r1, r4, #1
     e14:	418c      	sbcs	r4, r1
     e16:	4314      	orrs	r4, r2
     e18:	2805      	cmp	r0, #5
     e1a:	dd01      	ble.n	e20 <__aeabi_ui2f+0x48>
     e1c:	1f42      	subs	r2, r0, #5
     e1e:	4094      	lsls	r4, r2
     e20:	4a14      	ldr	r2, [pc, #80]	; (e74 <__aeabi_ui2f+0x9c>)
     e22:	4022      	ands	r2, r4
     e24:	0761      	lsls	r1, r4, #29
     e26:	d004      	beq.n	e32 <__aeabi_ui2f+0x5a>
     e28:	210f      	movs	r1, #15
     e2a:	400c      	ands	r4, r1
     e2c:	2c04      	cmp	r4, #4
     e2e:	d000      	beq.n	e32 <__aeabi_ui2f+0x5a>
     e30:	3204      	adds	r2, #4
     e32:	0151      	lsls	r1, r2, #5
     e34:	d50a      	bpl.n	e4c <__aeabi_ui2f+0x74>
     e36:	239f      	movs	r3, #159	; 0x9f
     e38:	1a18      	subs	r0, r3, r0
     e3a:	28ff      	cmp	r0, #255	; 0xff
     e3c:	d016      	beq.n	e6c <__aeabi_ui2f+0x94>
     e3e:	0194      	lsls	r4, r2, #6
     e40:	0a64      	lsrs	r4, r4, #9
     e42:	b2c3      	uxtb	r3, r0
     e44:	e7d6      	b.n	df4 <__aeabi_ui2f+0x1c>
     e46:	2300      	movs	r3, #0
     e48:	2400      	movs	r4, #0
     e4a:	e7d3      	b.n	df4 <__aeabi_ui2f+0x1c>
     e4c:	08d2      	lsrs	r2, r2, #3
     e4e:	2bff      	cmp	r3, #255	; 0xff
     e50:	d003      	beq.n	e5a <__aeabi_ui2f+0x82>
     e52:	0254      	lsls	r4, r2, #9
     e54:	0a64      	lsrs	r4, r4, #9
     e56:	b2db      	uxtb	r3, r3
     e58:	e7cc      	b.n	df4 <__aeabi_ui2f+0x1c>
     e5a:	2a00      	cmp	r2, #0
     e5c:	d006      	beq.n	e6c <__aeabi_ui2f+0x94>
     e5e:	2480      	movs	r4, #128	; 0x80
     e60:	03e4      	lsls	r4, r4, #15
     e62:	4314      	orrs	r4, r2
     e64:	0264      	lsls	r4, r4, #9
     e66:	0a64      	lsrs	r4, r4, #9
     e68:	23ff      	movs	r3, #255	; 0xff
     e6a:	e7c3      	b.n	df4 <__aeabi_ui2f+0x1c>
     e6c:	23ff      	movs	r3, #255	; 0xff
     e6e:	2400      	movs	r4, #0
     e70:	e7c0      	b.n	df4 <__aeabi_ui2f+0x1c>
     e72:	46c0      	nop			; (mov r8, r8)
     e74:	fbffffff 	.word	0xfbffffff

00000e78 <__eqdf2>:
__eqdf2():
     e78:	b5f0      	push	{r4, r5, r6, r7, lr}
     e7a:	465f      	mov	r7, fp
     e7c:	4656      	mov	r6, sl
     e7e:	464d      	mov	r5, r9
     e80:	4644      	mov	r4, r8
     e82:	b4f0      	push	{r4, r5, r6, r7}
     e84:	1c0d      	adds	r5, r1, #0
     e86:	1c04      	adds	r4, r0, #0
     e88:	4680      	mov	r8, r0
     e8a:	0fe8      	lsrs	r0, r5, #31
     e8c:	4681      	mov	r9, r0
     e8e:	0318      	lsls	r0, r3, #12
     e90:	030f      	lsls	r7, r1, #12
     e92:	0b00      	lsrs	r0, r0, #12
     e94:	0b3f      	lsrs	r7, r7, #12
     e96:	b083      	sub	sp, #12
     e98:	4684      	mov	ip, r0
     e9a:	481b      	ldr	r0, [pc, #108]	; (f08 <__eqdf2+0x90>)
     e9c:	9700      	str	r7, [sp, #0]
     e9e:	0049      	lsls	r1, r1, #1
     ea0:	005e      	lsls	r6, r3, #1
     ea2:	0fdf      	lsrs	r7, r3, #31
     ea4:	0d49      	lsrs	r1, r1, #21
     ea6:	4692      	mov	sl, r2
     ea8:	0d76      	lsrs	r6, r6, #21
     eaa:	46bb      	mov	fp, r7
     eac:	4281      	cmp	r1, r0
     eae:	d00c      	beq.n	eca <__eqdf2+0x52>
     eb0:	4815      	ldr	r0, [pc, #84]	; (f08 <__eqdf2+0x90>)
     eb2:	4286      	cmp	r6, r0
     eb4:	d010      	beq.n	ed8 <__eqdf2+0x60>
     eb6:	2001      	movs	r0, #1
     eb8:	42b1      	cmp	r1, r6
     eba:	d015      	beq.n	ee8 <__eqdf2+0x70>
     ebc:	b003      	add	sp, #12
     ebe:	bc3c      	pop	{r2, r3, r4, r5}
     ec0:	4690      	mov	r8, r2
     ec2:	4699      	mov	r9, r3
     ec4:	46a2      	mov	sl, r4
     ec6:	46ab      	mov	fp, r5
     ec8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     eca:	9f00      	ldr	r7, [sp, #0]
     ecc:	2001      	movs	r0, #1
     ece:	4327      	orrs	r7, r4
     ed0:	d1f4      	bne.n	ebc <__eqdf2+0x44>
     ed2:	480d      	ldr	r0, [pc, #52]	; (f08 <__eqdf2+0x90>)
     ed4:	4286      	cmp	r6, r0
     ed6:	d1ee      	bne.n	eb6 <__eqdf2+0x3e>
     ed8:	4660      	mov	r0, ip
     eda:	4302      	orrs	r2, r0
     edc:	2001      	movs	r0, #1
     ede:	2a00      	cmp	r2, #0
     ee0:	d1ec      	bne.n	ebc <__eqdf2+0x44>
     ee2:	2001      	movs	r0, #1
     ee4:	42b1      	cmp	r1, r6
     ee6:	d1e9      	bne.n	ebc <__eqdf2+0x44>
     ee8:	9b00      	ldr	r3, [sp, #0]
     eea:	4563      	cmp	r3, ip
     eec:	d1e6      	bne.n	ebc <__eqdf2+0x44>
     eee:	45d0      	cmp	r8, sl
     ef0:	d1e4      	bne.n	ebc <__eqdf2+0x44>
     ef2:	45d9      	cmp	r9, fp
     ef4:	d006      	beq.n	f04 <__eqdf2+0x8c>
     ef6:	2900      	cmp	r1, #0
     ef8:	d1e0      	bne.n	ebc <__eqdf2+0x44>
     efa:	431c      	orrs	r4, r3
     efc:	1c20      	adds	r0, r4, #0
     efe:	1e44      	subs	r4, r0, #1
     f00:	41a0      	sbcs	r0, r4
     f02:	e7db      	b.n	ebc <__eqdf2+0x44>
     f04:	2000      	movs	r0, #0
     f06:	e7d9      	b.n	ebc <__eqdf2+0x44>
     f08:	000007ff 	.word	0x000007ff

00000f0c <__gedf2>:
__gtdf2():
     f0c:	b5f0      	push	{r4, r5, r6, r7, lr}
     f0e:	465f      	mov	r7, fp
     f10:	4656      	mov	r6, sl
     f12:	464d      	mov	r5, r9
     f14:	4644      	mov	r4, r8
     f16:	b4f0      	push	{r4, r5, r6, r7}
     f18:	0fcd      	lsrs	r5, r1, #31
     f1a:	0fde      	lsrs	r6, r3, #31
     f1c:	46ac      	mov	ip, r5
     f1e:	031d      	lsls	r5, r3, #12
     f20:	0b2d      	lsrs	r5, r5, #12
     f22:	46b1      	mov	r9, r6
     f24:	4e37      	ldr	r6, [pc, #220]	; (1004 <__gedf2+0xf8>)
     f26:	030f      	lsls	r7, r1, #12
     f28:	004c      	lsls	r4, r1, #1
     f2a:	46ab      	mov	fp, r5
     f2c:	005d      	lsls	r5, r3, #1
     f2e:	4680      	mov	r8, r0
     f30:	0b3f      	lsrs	r7, r7, #12
     f32:	0d64      	lsrs	r4, r4, #21
     f34:	4692      	mov	sl, r2
     f36:	0d6d      	lsrs	r5, r5, #21
     f38:	42b4      	cmp	r4, r6
     f3a:	d032      	beq.n	fa2 <__gedf2+0x96>
     f3c:	4e31      	ldr	r6, [pc, #196]	; (1004 <__gedf2+0xf8>)
     f3e:	42b5      	cmp	r5, r6
     f40:	d035      	beq.n	fae <__gedf2+0xa2>
     f42:	2c00      	cmp	r4, #0
     f44:	d10e      	bne.n	f64 <__gedf2+0x58>
     f46:	4338      	orrs	r0, r7
     f48:	4241      	negs	r1, r0
     f4a:	4141      	adcs	r1, r0
     f4c:	1c08      	adds	r0, r1, #0
     f4e:	2d00      	cmp	r5, #0
     f50:	d00b      	beq.n	f6a <__gedf2+0x5e>
     f52:	2900      	cmp	r1, #0
     f54:	d119      	bne.n	f8a <__gedf2+0x7e>
     f56:	45cc      	cmp	ip, r9
     f58:	d02d      	beq.n	fb6 <__gedf2+0xaa>
     f5a:	4665      	mov	r5, ip
     f5c:	4268      	negs	r0, r5
     f5e:	2301      	movs	r3, #1
     f60:	4318      	orrs	r0, r3
     f62:	e018      	b.n	f96 <__gedf2+0x8a>
     f64:	2d00      	cmp	r5, #0
     f66:	d1f6      	bne.n	f56 <__gedf2+0x4a>
     f68:	1c28      	adds	r0, r5, #0
     f6a:	4659      	mov	r1, fp
     f6c:	430a      	orrs	r2, r1
     f6e:	4253      	negs	r3, r2
     f70:	4153      	adcs	r3, r2
     f72:	2800      	cmp	r0, #0
     f74:	d106      	bne.n	f84 <__gedf2+0x78>
     f76:	2b00      	cmp	r3, #0
     f78:	d0ed      	beq.n	f56 <__gedf2+0x4a>
     f7a:	4663      	mov	r3, ip
     f7c:	4258      	negs	r0, r3
     f7e:	2301      	movs	r3, #1
     f80:	4318      	orrs	r0, r3
     f82:	e008      	b.n	f96 <__gedf2+0x8a>
     f84:	2000      	movs	r0, #0
     f86:	2b00      	cmp	r3, #0
     f88:	d105      	bne.n	f96 <__gedf2+0x8a>
     f8a:	464a      	mov	r2, r9
     f8c:	4250      	negs	r0, r2
     f8e:	4150      	adcs	r0, r2
     f90:	4240      	negs	r0, r0
     f92:	2301      	movs	r3, #1
     f94:	4318      	orrs	r0, r3
     f96:	bc3c      	pop	{r2, r3, r4, r5}
     f98:	4690      	mov	r8, r2
     f9a:	4699      	mov	r9, r3
     f9c:	46a2      	mov	sl, r4
     f9e:	46ab      	mov	fp, r5
     fa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     fa2:	1c3e      	adds	r6, r7, #0
     fa4:	4306      	orrs	r6, r0
     fa6:	d0c9      	beq.n	f3c <__gedf2+0x30>
     fa8:	2002      	movs	r0, #2
     faa:	4240      	negs	r0, r0
     fac:	e7f3      	b.n	f96 <__gedf2+0x8a>
     fae:	465e      	mov	r6, fp
     fb0:	4316      	orrs	r6, r2
     fb2:	d0c6      	beq.n	f42 <__gedf2+0x36>
     fb4:	e7f8      	b.n	fa8 <__gedf2+0x9c>
     fb6:	42ac      	cmp	r4, r5
     fb8:	dc07      	bgt.n	fca <__gedf2+0xbe>
     fba:	da0b      	bge.n	fd4 <__gedf2+0xc8>
     fbc:	4661      	mov	r1, ip
     fbe:	4248      	negs	r0, r1
     fc0:	4148      	adcs	r0, r1
     fc2:	4240      	negs	r0, r0
     fc4:	2301      	movs	r3, #1
     fc6:	4318      	orrs	r0, r3
     fc8:	e7e5      	b.n	f96 <__gedf2+0x8a>
     fca:	4666      	mov	r6, ip
     fcc:	4270      	negs	r0, r6
     fce:	2301      	movs	r3, #1
     fd0:	4318      	orrs	r0, r3
     fd2:	e7e0      	b.n	f96 <__gedf2+0x8a>
     fd4:	455f      	cmp	r7, fp
     fd6:	d80a      	bhi.n	fee <__gedf2+0xe2>
     fd8:	d00e      	beq.n	ff8 <__gedf2+0xec>
     fda:	2000      	movs	r0, #0
     fdc:	455f      	cmp	r7, fp
     fde:	d2da      	bcs.n	f96 <__gedf2+0x8a>
     fe0:	4665      	mov	r5, ip
     fe2:	4268      	negs	r0, r5
     fe4:	4168      	adcs	r0, r5
     fe6:	4240      	negs	r0, r0
     fe8:	2301      	movs	r3, #1
     fea:	4318      	orrs	r0, r3
     fec:	e7d3      	b.n	f96 <__gedf2+0x8a>
     fee:	4662      	mov	r2, ip
     ff0:	4250      	negs	r0, r2
     ff2:	2301      	movs	r3, #1
     ff4:	4318      	orrs	r0, r3
     ff6:	e7ce      	b.n	f96 <__gedf2+0x8a>
     ff8:	45d0      	cmp	r8, sl
     ffa:	d8f8      	bhi.n	fee <__gedf2+0xe2>
     ffc:	2000      	movs	r0, #0
     ffe:	45d0      	cmp	r8, sl
    1000:	d3ee      	bcc.n	fe0 <__gedf2+0xd4>
    1002:	e7c8      	b.n	f96 <__gedf2+0x8a>
    1004:	000007ff 	.word	0x000007ff

00001008 <__ledf2>:
__ltdf2():
    1008:	b5f0      	push	{r4, r5, r6, r7, lr}
    100a:	4656      	mov	r6, sl
    100c:	464d      	mov	r5, r9
    100e:	4644      	mov	r4, r8
    1010:	465f      	mov	r7, fp
    1012:	b4f0      	push	{r4, r5, r6, r7}
    1014:	1c0d      	adds	r5, r1, #0
    1016:	b083      	sub	sp, #12
    1018:	1c04      	adds	r4, r0, #0
    101a:	9001      	str	r0, [sp, #4]
    101c:	0fe8      	lsrs	r0, r5, #31
    101e:	4681      	mov	r9, r0
    1020:	0318      	lsls	r0, r3, #12
    1022:	030f      	lsls	r7, r1, #12
    1024:	0b00      	lsrs	r0, r0, #12
    1026:	0b3f      	lsrs	r7, r7, #12
    1028:	4684      	mov	ip, r0
    102a:	4835      	ldr	r0, [pc, #212]	; (1100 <__ledf2+0xf8>)
    102c:	9700      	str	r7, [sp, #0]
    102e:	0049      	lsls	r1, r1, #1
    1030:	005e      	lsls	r6, r3, #1
    1032:	0fdf      	lsrs	r7, r3, #31
    1034:	0d49      	lsrs	r1, r1, #21
    1036:	4692      	mov	sl, r2
    1038:	0d76      	lsrs	r6, r6, #21
    103a:	46b8      	mov	r8, r7
    103c:	4281      	cmp	r1, r0
    103e:	d034      	beq.n	10aa <__ledf2+0xa2>
    1040:	482f      	ldr	r0, [pc, #188]	; (1100 <__ledf2+0xf8>)
    1042:	4286      	cmp	r6, r0
    1044:	d036      	beq.n	10b4 <__ledf2+0xac>
    1046:	2900      	cmp	r1, #0
    1048:	d018      	beq.n	107c <__ledf2+0x74>
    104a:	2e00      	cmp	r6, #0
    104c:	d11f      	bne.n	108e <__ledf2+0x86>
    104e:	1c34      	adds	r4, r6, #0
    1050:	4667      	mov	r7, ip
    1052:	433a      	orrs	r2, r7
    1054:	4253      	negs	r3, r2
    1056:	4153      	adcs	r3, r2
    1058:	2c00      	cmp	r4, #0
    105a:	d01f      	beq.n	109c <__ledf2+0x94>
    105c:	2000      	movs	r0, #0
    105e:	2b00      	cmp	r3, #0
    1060:	d105      	bne.n	106e <__ledf2+0x66>
    1062:	4642      	mov	r2, r8
    1064:	4250      	negs	r0, r2
    1066:	4150      	adcs	r0, r2
    1068:	4240      	negs	r0, r0
    106a:	2301      	movs	r3, #1
    106c:	4318      	orrs	r0, r3
    106e:	b003      	add	sp, #12
    1070:	bc3c      	pop	{r2, r3, r4, r5}
    1072:	4690      	mov	r8, r2
    1074:	4699      	mov	r9, r3
    1076:	46a2      	mov	sl, r4
    1078:	46ab      	mov	fp, r5
    107a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    107c:	9800      	ldr	r0, [sp, #0]
    107e:	4304      	orrs	r4, r0
    1080:	4260      	negs	r0, r4
    1082:	4160      	adcs	r0, r4
    1084:	1c04      	adds	r4, r0, #0
    1086:	2e00      	cmp	r6, #0
    1088:	d0e2      	beq.n	1050 <__ledf2+0x48>
    108a:	2800      	cmp	r0, #0
    108c:	d1e9      	bne.n	1062 <__ledf2+0x5a>
    108e:	45c1      	cmp	r9, r8
    1090:	d015      	beq.n	10be <__ledf2+0xb6>
    1092:	464f      	mov	r7, r9
    1094:	4278      	negs	r0, r7
    1096:	2301      	movs	r3, #1
    1098:	4318      	orrs	r0, r3
    109a:	e7e8      	b.n	106e <__ledf2+0x66>
    109c:	2b00      	cmp	r3, #0
    109e:	d0f6      	beq.n	108e <__ledf2+0x86>
    10a0:	464b      	mov	r3, r9
    10a2:	4258      	negs	r0, r3
    10a4:	2301      	movs	r3, #1
    10a6:	4318      	orrs	r0, r3
    10a8:	e7e1      	b.n	106e <__ledf2+0x66>
    10aa:	9f00      	ldr	r7, [sp, #0]
    10ac:	2002      	movs	r0, #2
    10ae:	4327      	orrs	r7, r4
    10b0:	d1dd      	bne.n	106e <__ledf2+0x66>
    10b2:	e7c5      	b.n	1040 <__ledf2+0x38>
    10b4:	4667      	mov	r7, ip
    10b6:	2002      	movs	r0, #2
    10b8:	4317      	orrs	r7, r2
    10ba:	d1d8      	bne.n	106e <__ledf2+0x66>
    10bc:	e7c3      	b.n	1046 <__ledf2+0x3e>
    10be:	42b1      	cmp	r1, r6
    10c0:	dd04      	ble.n	10cc <__ledf2+0xc4>
    10c2:	464a      	mov	r2, r9
    10c4:	4250      	negs	r0, r2
    10c6:	2301      	movs	r3, #1
    10c8:	4318      	orrs	r0, r3
    10ca:	e7d0      	b.n	106e <__ledf2+0x66>
    10cc:	42b1      	cmp	r1, r6
    10ce:	db07      	blt.n	10e0 <__ledf2+0xd8>
    10d0:	9800      	ldr	r0, [sp, #0]
    10d2:	4560      	cmp	r0, ip
    10d4:	d8e4      	bhi.n	10a0 <__ledf2+0x98>
    10d6:	d00a      	beq.n	10ee <__ledf2+0xe6>
    10d8:	9f00      	ldr	r7, [sp, #0]
    10da:	2000      	movs	r0, #0
    10dc:	4567      	cmp	r7, ip
    10de:	d2c6      	bcs.n	106e <__ledf2+0x66>
    10e0:	464f      	mov	r7, r9
    10e2:	4278      	negs	r0, r7
    10e4:	4178      	adcs	r0, r7
    10e6:	4240      	negs	r0, r0
    10e8:	2301      	movs	r3, #1
    10ea:	4318      	orrs	r0, r3
    10ec:	e7bf      	b.n	106e <__ledf2+0x66>
    10ee:	9a01      	ldr	r2, [sp, #4]
    10f0:	4552      	cmp	r2, sl
    10f2:	d8d5      	bhi.n	10a0 <__ledf2+0x98>
    10f4:	9a01      	ldr	r2, [sp, #4]
    10f6:	2000      	movs	r0, #0
    10f8:	4552      	cmp	r2, sl
    10fa:	d3f1      	bcc.n	10e0 <__ledf2+0xd8>
    10fc:	e7b7      	b.n	106e <__ledf2+0x66>
    10fe:	46c0      	nop			; (mov r8, r8)
    1100:	000007ff 	.word	0x000007ff

00001104 <__aeabi_dmul>:
__aeabi_dmul():
    1104:	b5f0      	push	{r4, r5, r6, r7, lr}
    1106:	4656      	mov	r6, sl
    1108:	4644      	mov	r4, r8
    110a:	465f      	mov	r7, fp
    110c:	464d      	mov	r5, r9
    110e:	b4f0      	push	{r4, r5, r6, r7}
    1110:	1c1f      	adds	r7, r3, #0
    1112:	030b      	lsls	r3, r1, #12
    1114:	0b1b      	lsrs	r3, r3, #12
    1116:	469a      	mov	sl, r3
    1118:	004b      	lsls	r3, r1, #1
    111a:	b087      	sub	sp, #28
    111c:	1c04      	adds	r4, r0, #0
    111e:	4680      	mov	r8, r0
    1120:	0d5b      	lsrs	r3, r3, #21
    1122:	0fc8      	lsrs	r0, r1, #31
    1124:	1c16      	adds	r6, r2, #0
    1126:	9302      	str	r3, [sp, #8]
    1128:	4681      	mov	r9, r0
    112a:	2b00      	cmp	r3, #0
    112c:	d068      	beq.n	1200 <__aeabi_dmul+0xfc>
    112e:	4b69      	ldr	r3, [pc, #420]	; (12d4 <__aeabi_dmul+0x1d0>)
    1130:	9902      	ldr	r1, [sp, #8]
    1132:	4299      	cmp	r1, r3
    1134:	d032      	beq.n	119c <__aeabi_dmul+0x98>
    1136:	2280      	movs	r2, #128	; 0x80
    1138:	4653      	mov	r3, sl
    113a:	0352      	lsls	r2, r2, #13
    113c:	431a      	orrs	r2, r3
    113e:	00d2      	lsls	r2, r2, #3
    1140:	0f63      	lsrs	r3, r4, #29
    1142:	431a      	orrs	r2, r3
    1144:	4692      	mov	sl, r2
    1146:	4a64      	ldr	r2, [pc, #400]	; (12d8 <__aeabi_dmul+0x1d4>)
    1148:	00e0      	lsls	r0, r4, #3
    114a:	1889      	adds	r1, r1, r2
    114c:	4680      	mov	r8, r0
    114e:	9102      	str	r1, [sp, #8]
    1150:	2400      	movs	r4, #0
    1152:	2500      	movs	r5, #0
    1154:	033b      	lsls	r3, r7, #12
    1156:	0b1b      	lsrs	r3, r3, #12
    1158:	469b      	mov	fp, r3
    115a:	0078      	lsls	r0, r7, #1
    115c:	0ffb      	lsrs	r3, r7, #31
    115e:	1c32      	adds	r2, r6, #0
    1160:	0d40      	lsrs	r0, r0, #21
    1162:	9303      	str	r3, [sp, #12]
    1164:	d100      	bne.n	1168 <__aeabi_dmul+0x64>
    1166:	e075      	b.n	1254 <__aeabi_dmul+0x150>
    1168:	4b5a      	ldr	r3, [pc, #360]	; (12d4 <__aeabi_dmul+0x1d0>)
    116a:	4298      	cmp	r0, r3
    116c:	d069      	beq.n	1242 <__aeabi_dmul+0x13e>
    116e:	2280      	movs	r2, #128	; 0x80
    1170:	4659      	mov	r1, fp
    1172:	0352      	lsls	r2, r2, #13
    1174:	430a      	orrs	r2, r1
    1176:	0f73      	lsrs	r3, r6, #29
    1178:	00d2      	lsls	r2, r2, #3
    117a:	431a      	orrs	r2, r3
    117c:	4b56      	ldr	r3, [pc, #344]	; (12d8 <__aeabi_dmul+0x1d4>)
    117e:	4693      	mov	fp, r2
    1180:	18c0      	adds	r0, r0, r3
    1182:	00f2      	lsls	r2, r6, #3
    1184:	2300      	movs	r3, #0
    1186:	9903      	ldr	r1, [sp, #12]
    1188:	464e      	mov	r6, r9
    118a:	4071      	eors	r1, r6
    118c:	431c      	orrs	r4, r3
    118e:	2c0f      	cmp	r4, #15
    1190:	d900      	bls.n	1194 <__aeabi_dmul+0x90>
    1192:	e0a9      	b.n	12e8 <__aeabi_dmul+0x1e4>
    1194:	4e51      	ldr	r6, [pc, #324]	; (12dc <__aeabi_dmul+0x1d8>)
    1196:	00a4      	lsls	r4, r4, #2
    1198:	5934      	ldr	r4, [r6, r4]
    119a:	46a7      	mov	pc, r4
    119c:	4653      	mov	r3, sl
    119e:	431c      	orrs	r4, r3
    11a0:	d000      	beq.n	11a4 <__aeabi_dmul+0xa0>
    11a2:	e087      	b.n	12b4 <__aeabi_dmul+0x1b0>
    11a4:	2500      	movs	r5, #0
    11a6:	46aa      	mov	sl, r5
    11a8:	46a8      	mov	r8, r5
    11aa:	2408      	movs	r4, #8
    11ac:	2502      	movs	r5, #2
    11ae:	e7d1      	b.n	1154 <__aeabi_dmul+0x50>
    11b0:	4649      	mov	r1, r9
    11b2:	2d02      	cmp	r5, #2
    11b4:	d06c      	beq.n	1290 <__aeabi_dmul+0x18c>
    11b6:	2d03      	cmp	r5, #3
    11b8:	d100      	bne.n	11bc <__aeabi_dmul+0xb8>
    11ba:	e217      	b.n	15ec <__aeabi_dmul+0x4e8>
    11bc:	2d01      	cmp	r5, #1
    11be:	d000      	beq.n	11c2 <__aeabi_dmul+0xbe>
    11c0:	e158      	b.n	1474 <__aeabi_dmul+0x370>
    11c2:	400d      	ands	r5, r1
    11c4:	b2ed      	uxtb	r5, r5
    11c6:	2400      	movs	r4, #0
    11c8:	46a9      	mov	r9, r5
    11ca:	2300      	movs	r3, #0
    11cc:	46a0      	mov	r8, r4
    11ce:	2000      	movs	r0, #0
    11d0:	2100      	movs	r1, #0
    11d2:	0325      	lsls	r5, r4, #12
    11d4:	0d0a      	lsrs	r2, r1, #20
    11d6:	051c      	lsls	r4, r3, #20
    11d8:	0b2d      	lsrs	r5, r5, #12
    11da:	0512      	lsls	r2, r2, #20
    11dc:	4b40      	ldr	r3, [pc, #256]	; (12e0 <__aeabi_dmul+0x1dc>)
    11de:	432a      	orrs	r2, r5
    11e0:	4013      	ands	r3, r2
    11e2:	4323      	orrs	r3, r4
    11e4:	005b      	lsls	r3, r3, #1
    11e6:	464c      	mov	r4, r9
    11e8:	085b      	lsrs	r3, r3, #1
    11ea:	07e2      	lsls	r2, r4, #31
    11ec:	1c19      	adds	r1, r3, #0
    11ee:	4640      	mov	r0, r8
    11f0:	4311      	orrs	r1, r2
    11f2:	b007      	add	sp, #28
    11f4:	bc3c      	pop	{r2, r3, r4, r5}
    11f6:	4690      	mov	r8, r2
    11f8:	4699      	mov	r9, r3
    11fa:	46a2      	mov	sl, r4
    11fc:	46ab      	mov	fp, r5
    11fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1200:	4653      	mov	r3, sl
    1202:	4323      	orrs	r3, r4
    1204:	d050      	beq.n	12a8 <__aeabi_dmul+0x1a4>
    1206:	4653      	mov	r3, sl
    1208:	2b00      	cmp	r3, #0
    120a:	d100      	bne.n	120e <__aeabi_dmul+0x10a>
    120c:	e184      	b.n	1518 <__aeabi_dmul+0x414>
    120e:	4650      	mov	r0, sl
    1210:	f000 fae6 	bl	17e0 <__clzsi2>
    1214:	1e03      	subs	r3, r0, #0
    1216:	2b27      	cmp	r3, #39	; 0x27
    1218:	dd00      	ble.n	121c <__aeabi_dmul+0x118>
    121a:	e176      	b.n	150a <__aeabi_dmul+0x406>
    121c:	2128      	movs	r1, #40	; 0x28
    121e:	1a0d      	subs	r5, r1, r0
    1220:	1c21      	adds	r1, r4, #0
    1222:	3b08      	subs	r3, #8
    1224:	4652      	mov	r2, sl
    1226:	40e9      	lsrs	r1, r5
    1228:	409a      	lsls	r2, r3
    122a:	1c0d      	adds	r5, r1, #0
    122c:	4315      	orrs	r5, r2
    122e:	1c22      	adds	r2, r4, #0
    1230:	409a      	lsls	r2, r3
    1232:	46aa      	mov	sl, r5
    1234:	4690      	mov	r8, r2
    1236:	4b2b      	ldr	r3, [pc, #172]	; (12e4 <__aeabi_dmul+0x1e0>)
    1238:	2400      	movs	r4, #0
    123a:	1a1b      	subs	r3, r3, r0
    123c:	9302      	str	r3, [sp, #8]
    123e:	2500      	movs	r5, #0
    1240:	e788      	b.n	1154 <__aeabi_dmul+0x50>
    1242:	465b      	mov	r3, fp
    1244:	431e      	orrs	r6, r3
    1246:	2303      	movs	r3, #3
    1248:	2e00      	cmp	r6, #0
    124a:	d19c      	bne.n	1186 <__aeabi_dmul+0x82>
    124c:	46b3      	mov	fp, r6
    124e:	2200      	movs	r2, #0
    1250:	2302      	movs	r3, #2
    1252:	e798      	b.n	1186 <__aeabi_dmul+0x82>
    1254:	465b      	mov	r3, fp
    1256:	4333      	orrs	r3, r6
    1258:	d021      	beq.n	129e <__aeabi_dmul+0x19a>
    125a:	4658      	mov	r0, fp
    125c:	2800      	cmp	r0, #0
    125e:	d100      	bne.n	1262 <__aeabi_dmul+0x15e>
    1260:	e14e      	b.n	1500 <__aeabi_dmul+0x3fc>
    1262:	f000 fabd 	bl	17e0 <__clzsi2>
    1266:	2827      	cmp	r0, #39	; 0x27
    1268:	dd00      	ble.n	126c <__aeabi_dmul+0x168>
    126a:	e142      	b.n	14f2 <__aeabi_dmul+0x3ee>
    126c:	2128      	movs	r1, #40	; 0x28
    126e:	1a0f      	subs	r7, r1, r0
    1270:	1c02      	adds	r2, r0, #0
    1272:	1c31      	adds	r1, r6, #0
    1274:	3a08      	subs	r2, #8
    1276:	465b      	mov	r3, fp
    1278:	40f9      	lsrs	r1, r7
    127a:	4093      	lsls	r3, r2
    127c:	1c0f      	adds	r7, r1, #0
    127e:	431f      	orrs	r7, r3
    1280:	1c33      	adds	r3, r6, #0
    1282:	4093      	lsls	r3, r2
    1284:	46bb      	mov	fp, r7
    1286:	1c1a      	adds	r2, r3, #0
    1288:	4b16      	ldr	r3, [pc, #88]	; (12e4 <__aeabi_dmul+0x1e0>)
    128a:	1a18      	subs	r0, r3, r0
    128c:	2300      	movs	r3, #0
    128e:	e77a      	b.n	1186 <__aeabi_dmul+0x82>
    1290:	2301      	movs	r3, #1
    1292:	400b      	ands	r3, r1
    1294:	2400      	movs	r4, #0
    1296:	4699      	mov	r9, r3
    1298:	46a0      	mov	r8, r4
    129a:	4b0e      	ldr	r3, [pc, #56]	; (12d4 <__aeabi_dmul+0x1d0>)
    129c:	e797      	b.n	11ce <__aeabi_dmul+0xca>
    129e:	2700      	movs	r7, #0
    12a0:	46bb      	mov	fp, r7
    12a2:	2200      	movs	r2, #0
    12a4:	2301      	movs	r3, #1
    12a6:	e76e      	b.n	1186 <__aeabi_dmul+0x82>
    12a8:	2100      	movs	r1, #0
    12aa:	2404      	movs	r4, #4
    12ac:	468a      	mov	sl, r1
    12ae:	4688      	mov	r8, r1
    12b0:	2501      	movs	r5, #1
    12b2:	e74f      	b.n	1154 <__aeabi_dmul+0x50>
    12b4:	240c      	movs	r4, #12
    12b6:	2503      	movs	r5, #3
    12b8:	e74c      	b.n	1154 <__aeabi_dmul+0x50>
    12ba:	2500      	movs	r5, #0
    12bc:	2480      	movs	r4, #128	; 0x80
    12be:	46a9      	mov	r9, r5
    12c0:	0324      	lsls	r4, r4, #12
    12c2:	46a8      	mov	r8, r5
    12c4:	4b03      	ldr	r3, [pc, #12]	; (12d4 <__aeabi_dmul+0x1d0>)
    12c6:	e782      	b.n	11ce <__aeabi_dmul+0xca>
    12c8:	46da      	mov	sl, fp
    12ca:	4690      	mov	r8, r2
    12cc:	9903      	ldr	r1, [sp, #12]
    12ce:	1c1d      	adds	r5, r3, #0
    12d0:	e76f      	b.n	11b2 <__aeabi_dmul+0xae>
    12d2:	46c0      	nop			; (mov r8, r8)
    12d4:	000007ff 	.word	0x000007ff
    12d8:	fffffc01 	.word	0xfffffc01
    12dc:	00003a88 	.word	0x00003a88
    12e0:	800fffff 	.word	0x800fffff
    12e4:	fffffc0d 	.word	0xfffffc0d
    12e8:	9f02      	ldr	r7, [sp, #8]
    12ea:	0c16      	lsrs	r6, r2, #16
    12ec:	1838      	adds	r0, r7, r0
    12ee:	9004      	str	r0, [sp, #16]
    12f0:	4640      	mov	r0, r8
    12f2:	0c07      	lsrs	r7, r0, #16
    12f4:	0400      	lsls	r0, r0, #16
    12f6:	0c00      	lsrs	r0, r0, #16
    12f8:	0412      	lsls	r2, r2, #16
    12fa:	0c12      	lsrs	r2, r2, #16
    12fc:	1c03      	adds	r3, r0, #0
    12fe:	4353      	muls	r3, r2
    1300:	1c04      	adds	r4, r0, #0
    1302:	1c3d      	adds	r5, r7, #0
    1304:	4374      	muls	r4, r6
    1306:	4355      	muls	r5, r2
    1308:	4698      	mov	r8, r3
    130a:	1c3b      	adds	r3, r7, #0
    130c:	4373      	muls	r3, r6
    130e:	1964      	adds	r4, r4, r5
    1310:	46a4      	mov	ip, r4
    1312:	4644      	mov	r4, r8
    1314:	9302      	str	r3, [sp, #8]
    1316:	0c23      	lsrs	r3, r4, #16
    1318:	4463      	add	r3, ip
    131a:	429d      	cmp	r5, r3
    131c:	d904      	bls.n	1328 <__aeabi_dmul+0x224>
    131e:	9d02      	ldr	r5, [sp, #8]
    1320:	2480      	movs	r4, #128	; 0x80
    1322:	0264      	lsls	r4, r4, #9
    1324:	192d      	adds	r5, r5, r4
    1326:	9502      	str	r5, [sp, #8]
    1328:	0c1d      	lsrs	r5, r3, #16
    132a:	9503      	str	r5, [sp, #12]
    132c:	4645      	mov	r5, r8
    132e:	042c      	lsls	r4, r5, #16
    1330:	041b      	lsls	r3, r3, #16
    1332:	0c24      	lsrs	r4, r4, #16
    1334:	191c      	adds	r4, r3, r4
    1336:	9405      	str	r4, [sp, #20]
    1338:	465c      	mov	r4, fp
    133a:	0c23      	lsrs	r3, r4, #16
    133c:	1c05      	adds	r5, r0, #0
    133e:	4358      	muls	r0, r3
    1340:	0424      	lsls	r4, r4, #16
    1342:	0c24      	lsrs	r4, r4, #16
    1344:	4684      	mov	ip, r0
    1346:	1c38      	adds	r0, r7, #0
    1348:	4360      	muls	r0, r4
    134a:	4365      	muls	r5, r4
    134c:	435f      	muls	r7, r3
    134e:	4681      	mov	r9, r0
    1350:	44cc      	add	ip, r9
    1352:	0c28      	lsrs	r0, r5, #16
    1354:	4460      	add	r0, ip
    1356:	46bb      	mov	fp, r7
    1358:	4581      	cmp	r9, r0
    135a:	d902      	bls.n	1362 <__aeabi_dmul+0x25e>
    135c:	2780      	movs	r7, #128	; 0x80
    135e:	027f      	lsls	r7, r7, #9
    1360:	44bb      	add	fp, r7
    1362:	042d      	lsls	r5, r5, #16
    1364:	0c07      	lsrs	r7, r0, #16
    1366:	0c2d      	lsrs	r5, r5, #16
    1368:	0400      	lsls	r0, r0, #16
    136a:	1940      	adds	r0, r0, r5
    136c:	4655      	mov	r5, sl
    136e:	46bc      	mov	ip, r7
    1370:	042f      	lsls	r7, r5, #16
    1372:	44e3      	add	fp, ip
    1374:	4684      	mov	ip, r0
    1376:	0c28      	lsrs	r0, r5, #16
    1378:	0c3d      	lsrs	r5, r7, #16
    137a:	1c2f      	adds	r7, r5, #0
    137c:	4357      	muls	r7, r2
    137e:	46b8      	mov	r8, r7
    1380:	1c2f      	adds	r7, r5, #0
    1382:	4377      	muls	r7, r6
    1384:	4342      	muls	r2, r0
    1386:	46b9      	mov	r9, r7
    1388:	4647      	mov	r7, r8
    138a:	0c3f      	lsrs	r7, r7, #16
    138c:	4491      	add	r9, r2
    138e:	46ba      	mov	sl, r7
    1390:	44d1      	add	r9, sl
    1392:	4346      	muls	r6, r0
    1394:	454a      	cmp	r2, r9
    1396:	d902      	bls.n	139e <__aeabi_dmul+0x29a>
    1398:	2280      	movs	r2, #128	; 0x80
    139a:	0252      	lsls	r2, r2, #9
    139c:	18b6      	adds	r6, r6, r2
    139e:	464f      	mov	r7, r9
    13a0:	0c3a      	lsrs	r2, r7, #16
    13a2:	18b6      	adds	r6, r6, r2
    13a4:	043a      	lsls	r2, r7, #16
    13a6:	4647      	mov	r7, r8
    13a8:	043f      	lsls	r7, r7, #16
    13aa:	0c3f      	lsrs	r7, r7, #16
    13ac:	46b8      	mov	r8, r7
    13ae:	1c2f      	adds	r7, r5, #0
    13b0:	4367      	muls	r7, r4
    13b2:	435d      	muls	r5, r3
    13b4:	4344      	muls	r4, r0
    13b6:	4358      	muls	r0, r3
    13b8:	1965      	adds	r5, r4, r5
    13ba:	9001      	str	r0, [sp, #4]
    13bc:	0c38      	lsrs	r0, r7, #16
    13be:	182d      	adds	r5, r5, r0
    13c0:	4442      	add	r2, r8
    13c2:	46b8      	mov	r8, r7
    13c4:	42ac      	cmp	r4, r5
    13c6:	d904      	bls.n	13d2 <__aeabi_dmul+0x2ce>
    13c8:	9801      	ldr	r0, [sp, #4]
    13ca:	2380      	movs	r3, #128	; 0x80
    13cc:	025b      	lsls	r3, r3, #9
    13ce:	18c0      	adds	r0, r0, r3
    13d0:	9001      	str	r0, [sp, #4]
    13d2:	9c03      	ldr	r4, [sp, #12]
    13d4:	9f02      	ldr	r7, [sp, #8]
    13d6:	1c20      	adds	r0, r4, #0
    13d8:	4460      	add	r0, ip
    13da:	19c0      	adds	r0, r0, r7
    13dc:	4560      	cmp	r0, ip
    13de:	41a4      	sbcs	r4, r4
    13e0:	4647      	mov	r7, r8
    13e2:	4264      	negs	r4, r4
    13e4:	46a4      	mov	ip, r4
    13e6:	042b      	lsls	r3, r5, #16
    13e8:	043c      	lsls	r4, r7, #16
    13ea:	4699      	mov	r9, r3
    13ec:	0c24      	lsrs	r4, r4, #16
    13ee:	444c      	add	r4, r9
    13f0:	46a0      	mov	r8, r4
    13f2:	44d8      	add	r8, fp
    13f4:	1880      	adds	r0, r0, r2
    13f6:	46c2      	mov	sl, r8
    13f8:	44e2      	add	sl, ip
    13fa:	4290      	cmp	r0, r2
    13fc:	4192      	sbcs	r2, r2
    13fe:	4657      	mov	r7, sl
    1400:	4252      	negs	r2, r2
    1402:	4691      	mov	r9, r2
    1404:	19f2      	adds	r2, r6, r7
    1406:	45e2      	cmp	sl, ip
    1408:	41bf      	sbcs	r7, r7
    140a:	427f      	negs	r7, r7
    140c:	464b      	mov	r3, r9
    140e:	46bc      	mov	ip, r7
    1410:	45d8      	cmp	r8, fp
    1412:	41bf      	sbcs	r7, r7
    1414:	18d4      	adds	r4, r2, r3
    1416:	427f      	negs	r7, r7
    1418:	4663      	mov	r3, ip
    141a:	431f      	orrs	r7, r3
    141c:	0c2d      	lsrs	r5, r5, #16
    141e:	197f      	adds	r7, r7, r5
    1420:	42b2      	cmp	r2, r6
    1422:	4192      	sbcs	r2, r2
    1424:	454c      	cmp	r4, r9
    1426:	41ad      	sbcs	r5, r5
    1428:	4252      	negs	r2, r2
    142a:	426d      	negs	r5, r5
    142c:	4315      	orrs	r5, r2
    142e:	9e01      	ldr	r6, [sp, #4]
    1430:	197d      	adds	r5, r7, r5
    1432:	19ab      	adds	r3, r5, r6
    1434:	0de2      	lsrs	r2, r4, #23
    1436:	025b      	lsls	r3, r3, #9
    1438:	9f05      	ldr	r7, [sp, #20]
    143a:	4313      	orrs	r3, r2
    143c:	0242      	lsls	r2, r0, #9
    143e:	433a      	orrs	r2, r7
    1440:	469a      	mov	sl, r3
    1442:	1e53      	subs	r3, r2, #1
    1444:	419a      	sbcs	r2, r3
    1446:	0dc3      	lsrs	r3, r0, #23
    1448:	1c10      	adds	r0, r2, #0
    144a:	4318      	orrs	r0, r3
    144c:	0264      	lsls	r4, r4, #9
    144e:	4320      	orrs	r0, r4
    1450:	4680      	mov	r8, r0
    1452:	4650      	mov	r0, sl
    1454:	01c0      	lsls	r0, r0, #7
    1456:	d50d      	bpl.n	1474 <__aeabi_dmul+0x370>
    1458:	4645      	mov	r5, r8
    145a:	2201      	movs	r2, #1
    145c:	4656      	mov	r6, sl
    145e:	9c04      	ldr	r4, [sp, #16]
    1460:	086b      	lsrs	r3, r5, #1
    1462:	402a      	ands	r2, r5
    1464:	431a      	orrs	r2, r3
    1466:	07f3      	lsls	r3, r6, #31
    1468:	3401      	adds	r4, #1
    146a:	431a      	orrs	r2, r3
    146c:	0876      	lsrs	r6, r6, #1
    146e:	9404      	str	r4, [sp, #16]
    1470:	4690      	mov	r8, r2
    1472:	46b2      	mov	sl, r6
    1474:	9e04      	ldr	r6, [sp, #16]
    1476:	4f63      	ldr	r7, [pc, #396]	; (1604 <__aeabi_dmul+0x500>)
    1478:	19f3      	adds	r3, r6, r7
    147a:	2b00      	cmp	r3, #0
    147c:	dd61      	ble.n	1542 <__aeabi_dmul+0x43e>
    147e:	4640      	mov	r0, r8
    1480:	0740      	lsls	r0, r0, #29
    1482:	d00b      	beq.n	149c <__aeabi_dmul+0x398>
    1484:	220f      	movs	r2, #15
    1486:	4644      	mov	r4, r8
    1488:	4022      	ands	r2, r4
    148a:	2a04      	cmp	r2, #4
    148c:	d006      	beq.n	149c <__aeabi_dmul+0x398>
    148e:	4642      	mov	r2, r8
    1490:	3204      	adds	r2, #4
    1492:	4542      	cmp	r2, r8
    1494:	4180      	sbcs	r0, r0
    1496:	4240      	negs	r0, r0
    1498:	4482      	add	sl, r0
    149a:	4690      	mov	r8, r2
    149c:	4655      	mov	r5, sl
    149e:	01ed      	lsls	r5, r5, #7
    14a0:	d507      	bpl.n	14b2 <__aeabi_dmul+0x3ae>
    14a2:	4b59      	ldr	r3, [pc, #356]	; (1608 <__aeabi_dmul+0x504>)
    14a4:	4656      	mov	r6, sl
    14a6:	9f04      	ldr	r7, [sp, #16]
    14a8:	2080      	movs	r0, #128	; 0x80
    14aa:	401e      	ands	r6, r3
    14ac:	00c0      	lsls	r0, r0, #3
    14ae:	46b2      	mov	sl, r6
    14b0:	183b      	adds	r3, r7, r0
    14b2:	4a56      	ldr	r2, [pc, #344]	; (160c <__aeabi_dmul+0x508>)
    14b4:	4293      	cmp	r3, r2
    14b6:	dd00      	ble.n	14ba <__aeabi_dmul+0x3b6>
    14b8:	e6ea      	b.n	1290 <__aeabi_dmul+0x18c>
    14ba:	4644      	mov	r4, r8
    14bc:	4655      	mov	r5, sl
    14be:	08e2      	lsrs	r2, r4, #3
    14c0:	0768      	lsls	r0, r5, #29
    14c2:	4310      	orrs	r0, r2
    14c4:	2201      	movs	r2, #1
    14c6:	026c      	lsls	r4, r5, #9
    14c8:	055b      	lsls	r3, r3, #21
    14ca:	400a      	ands	r2, r1
    14cc:	4680      	mov	r8, r0
    14ce:	0b24      	lsrs	r4, r4, #12
    14d0:	0d5b      	lsrs	r3, r3, #21
    14d2:	4691      	mov	r9, r2
    14d4:	e67b      	b.n	11ce <__aeabi_dmul+0xca>
    14d6:	46da      	mov	sl, fp
    14d8:	4690      	mov	r8, r2
    14da:	1c1d      	adds	r5, r3, #0
    14dc:	e669      	b.n	11b2 <__aeabi_dmul+0xae>
    14de:	2480      	movs	r4, #128	; 0x80
    14e0:	0324      	lsls	r4, r4, #12
    14e2:	4657      	mov	r7, sl
    14e4:	4227      	tst	r7, r4
    14e6:	d11c      	bne.n	1522 <__aeabi_dmul+0x41e>
    14e8:	433c      	orrs	r4, r7
    14ea:	0324      	lsls	r4, r4, #12
    14ec:	0b24      	lsrs	r4, r4, #12
    14ee:	4b48      	ldr	r3, [pc, #288]	; (1610 <__aeabi_dmul+0x50c>)
    14f0:	e66d      	b.n	11ce <__aeabi_dmul+0xca>
    14f2:	1c03      	adds	r3, r0, #0
    14f4:	3b28      	subs	r3, #40	; 0x28
    14f6:	1c31      	adds	r1, r6, #0
    14f8:	4099      	lsls	r1, r3
    14fa:	468b      	mov	fp, r1
    14fc:	2200      	movs	r2, #0
    14fe:	e6c3      	b.n	1288 <__aeabi_dmul+0x184>
    1500:	1c30      	adds	r0, r6, #0
    1502:	f000 f96d 	bl	17e0 <__clzsi2>
    1506:	3020      	adds	r0, #32
    1508:	e6ad      	b.n	1266 <__aeabi_dmul+0x162>
    150a:	3b28      	subs	r3, #40	; 0x28
    150c:	1c21      	adds	r1, r4, #0
    150e:	4099      	lsls	r1, r3
    1510:	2200      	movs	r2, #0
    1512:	468a      	mov	sl, r1
    1514:	4690      	mov	r8, r2
    1516:	e68e      	b.n	1236 <__aeabi_dmul+0x132>
    1518:	1c20      	adds	r0, r4, #0
    151a:	f000 f961 	bl	17e0 <__clzsi2>
    151e:	3020      	adds	r0, #32
    1520:	e678      	b.n	1214 <__aeabi_dmul+0x110>
    1522:	4658      	mov	r0, fp
    1524:	4220      	tst	r0, r4
    1526:	d107      	bne.n	1538 <__aeabi_dmul+0x434>
    1528:	4304      	orrs	r4, r0
    152a:	9903      	ldr	r1, [sp, #12]
    152c:	0324      	lsls	r4, r4, #12
    152e:	0b24      	lsrs	r4, r4, #12
    1530:	4689      	mov	r9, r1
    1532:	4690      	mov	r8, r2
    1534:	4b36      	ldr	r3, [pc, #216]	; (1610 <__aeabi_dmul+0x50c>)
    1536:	e64a      	b.n	11ce <__aeabi_dmul+0xca>
    1538:	433c      	orrs	r4, r7
    153a:	0324      	lsls	r4, r4, #12
    153c:	0b24      	lsrs	r4, r4, #12
    153e:	4b34      	ldr	r3, [pc, #208]	; (1610 <__aeabi_dmul+0x50c>)
    1540:	e645      	b.n	11ce <__aeabi_dmul+0xca>
    1542:	4b34      	ldr	r3, [pc, #208]	; (1614 <__aeabi_dmul+0x510>)
    1544:	9e04      	ldr	r6, [sp, #16]
    1546:	1b9b      	subs	r3, r3, r6
    1548:	2b38      	cmp	r3, #56	; 0x38
    154a:	dd06      	ble.n	155a <__aeabi_dmul+0x456>
    154c:	2301      	movs	r3, #1
    154e:	400b      	ands	r3, r1
    1550:	2400      	movs	r4, #0
    1552:	4699      	mov	r9, r3
    1554:	46a0      	mov	r8, r4
    1556:	2300      	movs	r3, #0
    1558:	e639      	b.n	11ce <__aeabi_dmul+0xca>
    155a:	2b1f      	cmp	r3, #31
    155c:	dc25      	bgt.n	15aa <__aeabi_dmul+0x4a6>
    155e:	9c04      	ldr	r4, [sp, #16]
    1560:	4d2d      	ldr	r5, [pc, #180]	; (1618 <__aeabi_dmul+0x514>)
    1562:	4646      	mov	r6, r8
    1564:	1960      	adds	r0, r4, r5
    1566:	4652      	mov	r2, sl
    1568:	4644      	mov	r4, r8
    156a:	4086      	lsls	r6, r0
    156c:	40dc      	lsrs	r4, r3
    156e:	4082      	lsls	r2, r0
    1570:	4657      	mov	r7, sl
    1572:	1c30      	adds	r0, r6, #0
    1574:	4322      	orrs	r2, r4
    1576:	40df      	lsrs	r7, r3
    1578:	1e44      	subs	r4, r0, #1
    157a:	41a0      	sbcs	r0, r4
    157c:	4302      	orrs	r2, r0
    157e:	1c3b      	adds	r3, r7, #0
    1580:	0754      	lsls	r4, r2, #29
    1582:	d009      	beq.n	1598 <__aeabi_dmul+0x494>
    1584:	200f      	movs	r0, #15
    1586:	4010      	ands	r0, r2
    1588:	2804      	cmp	r0, #4
    158a:	d005      	beq.n	1598 <__aeabi_dmul+0x494>
    158c:	1d10      	adds	r0, r2, #4
    158e:	4290      	cmp	r0, r2
    1590:	4192      	sbcs	r2, r2
    1592:	4252      	negs	r2, r2
    1594:	189b      	adds	r3, r3, r2
    1596:	1c02      	adds	r2, r0, #0
    1598:	021d      	lsls	r5, r3, #8
    159a:	d51a      	bpl.n	15d2 <__aeabi_dmul+0x4ce>
    159c:	2301      	movs	r3, #1
    159e:	400b      	ands	r3, r1
    15a0:	2400      	movs	r4, #0
    15a2:	4699      	mov	r9, r3
    15a4:	46a0      	mov	r8, r4
    15a6:	2301      	movs	r3, #1
    15a8:	e611      	b.n	11ce <__aeabi_dmul+0xca>
    15aa:	481c      	ldr	r0, [pc, #112]	; (161c <__aeabi_dmul+0x518>)
    15ac:	9c04      	ldr	r4, [sp, #16]
    15ae:	4655      	mov	r5, sl
    15b0:	1b00      	subs	r0, r0, r4
    15b2:	40c5      	lsrs	r5, r0
    15b4:	1c28      	adds	r0, r5, #0
    15b6:	2b20      	cmp	r3, #32
    15b8:	d016      	beq.n	15e8 <__aeabi_dmul+0x4e4>
    15ba:	4e19      	ldr	r6, [pc, #100]	; (1620 <__aeabi_dmul+0x51c>)
    15bc:	4657      	mov	r7, sl
    15be:	19a2      	adds	r2, r4, r6
    15c0:	4097      	lsls	r7, r2
    15c2:	1c3a      	adds	r2, r7, #0
    15c4:	4643      	mov	r3, r8
    15c6:	431a      	orrs	r2, r3
    15c8:	1e53      	subs	r3, r2, #1
    15ca:	419a      	sbcs	r2, r3
    15cc:	4302      	orrs	r2, r0
    15ce:	2300      	movs	r3, #0
    15d0:	e7d6      	b.n	1580 <__aeabi_dmul+0x47c>
    15d2:	0758      	lsls	r0, r3, #29
    15d4:	025b      	lsls	r3, r3, #9
    15d6:	08d2      	lsrs	r2, r2, #3
    15d8:	0b1c      	lsrs	r4, r3, #12
    15da:	2301      	movs	r3, #1
    15dc:	400b      	ands	r3, r1
    15de:	4310      	orrs	r0, r2
    15e0:	4699      	mov	r9, r3
    15e2:	4680      	mov	r8, r0
    15e4:	2300      	movs	r3, #0
    15e6:	e5f2      	b.n	11ce <__aeabi_dmul+0xca>
    15e8:	2200      	movs	r2, #0
    15ea:	e7eb      	b.n	15c4 <__aeabi_dmul+0x4c0>
    15ec:	2480      	movs	r4, #128	; 0x80
    15ee:	0324      	lsls	r4, r4, #12
    15f0:	4650      	mov	r0, sl
    15f2:	2301      	movs	r3, #1
    15f4:	4304      	orrs	r4, r0
    15f6:	4019      	ands	r1, r3
    15f8:	0324      	lsls	r4, r4, #12
    15fa:	0b24      	lsrs	r4, r4, #12
    15fc:	4689      	mov	r9, r1
    15fe:	4b04      	ldr	r3, [pc, #16]	; (1610 <__aeabi_dmul+0x50c>)
    1600:	e5e5      	b.n	11ce <__aeabi_dmul+0xca>
    1602:	46c0      	nop			; (mov r8, r8)
    1604:	000003ff 	.word	0x000003ff
    1608:	feffffff 	.word	0xfeffffff
    160c:	000007fe 	.word	0x000007fe
    1610:	000007ff 	.word	0x000007ff
    1614:	fffffc02 	.word	0xfffffc02
    1618:	0000041e 	.word	0x0000041e
    161c:	fffffbe2 	.word	0xfffffbe2
    1620:	0000043e 	.word	0x0000043e

00001624 <__aeabi_f2d>:
__aeabi_f2d():
    1624:	0043      	lsls	r3, r0, #1
    1626:	0e1b      	lsrs	r3, r3, #24
    1628:	1c5a      	adds	r2, r3, #1
    162a:	0241      	lsls	r1, r0, #9
    162c:	b2d2      	uxtb	r2, r2
    162e:	b570      	push	{r4, r5, r6, lr}
    1630:	0a4c      	lsrs	r4, r1, #9
    1632:	0fc5      	lsrs	r5, r0, #31
    1634:	2a01      	cmp	r2, #1
    1636:	dd17      	ble.n	1668 <__aeabi_f2d+0x44>
    1638:	22e0      	movs	r2, #224	; 0xe0
    163a:	0092      	lsls	r2, r2, #2
    163c:	0764      	lsls	r4, r4, #29
    163e:	0b09      	lsrs	r1, r1, #12
    1640:	1898      	adds	r0, r3, r2
    1642:	2200      	movs	r2, #0
    1644:	2300      	movs	r3, #0
    1646:	0d1e      	lsrs	r6, r3, #20
    1648:	1c22      	adds	r2, r4, #0
    164a:	0534      	lsls	r4, r6, #20
    164c:	430c      	orrs	r4, r1
    164e:	491b      	ldr	r1, [pc, #108]	; (16bc <__aeabi_f2d+0x98>)
    1650:	0540      	lsls	r0, r0, #21
    1652:	0840      	lsrs	r0, r0, #1
    1654:	4021      	ands	r1, r4
    1656:	4301      	orrs	r1, r0
    1658:	0049      	lsls	r1, r1, #1
    165a:	0849      	lsrs	r1, r1, #1
    165c:	07ed      	lsls	r5, r5, #31
    165e:	1c0b      	adds	r3, r1, #0
    1660:	432b      	orrs	r3, r5
    1662:	1c10      	adds	r0, r2, #0
    1664:	1c19      	adds	r1, r3, #0
    1666:	bd70      	pop	{r4, r5, r6, pc}
    1668:	2b00      	cmp	r3, #0
    166a:	d115      	bne.n	1698 <__aeabi_f2d+0x74>
    166c:	2c00      	cmp	r4, #0
    166e:	d01c      	beq.n	16aa <__aeabi_f2d+0x86>
    1670:	1c20      	adds	r0, r4, #0
    1672:	f000 f8b5 	bl	17e0 <__clzsi2>
    1676:	280a      	cmp	r0, #10
    1678:	dc1a      	bgt.n	16b0 <__aeabi_f2d+0x8c>
    167a:	210b      	movs	r1, #11
    167c:	1a09      	subs	r1, r1, r0
    167e:	1c23      	adds	r3, r4, #0
    1680:	40cb      	lsrs	r3, r1
    1682:	1c19      	adds	r1, r3, #0
    1684:	1c03      	adds	r3, r0, #0
    1686:	3315      	adds	r3, #21
    1688:	409c      	lsls	r4, r3
    168a:	4b0d      	ldr	r3, [pc, #52]	; (16c0 <__aeabi_f2d+0x9c>)
    168c:	0309      	lsls	r1, r1, #12
    168e:	1a18      	subs	r0, r3, r0
    1690:	0540      	lsls	r0, r0, #21
    1692:	0b09      	lsrs	r1, r1, #12
    1694:	0d40      	lsrs	r0, r0, #21
    1696:	e7d4      	b.n	1642 <__aeabi_f2d+0x1e>
    1698:	2c00      	cmp	r4, #0
    169a:	d003      	beq.n	16a4 <__aeabi_f2d+0x80>
    169c:	0764      	lsls	r4, r4, #29
    169e:	0b09      	lsrs	r1, r1, #12
    16a0:	4808      	ldr	r0, [pc, #32]	; (16c4 <__aeabi_f2d+0xa0>)
    16a2:	e7ce      	b.n	1642 <__aeabi_f2d+0x1e>
    16a4:	4807      	ldr	r0, [pc, #28]	; (16c4 <__aeabi_f2d+0xa0>)
    16a6:	2100      	movs	r1, #0
    16a8:	e7cb      	b.n	1642 <__aeabi_f2d+0x1e>
    16aa:	2000      	movs	r0, #0
    16ac:	2100      	movs	r1, #0
    16ae:	e7c8      	b.n	1642 <__aeabi_f2d+0x1e>
    16b0:	1c01      	adds	r1, r0, #0
    16b2:	390b      	subs	r1, #11
    16b4:	408c      	lsls	r4, r1
    16b6:	1c21      	adds	r1, r4, #0
    16b8:	2400      	movs	r4, #0
    16ba:	e7e6      	b.n	168a <__aeabi_f2d+0x66>
    16bc:	800fffff 	.word	0x800fffff
    16c0:	00000389 	.word	0x00000389
    16c4:	000007ff 	.word	0x000007ff

000016c8 <__aeabi_d2f>:
__aeabi_d2f():
    16c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    16ca:	004b      	lsls	r3, r1, #1
    16cc:	030d      	lsls	r5, r1, #12
    16ce:	0f42      	lsrs	r2, r0, #29
    16d0:	0d5b      	lsrs	r3, r3, #21
    16d2:	0a6d      	lsrs	r5, r5, #9
    16d4:	4315      	orrs	r5, r2
    16d6:	1c5a      	adds	r2, r3, #1
    16d8:	0552      	lsls	r2, r2, #21
    16da:	0fcc      	lsrs	r4, r1, #31
    16dc:	00c6      	lsls	r6, r0, #3
    16de:	0d52      	lsrs	r2, r2, #21
    16e0:	2a01      	cmp	r2, #1
    16e2:	dd27      	ble.n	1734 <__aeabi_d2f+0x6c>
    16e4:	4f39      	ldr	r7, [pc, #228]	; (17cc <__aeabi_d2f+0x104>)
    16e6:	19da      	adds	r2, r3, r7
    16e8:	2afe      	cmp	r2, #254	; 0xfe
    16ea:	dc1a      	bgt.n	1722 <__aeabi_d2f+0x5a>
    16ec:	2a00      	cmp	r2, #0
    16ee:	dd35      	ble.n	175c <__aeabi_d2f+0x94>
    16f0:	0180      	lsls	r0, r0, #6
    16f2:	00ed      	lsls	r5, r5, #3
    16f4:	1e43      	subs	r3, r0, #1
    16f6:	4198      	sbcs	r0, r3
    16f8:	4328      	orrs	r0, r5
    16fa:	0f76      	lsrs	r6, r6, #29
    16fc:	4330      	orrs	r0, r6
    16fe:	0743      	lsls	r3, r0, #29
    1700:	d004      	beq.n	170c <__aeabi_d2f+0x44>
    1702:	230f      	movs	r3, #15
    1704:	4003      	ands	r3, r0
    1706:	2b04      	cmp	r3, #4
    1708:	d000      	beq.n	170c <__aeabi_d2f+0x44>
    170a:	3004      	adds	r0, #4
    170c:	2180      	movs	r1, #128	; 0x80
    170e:	04c9      	lsls	r1, r1, #19
    1710:	4001      	ands	r1, r0
    1712:	d027      	beq.n	1764 <__aeabi_d2f+0x9c>
    1714:	3201      	adds	r2, #1
    1716:	2aff      	cmp	r2, #255	; 0xff
    1718:	d01d      	beq.n	1756 <__aeabi_d2f+0x8e>
    171a:	0183      	lsls	r3, r0, #6
    171c:	0a5b      	lsrs	r3, r3, #9
    171e:	b2d1      	uxtb	r1, r2
    1720:	e001      	b.n	1726 <__aeabi_d2f+0x5e>
    1722:	21ff      	movs	r1, #255	; 0xff
    1724:	2300      	movs	r3, #0
    1726:	0258      	lsls	r0, r3, #9
    1728:	05c9      	lsls	r1, r1, #23
    172a:	0a40      	lsrs	r0, r0, #9
    172c:	07e4      	lsls	r4, r4, #31
    172e:	4308      	orrs	r0, r1
    1730:	4320      	orrs	r0, r4
    1732:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1734:	2b00      	cmp	r3, #0
    1736:	d106      	bne.n	1746 <__aeabi_d2f+0x7e>
    1738:	4335      	orrs	r5, r6
    173a:	d111      	bne.n	1760 <__aeabi_d2f+0x98>
    173c:	2100      	movs	r1, #0
    173e:	2000      	movs	r0, #0
    1740:	0243      	lsls	r3, r0, #9
    1742:	0a5b      	lsrs	r3, r3, #9
    1744:	e7ef      	b.n	1726 <__aeabi_d2f+0x5e>
    1746:	432e      	orrs	r6, r5
    1748:	d0eb      	beq.n	1722 <__aeabi_d2f+0x5a>
    174a:	2080      	movs	r0, #128	; 0x80
    174c:	00ed      	lsls	r5, r5, #3
    174e:	0480      	lsls	r0, r0, #18
    1750:	4328      	orrs	r0, r5
    1752:	22ff      	movs	r2, #255	; 0xff
    1754:	e7d3      	b.n	16fe <__aeabi_d2f+0x36>
    1756:	21ff      	movs	r1, #255	; 0xff
    1758:	2300      	movs	r3, #0
    175a:	e7e4      	b.n	1726 <__aeabi_d2f+0x5e>
    175c:	3217      	adds	r2, #23
    175e:	da0d      	bge.n	177c <__aeabi_d2f+0xb4>
    1760:	2005      	movs	r0, #5
    1762:	2200      	movs	r2, #0
    1764:	08c0      	lsrs	r0, r0, #3
    1766:	b2d1      	uxtb	r1, r2
    1768:	2aff      	cmp	r2, #255	; 0xff
    176a:	d1e9      	bne.n	1740 <__aeabi_d2f+0x78>
    176c:	2800      	cmp	r0, #0
    176e:	d0d9      	beq.n	1724 <__aeabi_d2f+0x5c>
    1770:	2380      	movs	r3, #128	; 0x80
    1772:	03db      	lsls	r3, r3, #15
    1774:	4303      	orrs	r3, r0
    1776:	025b      	lsls	r3, r3, #9
    1778:	0a5b      	lsrs	r3, r3, #9
    177a:	e7d4      	b.n	1726 <__aeabi_d2f+0x5e>
    177c:	2280      	movs	r2, #128	; 0x80
    177e:	4914      	ldr	r1, [pc, #80]	; (17d0 <__aeabi_d2f+0x108>)
    1780:	0412      	lsls	r2, r2, #16
    1782:	4315      	orrs	r5, r2
    1784:	1ac9      	subs	r1, r1, r3
    1786:	291f      	cmp	r1, #31
    1788:	dc0d      	bgt.n	17a6 <__aeabi_d2f+0xde>
    178a:	4a12      	ldr	r2, [pc, #72]	; (17d4 <__aeabi_d2f+0x10c>)
    178c:	1c37      	adds	r7, r6, #0
    178e:	189b      	adds	r3, r3, r2
    1790:	1c28      	adds	r0, r5, #0
    1792:	409f      	lsls	r7, r3
    1794:	4098      	lsls	r0, r3
    1796:	1c3b      	adds	r3, r7, #0
    1798:	1e5a      	subs	r2, r3, #1
    179a:	4193      	sbcs	r3, r2
    179c:	4318      	orrs	r0, r3
    179e:	40ce      	lsrs	r6, r1
    17a0:	4330      	orrs	r0, r6
    17a2:	2200      	movs	r2, #0
    17a4:	e7ab      	b.n	16fe <__aeabi_d2f+0x36>
    17a6:	4f0c      	ldr	r7, [pc, #48]	; (17d8 <__aeabi_d2f+0x110>)
    17a8:	1c2a      	adds	r2, r5, #0
    17aa:	1aff      	subs	r7, r7, r3
    17ac:	40fa      	lsrs	r2, r7
    17ae:	1c17      	adds	r7, r2, #0
    17b0:	2920      	cmp	r1, #32
    17b2:	d009      	beq.n	17c8 <__aeabi_d2f+0x100>
    17b4:	4a09      	ldr	r2, [pc, #36]	; (17dc <__aeabi_d2f+0x114>)
    17b6:	1898      	adds	r0, r3, r2
    17b8:	4085      	lsls	r5, r0
    17ba:	1c28      	adds	r0, r5, #0
    17bc:	4330      	orrs	r0, r6
    17be:	1e46      	subs	r6, r0, #1
    17c0:	41b0      	sbcs	r0, r6
    17c2:	4338      	orrs	r0, r7
    17c4:	2200      	movs	r2, #0
    17c6:	e79a      	b.n	16fe <__aeabi_d2f+0x36>
    17c8:	2000      	movs	r0, #0
    17ca:	e7f7      	b.n	17bc <__aeabi_d2f+0xf4>
    17cc:	fffffc80 	.word	0xfffffc80
    17d0:	0000039e 	.word	0x0000039e
    17d4:	fffffc82 	.word	0xfffffc82
    17d8:	0000037e 	.word	0x0000037e
    17dc:	fffffca2 	.word	0xfffffca2

000017e0 <__clzsi2>:
__clzsi2():
    17e0:	211c      	movs	r1, #28
    17e2:	2301      	movs	r3, #1
    17e4:	041b      	lsls	r3, r3, #16
    17e6:	4298      	cmp	r0, r3
    17e8:	d301      	bcc.n	17ee <__clzsi2+0xe>
    17ea:	0c00      	lsrs	r0, r0, #16
    17ec:	3910      	subs	r1, #16
    17ee:	0a1b      	lsrs	r3, r3, #8
    17f0:	4298      	cmp	r0, r3
    17f2:	d301      	bcc.n	17f8 <__clzsi2+0x18>
    17f4:	0a00      	lsrs	r0, r0, #8
    17f6:	3908      	subs	r1, #8
    17f8:	091b      	lsrs	r3, r3, #4
    17fa:	4298      	cmp	r0, r3
    17fc:	d301      	bcc.n	1802 <__clzsi2+0x22>
    17fe:	0900      	lsrs	r0, r0, #4
    1800:	3904      	subs	r1, #4
    1802:	a202      	add	r2, pc, #8	; (adr r2, 180c <__clzsi2+0x2c>)
    1804:	5c10      	ldrb	r0, [r2, r0]
    1806:	1840      	adds	r0, r0, r1
    1808:	4770      	bx	lr
    180a:	46c0      	nop			; (mov r8, r8)
    180c:	02020304 	.word	0x02020304
    1810:	01010101 	.word	0x01010101
	...

0000181c <updateBatteryLevel>:
updateBatteryLevel():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:11
 */

#include "BatteryController.h"

void updateBatteryLevel()
{
    181c:	b580      	push	{r7, lr}
    181e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:12
	handlingPowerUpdate = TRUE;
    1820:	4b07      	ldr	r3, [pc, #28]	; (1840 <updateBatteryLevel+0x24>)
    1822:	2201      	movs	r2, #1
    1824:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:15

	// Converts the voltage vOut of PTE29 pin
	AD_Converter_MeasureChan(FALSE, 1);
    1826:	2000      	movs	r0, #0
    1828:	2101      	movs	r1, #1
    182a:	f000 fcd5 	bl	21d8 <AD_Converter_MeasureChan>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:18

	// Waits the end of conversion
	while (handlingPowerUpdate);
    182e:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:18 (discriminator 1)
    1830:	4b03      	ldr	r3, [pc, #12]	; (1840 <updateBatteryLevel+0x24>)
    1832:	781b      	ldrb	r3, [r3, #0]
    1834:	b2db      	uxtb	r3, r3
    1836:	2b00      	cmp	r3, #0
    1838:	d1fa      	bne.n	1830 <updateBatteryLevel+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:19
}
    183a:	46bd      	mov	sp, r7
    183c:	bd80      	pop	{r7, pc}
    183e:	46c0      	nop			; (mov r8, r8)
    1840:	1ffff1a8 	.word	0x1ffff1a8
$d():
    1844:	00000000 	.word	0x00000000

00001848 <updatePowerState>:
updatePowerState():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:22

void updatePowerState()
{
    1848:	b590      	push	{r4, r7, lr}
    184a:	b085      	sub	sp, #20
    184c:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:27
	unsigned char adcValue;
	float vOut;
	float newVoltage;

	AD_Converter_GetChanValue(1, &adcValue);
    184e:	1cfb      	adds	r3, r7, #3
    1850:	2001      	movs	r0, #1
    1852:	1c19      	adds	r1, r3, #0
    1854:	f000 fcf2 	bl	223c <AD_Converter_GetChanValue>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:30

	// Find the value of vOut
	vOut = (2.87 / 255) * (float) adcValue; // Theoretical value: 3.0
    1858:	1cfb      	adds	r3, r7, #3
    185a:	781b      	ldrb	r3, [r3, #0]
    185c:	1c18      	adds	r0, r3, #0
    185e:	f7ff fabb 	bl	dd8 <__aeabi_ui2f>
    1862:	1c03      	adds	r3, r0, #0
    1864:	1c18      	adds	r0, r3, #0
    1866:	f7ff fedd 	bl	1624 <__aeabi_f2d>
    186a:	1c03      	adds	r3, r0, #0
    186c:	1c0c      	adds	r4, r1, #0
    186e:	1c18      	adds	r0, r3, #0
    1870:	1c21      	adds	r1, r4, #0
    1872:	4b72      	ldr	r3, [pc, #456]	; (1a3c <updatePowerState+0x1f4>)
    1874:	4a70      	ldr	r2, [pc, #448]	; (1a38 <updatePowerState+0x1f0>)
    1876:	f7ff fc45 	bl	1104 <__aeabi_dmul>
    187a:	1c03      	adds	r3, r0, #0
    187c:	1c0c      	adds	r4, r1, #0
    187e:	1c18      	adds	r0, r3, #0
    1880:	1c21      	adds	r1, r4, #0
    1882:	f7ff ff21 	bl	16c8 <__aeabi_d2f>
    1886:	1c03      	adds	r3, r0, #0
    1888:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:34


	// Find the value of batteryLevel (voltage of battery)
	newVoltage = 5.7 * vOut;			// Theoretical value: 57/10
    188a:	68b8      	ldr	r0, [r7, #8]
    188c:	f7ff feca 	bl	1624 <__aeabi_f2d>
    1890:	1c03      	adds	r3, r0, #0
    1892:	1c0c      	adds	r4, r1, #0
    1894:	1c18      	adds	r0, r3, #0
    1896:	1c21      	adds	r1, r4, #0
    1898:	4a69      	ldr	r2, [pc, #420]	; (1a40 <updatePowerState+0x1f8>)
    189a:	4b6a      	ldr	r3, [pc, #424]	; (1a44 <updatePowerState+0x1fc>)
    189c:	f7ff fc32 	bl	1104 <__aeabi_dmul>
    18a0:	1c03      	adds	r3, r0, #0
    18a2:	1c0c      	adds	r4, r1, #0
    18a4:	1c18      	adds	r0, r3, #0
    18a6:	1c21      	adds	r1, r4, #0
    18a8:	f7ff ff0e 	bl	16c8 <__aeabi_d2f>
    18ac:	1c03      	adds	r3, r0, #0
    18ae:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:36

	batteryLevel = (batteryLevel + newVoltage) / 2;
    18b0:	4b6b      	ldr	r3, [pc, #428]	; (1a60 <updatePowerState+0x218>)
    18b2:	681b      	ldr	r3, [r3, #0]
    18b4:	1c18      	adds	r0, r3, #0
    18b6:	6879      	ldr	r1, [r7, #4]
    18b8:	f7fe ff3e 	bl	738 <__aeabi_fadd>
    18bc:	1c03      	adds	r3, r0, #0
    18be:	1c18      	adds	r0, r3, #0
    18c0:	2180      	movs	r1, #128	; 0x80
    18c2:	05c9      	lsls	r1, r1, #23
    18c4:	f7ff f8a4 	bl	a10 <__aeabi_fdiv>
    18c8:	1c03      	adds	r3, r0, #0
    18ca:	1c1a      	adds	r2, r3, #0
    18cc:	4b64      	ldr	r3, [pc, #400]	; (1a60 <updatePowerState+0x218>)
    18ce:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:38

	if (batteryLevel > 7.5)
    18d0:	4b63      	ldr	r3, [pc, #396]	; (1a60 <updatePowerState+0x218>)
    18d2:	681b      	ldr	r3, [r3, #0]
    18d4:	1c18      	adds	r0, r3, #0
    18d6:	4963      	ldr	r1, [pc, #396]	; (1a64 <updatePowerState+0x21c>)
    18d8:	f7fe ff1a 	bl	710 <__aeabi_fcmpgt>
    18dc:	1c03      	adds	r3, r0, #0
    18de:	2b00      	cmp	r3, #0
    18e0:	d014      	beq.n	190c <updatePowerState+0xc4>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:40
	{
		Power_Level1_SetVal();
    18e2:	4b61      	ldr	r3, [pc, #388]	; (1a68 <updatePowerState+0x220>)
    18e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    18e6:	1c18      	adds	r0, r3, #0
    18e8:	f001 f8a0 	bl	2a2c <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:41
		Power_Level2_SetVal();
    18ec:	4b5e      	ldr	r3, [pc, #376]	; (1a68 <updatePowerState+0x220>)
    18ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    18f0:	1c18      	adds	r0, r3, #0
    18f2:	f001 f8f9 	bl	2ae8 <BitIoLdd6_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:42
		Power_Level3_SetVal();
    18f6:	4b5c      	ldr	r3, [pc, #368]	; (1a68 <updatePowerState+0x220>)
    18f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    18fa:	1c18      	adds	r0, r3, #0
    18fc:	f001 f952 	bl	2ba4 <BitIoLdd7_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:43
		Power_Level4_SetVal();
    1900:	4b59      	ldr	r3, [pc, #356]	; (1a68 <updatePowerState+0x220>)
    1902:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    1904:	1c18      	adds	r0, r3, #0
    1906:	f001 f9ab 	bl	2c60 <BitIoLdd8_SetVal>
    190a:	e08c      	b.n	1a26 <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:45
	}
	else if (batteryLevel > 7.2)
    190c:	4b54      	ldr	r3, [pc, #336]	; (1a60 <updatePowerState+0x218>)
    190e:	681b      	ldr	r3, [r3, #0]
    1910:	1c18      	adds	r0, r3, #0
    1912:	f7ff fe87 	bl	1624 <__aeabi_f2d>
    1916:	1c03      	adds	r3, r0, #0
    1918:	1c0c      	adds	r4, r1, #0
    191a:	1c18      	adds	r0, r3, #0
    191c:	1c21      	adds	r1, r4, #0
    191e:	4a4a      	ldr	r2, [pc, #296]	; (1a48 <updatePowerState+0x200>)
    1920:	4b4a      	ldr	r3, [pc, #296]	; (1a4c <updatePowerState+0x204>)
    1922:	f7fe febb 	bl	69c <__aeabi_dcmpgt>
    1926:	1c03      	adds	r3, r0, #0
    1928:	2b00      	cmp	r3, #0
    192a:	d014      	beq.n	1956 <updatePowerState+0x10e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:47
	{
		Power_Level1_SetVal();
    192c:	4b4e      	ldr	r3, [pc, #312]	; (1a68 <updatePowerState+0x220>)
    192e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    1930:	1c18      	adds	r0, r3, #0
    1932:	f001 f87b 	bl	2a2c <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:48
		Power_Level2_SetVal();
    1936:	4b4c      	ldr	r3, [pc, #304]	; (1a68 <updatePowerState+0x220>)
    1938:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    193a:	1c18      	adds	r0, r3, #0
    193c:	f001 f8d4 	bl	2ae8 <BitIoLdd6_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:49
		Power_Level3_SetVal();
    1940:	4b49      	ldr	r3, [pc, #292]	; (1a68 <updatePowerState+0x220>)
    1942:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    1944:	1c18      	adds	r0, r3, #0
    1946:	f001 f92d 	bl	2ba4 <BitIoLdd7_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:50
		Power_Level4_ClrVal();
    194a:	4b47      	ldr	r3, [pc, #284]	; (1a68 <updatePowerState+0x220>)
    194c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    194e:	1c18      	adds	r0, r3, #0
    1950:	f001 f978 	bl	2c44 <BitIoLdd8_ClrVal>
    1954:	e067      	b.n	1a26 <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:53
	}

	else if (batteryLevel > 6.9)
    1956:	4b42      	ldr	r3, [pc, #264]	; (1a60 <updatePowerState+0x218>)
    1958:	681b      	ldr	r3, [r3, #0]
    195a:	1c18      	adds	r0, r3, #0
    195c:	f7ff fe62 	bl	1624 <__aeabi_f2d>
    1960:	1c03      	adds	r3, r0, #0
    1962:	1c0c      	adds	r4, r1, #0
    1964:	1c18      	adds	r0, r3, #0
    1966:	1c21      	adds	r1, r4, #0
    1968:	4a39      	ldr	r2, [pc, #228]	; (1a50 <updatePowerState+0x208>)
    196a:	4b3a      	ldr	r3, [pc, #232]	; (1a54 <updatePowerState+0x20c>)
    196c:	f7fe fe96 	bl	69c <__aeabi_dcmpgt>
    1970:	1c03      	adds	r3, r0, #0
    1972:	2b00      	cmp	r3, #0
    1974:	d014      	beq.n	19a0 <updatePowerState+0x158>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:55
	{
		Power_Level1_SetVal();
    1976:	4b3c      	ldr	r3, [pc, #240]	; (1a68 <updatePowerState+0x220>)
    1978:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    197a:	1c18      	adds	r0, r3, #0
    197c:	f001 f856 	bl	2a2c <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:56
		Power_Level2_SetVal();
    1980:	4b39      	ldr	r3, [pc, #228]	; (1a68 <updatePowerState+0x220>)
    1982:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    1984:	1c18      	adds	r0, r3, #0
    1986:	f001 f8af 	bl	2ae8 <BitIoLdd6_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:57
		Power_Level3_ClrVal();
    198a:	4b37      	ldr	r3, [pc, #220]	; (1a68 <updatePowerState+0x220>)
    198c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    198e:	1c18      	adds	r0, r3, #0
    1990:	f001 f8fa 	bl	2b88 <BitIoLdd7_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:58
		Power_Level4_ClrVal();
    1994:	4b34      	ldr	r3, [pc, #208]	; (1a68 <updatePowerState+0x220>)
    1996:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    1998:	1c18      	adds	r0, r3, #0
    199a:	f001 f953 	bl	2c44 <BitIoLdd8_ClrVal>
    199e:	e042      	b.n	1a26 <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:60
	}
	else if (batteryLevel > 6.6)
    19a0:	4b2f      	ldr	r3, [pc, #188]	; (1a60 <updatePowerState+0x218>)
    19a2:	681b      	ldr	r3, [r3, #0]
    19a4:	1c18      	adds	r0, r3, #0
    19a6:	f7ff fe3d 	bl	1624 <__aeabi_f2d>
    19aa:	1c03      	adds	r3, r0, #0
    19ac:	1c0c      	adds	r4, r1, #0
    19ae:	1c18      	adds	r0, r3, #0
    19b0:	1c21      	adds	r1, r4, #0
    19b2:	4a29      	ldr	r2, [pc, #164]	; (1a58 <updatePowerState+0x210>)
    19b4:	4b29      	ldr	r3, [pc, #164]	; (1a5c <updatePowerState+0x214>)
    19b6:	f7fe fe71 	bl	69c <__aeabi_dcmpgt>
    19ba:	1c03      	adds	r3, r0, #0
    19bc:	2b00      	cmp	r3, #0
    19be:	d014      	beq.n	19ea <updatePowerState+0x1a2>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:62
	{
		Power_Level1_SetVal();
    19c0:	4b29      	ldr	r3, [pc, #164]	; (1a68 <updatePowerState+0x220>)
    19c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    19c4:	1c18      	adds	r0, r3, #0
    19c6:	f001 f831 	bl	2a2c <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:63
		Power_Level2_ClrVal();
    19ca:	4b27      	ldr	r3, [pc, #156]	; (1a68 <updatePowerState+0x220>)
    19cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    19ce:	1c18      	adds	r0, r3, #0
    19d0:	f001 f87c 	bl	2acc <BitIoLdd6_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:64
		Power_Level3_ClrVal();
    19d4:	4b24      	ldr	r3, [pc, #144]	; (1a68 <updatePowerState+0x220>)
    19d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    19d8:	1c18      	adds	r0, r3, #0
    19da:	f001 f8d5 	bl	2b88 <BitIoLdd7_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:65
		Power_Level4_ClrVal();
    19de:	4b22      	ldr	r3, [pc, #136]	; (1a68 <updatePowerState+0x220>)
    19e0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    19e2:	1c18      	adds	r0, r3, #0
    19e4:	f001 f92e 	bl	2c44 <BitIoLdd8_ClrVal>
    19e8:	e01d      	b.n	1a26 <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:69
	}
	else
	{
		Power_Level1_NegVal();
    19ea:	4b1f      	ldr	r3, [pc, #124]	; (1a68 <updatePowerState+0x220>)
    19ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    19ee:	1c18      	adds	r0, r3, #0
    19f0:	f001 f82a 	bl	2a48 <BitIoLdd5_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:70
		Power_Level2_NegVal();
    19f4:	4b1c      	ldr	r3, [pc, #112]	; (1a68 <updatePowerState+0x220>)
    19f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    19f8:	1c18      	adds	r0, r3, #0
    19fa:	f001 f883 	bl	2b04 <BitIoLdd6_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:71
		Power_Level3_NegVal();
    19fe:	4b1a      	ldr	r3, [pc, #104]	; (1a68 <updatePowerState+0x220>)
    1a00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    1a02:	1c18      	adds	r0, r3, #0
    1a04:	f001 f8dc 	bl	2bc0 <BitIoLdd7_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:72
		Power_Level4_NegVal();
    1a08:	4b17      	ldr	r3, [pc, #92]	; (1a68 <updatePowerState+0x220>)
    1a0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    1a0c:	1c18      	adds	r0, r3, #0
    1a0e:	f001 f935 	bl	2c7c <BitIoLdd8_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:74

		for (int delay = 0; delay < 100000; delay++);
    1a12:	2300      	movs	r3, #0
    1a14:	60fb      	str	r3, [r7, #12]
    1a16:	e002      	b.n	1a1e <updatePowerState+0x1d6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:74 (discriminator 2)
    1a18:	68fb      	ldr	r3, [r7, #12]
    1a1a:	3301      	adds	r3, #1
    1a1c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:74 (discriminator 1)
    1a1e:	68fa      	ldr	r2, [r7, #12]
    1a20:	4b12      	ldr	r3, [pc, #72]	; (1a6c <updatePowerState+0x224>)
    1a22:	429a      	cmp	r2, r3
    1a24:	ddf8      	ble.n	1a18 <updatePowerState+0x1d0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:77
	}

	handlingPowerUpdate = FALSE;
    1a26:	4b12      	ldr	r3, [pc, #72]	; (1a70 <updatePowerState+0x228>)
    1a28:	2200      	movs	r2, #0
    1a2a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:78
}
    1a2c:	46bd      	mov	sp, r7
    1a2e:	b005      	add	sp, #20
    1a30:	bd90      	pop	{r4, r7, pc}
    1a32:	46c0      	nop			; (mov r8, r8)
    1a34:	46c0      	nop			; (mov r8, r8)
    1a36:	46c0      	nop			; (mov r8, r8)
    1a38:	5ebae3da 	.word	0x5ebae3da
    1a3c:	3f870ccf 	.word	0x3f870ccf
    1a40:	cccccccd 	.word	0xcccccccd
    1a44:	4016cccc 	.word	0x4016cccc
    1a48:	cccccccd 	.word	0xcccccccd
    1a4c:	401ccccc 	.word	0x401ccccc
    1a50:	9999999a 	.word	0x9999999a
    1a54:	401b9999 	.word	0x401b9999
    1a58:	66666666 	.word	0x66666666
    1a5c:	401a6666 	.word	0x401a6666
    1a60:	1ffff1ac 	.word	0x1ffff1ac
    1a64:	40f00000 	.word	0x40f00000
    1a68:	1ffff0cc 	.word	0x1ffff0cc
    1a6c:	0001869f 	.word	0x0001869f
    1a70:	1ffff1a8 	.word	0x1ffff1a8
$t():
    1a74:	46c0      	nop			; (mov r8, r8)
    1a76:	46c0      	nop			; (mov r8, r8)

00001a78 <initializeCamera>:
initializeCamera():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:45
//	}
//
//}

void initializeCamera()
{
    1a78:	b580      	push	{r7, lr}
    1a7a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:47
	// Inicial state
	state = HALF_LOW_CLK;
    1a7c:	4b05      	ldr	r3, [pc, #20]	; (1a94 <initializeCamera+0x1c>)
    1a7e:	2203      	movs	r2, #3
    1a80:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:49

	clockCounter = 0;
    1a82:	4b05      	ldr	r3, [pc, #20]	; (1a98 <initializeCamera+0x20>)
    1a84:	2200      	movs	r2, #0
    1a86:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:51

	transferTime = 0;
    1a88:	4b04      	ldr	r3, [pc, #16]	; (1a9c <initializeCamera+0x24>)
    1a8a:	2200      	movs	r2, #0
    1a8c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:52
}
    1a8e:	46bd      	mov	sp, r7
    1a90:	bd80      	pop	{r7, pc}
    1a92:	46c0      	nop			; (mov r8, r8)
    1a94:	1ffff1c4 	.word	0x1ffff1c4
    1a98:	1ffff1b4 	.word	0x1ffff1b4
    1a9c:	1ffff1bc 	.word	0x1ffff1bc

00001aa0 <getRawImageMean>:
getRawImageMean():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:78
//	}
//
//}

int getRawImageMean(int samplesNum)
{
    1aa0:	b580      	push	{r7, lr}
    1aa2:	b084      	sub	sp, #16
    1aa4:	af00      	add	r7, sp, #0
    1aa6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:80
	// Standard value
	currentSample = -1;
    1aa8:	4b16      	ldr	r3, [pc, #88]	; (1b04 <getRawImageMean+0x64>)
    1aaa:	2201      	movs	r2, #1
    1aac:	4252      	negs	r2, r2
    1aae:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:81
	samplesNumber = samplesNum;
    1ab0:	4b15      	ldr	r3, [pc, #84]	; (1b08 <getRawImageMean+0x68>)
    1ab2:	687a      	ldr	r2, [r7, #4]
    1ab4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:84

	// Initializes the array for put the image with zeros
	for (int pixel = 0; pixel < 128; pixel++)
    1ab6:	2300      	movs	r3, #0
    1ab8:	60fb      	str	r3, [r7, #12]
    1aba:	e007      	b.n	1acc <getRawImageMean+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:86 (discriminator 2)
	{
		rawImage[pixel] = 0;
    1abc:	4a13      	ldr	r2, [pc, #76]	; (1b0c <getRawImageMean+0x6c>)
    1abe:	68fb      	ldr	r3, [r7, #12]
    1ac0:	18d3      	adds	r3, r2, r3
    1ac2:	2200      	movs	r2, #0
    1ac4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:84 (discriminator 2)
	// Standard value
	currentSample = -1;
	samplesNumber = samplesNum;

	// Initializes the array for put the image with zeros
	for (int pixel = 0; pixel < 128; pixel++)
    1ac6:	68fb      	ldr	r3, [r7, #12]
    1ac8:	3301      	adds	r3, #1
    1aca:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:84 (discriminator 1)
    1acc:	68fb      	ldr	r3, [r7, #12]
    1ace:	2b7f      	cmp	r3, #127	; 0x7f
    1ad0:	ddf4      	ble.n	1abc <getRawImageMean+0x1c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:90
	{
		rawImage[pixel] = 0;
	}

	// Initializes the camera
	initializeCamera();
    1ad2:	f7ff ffd1 	bl	1a78 <initializeCamera>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:93

	// Camera activation
	Camera_CLK_Interruption_EnableEvent();
    1ad6:	4b0e      	ldr	r3, [pc, #56]	; (1b10 <getRawImageMean+0x70>)
    1ad8:	68db      	ldr	r3, [r3, #12]
    1ada:	1c18      	adds	r0, r3, #0
    1adc:	2101      	movs	r1, #1
    1ade:	f001 ff3b 	bl	3958 <TimerIntLdd1_SetEventMask>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:95

	while (currentSample < samplesNumber);
    1ae2:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:95 (discriminator 1)
    1ae4:	4b07      	ldr	r3, [pc, #28]	; (1b04 <getRawImageMean+0x64>)
    1ae6:	681a      	ldr	r2, [r3, #0]
    1ae8:	4b07      	ldr	r3, [pc, #28]	; (1b08 <getRawImageMean+0x68>)
    1aea:	681b      	ldr	r3, [r3, #0]
    1aec:	429a      	cmp	r2, r3
    1aee:	dbf9      	blt.n	1ae4 <getRawImageMean+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:97

	Camera_CLK_Interruption_DisableEvent();
    1af0:	4b07      	ldr	r3, [pc, #28]	; (1b10 <getRawImageMean+0x70>)
    1af2:	68db      	ldr	r3, [r3, #12]
    1af4:	1c18      	adds	r0, r3, #0
    1af6:	2100      	movs	r1, #0
    1af8:	f001 ff2e 	bl	3958 <TimerIntLdd1_SetEventMask>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:98
}
    1afc:	1c18      	adds	r0, r3, #0
    1afe:	46bd      	mov	sp, r7
    1b00:	b004      	add	sp, #16
    1b02:	bd80      	pop	{r7, pc}
    1b04:	1ffff1c0 	.word	0x1ffff1c0
    1b08:	1ffff1b8 	.word	0x1ffff1b8
    1b0c:	1ffff1c8 	.word	0x1ffff1c8
    1b10:	1ffff0cc 	.word	0x1ffff0cc

00001b14 <verifySample>:
verifySample():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:105
/*
 * The initial currentSample value must be -1
 * The sampleNumber value must be >= 1
 */
void verifySample()
{
    1b14:	b590      	push	{r4, r7, lr}
    1b16:	b083      	sub	sp, #12
    1b18:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:107
	// The first sample is Discarded
	if (currentSample >= 0)
    1b1a:	4b16      	ldr	r3, [pc, #88]	; (1b74 <verifySample+0x60>)
    1b1c:	681b      	ldr	r3, [r3, #0]
    1b1e:	2b00      	cmp	r3, #0
    1b20:	db1f      	blt.n	1b62 <verifySample+0x4e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:109
	{
		for (int pixel = 0; pixel < 128; pixel++)
    1b22:	2300      	movs	r3, #0
    1b24:	607b      	str	r3, [r7, #4]
    1b26:	e019      	b.n	1b5c <verifySample+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:111 (discriminator 2)
		{
			rawImage[pixel] += rawImageBuffer[pixel] / samplesNumber;
    1b28:	4a13      	ldr	r2, [pc, #76]	; (1b78 <verifySample+0x64>)
    1b2a:	687b      	ldr	r3, [r7, #4]
    1b2c:	18d3      	adds	r3, r2, r3
    1b2e:	781c      	ldrb	r4, [r3, #0]
    1b30:	4a12      	ldr	r2, [pc, #72]	; (1b7c <verifySample+0x68>)
    1b32:	687b      	ldr	r3, [r7, #4]
    1b34:	18d3      	adds	r3, r2, r3
    1b36:	781b      	ldrb	r3, [r3, #0]
    1b38:	1c1a      	adds	r2, r3, #0
    1b3a:	4b11      	ldr	r3, [pc, #68]	; (1b80 <verifySample+0x6c>)
    1b3c:	681b      	ldr	r3, [r3, #0]
    1b3e:	1c10      	adds	r0, r2, #0
    1b40:	1c19      	adds	r1, r3, #0
    1b42:	f7fe fd1f 	bl	584 <__aeabi_idiv>
    1b46:	1c03      	adds	r3, r0, #0
    1b48:	b2db      	uxtb	r3, r3
    1b4a:	18e3      	adds	r3, r4, r3
    1b4c:	b2da      	uxtb	r2, r3
    1b4e:	490a      	ldr	r1, [pc, #40]	; (1b78 <verifySample+0x64>)
    1b50:	687b      	ldr	r3, [r7, #4]
    1b52:	18cb      	adds	r3, r1, r3
    1b54:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:109 (discriminator 2)
void verifySample()
{
	// The first sample is Discarded
	if (currentSample >= 0)
	{
		for (int pixel = 0; pixel < 128; pixel++)
    1b56:	687b      	ldr	r3, [r7, #4]
    1b58:	3301      	adds	r3, #1
    1b5a:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:109 (discriminator 1)
    1b5c:	687b      	ldr	r3, [r7, #4]
    1b5e:	2b7f      	cmp	r3, #127	; 0x7f
    1b60:	dde2      	ble.n	1b28 <verifySample+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:114
		{
			rawImage[pixel] += rawImageBuffer[pixel] / samplesNumber;
		}
	}
	currentSample++;
    1b62:	4b04      	ldr	r3, [pc, #16]	; (1b74 <verifySample+0x60>)
    1b64:	681b      	ldr	r3, [r3, #0]
    1b66:	1c5a      	adds	r2, r3, #1
    1b68:	4b02      	ldr	r3, [pc, #8]	; (1b74 <verifySample+0x60>)
    1b6a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:115
}
    1b6c:	46bd      	mov	sp, r7
    1b6e:	b003      	add	sp, #12
    1b70:	bd90      	pop	{r4, r7, pc}
    1b72:	46c0      	nop			; (mov r8, r8)
    1b74:	1ffff1c0 	.word	0x1ffff1c0
    1b78:	1ffff1c8 	.word	0x1ffff1c8
    1b7c:	1ffff248 	.word	0x1ffff248
    1b80:	1ffff1b8 	.word	0x1ffff1b8

00001b84 <Cpu_OnNMIINT>:
Cpu_OnNMIINT():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:53
 **         occurred. This event is automatically enabled when the [NMI
 **         interrupt] property is set to 'Enabled'.
 */
/* ===================================================================*/
void Cpu_OnNMIINT(void)
{
    1b84:	b580      	push	{r7, lr}
    1b86:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:55
	/* Write your code here ... */
}
    1b88:	46bd      	mov	sp, r7
    1b8a:	bd80      	pop	{r7, pc}

00001b8c <Camera_CLK_Interruption_OnInterrupt>:
Camera_CLK_Interruption_OnInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:72
 **     Parameters  : None
 **     Returns     : Nothing
 ** ===================================================================
 */
void Camera_CLK_Interruption_OnInterrupt(void)
{
    1b8c:	b580      	push	{r7, lr}
    1b8e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:73
	switch (state)
    1b90:	4b41      	ldr	r3, [pc, #260]	; (1c98 <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    1b92:	681b      	ldr	r3, [r3, #0]
    1b94:	2b04      	cmp	r3, #4
    1b96:	d900      	bls.n	1b9a <Camera_CLK_Interruption_OnInterrupt+0xe>
    1b98:	e07c      	b.n	1c94 <Camera_CLK_Interruption_OnInterrupt+0x108>
    1b9a:	009a      	lsls	r2, r3, #2
    1b9c:	4b3f      	ldr	r3, [pc, #252]	; (1c9c <Camera_CLK_Interruption_OnInterrupt+0x110>)
    1b9e:	18d3      	adds	r3, r2, r3
    1ba0:	681b      	ldr	r3, [r3, #0]
    1ba2:	469f      	mov	pc, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:79
	{
	// First state
	case HALF_LOW_CLK:
	{
		// next state
		state = HIGH_CLK;
    1ba4:	4b3c      	ldr	r3, [pc, #240]	; (1c98 <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    1ba6:	2200      	movs	r2, #0
    1ba8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:81

		if (clockCounter == 0)
    1baa:	4b3d      	ldr	r3, [pc, #244]	; (1ca0 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    1bac:	681b      	ldr	r3, [r3, #0]
    1bae:	2b00      	cmp	r3, #0
    1bb0:	d10e      	bne.n	1bd0 <Camera_CLK_Interruption_OnInterrupt+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:84
		{
			// SI High
			SI_SetVal();
    1bb2:	4b3c      	ldr	r3, [pc, #240]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1bb4:	681b      	ldr	r3, [r3, #0]
    1bb6:	1c18      	adds	r0, r3, #0
    1bb8:	f000 fdba 	bl	2730 <BitIoLdd1_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:85
			while (!SI_GetVal());
    1bbc:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:85 (discriminator 1)
    1bbe:	4b39      	ldr	r3, [pc, #228]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1bc0:	681b      	ldr	r3, [r3, #0]
    1bc2:	1c18      	adds	r0, r3, #0
    1bc4:	f000 fd94 	bl	26f0 <BitIoLdd1_GetVal>
    1bc8:	1c03      	adds	r3, r0, #0
    1bca:	2b00      	cmp	r3, #0
    1bcc:	d0f7      	beq.n	1bbe <Camera_CLK_Interruption_OnInterrupt+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:100
			state = WAIT_TRANSFER_CHARGE;

			// Checks if reading is finished
			verifySample();
		}
		break;
    1bce:	e061      	b.n	1c94 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:90
			while (!SI_GetVal());
		}

		// End of the cycle
		// The camera needs an extra clock (129) to send the last pixel
		else if (clockCounter == 129)
    1bd0:	4b33      	ldr	r3, [pc, #204]	; (1ca0 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    1bd2:	681b      	ldr	r3, [r3, #0]
    1bd4:	2b81      	cmp	r3, #129	; 0x81
    1bd6:	d108      	bne.n	1bea <Camera_CLK_Interruption_OnInterrupt+0x5e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:92
		{
			clockCounter = 0;
    1bd8:	4b31      	ldr	r3, [pc, #196]	; (1ca0 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    1bda:	2200      	movs	r2, #0
    1bdc:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:95

			// And 20 microseconds to prepare for the next cycle.
			state = WAIT_TRANSFER_CHARGE;
    1bde:	4b2e      	ldr	r3, [pc, #184]	; (1c98 <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    1be0:	2204      	movs	r2, #4
    1be2:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:98

			// Checks if reading is finished
			verifySample();
    1be4:	f7ff ff96 	bl	1b14 <verifySample>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:100
		}
		break;
    1be8:	e054      	b.n	1c94 <Camera_CLK_Interruption_OnInterrupt+0x108>
    1bea:	e053      	b.n	1c94 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:106
	}

	case HIGH_CLK:
	{
		// Clock High.
		CLK_SetVal();
    1bec:	4b2d      	ldr	r3, [pc, #180]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1bee:	685b      	ldr	r3, [r3, #4]
    1bf0:	1c18      	adds	r0, r3, #0
    1bf2:	f000 fe59 	bl	28a8 <BitIoLdd2_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:107
		while (!CLK_GetVal());
    1bf6:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:107 (discriminator 1)
    1bf8:	4b2a      	ldr	r3, [pc, #168]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1bfa:	685b      	ldr	r3, [r3, #4]
    1bfc:	1c18      	adds	r0, r3, #0
    1bfe:	f000 fe33 	bl	2868 <BitIoLdd2_GetVal>
    1c02:	1c03      	adds	r3, r0, #0
    1c04:	2b00      	cmp	r3, #0
    1c06:	d0f7      	beq.n	1bf8 <Camera_CLK_Interruption_OnInterrupt+0x6c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:109

		clockCounter++;
    1c08:	4b25      	ldr	r3, [pc, #148]	; (1ca0 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    1c0a:	681b      	ldr	r3, [r3, #0]
    1c0c:	1c5a      	adds	r2, r3, #1
    1c0e:	4b24      	ldr	r3, [pc, #144]	; (1ca0 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    1c10:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:111

		state = HALF_HIGH_CLK;
    1c12:	4b21      	ldr	r3, [pc, #132]	; (1c98 <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    1c14:	2201      	movs	r2, #1
    1c16:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:113

		break;
    1c18:	e03c      	b.n	1c94 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:118
	}

	case HALF_HIGH_CLK:
	{
		if (clockCounter == 1)
    1c1a:	4b21      	ldr	r3, [pc, #132]	; (1ca0 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    1c1c:	681b      	ldr	r3, [r3, #0]
    1c1e:	2b01      	cmp	r3, #1
    1c20:	d10d      	bne.n	1c3e <Camera_CLK_Interruption_OnInterrupt+0xb2>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:121
		{
			// SI Low.
			SI_ClrVal();
    1c22:	4b20      	ldr	r3, [pc, #128]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1c24:	681b      	ldr	r3, [r3, #0]
    1c26:	1c18      	adds	r0, r3, #0
    1c28:	f000 fd76 	bl	2718 <BitIoLdd1_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:122
			while (SI_GetVal());
    1c2c:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:122 (discriminator 1)
    1c2e:	4b1d      	ldr	r3, [pc, #116]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1c30:	681b      	ldr	r3, [r3, #0]
    1c32:	1c18      	adds	r0, r3, #0
    1c34:	f000 fd5c 	bl	26f0 <BitIoLdd1_GetVal>
    1c38:	1c03      	adds	r3, r0, #0
    1c3a:	2b00      	cmp	r3, #0
    1c3c:	d1f7      	bne.n	1c2e <Camera_CLK_Interruption_OnInterrupt+0xa2>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:126
		}

		// Starts the AD convertion
		AD_Converter_MeasureChan(FALSE, 0);
    1c3e:	2000      	movs	r0, #0
    1c40:	2100      	movs	r1, #0
    1c42:	f000 fac9 	bl	21d8 <AD_Converter_MeasureChan>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:127
		state = LOW_CLK;
    1c46:	4b14      	ldr	r3, [pc, #80]	; (1c98 <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    1c48:	2202      	movs	r2, #2
    1c4a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:128
		break;
    1c4c:	e022      	b.n	1c94 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:133
	}
	case LOW_CLK:
	{
		// Clock Low.
		CLK_ClrVal();
    1c4e:	4b15      	ldr	r3, [pc, #84]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1c50:	685b      	ldr	r3, [r3, #4]
    1c52:	1c18      	adds	r0, r3, #0
    1c54:	f000 fe1c 	bl	2890 <BitIoLdd2_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:134
		while (CLK_GetVal());
    1c58:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:134 (discriminator 1)
    1c5a:	4b12      	ldr	r3, [pc, #72]	; (1ca4 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    1c5c:	685b      	ldr	r3, [r3, #4]
    1c5e:	1c18      	adds	r0, r3, #0
    1c60:	f000 fe02 	bl	2868 <BitIoLdd2_GetVal>
    1c64:	1c03      	adds	r3, r0, #0
    1c66:	2b00      	cmp	r3, #0
    1c68:	d1f7      	bne.n	1c5a <Camera_CLK_Interruption_OnInterrupt+0xce>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:136

		state = HALF_LOW_CLK;
    1c6a:	4b0b      	ldr	r3, [pc, #44]	; (1c98 <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    1c6c:	2203      	movs	r2, #3
    1c6e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:138

		break;
    1c70:	e010      	b.n	1c94 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:144
	}

	// Pixel charge transfer time
	case WAIT_TRANSFER_CHARGE:
	{
		if (transferTime)
    1c72:	4b0d      	ldr	r3, [pc, #52]	; (1ca8 <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    1c74:	681b      	ldr	r3, [r3, #0]
    1c76:	2b00      	cmp	r3, #0
    1c78:	d005      	beq.n	1c86 <Camera_CLK_Interruption_OnInterrupt+0xfa>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:146
		{
			transferTime++;
    1c7a:	4b0b      	ldr	r3, [pc, #44]	; (1ca8 <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    1c7c:	681b      	ldr	r3, [r3, #0]
    1c7e:	1c5a      	adds	r2, r3, #1
    1c80:	4b09      	ldr	r3, [pc, #36]	; (1ca8 <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    1c82:	601a      	str	r2, [r3, #0]
    1c84:	e005      	b.n	1c92 <Camera_CLK_Interruption_OnInterrupt+0x106>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:150
		}
		else
		{
			transferTime = 0;
    1c86:	4b08      	ldr	r3, [pc, #32]	; (1ca8 <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    1c88:	2200      	movs	r2, #0
    1c8a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:151
			state = HALF_LOW_CLK;
    1c8c:	4b02      	ldr	r3, [pc, #8]	; (1c98 <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    1c8e:	2203      	movs	r2, #3
    1c90:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:154
		}

		break;
    1c92:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:158
	}

	}
}
    1c94:	46bd      	mov	sp, r7
    1c96:	bd80      	pop	{r7, pc}
    1c98:	1ffff1c4 	.word	0x1ffff1c4
    1c9c:	00003ac8 	.word	0x00003ac8
    1ca0:	1ffff1b4 	.word	0x1ffff1b4
    1ca4:	1ffff0cc 	.word	0x1ffff0cc
    1ca8:	1ffff1bc 	.word	0x1ffff1bc

00001cac <AD_Converter_OnEnd>:
AD_Converter_OnEnd():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:175
 **     Parameters  : None
 **     Returns     : Nothing
 ** ===================================================================
 */
void AD_Converter_OnEnd(void)
{
    1cac:	b580      	push	{r7, lr}
    1cae:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:176
	if (!handlingPowerUpdate)
    1cb0:	4b08      	ldr	r3, [pc, #32]	; (1cd4 <AD_Converter_OnEnd+0x28>)
    1cb2:	781b      	ldrb	r3, [r3, #0]
    1cb4:	b2db      	uxtb	r3, r3
    1cb6:	2b00      	cmp	r3, #0
    1cb8:	d108      	bne.n	1ccc <AD_Converter_OnEnd+0x20>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:178
	{
		AD_Converter_GetChanValue(0, &rawImageBuffer[clockCounter]);
    1cba:	4b07      	ldr	r3, [pc, #28]	; (1cd8 <AD_Converter_OnEnd+0x2c>)
    1cbc:	681a      	ldr	r2, [r3, #0]
    1cbe:	4b07      	ldr	r3, [pc, #28]	; (1cdc <AD_Converter_OnEnd+0x30>)
    1cc0:	18d3      	adds	r3, r2, r3
    1cc2:	2000      	movs	r0, #0
    1cc4:	1c19      	adds	r1, r3, #0
    1cc6:	f000 fab9 	bl	223c <AD_Converter_GetChanValue>
    1cca:	e001      	b.n	1cd0 <AD_Converter_OnEnd+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:182
	}
	else
	{
		updatePowerState();
    1ccc:	f7ff fdbc 	bl	1848 <updatePowerState>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:184
	}
}
    1cd0:	46bd      	mov	sp, r7
    1cd2:	bd80      	pop	{r7, pc}
    1cd4:	1ffff1a8 	.word	0x1ffff1a8
    1cd8:	1ffff1b4 	.word	0x1ffff1b4
    1cdc:	1ffff248 	.word	0x1ffff248

00001ce0 <SerialCom_OnBlockSent>:
SerialCom_OnBlockSent():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:203
 **                           RTOS specific data. This pointer is passed
 **                           as the parameter of Init method.
 */
/* ===================================================================*/
void SerialCom_OnBlockSent(LDD_TUserData *UserDataPtr)
{
    1ce0:	b580      	push	{r7, lr}
    1ce2:	b084      	sub	sp, #16
    1ce4:	af00      	add	r7, sp, #0
    1ce6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:204
	Serial_Device *ptr = (Serial_Device*)UserDataPtr;
    1ce8:	687b      	ldr	r3, [r7, #4]
    1cea:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:206

	ptr->isSent = TRUE; /* set flag so sender knows we have finished */
    1cec:	68fb      	ldr	r3, [r7, #12]
    1cee:	2201      	movs	r2, #1
    1cf0:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:207
}
    1cf2:	46bd      	mov	sp, r7
    1cf4:	b004      	add	sp, #16
    1cf6:	bd80      	pop	{r7, pc}

00001cf8 <calibration>:
calibration():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:12


#include "ImageProcessing.h"

void calibration()
{
    1cf8:	b580      	push	{r7, lr}
    1cfa:	b082      	sub	sp, #8
    1cfc:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:13
	for (int pixel = 0; pixel < 128; pixel++)
    1cfe:	2300      	movs	r3, #0
    1d00:	607b      	str	r3, [r7, #4]
    1d02:	e00a      	b.n	1d1a <calibration+0x22>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:15 (discriminator 2)
	{
		referenceImage[pixel] = rawImage[pixel];
    1d04:	4a08      	ldr	r2, [pc, #32]	; (1d28 <calibration+0x30>)
    1d06:	687b      	ldr	r3, [r7, #4]
    1d08:	18d3      	adds	r3, r2, r3
    1d0a:	781a      	ldrb	r2, [r3, #0]
    1d0c:	4907      	ldr	r1, [pc, #28]	; (1d2c <calibration+0x34>)
    1d0e:	687b      	ldr	r3, [r7, #4]
    1d10:	18cb      	adds	r3, r1, r3
    1d12:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:13 (discriminator 2)

#include "ImageProcessing.h"

void calibration()
{
	for (int pixel = 0; pixel < 128; pixel++)
    1d14:	687b      	ldr	r3, [r7, #4]
    1d16:	3301      	adds	r3, #1
    1d18:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:13 (discriminator 1)
    1d1a:	687b      	ldr	r3, [r7, #4]
    1d1c:	2b7f      	cmp	r3, #127	; 0x7f
    1d1e:	ddf1      	ble.n	1d04 <calibration+0xc>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:17
	{
		referenceImage[pixel] = rawImage[pixel];
	}
}
    1d20:	46bd      	mov	sp, r7
    1d22:	b002      	add	sp, #8
    1d24:	bd80      	pop	{r7, pc}
    1d26:	46c0      	nop			; (mov r8, r8)
    1d28:	1ffff1c8 	.word	0x1ffff1c8
    1d2c:	1ffff2c8 	.word	0x1ffff2c8

00001d30 <binarization>:
binarization():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:20

void binarization(uint8 binarizedImage[])
{
    1d30:	b590      	push	{r4, r7, lr}
    1d32:	b085      	sub	sp, #20
    1d34:	af00      	add	r7, sp, #0
    1d36:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:23
	float light;

	for (int pixel = 0; pixel < 128; pixel++)
    1d38:	2300      	movs	r3, #0
    1d3a:	60fb      	str	r3, [r7, #12]
    1d3c:	e032      	b.n	1da4 <binarization+0x74>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:25
	{
		light = (float) rawImage[pixel] / (float) referenceImage[pixel];
    1d3e:	4a1e      	ldr	r2, [pc, #120]	; (1db8 <binarization+0x88>)
    1d40:	68fb      	ldr	r3, [r7, #12]
    1d42:	18d3      	adds	r3, r2, r3
    1d44:	781b      	ldrb	r3, [r3, #0]
    1d46:	1c18      	adds	r0, r3, #0
    1d48:	f7ff f846 	bl	dd8 <__aeabi_ui2f>
    1d4c:	1c04      	adds	r4, r0, #0
    1d4e:	4a1b      	ldr	r2, [pc, #108]	; (1dbc <binarization+0x8c>)
    1d50:	68fb      	ldr	r3, [r7, #12]
    1d52:	18d3      	adds	r3, r2, r3
    1d54:	781b      	ldrb	r3, [r3, #0]
    1d56:	b2db      	uxtb	r3, r3
    1d58:	1c18      	adds	r0, r3, #0
    1d5a:	f7ff f83d 	bl	dd8 <__aeabi_ui2f>
    1d5e:	1c03      	adds	r3, r0, #0
    1d60:	1c20      	adds	r0, r4, #0
    1d62:	1c19      	adds	r1, r3, #0
    1d64:	f7fe fe54 	bl	a10 <__aeabi_fdiv>
    1d68:	1c03      	adds	r3, r0, #0
    1d6a:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:26
		if (light < 0.6)
    1d6c:	68b8      	ldr	r0, [r7, #8]
    1d6e:	f7ff fc59 	bl	1624 <__aeabi_f2d>
    1d72:	1c03      	adds	r3, r0, #0
    1d74:	1c0c      	adds	r4, r1, #0
    1d76:	1c18      	adds	r0, r3, #0
    1d78:	1c21      	adds	r1, r4, #0
    1d7a:	4b0e      	ldr	r3, [pc, #56]	; (1db4 <binarization+0x84>)
    1d7c:	4a0c      	ldr	r2, [pc, #48]	; (1db0 <binarization+0x80>)
    1d7e:	f7fe fc79 	bl	674 <__aeabi_dcmplt>
    1d82:	1c03      	adds	r3, r0, #0
    1d84:	2b00      	cmp	r3, #0
    1d86:	d005      	beq.n	1d94 <binarization+0x64>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:28
		{
			binarizedImage[pixel] = 0;
    1d88:	68fb      	ldr	r3, [r7, #12]
    1d8a:	687a      	ldr	r2, [r7, #4]
    1d8c:	18d3      	adds	r3, r2, r3
    1d8e:	2200      	movs	r2, #0
    1d90:	701a      	strb	r2, [r3, #0]
    1d92:	e004      	b.n	1d9e <binarization+0x6e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:32
		}
		else
		{
			binarizedImage[pixel] = 255;
    1d94:	68fb      	ldr	r3, [r7, #12]
    1d96:	687a      	ldr	r2, [r7, #4]
    1d98:	18d3      	adds	r3, r2, r3
    1d9a:	22ff      	movs	r2, #255	; 0xff
    1d9c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:23

void binarization(uint8 binarizedImage[])
{
	float light;

	for (int pixel = 0; pixel < 128; pixel++)
    1d9e:	68fb      	ldr	r3, [r7, #12]
    1da0:	3301      	adds	r3, #1
    1da2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:23 (discriminator 1)
    1da4:	68fb      	ldr	r3, [r7, #12]
    1da6:	2b7f      	cmp	r3, #127	; 0x7f
    1da8:	ddc9      	ble.n	1d3e <binarization+0xe>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:35
		else
		{
			binarizedImage[pixel] = 255;
		}
	}
}
    1daa:	46bd      	mov	sp, r7
    1dac:	b005      	add	sp, #20
    1dae:	bd90      	pop	{r4, r7, pc}
    1db0:	33333333 	.word	0x33333333
    1db4:	3fe33333 	.word	0x3fe33333
    1db8:	1ffff1c8 	.word	0x1ffff1c8
    1dbc:	1ffff2c8 	.word	0x1ffff2c8

00001dc0 <init_Serial>:
init_Serial():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:13
#include "SerialCommunication.h"

static Serial_Device deviceData;

static void init_Serial()
{
    1dc0:	b580      	push	{r7, lr}
    1dc2:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:14
	deviceData.handle = SerialCom_Init(&deviceData); /* Initialization of serial component */
    1dc4:	4b05      	ldr	r3, [pc, #20]	; (1ddc <init_Serial+0x1c>)
    1dc6:	1c18      	adds	r0, r3, #0
    1dc8:	f001 f9c4 	bl	3154 <SerialCom_Init>
    1dcc:	1c02      	adds	r2, r0, #0
    1dce:	4b03      	ldr	r3, [pc, #12]	; (1ddc <init_Serial+0x1c>)
    1dd0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:15
	deviceData.isSent = FALSE;
    1dd2:	4b02      	ldr	r3, [pc, #8]	; (1ddc <init_Serial+0x1c>)
    1dd4:	2200      	movs	r2, #0
    1dd6:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:16
}
    1dd8:	46bd      	mov	sp, r7
    1dda:	bd80      	pop	{r7, pc}
    1ddc:	1ffff07c 	.word	0x1ffff07c

00001de0 <sendAChar>:
sendAChar():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:19

static int sendAChar(unsigned char ch)
{
    1de0:	b580      	push	{r7, lr}
    1de2:	b082      	sub	sp, #8
    1de4:	af00      	add	r7, sp, #0
    1de6:	1c02      	adds	r2, r0, #0
    1de8:	1dfb      	adds	r3, r7, #7
    1dea:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:20
	deviceData.isSent = FALSE;
    1dec:	4b0c      	ldr	r3, [pc, #48]	; (1e20 <sendAChar+0x40>)
    1dee:	2200      	movs	r2, #0
    1df0:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:21
	while(SerialCom_SendBlock(deviceData.handle, (LDD_TData*)&ch, 1)!= ERR_OK) {} /* Send char */
    1df2:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:21 (discriminator 1)
    1df4:	4b0a      	ldr	r3, [pc, #40]	; (1e20 <sendAChar+0x40>)
    1df6:	681a      	ldr	r2, [r3, #0]
    1df8:	1dfb      	adds	r3, r7, #7
    1dfa:	1c10      	adds	r0, r2, #0
    1dfc:	1c19      	adds	r1, r3, #0
    1dfe:	2201      	movs	r2, #1
    1e00:	f001 fa80 	bl	3304 <SerialCom_SendBlock>
    1e04:	1c03      	adds	r3, r0, #0
    1e06:	2b00      	cmp	r3, #0
    1e08:	d1f4      	bne.n	1df4 <sendAChar+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:22
	while(!deviceData.isSent) {} /* wait until we get the green flag from the TX interrupt */
    1e0a:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:22 (discriminator 1)
    1e0c:	4b04      	ldr	r3, [pc, #16]	; (1e20 <sendAChar+0x40>)
    1e0e:	791b      	ldrb	r3, [r3, #4]
    1e10:	b2db      	uxtb	r3, r3
    1e12:	2b00      	cmp	r3, #0
    1e14:	d0fa      	beq.n	1e0c <sendAChar+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:23
}
    1e16:	1c18      	adds	r0, r3, #0
    1e18:	46bd      	mov	sp, r7
    1e1a:	b002      	add	sp, #8
    1e1c:	bd80      	pop	{r7, pc}
    1e1e:	46c0      	nop			; (mov r8, r8)
    1e20:	1ffff07c 	.word	0x1ffff07c

00001e24 <itoa_8_bit>:
itoa_8_bit():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:43
		sendAChar(string[index++]);
	}
}

void itoa_8_bit(uint8 sample)
{
    1e24:	b580      	push	{r7, lr}
    1e26:	b088      	sub	sp, #32
    1e28:	af00      	add	r7, sp, #0
    1e2a:	1c02      	adds	r2, r0, #0
    1e2c:	1dfb      	adds	r3, r7, #7
    1e2e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:53
	{
		sendAChar('E');
		return;
	}

	R1 = (unsigned char) (sample % 10) + '0';
    1e30:	1dfb      	adds	r3, r7, #7
    1e32:	781b      	ldrb	r3, [r3, #0]
    1e34:	1c18      	adds	r0, r3, #0
    1e36:	210a      	movs	r1, #10
    1e38:	f7fe fb9a 	bl	570 <__aeabi_uidivmod>
    1e3c:	1c0b      	adds	r3, r1, #0
    1e3e:	b2da      	uxtb	r2, r3
    1e40:	1c3b      	adds	r3, r7, #0
    1e42:	331f      	adds	r3, #31
    1e44:	3230      	adds	r2, #48	; 0x30
    1e46:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:54
	Q1 = sample / 10;
    1e48:	1dfb      	adds	r3, r7, #7
    1e4a:	781b      	ldrb	r3, [r3, #0]
    1e4c:	1c18      	adds	r0, r3, #0
    1e4e:	210a      	movs	r1, #10
    1e50:	f7fe fb4a 	bl	4e8 <__aeabi_uidiv>
    1e54:	1c03      	adds	r3, r0, #0
    1e56:	b2db      	uxtb	r3, r3
    1e58:	61bb      	str	r3, [r7, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:56

	R2 = (unsigned char) (Q1 % 10) + '0';
    1e5a:	69bb      	ldr	r3, [r7, #24]
    1e5c:	1c18      	adds	r0, r3, #0
    1e5e:	210a      	movs	r1, #10
    1e60:	f7fe fbe6 	bl	630 <__aeabi_idivmod>
    1e64:	1c0b      	adds	r3, r1, #0
    1e66:	b2da      	uxtb	r2, r3
    1e68:	1c3b      	adds	r3, r7, #0
    1e6a:	3317      	adds	r3, #23
    1e6c:	3230      	adds	r2, #48	; 0x30
    1e6e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:57
	Q2 = Q1 / 10;
    1e70:	69bb      	ldr	r3, [r7, #24]
    1e72:	1c18      	adds	r0, r3, #0
    1e74:	210a      	movs	r1, #10
    1e76:	f7fe fb85 	bl	584 <__aeabi_idiv>
    1e7a:	1c03      	adds	r3, r0, #0
    1e7c:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:59

	R3 = (unsigned char) (Q2 % 10) + '0';
    1e7e:	693b      	ldr	r3, [r7, #16]
    1e80:	1c18      	adds	r0, r3, #0
    1e82:	210a      	movs	r1, #10
    1e84:	f7fe fbd4 	bl	630 <__aeabi_idivmod>
    1e88:	1c0b      	adds	r3, r1, #0
    1e8a:	b2da      	uxtb	r2, r3
    1e8c:	1c3b      	adds	r3, r7, #0
    1e8e:	330f      	adds	r3, #15
    1e90:	3230      	adds	r2, #48	; 0x30
    1e92:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:61

	sendAChar(R3);
    1e94:	1c3b      	adds	r3, r7, #0
    1e96:	330f      	adds	r3, #15
    1e98:	781b      	ldrb	r3, [r3, #0]
    1e9a:	1c18      	adds	r0, r3, #0
    1e9c:	f7ff ffa0 	bl	1de0 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:62
	sendAChar(R2);
    1ea0:	1c3b      	adds	r3, r7, #0
    1ea2:	3317      	adds	r3, #23
    1ea4:	781b      	ldrb	r3, [r3, #0]
    1ea6:	1c18      	adds	r0, r3, #0
    1ea8:	f7ff ff9a 	bl	1de0 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:63
	sendAChar(R1);
    1eac:	1c3b      	adds	r3, r7, #0
    1eae:	331f      	adds	r3, #31
    1eb0:	781b      	ldrb	r3, [r3, #0]
    1eb2:	1c18      	adds	r0, r3, #0
    1eb4:	f7ff ff94 	bl	1de0 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:64
}
    1eb8:	46bd      	mov	sp, r7
    1eba:	b008      	add	sp, #32
    1ebc:	bd80      	pop	{r7, pc}
    1ebe:	46c0      	nop			; (mov r8, r8)

00001ec0 <sendArrayOfPixels>:
sendArrayOfPixels():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:67

void sendArrayOfPixels(uint8 array[])
{
    1ec0:	b580      	push	{r7, lr}
    1ec2:	b084      	sub	sp, #16
    1ec4:	af00      	add	r7, sp, #0
    1ec6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:68
	init_Serial();
    1ec8:	f7ff ff7a 	bl	1dc0 <init_Serial>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:70

	for (int pixel = 0; pixel < 128; pixel++)
    1ecc:	2300      	movs	r3, #0
    1ece:	60fb      	str	r3, [r7, #12]
    1ed0:	e00c      	b.n	1eec <sendArrayOfPixels+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:72 (discriminator 2)
	{
		itoa_8_bit(array[pixel]);
    1ed2:	68fb      	ldr	r3, [r7, #12]
    1ed4:	687a      	ldr	r2, [r7, #4]
    1ed6:	18d3      	adds	r3, r2, r3
    1ed8:	781b      	ldrb	r3, [r3, #0]
    1eda:	1c18      	adds	r0, r3, #0
    1edc:	f7ff ffa2 	bl	1e24 <itoa_8_bit>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:73 (discriminator 2)
		sendAChar(' ');
    1ee0:	2020      	movs	r0, #32
    1ee2:	f7ff ff7d 	bl	1de0 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:70 (discriminator 2)

void sendArrayOfPixels(uint8 array[])
{
	init_Serial();

	for (int pixel = 0; pixel < 128; pixel++)
    1ee6:	68fb      	ldr	r3, [r7, #12]
    1ee8:	3301      	adds	r3, #1
    1eea:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:70 (discriminator 1)
    1eec:	68fb      	ldr	r3, [r7, #12]
    1eee:	2b7f      	cmp	r3, #127	; 0x7f
    1ef0:	ddef      	ble.n	1ed2 <sendArrayOfPixels+0x12>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:76
	{
		itoa_8_bit(array[pixel]);
		sendAChar(' ');
	}

	sendAChar('\n');
    1ef2:	200a      	movs	r0, #10
    1ef4:	f7ff ff74 	bl	1de0 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:77
	sendAChar('\r');
    1ef8:	200d      	movs	r0, #13
    1efa:	f7ff ff71 	bl	1de0 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:79

	serialFinished = TRUE;
    1efe:	4b03      	ldr	r3, [pc, #12]	; (1f0c <sendArrayOfPixels+0x4c>)
    1f00:	2201      	movs	r2, #1
    1f02:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:80
}
    1f04:	46bd      	mov	sp, r7
    1f06:	b004      	add	sp, #16
    1f08:	bd80      	pop	{r7, pc}
    1f0a:	46c0      	nop			; (mov r8, r8)
    1f0c:	1ffff1b0 	.word	0x1ffff1b0

00001f10 <main>:
main():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:98


/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable_Motors MISRA rule (6.3) checking. */
{
    1f10:	b580      	push	{r7, lr}
    1f12:	b0a0      	sub	sp, #128	; 0x80
    1f14:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:102
	uint8 image[128];

	/*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
	PE_low_level_init();
    1f16:	f000 ff8f 	bl	2e38 <PE_low_level_init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:105
	/*** End of Processor Expert internal initialization.                    ***/

	Camera_CLK_Interruption_Enable();
    1f1a:	4b15      	ldr	r3, [pc, #84]	; (1f70 <main+0x60>)
    1f1c:	68db      	ldr	r3, [r3, #12]
    1f1e:	1c18      	adds	r0, r3, #0
    1f20:	f001 fd02 	bl	3928 <TimerIntLdd1_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:108

	// Enables motors
	Enable_Motors_SetVal();
    1f24:	4b12      	ldr	r3, [pc, #72]	; (1f70 <main+0x60>)
    1f26:	699b      	ldr	r3, [r3, #24]
    1f28:	1c18      	adds	r0, r3, #0
    1f2a:	f000 fd3d 	bl	29a8 <BitIoLdd4_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:110

	Servomotor_Enable();
    1f2e:	4b10      	ldr	r3, [pc, #64]	; (1f70 <main+0x60>)
    1f30:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    1f32:	1c18      	adds	r0, r3, #0
    1f34:	f001 f8f6 	bl	3124 <PwmLdd5_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:113

	// Wait for the SW2 button to be pressed
	while (!SW2_Start_Button_GetVal());
    1f38:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:113 (discriminator 1)
    1f3a:	4b0d      	ldr	r3, [pc, #52]	; (1f70 <main+0x60>)
    1f3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    1f3e:	1c18      	adds	r0, r3, #0
    1f40:	f000 fcea 	bl	2918 <BitIoLdd3_GetVal>
    1f44:	1c03      	adds	r3, r0, #0
    1f46:	2b00      	cmp	r3, #0
    1f48:	d0f7      	beq.n	1f3a <main+0x2a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:115

	getRawImageMean(1);
    1f4a:	2001      	movs	r0, #1
    1f4c:	f7ff fda8 	bl	1aa0 <getRawImageMean>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:118
	//	sendArrayOfPixels(rawImage);

	calibration();
    1f50:	f7ff fed2 	bl	1cf8 <calibration>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:123 (discriminator 1)


	while (1)
	{
		getRawImageMean(1);
    1f54:	2001      	movs	r0, #1
    1f56:	f7ff fda3 	bl	1aa0 <getRawImageMean>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:125 (discriminator 1)

		binarization(image);
    1f5a:	1c3b      	adds	r3, r7, #0
    1f5c:	1c18      	adds	r0, r3, #0
    1f5e:	f7ff fee7 	bl	1d30 <binarization>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:126 (discriminator 1)
		sendArrayOfPixels(image);
    1f62:	1c3b      	adds	r3, r7, #0
    1f64:	1c18      	adds	r0, r3, #0
    1f66:	f7ff ffab 	bl	1ec0 <sendArrayOfPixels>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:128 (discriminator 1)

		updateBatteryLevel();
    1f6a:	f7ff fc57 	bl	181c <updateBatteryLevel>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:129 (discriminator 1)
	}
    1f6e:	e7f1      	b.n	1f54 <main+0x44>
    1f70:	1ffff0cc 	.word	0x1ffff0cc

00001f74 <__copy_rom_section>:
__copy_rom_section():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:44

/*
 *	Routine to copy a single section from ROM to RAM ...
 */
void __copy_rom_section(unsigned long dst, unsigned long src, unsigned long size)
{
    1f74:	b580      	push	{r7, lr}
    1f76:	b08a      	sub	sp, #40	; 0x28
    1f78:	af00      	add	r7, sp, #0
    1f7a:	60f8      	str	r0, [r7, #12]
    1f7c:	60b9      	str	r1, [r7, #8]
    1f7e:	607a      	str	r2, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:45
	unsigned long len = size;
    1f80:	687b      	ldr	r3, [r7, #4]
    1f82:	627b      	str	r3, [r7, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:47

	const unsigned int size_int = sizeof(int);
    1f84:	2304      	movs	r3, #4
    1f86:	623b      	str	r3, [r7, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:48
	const unsigned int mask_int = sizeof(int)-1;
    1f88:	2303      	movs	r3, #3
    1f8a:	61fb      	str	r3, [r7, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:50

	const unsigned int size_short = sizeof(short);
    1f8c:	2302      	movs	r3, #2
    1f8e:	61bb      	str	r3, [r7, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:51
	const unsigned int mask_short = sizeof(short)-1;
    1f90:	2301      	movs	r3, #1
    1f92:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:53

	const unsigned int size_char = sizeof(char);
    1f94:	2301      	movs	r3, #1
    1f96:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:55

	if( dst == src || size == 0)
    1f98:	68fa      	ldr	r2, [r7, #12]
    1f9a:	68bb      	ldr	r3, [r7, #8]
    1f9c:	429a      	cmp	r2, r3
    1f9e:	d002      	beq.n	1fa6 <__copy_rom_section+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:55 (discriminator 1)
    1fa0:	687b      	ldr	r3, [r7, #4]
    1fa2:	2b00      	cmp	r3, #0
    1fa4:	d100      	bne.n	1fa8 <__copy_rom_section+0x34>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:57
	{
		return;
    1fa6:	e04d      	b.n	2044 <__copy_rom_section+0xd0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:61
	}


	while( len > 0)
    1fa8:	e049      	b.n	203e <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:64
	{

		if( !(src & mask_int) && !(dst & mask_int) && len >= size_int)
    1faa:	68bb      	ldr	r3, [r7, #8]
    1fac:	69fa      	ldr	r2, [r7, #28]
    1fae:	4013      	ands	r3, r2
    1fb0:	d118      	bne.n	1fe4 <__copy_rom_section+0x70>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:64 (discriminator 1)
    1fb2:	68fb      	ldr	r3, [r7, #12]
    1fb4:	69fa      	ldr	r2, [r7, #28]
    1fb6:	4013      	ands	r3, r2
    1fb8:	d114      	bne.n	1fe4 <__copy_rom_section+0x70>
    1fba:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1fbc:	6a3b      	ldr	r3, [r7, #32]
    1fbe:	429a      	cmp	r2, r3
    1fc0:	d310      	bcc.n	1fe4 <__copy_rom_section+0x70>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:66
		{
			*((int *)dst)  = *((int*)src);
    1fc2:	68fb      	ldr	r3, [r7, #12]
    1fc4:	68ba      	ldr	r2, [r7, #8]
    1fc6:	6812      	ldr	r2, [r2, #0]
    1fc8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:67
			dst += size_int;
    1fca:	68fa      	ldr	r2, [r7, #12]
    1fcc:	6a3b      	ldr	r3, [r7, #32]
    1fce:	18d3      	adds	r3, r2, r3
    1fd0:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:68
			src += size_int;
    1fd2:	68ba      	ldr	r2, [r7, #8]
    1fd4:	6a3b      	ldr	r3, [r7, #32]
    1fd6:	18d3      	adds	r3, r2, r3
    1fd8:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:69
			len -= size_int;
    1fda:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1fdc:	6a3b      	ldr	r3, [r7, #32]
    1fde:	1ad3      	subs	r3, r2, r3
    1fe0:	627b      	str	r3, [r7, #36]	; 0x24
    1fe2:	e02c      	b.n	203e <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:71
		}
		else if( !(src & mask_short) && !(dst & mask_short) && len >= size_short)
    1fe4:	68bb      	ldr	r3, [r7, #8]
    1fe6:	697a      	ldr	r2, [r7, #20]
    1fe8:	4013      	ands	r3, r2
    1fea:	d118      	bne.n	201e <__copy_rom_section+0xaa>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:71 (discriminator 1)
    1fec:	68fb      	ldr	r3, [r7, #12]
    1fee:	697a      	ldr	r2, [r7, #20]
    1ff0:	4013      	ands	r3, r2
    1ff2:	d114      	bne.n	201e <__copy_rom_section+0xaa>
    1ff4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1ff6:	69bb      	ldr	r3, [r7, #24]
    1ff8:	429a      	cmp	r2, r3
    1ffa:	d310      	bcc.n	201e <__copy_rom_section+0xaa>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:73
		{
			*((short *)dst)  = *((short*)src);
    1ffc:	68fb      	ldr	r3, [r7, #12]
    1ffe:	68ba      	ldr	r2, [r7, #8]
    2000:	8812      	ldrh	r2, [r2, #0]
    2002:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:74
			dst += size_short;
    2004:	68fa      	ldr	r2, [r7, #12]
    2006:	69bb      	ldr	r3, [r7, #24]
    2008:	18d3      	adds	r3, r2, r3
    200a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:75
			src += size_short;
    200c:	68ba      	ldr	r2, [r7, #8]
    200e:	69bb      	ldr	r3, [r7, #24]
    2010:	18d3      	adds	r3, r2, r3
    2012:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:76
			len -= size_short;
    2014:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    2016:	69bb      	ldr	r3, [r7, #24]
    2018:	1ad3      	subs	r3, r2, r3
    201a:	627b      	str	r3, [r7, #36]	; 0x24
    201c:	e00f      	b.n	203e <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:80
		}
		else
		{
			*((char *)dst)  = *((char*)src);
    201e:	68fb      	ldr	r3, [r7, #12]
    2020:	68ba      	ldr	r2, [r7, #8]
    2022:	7812      	ldrb	r2, [r2, #0]
    2024:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:81
			dst += size_char;
    2026:	68fa      	ldr	r2, [r7, #12]
    2028:	693b      	ldr	r3, [r7, #16]
    202a:	18d3      	adds	r3, r2, r3
    202c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:82
			src += size_char;
    202e:	68ba      	ldr	r2, [r7, #8]
    2030:	693b      	ldr	r3, [r7, #16]
    2032:	18d3      	adds	r3, r2, r3
    2034:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:83
			len -= size_char;
    2036:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    2038:	693b      	ldr	r3, [r7, #16]
    203a:	1ad3      	subs	r3, r2, r3
    203c:	627b      	str	r3, [r7, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:61 (discriminator 1)
	{
		return;
	}


	while( len > 0)
    203e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2040:	2b00      	cmp	r3, #0
    2042:	d1b2      	bne.n	1faa <__copy_rom_section+0x36>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:86
			dst += size_char;
			src += size_char;
			len -= size_char;
		}
	}
}
    2044:	46bd      	mov	sp, r7
    2046:	b00a      	add	sp, #40	; 0x28
    2048:	bd80      	pop	{r7, pc}
    204a:	46c0      	nop			; (mov r8, r8)

0000204c <__copy_rom_sections_to_ram>:
__copy_rom_sections_to_ram():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:98
 *  It is a table of RomInfo
 *	structures.  The final entry in the table has all-zero
 *	fields.
 */
void __copy_rom_sections_to_ram(void)
{
    204c:	b590      	push	{r4, r7, lr}
    204e:	b083      	sub	sp, #12
    2050:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:102

	int				index;

	if (__S_romp == 0L) return;
    2052:	4b23      	ldr	r3, [pc, #140]	; (20e0 <__copy_rom_sections_to_ram+0x94>)
    2054:	2b00      	cmp	r3, #0
    2056:	d100      	bne.n	205a <__copy_rom_sections_to_ram+0xe>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:102 (discriminator 1)
    2058:	e03e      	b.n	20d8 <__copy_rom_sections_to_ram+0x8c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:107

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
    205a:	2300      	movs	r3, #0
    205c:	607b      	str	r3, [r7, #4]
    205e:	e01d      	b.n	209c <__copy_rom_sections_to_ram+0x50>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:113
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
	{
		__copy_rom_section( __S_romp[index].Target,
    2060:	491f      	ldr	r1, [pc, #124]	; (20e0 <__copy_rom_sections_to_ram+0x94>)
    2062:	687a      	ldr	r2, [r7, #4]
    2064:	1c13      	adds	r3, r2, #0
    2066:	005b      	lsls	r3, r3, #1
    2068:	189b      	adds	r3, r3, r2
    206a:	009b      	lsls	r3, r3, #2
    206c:	18cb      	adds	r3, r1, r3
    206e:	6858      	ldr	r0, [r3, #4]
    2070:	491b      	ldr	r1, [pc, #108]	; (20e0 <__copy_rom_sections_to_ram+0x94>)
    2072:	687a      	ldr	r2, [r7, #4]
    2074:	1c13      	adds	r3, r2, #0
    2076:	005b      	lsls	r3, r3, #1
    2078:	189b      	adds	r3, r3, r2
    207a:	009b      	lsls	r3, r3, #2
    207c:	5859      	ldr	r1, [r3, r1]
    207e:	4c18      	ldr	r4, [pc, #96]	; (20e0 <__copy_rom_sections_to_ram+0x94>)
    2080:	687a      	ldr	r2, [r7, #4]
    2082:	1c13      	adds	r3, r2, #0
    2084:	005b      	lsls	r3, r3, #1
    2086:	189b      	adds	r3, r3, r2
    2088:	009b      	lsls	r3, r3, #2
    208a:	18e3      	adds	r3, r4, r3
    208c:	3308      	adds	r3, #8
    208e:	681b      	ldr	r3, [r3, #0]
    2090:	1c1a      	adds	r2, r3, #0
    2092:	f7ff ff6f 	bl	1f74 <__copy_rom_section>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:111
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
    2096:	687b      	ldr	r3, [r7, #4]
    2098:	3301      	adds	r3, #1
    209a:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:108 (discriminator 1)

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
    209c:	4910      	ldr	r1, [pc, #64]	; (20e0 <__copy_rom_sections_to_ram+0x94>)
    209e:	687a      	ldr	r2, [r7, #4]
    20a0:	1c13      	adds	r3, r2, #0
    20a2:	005b      	lsls	r3, r3, #1
    20a4:	189b      	adds	r3, r3, r2
    20a6:	009b      	lsls	r3, r3, #2
    20a8:	585b      	ldr	r3, [r3, r1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:107 (discriminator 1)
	if (__S_romp == 0L) return;

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
    20aa:	2b00      	cmp	r3, #0
    20ac:	d1d8      	bne.n	2060 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:109
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
    20ae:	490c      	ldr	r1, [pc, #48]	; (20e0 <__copy_rom_sections_to_ram+0x94>)
    20b0:	687a      	ldr	r2, [r7, #4]
    20b2:	1c13      	adds	r3, r2, #0
    20b4:	005b      	lsls	r3, r3, #1
    20b6:	189b      	adds	r3, r3, r2
    20b8:	009b      	lsls	r3, r3, #2
    20ba:	18cb      	adds	r3, r1, r3
    20bc:	685b      	ldr	r3, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:108

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
    20be:	2b00      	cmp	r3, #0
    20c0:	d1ce      	bne.n	2060 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:110
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
    20c2:	4907      	ldr	r1, [pc, #28]	; (20e0 <__copy_rom_sections_to_ram+0x94>)
    20c4:	687a      	ldr	r2, [r7, #4]
    20c6:	1c13      	adds	r3, r2, #0
    20c8:	005b      	lsls	r3, r3, #1
    20ca:	189b      	adds	r3, r3, r2
    20cc:	009b      	lsls	r3, r3, #2
    20ce:	18cb      	adds	r3, r1, r3
    20d0:	3308      	adds	r3, #8
    20d2:	681b      	ldr	r3, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:109
	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
    20d4:	2b00      	cmp	r3, #0
    20d6:	d1c3      	bne.n	2060 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:118
		__copy_rom_section( __S_romp[index].Target,
							__S_romp[index].Source,
							__S_romp[index].Size );

	}
}
    20d8:	46bd      	mov	sp, r7
    20da:	b003      	add	sp, #12
    20dc:	bd90      	pop	{r4, r7, pc}
    20de:	46c0      	nop			; (mov r8, r8)
    20e0:	00003b74 	.word	0x00003b74

000020e4 <__init_registers>:
__init_registers():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:168
  }
}
#endif

void __attribute__ ((weak)) __init_registers(void)
{
    20e4:	b580      	push	{r7, lr}
    20e6:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:174
  #if defined(SCB_CPACR)
  /* Initialize FPU */
  SCB_CPACR |= SCB_CPACR_CP10(3U) | SCB_CPACR_CP11(3U); 
  #endif

}
    20e8:	46bd      	mov	sp, r7
    20ea:	bd80      	pop	{r7, pc}

000020ec <__init_user>:
__init_user():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:182
{

}

void __attribute__ ((weak)) __init_user(void)
{
    20ec:	b580      	push	{r7, lr}
    20ee:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:184

}
    20f0:	46bd      	mov	sp, r7
    20f2:	bd80      	pop	{r7, pc}

000020f4 <__thumb_startup>:
__thumb_startup():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:197
	__thumb_startup();
}

__attribute__((naked)) void __thumb_startup(void)
{
int addr = (int)__SP_INIT;
    20f4:	4c0a      	ldr	r4, [pc, #40]	; (2120 <skip_sp+0x18>)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:202

    /* setup the stack before we attempt anything else
       skip stack setup if __SP_INIT is 0
       assume sp is already setup. */
    __asm (
    20f6:	1c20      	adds	r0, r4, #0
    20f8:	2800      	cmp	r0, #0
    20fa:	d005      	beq.n	2108 <skip_sp>
    20fc:	4685      	mov	sp, r0
    20fe:	b081      	sub	sp, #4
    2100:	2000      	movs	r0, #0
    2102:	43c0      	mvns	r0, r0
    2104:	9000      	str	r0, [sp, #0]
    2106:	b001      	add	sp, #4

00002108 <skip_sp>:
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:216
    "add  sp,#4\n\t"
    "skip_sp:\n\t"
    ::"r"(addr));

    /* Setup registers */
    __init_registers();
    2108:	f7ff ffec 	bl	20e4 <__init_registers>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:219
    
    /* setup hardware */
    __init_hardware();
    210c:	f000 fe0c 	bl	2d28 <__init_hardware>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:222
    
    /* SUPPORT_ROM_TO_RAM */
    __copy_rom_sections_to_ram();
    2110:	f7ff ff9c 	bl	204c <__copy_rom_sections_to_ram>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:225
    
    /* initializations before main, user specific */
    __init_user();
    2114:	f7ff ffea 	bl	20ec <__init_user>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:228

#ifndef __ATOLLIC__
    _start();
    2118:	f7fe f9aa 	bl	470 <_mainCRTStartup>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:238 (discriminator 1)
    __libc_init_array();
    main();
#endif

    /*	should never get here */
    while (1);
    211c:	e7fe      	b.n	211c <skip_sp+0x14>
    211e:	46c0      	nop			; (mov r8, r8)
    2120:	20003000 	.word	0x20003000

00002124 <ClrSumV>:
ClrSumV():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:133
**         number of last conversions.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void ClrSumV(void)
{
    2124:	b580      	push	{r7, lr}
    2126:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:134
  AD_Converter_OutV[0] = 0U;           /* Set variable for storing measured values to 0 */
    2128:	4b03      	ldr	r3, [pc, #12]	; (2138 <ClrSumV+0x14>)
    212a:	2200      	movs	r2, #0
    212c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:135
  AD_Converter_OutV[1] = 0U;           /* Set variable for storing measured values to 0 */
    212e:	4b02      	ldr	r3, [pc, #8]	; (2138 <ClrSumV+0x14>)
    2130:	2200      	movs	r2, #0
    2132:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:136
}
    2134:	46bd      	mov	sp, r7
    2136:	bd80      	pop	{r7, pc}
    2138:	1ffff34c 	.word	0x1ffff34c

0000213c <AD_Converter_HWEnDi>:
AD_Converter_HWEnDi():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:150
**         Enable and Disable methods and several internal methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AD_Converter_HWEnDi(void)
{
    213c:	b580      	push	{r7, lr}
    213e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:151
  if (ModeFlg) {                       /* Start or stop measurement? */
    2140:	4b1e      	ldr	r3, [pc, #120]	; (21bc <AD_Converter_HWEnDi+0x80>)
    2142:	781b      	ldrb	r3, [r3, #0]
    2144:	b2db      	uxtb	r3, r3
    2146:	2b00      	cmp	r3, #0
    2148:	d036      	beq.n	21b8 <AD_Converter_HWEnDi+0x7c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:152
    if (ModeFlg != SINGLE) {
    214a:	4b1c      	ldr	r3, [pc, #112]	; (21bc <AD_Converter_HWEnDi+0x80>)
    214c:	781b      	ldrb	r3, [r3, #0]
    214e:	b2db      	uxtb	r3, r3
    2150:	2b03      	cmp	r3, #3
    2152:	d00b      	beq.n	216c <AD_Converter_HWEnDi+0x30>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:153
      OutFlg = 0U;                     /* Output values aren't available */
    2154:	4b1a      	ldr	r3, [pc, #104]	; (21c0 <AD_Converter_HWEnDi+0x84>)
    2156:	2200      	movs	r2, #0
    2158:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:154
      SumChan = 0U;                    /* Set the counter of measured channels to 0 */
    215a:	4b1a      	ldr	r3, [pc, #104]	; (21c4 <AD_Converter_HWEnDi+0x88>)
    215c:	2200      	movs	r2, #0
    215e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:155
      ClrSumV();                       /* Clear measured values */
    2160:	f7ff ffe0 	bl	2124 <ClrSumV>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:156
      SampleGroup[0].ChannelIdx = 0U;
    2164:	4b18      	ldr	r3, [pc, #96]	; (21c8 <AD_Converter_HWEnDi+0x8c>)
    2166:	2200      	movs	r2, #0
    2168:	701a      	strb	r2, [r3, #0]
    216a:	e018      	b.n	219e <AD_Converter_HWEnDi+0x62>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:159
    }
    else {
      OutFlg &= (byte)(~(byte)Table[SumChan]); /* Output value isn't available */
    216c:	4b15      	ldr	r3, [pc, #84]	; (21c4 <AD_Converter_HWEnDi+0x88>)
    216e:	781b      	ldrb	r3, [r3, #0]
    2170:	b2db      	uxtb	r3, r3
    2172:	4a16      	ldr	r2, [pc, #88]	; (21cc <AD_Converter_HWEnDi+0x90>)
    2174:	5cd3      	ldrb	r3, [r2, r3]
    2176:	43db      	mvns	r3, r3
    2178:	b2db      	uxtb	r3, r3
    217a:	4a11      	ldr	r2, [pc, #68]	; (21c0 <AD_Converter_HWEnDi+0x84>)
    217c:	7812      	ldrb	r2, [r2, #0]
    217e:	b2d2      	uxtb	r2, r2
    2180:	4013      	ands	r3, r2
    2182:	b2da      	uxtb	r2, r3
    2184:	4b0e      	ldr	r3, [pc, #56]	; (21c0 <AD_Converter_HWEnDi+0x84>)
    2186:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:160
      AD_Converter_OutV[SumChan] = 0U; /* Set variable for storing measured values to 0 */
    2188:	4b0e      	ldr	r3, [pc, #56]	; (21c4 <AD_Converter_HWEnDi+0x88>)
    218a:	781b      	ldrb	r3, [r3, #0]
    218c:	b2db      	uxtb	r3, r3
    218e:	4a10      	ldr	r2, [pc, #64]	; (21d0 <AD_Converter_HWEnDi+0x94>)
    2190:	2100      	movs	r1, #0
    2192:	54d1      	strb	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:161
      SampleGroup[0].ChannelIdx = SumChan;
    2194:	4b0b      	ldr	r3, [pc, #44]	; (21c4 <AD_Converter_HWEnDi+0x88>)
    2196:	781b      	ldrb	r3, [r3, #0]
    2198:	b2da      	uxtb	r2, r3
    219a:	4b0b      	ldr	r3, [pc, #44]	; (21c8 <AD_Converter_HWEnDi+0x8c>)
    219c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:163
    }
    (void)AdcLdd1_CreateSampleGroup(AdcLdd1_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    219e:	4b0d      	ldr	r3, [pc, #52]	; (21d4 <AD_Converter_HWEnDi+0x98>)
    21a0:	681a      	ldr	r2, [r3, #0]
    21a2:	4b09      	ldr	r3, [pc, #36]	; (21c8 <AD_Converter_HWEnDi+0x8c>)
    21a4:	1c10      	adds	r0, r2, #0
    21a6:	1c19      	adds	r1, r3, #0
    21a8:	2201      	movs	r2, #1
    21aa:	f000 f997 	bl	24dc <AdcLdd1_CreateSampleGroup>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:164
    (void)AdcLdd1_StartSingleMeasurement(AdcLdd1_DeviceDataPtr);
    21ae:	4b09      	ldr	r3, [pc, #36]	; (21d4 <AD_Converter_HWEnDi+0x98>)
    21b0:	681b      	ldr	r3, [r3, #0]
    21b2:	1c18      	adds	r0, r3, #0
    21b4:	f000 f970 	bl	2498 <AdcLdd1_StartSingleMeasurement>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:166
  }
}
    21b8:	46bd      	mov	sp, r7
    21ba:	bd80      	pop	{r7, pc}
    21bc:	1ffff085 	.word	0x1ffff085
    21c0:	1ffff08c 	.word	0x1ffff08c
    21c4:	1ffff084 	.word	0x1ffff084
    21c8:	1ffff088 	.word	0x1ffff088
    21cc:	00003adc 	.word	0x00003adc
    21d0:	1ffff34c 	.word	0x1ffff34c
    21d4:	1ffff348 	.word	0x1ffff348

000021d8 <AD_Converter_MeasureChan>:
AD_Converter_MeasureChan():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:252
byte AD_Converter_MeasureChan(bool WaitForResult, byte Channel)
was optimised based on the current component setting. An appropriate macro has been defined 
in the AD1.h to maintain API compatibility.
*/
byte AD_Converter_MeasureChan(bool WaitForResult,byte Channel)
{
    21d8:	b580      	push	{r7, lr}
    21da:	b082      	sub	sp, #8
    21dc:	af00      	add	r7, sp, #0
    21de:	1c0a      	adds	r2, r1, #0
    21e0:	1dfb      	adds	r3, r7, #7
    21e2:	1c01      	adds	r1, r0, #0
    21e4:	7019      	strb	r1, [r3, #0]
    21e6:	1dbb      	adds	r3, r7, #6
    21e8:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:253
  if (Channel >= 2U) {                 /* Is channel number greater than or equal to 2 */
    21ea:	1dbb      	adds	r3, r7, #6
    21ec:	781b      	ldrb	r3, [r3, #0]
    21ee:	2b01      	cmp	r3, #1
    21f0:	d901      	bls.n	21f6 <AD_Converter_MeasureChan+0x1e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:254
    return ERR_RANGE;                  /* If yes then error */
    21f2:	2302      	movs	r3, #2
    21f4:	e01a      	b.n	222c <AD_Converter_MeasureChan+0x54>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:256
  }
  if (ModeFlg != STOP) {               /* Is the device in different mode than "stop"? */
    21f6:	4b0f      	ldr	r3, [pc, #60]	; (2234 <AD_Converter_MeasureChan+0x5c>)
    21f8:	781b      	ldrb	r3, [r3, #0]
    21fa:	b2db      	uxtb	r3, r3
    21fc:	2b00      	cmp	r3, #0
    21fe:	d001      	beq.n	2204 <AD_Converter_MeasureChan+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:257
    return ERR_BUSY;                   /* If yes then error */
    2200:	2308      	movs	r3, #8
    2202:	e013      	b.n	222c <AD_Converter_MeasureChan+0x54>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:259
  }
  ModeFlg = SINGLE;                    /* Set state of device to the measure mode */
    2204:	4b0b      	ldr	r3, [pc, #44]	; (2234 <AD_Converter_MeasureChan+0x5c>)
    2206:	2203      	movs	r2, #3
    2208:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:260
  SumChan = Channel;                   /* Set required channel */
    220a:	4b0b      	ldr	r3, [pc, #44]	; (2238 <AD_Converter_MeasureChan+0x60>)
    220c:	1dba      	adds	r2, r7, #6
    220e:	7812      	ldrb	r2, [r2, #0]
    2210:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:261
  AD_Converter_HWEnDi();               /* Enable the device */
    2212:	f7ff ff93 	bl	213c <AD_Converter_HWEnDi>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:262
  if (WaitForResult) {                 /* Is WaitForResult TRUE? */
    2216:	1dfb      	adds	r3, r7, #7
    2218:	781b      	ldrb	r3, [r3, #0]
    221a:	2b00      	cmp	r3, #0
    221c:	d005      	beq.n	222a <AD_Converter_MeasureChan+0x52>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:263
    while (ModeFlg == SINGLE) {}       /* If yes then wait for end of measurement */
    221e:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:263 (discriminator 1)
    2220:	4b04      	ldr	r3, [pc, #16]	; (2234 <AD_Converter_MeasureChan+0x5c>)
    2222:	781b      	ldrb	r3, [r3, #0]
    2224:	b2db      	uxtb	r3, r3
    2226:	2b03      	cmp	r3, #3
    2228:	d0fa      	beq.n	2220 <AD_Converter_MeasureChan+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:265
  }
  return ERR_OK;                       /* OK */
    222a:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:266
}
    222c:	1c18      	adds	r0, r3, #0
    222e:	46bd      	mov	sp, r7
    2230:	b002      	add	sp, #8
    2232:	bd80      	pop	{r7, pc}
    2234:	1ffff085 	.word	0x1ffff085
    2238:	1ffff084 	.word	0x1ffff084

0000223c <AD_Converter_GetChanValue>:
AD_Converter_GetChanValue():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:352
byte AD_Converter_GetChanValue(byte Channel, void* Value)
was optimised based on the current component setting. An appropriate macro has been defined 
in the AD1.h to maintain API compatibility.
*/
byte AD_Converter_GetChanValue(byte Channel, void* Value)
{
    223c:	b580      	push	{r7, lr}
    223e:	b082      	sub	sp, #8
    2240:	af00      	add	r7, sp, #0
    2242:	1c02      	adds	r2, r0, #0
    2244:	6039      	str	r1, [r7, #0]
    2246:	1dfb      	adds	r3, r7, #7
    2248:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:353
  if (Channel >= 2U) {                 /* Is channel number greater than or equal to 2 */
    224a:	1dfb      	adds	r3, r7, #7
    224c:	781b      	ldrb	r3, [r3, #0]
    224e:	2b01      	cmp	r3, #1
    2250:	d901      	bls.n	2256 <AD_Converter_GetChanValue+0x1a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:354
    return ERR_RANGE;                  /* If yes then error */
    2252:	2302      	movs	r3, #2
    2254:	e014      	b.n	2280 <AD_Converter_GetChanValue+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:356
  }
  if ((OutFlg & Table[Channel]) == 0U) { /* Is output flag set? */
    2256:	1dfb      	adds	r3, r7, #7
    2258:	781b      	ldrb	r3, [r3, #0]
    225a:	4a0b      	ldr	r2, [pc, #44]	; (2288 <AD_Converter_GetChanValue+0x4c>)
    225c:	5cd3      	ldrb	r3, [r2, r3]
    225e:	4a0b      	ldr	r2, [pc, #44]	; (228c <AD_Converter_GetChanValue+0x50>)
    2260:	7812      	ldrb	r2, [r2, #0]
    2262:	b2d2      	uxtb	r2, r2
    2264:	4013      	ands	r3, r2
    2266:	b2db      	uxtb	r3, r3
    2268:	2b00      	cmp	r3, #0
    226a:	d101      	bne.n	2270 <AD_Converter_GetChanValue+0x34>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:357
    return ERR_NOTAVAIL;               /* If no then error */
    226c:	2309      	movs	r3, #9
    226e:	e007      	b.n	2280 <AD_Converter_GetChanValue+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:360
  }
  /* Copy value from temporary buffer */
  *(AdcLdd1_TResultData *)Value = AD_Converter_OutV[Channel];
    2270:	1dfb      	adds	r3, r7, #7
    2272:	781b      	ldrb	r3, [r3, #0]
    2274:	4a06      	ldr	r2, [pc, #24]	; (2290 <AD_Converter_GetChanValue+0x54>)
    2276:	5cd3      	ldrb	r3, [r2, r3]
    2278:	b2da      	uxtb	r2, r3
    227a:	683b      	ldr	r3, [r7, #0]
    227c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:361
  return ERR_OK;
    227e:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:362
}
    2280:	1c18      	adds	r0, r3, #0
    2282:	46bd      	mov	sp, r7
    2284:	b002      	add	sp, #8
    2286:	bd80      	pop	{r7, pc}
    2288:	00003adc 	.word	0x00003adc
    228c:	1ffff08c 	.word	0x1ffff08c
    2290:	1ffff34c 	.word	0x1ffff34c

00002294 <AdcLdd1_OnMeasurementComplete>:
AdcLdd1_OnMeasurementComplete():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:420
**         event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AdcLdd1_OnMeasurementComplete(LDD_TUserData *UserDataPtr)
{
    2294:	b580      	push	{r7, lr}
    2296:	b082      	sub	sp, #8
    2298:	af00      	add	r7, sp, #0
    229a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:422
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  if (ModeFlg == CALIBRATING) {        /* If the driver is in CALIBRATING mode */
    229c:	4b34      	ldr	r3, [pc, #208]	; (2370 <AdcLdd1_OnMeasurementComplete+0xdc>)
    229e:	781b      	ldrb	r3, [r3, #0]
    22a0:	b2db      	uxtb	r3, r3
    22a2:	2b04      	cmp	r3, #4
    22a4:	d108      	bne.n	22b8 <AdcLdd1_OnMeasurementComplete+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:423
    (void)AdcLdd1_GetCalibrationResultStatus(AdcLdd1_DeviceDataPtr);
    22a6:	4b33      	ldr	r3, [pc, #204]	; (2374 <AdcLdd1_OnMeasurementComplete+0xe0>)
    22a8:	681b      	ldr	r3, [r3, #0]
    22aa:	1c18      	adds	r0, r3, #0
    22ac:	f000 f97c 	bl	25a8 <AdcLdd1_GetCalibrationResultStatus>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:424
    ModeFlg = STOP;                    /* Set the device to the stop mode */
    22b0:	4b2f      	ldr	r3, [pc, #188]	; (2370 <AdcLdd1_OnMeasurementComplete+0xdc>)
    22b2:	2200      	movs	r2, #0
    22b4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:425
    return;                            /* Return from interrupt */
    22b6:	e058      	b.n	236a <AdcLdd1_OnMeasurementComplete+0xd6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:427
  }
  if (ModeFlg != SINGLE) {
    22b8:	4b2d      	ldr	r3, [pc, #180]	; (2370 <AdcLdd1_OnMeasurementComplete+0xdc>)
    22ba:	781b      	ldrb	r3, [r3, #0]
    22bc:	b2db      	uxtb	r3, r3
    22be:	2b03      	cmp	r3, #3
    22c0:	d036      	beq.n	2330 <AdcLdd1_OnMeasurementComplete+0x9c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:428
    AdcLdd1_GetMeasuredValues(AdcLdd1_DeviceDataPtr, (LDD_TData *)&AD_Converter_OutV[SumChan]);
    22c2:	4b2c      	ldr	r3, [pc, #176]	; (2374 <AdcLdd1_OnMeasurementComplete+0xe0>)
    22c4:	681a      	ldr	r2, [r3, #0]
    22c6:	4b2c      	ldr	r3, [pc, #176]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    22c8:	781b      	ldrb	r3, [r3, #0]
    22ca:	b2db      	uxtb	r3, r3
    22cc:	1c19      	adds	r1, r3, #0
    22ce:	4b2b      	ldr	r3, [pc, #172]	; (237c <AdcLdd1_OnMeasurementComplete+0xe8>)
    22d0:	18cb      	adds	r3, r1, r3
    22d2:	1c10      	adds	r0, r2, #0
    22d4:	1c19      	adds	r1, r3, #0
    22d6:	f000 f937 	bl	2548 <AdcLdd1_GetMeasuredValues>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:429
    SumChan++;                         /* Increase counter of measured channels*/
    22da:	4b27      	ldr	r3, [pc, #156]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    22dc:	781b      	ldrb	r3, [r3, #0]
    22de:	b2db      	uxtb	r3, r3
    22e0:	3301      	adds	r3, #1
    22e2:	b2da      	uxtb	r2, r3
    22e4:	4b24      	ldr	r3, [pc, #144]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    22e6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:430
    if (SumChan == 2U) {               /* Is number of measured channels equal to the number of channels used in the component? */
    22e8:	4b23      	ldr	r3, [pc, #140]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    22ea:	781b      	ldrb	r3, [r3, #0]
    22ec:	b2db      	uxtb	r3, r3
    22ee:	2b02      	cmp	r3, #2
    22f0:	d10b      	bne.n	230a <AdcLdd1_OnMeasurementComplete+0x76>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:431
      SumChan = 0U;                    /* If yes then set the counter of measured channels to 0 */
    22f2:	4b21      	ldr	r3, [pc, #132]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    22f4:	2200      	movs	r2, #0
    22f6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:432
      OutFlg = 0x03U;                  /* Measured values are available */
    22f8:	4b21      	ldr	r3, [pc, #132]	; (2380 <AdcLdd1_OnMeasurementComplete+0xec>)
    22fa:	2203      	movs	r2, #3
    22fc:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:433
      AD_Converter_OnEnd();            /* If yes then invoke user event */
    22fe:	f7ff fcd5 	bl	1cac <AD_Converter_OnEnd>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:434
      ModeFlg = STOP;                  /* Set the device to the stop mode */
    2302:	4b1b      	ldr	r3, [pc, #108]	; (2370 <AdcLdd1_OnMeasurementComplete+0xdc>)
    2304:	2200      	movs	r2, #0
    2306:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:435
      return;                          /* Return from interrupt */
    2308:	e02f      	b.n	236a <AdcLdd1_OnMeasurementComplete+0xd6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:437
    }
    SampleGroup[0].ChannelIdx = SumChan; /* Start measurement of next channel */
    230a:	4b1b      	ldr	r3, [pc, #108]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    230c:	781b      	ldrb	r3, [r3, #0]
    230e:	b2da      	uxtb	r2, r3
    2310:	4b1c      	ldr	r3, [pc, #112]	; (2384 <AdcLdd1_OnMeasurementComplete+0xf0>)
    2312:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:438
    (void)AdcLdd1_CreateSampleGroup(AdcLdd1_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    2314:	4b17      	ldr	r3, [pc, #92]	; (2374 <AdcLdd1_OnMeasurementComplete+0xe0>)
    2316:	681a      	ldr	r2, [r3, #0]
    2318:	4b1a      	ldr	r3, [pc, #104]	; (2384 <AdcLdd1_OnMeasurementComplete+0xf0>)
    231a:	1c10      	adds	r0, r2, #0
    231c:	1c19      	adds	r1, r3, #0
    231e:	2201      	movs	r2, #1
    2320:	f000 f8dc 	bl	24dc <AdcLdd1_CreateSampleGroup>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:439
    (void)AdcLdd1_StartSingleMeasurement(AdcLdd1_DeviceDataPtr);
    2324:	4b13      	ldr	r3, [pc, #76]	; (2374 <AdcLdd1_OnMeasurementComplete+0xe0>)
    2326:	681b      	ldr	r3, [r3, #0]
    2328:	1c18      	adds	r0, r3, #0
    232a:	f000 f8b5 	bl	2498 <AdcLdd1_StartSingleMeasurement>
    232e:	e01c      	b.n	236a <AdcLdd1_OnMeasurementComplete+0xd6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:442
  }
  else {
    AdcLdd1_GetMeasuredValues(AdcLdd1_DeviceDataPtr, (LDD_TData *)&AD_Converter_OutV[SumChan]);
    2330:	4b10      	ldr	r3, [pc, #64]	; (2374 <AdcLdd1_OnMeasurementComplete+0xe0>)
    2332:	681a      	ldr	r2, [r3, #0]
    2334:	4b10      	ldr	r3, [pc, #64]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    2336:	781b      	ldrb	r3, [r3, #0]
    2338:	b2db      	uxtb	r3, r3
    233a:	1c19      	adds	r1, r3, #0
    233c:	4b0f      	ldr	r3, [pc, #60]	; (237c <AdcLdd1_OnMeasurementComplete+0xe8>)
    233e:	18cb      	adds	r3, r1, r3
    2340:	1c10      	adds	r0, r2, #0
    2342:	1c19      	adds	r1, r3, #0
    2344:	f000 f900 	bl	2548 <AdcLdd1_GetMeasuredValues>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:443
    OutFlg |= Table[SumChan];          /* Value of measured channel is available */
    2348:	4b0b      	ldr	r3, [pc, #44]	; (2378 <AdcLdd1_OnMeasurementComplete+0xe4>)
    234a:	781b      	ldrb	r3, [r3, #0]
    234c:	b2db      	uxtb	r3, r3
    234e:	4a0e      	ldr	r2, [pc, #56]	; (2388 <AdcLdd1_OnMeasurementComplete+0xf4>)
    2350:	5cd2      	ldrb	r2, [r2, r3]
    2352:	4b0b      	ldr	r3, [pc, #44]	; (2380 <AdcLdd1_OnMeasurementComplete+0xec>)
    2354:	781b      	ldrb	r3, [r3, #0]
    2356:	b2db      	uxtb	r3, r3
    2358:	4313      	orrs	r3, r2
    235a:	b2da      	uxtb	r2, r3
    235c:	4b08      	ldr	r3, [pc, #32]	; (2380 <AdcLdd1_OnMeasurementComplete+0xec>)
    235e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:444
    AD_Converter_OnEnd();              /* If yes then invoke user event */
    2360:	f7ff fca4 	bl	1cac <AD_Converter_OnEnd>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:445
    ModeFlg = STOP;                    /* Set the device to the stop mode */
    2364:	4b02      	ldr	r3, [pc, #8]	; (2370 <AdcLdd1_OnMeasurementComplete+0xdc>)
    2366:	2200      	movs	r2, #0
    2368:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:447
  }
}
    236a:	46bd      	mov	sp, r7
    236c:	b002      	add	sp, #8
    236e:	bd80      	pop	{r7, pc}
    2370:	1ffff085 	.word	0x1ffff085
    2374:	1ffff348 	.word	0x1ffff348
    2378:	1ffff084 	.word	0x1ffff084
    237c:	1ffff34c 	.word	0x1ffff34c
    2380:	1ffff08c 	.word	0x1ffff08c
    2384:	1ffff088 	.word	0x1ffff088
    2388:	00003adc 	.word	0x00003adc

0000238c <AD_Converter_Init>:
AD_Converter_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:461
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AD_Converter_Init(void)
{
    238c:	b580      	push	{r7, lr}
    238e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:462
  OutFlg = 0U;                         /* No measured value */
    2390:	4b06      	ldr	r3, [pc, #24]	; (23ac <AD_Converter_Init+0x20>)
    2392:	2200      	movs	r2, #0
    2394:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:463
  ModeFlg = STOP;                      /* Device isn't running */
    2396:	4b06      	ldr	r3, [pc, #24]	; (23b0 <AD_Converter_Init+0x24>)
    2398:	2200      	movs	r2, #0
    239a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:464
  AdcLdd1_DeviceDataPtr = AdcLdd1_Init(NULL); /* Calling init method of the inherited component */
    239c:	2000      	movs	r0, #0
    239e:	f000 f80b 	bl	23b8 <AdcLdd1_Init>
    23a2:	1c02      	adds	r2, r0, #0
    23a4:	4b03      	ldr	r3, [pc, #12]	; (23b4 <AD_Converter_Init+0x28>)
    23a6:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:465
}
    23a8:	46bd      	mov	sp, r7
    23aa:	bd80      	pop	{r7, pc}
    23ac:	1ffff08c 	.word	0x1ffff08c
    23b0:	1ffff085 	.word	0x1ffff085
    23b4:	1ffff348 	.word	0x1ffff348

000023b8 <AdcLdd1_Init>:
AdcLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:183
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* AdcLdd1_Init(LDD_TUserData *UserDataPtr)
{
    23b8:	b580      	push	{r7, lr}
    23ba:	b084      	sub	sp, #16
    23bc:	af00      	add	r7, sp, #0
    23be:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:188
  /* Allocate LDD device structure */
  AdcLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    23c0:	4b2b      	ldr	r3, [pc, #172]	; (2470 <AdcLdd1_Init+0xb8>)
    23c2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:189
  DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
    23c4:	68fb      	ldr	r3, [r7, #12]
    23c6:	687a      	ldr	r2, [r7, #4]
    23c8:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:192
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_ADC0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    23ca:	4b2a      	ldr	r3, [pc, #168]	; (2474 <AdcLdd1_Init+0xbc>)
    23cc:	68fa      	ldr	r2, [r7, #12]
    23ce:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:193
  DeviceDataPrv->SampleCount = 0U;     /* Initializing SampleCount for right access of some methods to SC1n registers before first conversion is done */
    23d0:	68fb      	ldr	r3, [r7, #12]
    23d2:	2200      	movs	r2, #0
    23d4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:194
  DeviceDataPrv->CompleteStatus = FALSE; /* Clear measurement complete status flag */
    23d6:	68fb      	ldr	r3, [r7, #12]
    23d8:	2200      	movs	r2, #0
    23da:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:196
  /* SIM_SCGC6: ADC0=1 */
  SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    23dc:	4a26      	ldr	r2, [pc, #152]	; (2478 <AdcLdd1_Init+0xc0>)
    23de:	4926      	ldr	r1, [pc, #152]	; (2478 <AdcLdd1_Init+0xc0>)
    23e0:	4b26      	ldr	r3, [pc, #152]	; (247c <AdcLdd1_Init+0xc4>)
    23e2:	58cb      	ldr	r3, [r1, r3]
    23e4:	2180      	movs	r1, #128	; 0x80
    23e6:	0509      	lsls	r1, r1, #20
    23e8:	4319      	orrs	r1, r3
    23ea:	4b24      	ldr	r3, [pc, #144]	; (247c <AdcLdd1_Init+0xc4>)
    23ec:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:199
  /* Interrupt vector(s) priority setting */
  /* NVIC_IPR3: PRI_15=0x80 */
  NVIC_IPR3 = (uint32_t)((NVIC_IPR3 & (uint32_t)~(uint32_t)(
    23ee:	4a24      	ldr	r2, [pc, #144]	; (2480 <AdcLdd1_Init+0xc8>)
    23f0:	4923      	ldr	r1, [pc, #140]	; (2480 <AdcLdd1_Init+0xc8>)
    23f2:	23c3      	movs	r3, #195	; 0xc3
    23f4:	009b      	lsls	r3, r3, #2
    23f6:	58cb      	ldr	r3, [r1, r3]
    23f8:	009b      	lsls	r3, r3, #2
    23fa:	0899      	lsrs	r1, r3, #2
    23fc:	23c3      	movs	r3, #195	; 0xc3
    23fe:	009b      	lsls	r3, r3, #2
    2400:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:205
               NVIC_IP_PRI_15(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_15(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x8000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x8000);
    2402:	4b1f      	ldr	r3, [pc, #124]	; (2480 <AdcLdd1_Init+0xc8>)
    2404:	4a1e      	ldr	r2, [pc, #120]	; (2480 <AdcLdd1_Init+0xc8>)
    2406:	6812      	ldr	r2, [r2, #0]
    2408:	2180      	movs	r1, #128	; 0x80
    240a:	0209      	lsls	r1, r1, #8
    240c:	430a      	orrs	r2, r1
    240e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:207
  /* PORTD_PCR5: ISF=0,MUX=0 */
  PORTD_PCR5 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    2410:	4b1c      	ldr	r3, [pc, #112]	; (2484 <AdcLdd1_Init+0xcc>)
    2412:	4a1c      	ldr	r2, [pc, #112]	; (2484 <AdcLdd1_Init+0xcc>)
    2414:	6951      	ldr	r1, [r2, #20]
    2416:	4a1c      	ldr	r2, [pc, #112]	; (2488 <AdcLdd1_Init+0xd0>)
    2418:	400a      	ands	r2, r1
    241a:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:209
  /* ADC0_CFG2: MUXSEL=1 */
  ADC0_CFG2 |= ADC_CFG2_MUXSEL_MASK;
    241c:	4b1b      	ldr	r3, [pc, #108]	; (248c <AdcLdd1_Init+0xd4>)
    241e:	4a1b      	ldr	r2, [pc, #108]	; (248c <AdcLdd1_Init+0xd4>)
    2420:	68d2      	ldr	r2, [r2, #12]
    2422:	2110      	movs	r1, #16
    2424:	430a      	orrs	r2, r1
    2426:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:211
  /* PORTE_PCR29: ISF=0,MUX=0 */
  PORTE_PCR29 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    2428:	4b19      	ldr	r3, [pc, #100]	; (2490 <AdcLdd1_Init+0xd8>)
    242a:	4a19      	ldr	r2, [pc, #100]	; (2490 <AdcLdd1_Init+0xd8>)
    242c:	6f51      	ldr	r1, [r2, #116]	; 0x74
    242e:	4a16      	ldr	r2, [pc, #88]	; (2488 <AdcLdd1_Init+0xd0>)
    2430:	400a      	ands	r2, r1
    2432:	675a      	str	r2, [r3, #116]	; 0x74
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:213
  /* ADC0_CFG2: MUXSEL=1 */
  ADC0_CFG2 |= ADC_CFG2_MUXSEL_MASK;
    2434:	4b15      	ldr	r3, [pc, #84]	; (248c <AdcLdd1_Init+0xd4>)
    2436:	4a15      	ldr	r2, [pc, #84]	; (248c <AdcLdd1_Init+0xd4>)
    2438:	68d2      	ldr	r2, [r2, #12]
    243a:	2110      	movs	r1, #16
    243c:	430a      	orrs	r2, r1
    243e:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:215
  /* ADC0_CFG1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADLPC=0,ADIV=3,ADLSMP=0,MODE=0,ADICLK=1 */
  ADC0_CFG1 = ADC_CFG1_ADIV(0x03) |
    2440:	4b12      	ldr	r3, [pc, #72]	; (248c <AdcLdd1_Init+0xd4>)
    2442:	2261      	movs	r2, #97	; 0x61
    2444:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:220
              ADC_CFG1_MODE(0x00) |
              ADC_CFG1_ADICLK(0x01);

  /* ADC0_CFG2: ADACKEN=0,ADHSC=0,ADLSTS=0 */
  ADC0_CFG2 &= (uint32_t)~(uint32_t)(
    2446:	4b11      	ldr	r3, [pc, #68]	; (248c <AdcLdd1_Init+0xd4>)
    2448:	4a10      	ldr	r2, [pc, #64]	; (248c <AdcLdd1_Init+0xd4>)
    244a:	68d2      	ldr	r2, [r2, #12]
    244c:	210f      	movs	r1, #15
    244e:	438a      	bics	r2, r1
    2450:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:226
                ADC_CFG2_ADACKEN_MASK |
                ADC_CFG2_ADHSC_MASK |
                ADC_CFG2_ADLSTS(0x03)
               );
  /* ADC0_SC2: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADACT=0,ADTRG=0,ACFE=0,ACFGT=0,ACREN=0,DMAEN=0,REFSEL=0 */
  ADC0_SC2 = ADC_SC2_REFSEL(0x00);
    2452:	4b0e      	ldr	r3, [pc, #56]	; (248c <AdcLdd1_Init+0xd4>)
    2454:	2200      	movs	r2, #0
    2456:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:228
  /* ADC0_SC3: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CAL=0,CALF=1,??=0,??=0,ADCO=0,AVGE=0,AVGS=0 */
  ADC0_SC3 = (ADC_SC3_CALF_MASK | ADC_SC3_AVGS(0x00));
    2458:	4b0c      	ldr	r3, [pc, #48]	; (248c <AdcLdd1_Init+0xd4>)
    245a:	2240      	movs	r2, #64	; 0x40
    245c:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:230
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_AdcLdd1_ID,DeviceDataPrv);
    245e:	4b0d      	ldr	r3, [pc, #52]	; (2494 <AdcLdd1_Init+0xdc>)
    2460:	68fa      	ldr	r2, [r7, #12]
    2462:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:231
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the data data structure */
    2464:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:232
}
    2466:	1c18      	adds	r0, r3, #0
    2468:	46bd      	mov	sp, r7
    246a:	b004      	add	sp, #16
    246c:	bd80      	pop	{r7, pc}
    246e:	46c0      	nop			; (mov r8, r8)
    2470:	1ffff090 	.word	0x1ffff090
    2474:	1ffff098 	.word	0x1ffff098
    2478:	40047000 	.word	0x40047000
    247c:	0000103c 	.word	0x0000103c
    2480:	e000e100 	.word	0xe000e100
    2484:	4004c000 	.word	0x4004c000
    2488:	fefff8ff 	.word	0xfefff8ff
    248c:	4003b000 	.word	0x4003b000
    2490:	4004d000 	.word	0x4004d000
    2494:	1ffff0cc 	.word	0x1ffff0cc

00002498 <AdcLdd1_StartSingleMeasurement>:
AdcLdd1_StartSingleMeasurement():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:273
**                           ERR_DISABLED - Component is disabled
**                           ERR_BUSY - A measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd1_StartSingleMeasurement(LDD_TDeviceData *DeviceDataPtr)
{
    2498:	b580      	push	{r7, lr}
    249a:	b082      	sub	sp, #8
    249c:	af00      	add	r7, sp, #0
    249e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:275
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
    24a0:	4b0d      	ldr	r3, [pc, #52]	; (24d8 <AdcLdd1_StartSingleMeasurement+0x40>)
    24a2:	6a1a      	ldr	r2, [r3, #32]
    24a4:	2380      	movs	r3, #128	; 0x80
    24a6:	4013      	ands	r3, r2
    24a8:	d001      	beq.n	24ae <AdcLdd1_StartSingleMeasurement+0x16>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:276
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    24aa:	2308      	movs	r3, #8
    24ac:	e010      	b.n	24d0 <AdcLdd1_StartSingleMeasurement+0x38>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:278
  }
  ADC_PDD_SetContinuousMode(ADC0_BASE_PTR, ADC_PDD_ONE_CONVERSION); /* Set one conversion mode */
    24ae:	4b0a      	ldr	r3, [pc, #40]	; (24d8 <AdcLdd1_StartSingleMeasurement+0x40>)
    24b0:	4a09      	ldr	r2, [pc, #36]	; (24d8 <AdcLdd1_StartSingleMeasurement+0x40>)
    24b2:	6a52      	ldr	r2, [r2, #36]	; 0x24
    24b4:	2148      	movs	r1, #72	; 0x48
    24b6:	438a      	bics	r2, r1
    24b8:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:279
  ADC_PDD_SetConversionTriggerType(ADC0_BASE_PTR, ADC_PDD_SW_TRIGGER); /* Select SW triggering */
    24ba:	4b07      	ldr	r3, [pc, #28]	; (24d8 <AdcLdd1_StartSingleMeasurement+0x40>)
    24bc:	4a06      	ldr	r2, [pc, #24]	; (24d8 <AdcLdd1_StartSingleMeasurement+0x40>)
    24be:	6a12      	ldr	r2, [r2, #32]
    24c0:	2140      	movs	r1, #64	; 0x40
    24c2:	438a      	bics	r2, r1
    24c4:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:280
  ADC_PDD_WriteStatusControl1Reg(ADC0_BASE_PTR, 0U, ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->FirstSample); /* Set sample 0 and start conversion */
    24c6:	4b04      	ldr	r3, [pc, #16]	; (24d8 <AdcLdd1_StartSingleMeasurement+0x40>)
    24c8:	687a      	ldr	r2, [r7, #4]
    24ca:	7852      	ldrb	r2, [r2, #1]
    24cc:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:281
  return ERR_OK;                       /* OK */
    24ce:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:282
}
    24d0:	1c18      	adds	r0, r3, #0
    24d2:	46bd      	mov	sp, r7
    24d4:	b002      	add	sp, #8
    24d6:	bd80      	pop	{r7, pc}
    24d8:	4003b000 	.word	0x4003b000

000024dc <AdcLdd1_CreateSampleGroup>:
AdcLdd1_CreateSampleGroup():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:356
**                           variable value is out of range
**                           ERR_BUSY - Measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd1_CreateSampleGroup(LDD_TDeviceData *DeviceDataPtr, LDD_ADC_TSample *SampleGroupPtr, uint8_t SampleCount)
{
    24dc:	b580      	push	{r7, lr}
    24de:	b086      	sub	sp, #24
    24e0:	af00      	add	r7, sp, #0
    24e2:	60f8      	str	r0, [r7, #12]
    24e4:	60b9      	str	r1, [r7, #8]
    24e6:	1dfb      	adds	r3, r7, #7
    24e8:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:357
  AdcLdd1_TDeviceDataPtr DeviceDataPrv = (AdcLdd1_TDeviceDataPtr)DeviceDataPtr;
    24ea:	68fb      	ldr	r3, [r7, #12]
    24ec:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:361

  /* Sample count test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((SampleCount > AdcLdd1_MAX_HW_SAMPLE_COUNT) || (SampleCount == 0U)) { /* Is number of sample greater then supported by the HW? */
    24ee:	1dfb      	adds	r3, r7, #7
    24f0:	781b      	ldrb	r3, [r3, #0]
    24f2:	2b01      	cmp	r3, #1
    24f4:	d803      	bhi.n	24fe <AdcLdd1_CreateSampleGroup+0x22>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:361 (discriminator 1)
    24f6:	1dfb      	adds	r3, r7, #7
    24f8:	781b      	ldrb	r3, [r3, #0]
    24fa:	2b00      	cmp	r3, #0
    24fc:	d101      	bne.n	2502 <AdcLdd1_CreateSampleGroup+0x26>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:362
    return ERR_PARAM_SAMPLE_COUNT;     /* Yes, return ERR_PARAM_SAMPLE_COUNT */
    24fe:	2396      	movs	r3, #150	; 0x96
    2500:	e01a      	b.n	2538 <AdcLdd1_CreateSampleGroup+0x5c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:364
  }
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
    2502:	4b0f      	ldr	r3, [pc, #60]	; (2540 <AdcLdd1_CreateSampleGroup+0x64>)
    2504:	6a1a      	ldr	r2, [r3, #32]
    2506:	2380      	movs	r3, #128	; 0x80
    2508:	4013      	ands	r3, r2
    250a:	d001      	beq.n	2510 <AdcLdd1_CreateSampleGroup+0x34>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:365
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    250c:	2308      	movs	r3, #8
    250e:	e013      	b.n	2538 <AdcLdd1_CreateSampleGroup+0x5c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:367
  }
  DeviceDataPrv->SampleCount = SampleCount; /* Remember sample count */
    2510:	697b      	ldr	r3, [r7, #20]
    2512:	1dfa      	adds	r2, r7, #7
    2514:	7812      	ldrb	r2, [r2, #0]
    2516:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:370
  /* Channel index test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (SampleGroupPtr[0].ChannelIdx >= AdcLdd1_CHANNEL_COUNT) { /* Is channel index out of range? */
    2518:	68bb      	ldr	r3, [r7, #8]
    251a:	781b      	ldrb	r3, [r3, #0]
    251c:	2b01      	cmp	r3, #1
    251e:	d901      	bls.n	2524 <AdcLdd1_CreateSampleGroup+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:371
    return ERR_PARAM_INDEX;            /* Yes, return ERR_PARAM_INDEX */
    2520:	2382      	movs	r3, #130	; 0x82
    2522:	e009      	b.n	2538 <AdcLdd1_CreateSampleGroup+0x5c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:373
  }
  DeviceDataPrv->FirstSample = (ChannelToPin[SampleGroupPtr[0].ChannelIdx]) | (uint8_t)(LDD_ADC_ON_MEASUREMENT_COMPLETE); /* Remember first sample */
    2524:	68bb      	ldr	r3, [r7, #8]
    2526:	781b      	ldrb	r3, [r3, #0]
    2528:	4a06      	ldr	r2, [pc, #24]	; (2544 <AdcLdd1_CreateSampleGroup+0x68>)
    252a:	5cd3      	ldrb	r3, [r2, r3]
    252c:	2240      	movs	r2, #64	; 0x40
    252e:	4313      	orrs	r3, r2
    2530:	b2da      	uxtb	r2, r3
    2532:	697b      	ldr	r3, [r7, #20]
    2534:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:374
  return ERR_OK;                       /* OK */
    2536:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:375
}
    2538:	1c18      	adds	r0, r3, #0
    253a:	46bd      	mov	sp, r7
    253c:	b006      	add	sp, #24
    253e:	bd80      	pop	{r7, pc}
    2540:	4003b000 	.word	0x4003b000
    2544:	00003ae0 	.word	0x00003ae0

00002548 <AdcLdd1_GetMeasuredValues>:
AdcLdd1_GetMeasuredValues():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:410
**                           active clock configuration
**                           ERR_DISABLED - Component is disabled
*/
/* ===================================================================*/
LDD_TError AdcLdd1_GetMeasuredValues(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr)
{
    2548:	b580      	push	{r7, lr}
    254a:	b084      	sub	sp, #16
    254c:	af00      	add	r7, sp, #0
    254e:	6078      	str	r0, [r7, #4]
    2550:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:412
  uint8_t Sample;
  AdcLdd1_TResultData *pBuffer = (AdcLdd1_TResultData *)BufferPtr;
    2552:	683b      	ldr	r3, [r7, #0]
    2554:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:416

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    2556:	1c3b      	adds	r3, r7, #0
    2558:	330f      	adds	r3, #15
    255a:	2200      	movs	r2, #0
    255c:	701a      	strb	r2, [r3, #0]
    255e:	e014      	b.n	258a <AdcLdd1_GetMeasuredValues+0x42>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:417 (discriminator 2)
    pBuffer[Sample] =(uint8_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
    2560:	1c3b      	adds	r3, r7, #0
    2562:	330f      	adds	r3, #15
    2564:	781b      	ldrb	r3, [r3, #0]
    2566:	68ba      	ldr	r2, [r7, #8]
    2568:	18d3      	adds	r3, r2, r3
    256a:	4a0e      	ldr	r2, [pc, #56]	; (25a4 <AdcLdd1_GetMeasuredValues+0x5c>)
    256c:	1c39      	adds	r1, r7, #0
    256e:	310f      	adds	r1, #15
    2570:	7809      	ldrb	r1, [r1, #0]
    2572:	3104      	adds	r1, #4
    2574:	0089      	lsls	r1, r1, #2
    2576:	588a      	ldr	r2, [r1, r2]
    2578:	b2d2      	uxtb	r2, r2
    257a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:416 (discriminator 2)
  uint8_t Sample;
  AdcLdd1_TResultData *pBuffer = (AdcLdd1_TResultData *)BufferPtr;

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    257c:	1c3b      	adds	r3, r7, #0
    257e:	330f      	adds	r3, #15
    2580:	781a      	ldrb	r2, [r3, #0]
    2582:	1c3b      	adds	r3, r7, #0
    2584:	330f      	adds	r3, #15
    2586:	3201      	adds	r2, #1
    2588:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:416 (discriminator 1)
    258a:	687b      	ldr	r3, [r7, #4]
    258c:	781b      	ldrb	r3, [r3, #0]
    258e:	1c3a      	adds	r2, r7, #0
    2590:	320f      	adds	r2, #15
    2592:	7812      	ldrb	r2, [r2, #0]
    2594:	429a      	cmp	r2, r3
    2596:	d3e3      	bcc.n	2560 <AdcLdd1_GetMeasuredValues+0x18>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:419
    pBuffer[Sample] =(uint8_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
  }
  return ERR_OK;                       /* OK */
    2598:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:420
}
    259a:	1c18      	adds	r0, r3, #0
    259c:	46bd      	mov	sp, r7
    259e:	b004      	add	sp, #16
    25a0:	bd80      	pop	{r7, pc}
    25a2:	46c0      	nop			; (mov r8, r8)
    25a4:	4003b000 	.word	0x4003b000

000025a8 <AdcLdd1_GetCalibrationResultStatus>:
AdcLdd1_GetCalibrationResultStatus():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:508
**                           ERR_FAILED - Last calibration hasn't been
**                           finished correctly
*/
/* ===================================================================*/
LDD_TError AdcLdd1_GetCalibrationResultStatus(LDD_TDeviceData *DeviceDataPtr)
{
    25a8:	b580      	push	{r7, lr}
    25aa:	b084      	sub	sp, #16
    25ac:	af00      	add	r7, sp, #0
    25ae:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:512
  uint32_t GainValue;

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (ADC_PDD_GetCalibrationFailedStatusFlag(ADC0_BASE_PTR)) {
    25b0:	4b2a      	ldr	r3, [pc, #168]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    25b2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    25b4:	2340      	movs	r3, #64	; 0x40
    25b6:	4013      	ands	r3, r2
    25b8:	d001      	beq.n	25be <AdcLdd1_GetCalibrationResultStatus+0x16>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:513
    return ERR_FAILED;
    25ba:	231b      	movs	r3, #27
    25bc:	e04a      	b.n	2654 <AdcLdd1_GetCalibrationResultStatus+0xac>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:517
  }
  /* If calibration is successfully passed place calibrated value into gain registers */
  /* Cumulated gradually because of undefined behavior: the order of volatile accesses is undefined in this statement */
  GainValue = ADC_PDD_GetPlus0CalibrationValue(ADC0_BASE_PTR); /* Find plus gain value */
    25be:	4b27      	ldr	r3, [pc, #156]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    25c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    25c2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:518
  GainValue += ADC_PDD_GetPlus1CalibrationValue(ADC0_BASE_PTR);
    25c4:	4b25      	ldr	r3, [pc, #148]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    25c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    25c8:	68fa      	ldr	r2, [r7, #12]
    25ca:	18d3      	adds	r3, r2, r3
    25cc:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:519
  GainValue += ADC_PDD_GetPlus2CalibrationValue(ADC0_BASE_PTR);
    25ce:	4b23      	ldr	r3, [pc, #140]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    25d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    25d2:	68fa      	ldr	r2, [r7, #12]
    25d4:	18d3      	adds	r3, r2, r3
    25d6:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:520
  GainValue += ADC_PDD_GetPlus3CalibrationValue(ADC0_BASE_PTR);
    25d8:	4b20      	ldr	r3, [pc, #128]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    25da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    25dc:	68fa      	ldr	r2, [r7, #12]
    25de:	18d3      	adds	r3, r2, r3
    25e0:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:521
  GainValue += ADC_PDD_GetPlus4CalibrationValue(ADC0_BASE_PTR);
    25e2:	4b1e      	ldr	r3, [pc, #120]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    25e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    25e6:	68fa      	ldr	r2, [r7, #12]
    25e8:	18d3      	adds	r3, r2, r3
    25ea:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:522
  GainValue += ADC_PDD_GetPlusSCalibrationValue(ADC0_BASE_PTR);
    25ec:	4b1b      	ldr	r3, [pc, #108]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    25ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    25f0:	68fa      	ldr	r2, [r7, #12]
    25f2:	18d3      	adds	r3, r2, r3
    25f4:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:523
  GainValue = (GainValue >> 1U) | 0x8000U;
    25f6:	68fb      	ldr	r3, [r7, #12]
    25f8:	085b      	lsrs	r3, r3, #1
    25fa:	2280      	movs	r2, #128	; 0x80
    25fc:	0212      	lsls	r2, r2, #8
    25fe:	4313      	orrs	r3, r2
    2600:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:524
  ADC_PDD_SetPlusGainValue(ADC0_BASE_PTR,GainValue); /* Set plus gain value */
    2602:	4b16      	ldr	r3, [pc, #88]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    2604:	68fa      	ldr	r2, [r7, #12]
    2606:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:525
  GainValue = ADC_PDD_GetMinus0CalibrationValue(ADC0_BASE_PTR); /* Find minus gain value */
    2608:	4b14      	ldr	r3, [pc, #80]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    260a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    260c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:526
  GainValue += ADC_PDD_GetMinus1CalibrationValue(ADC0_BASE_PTR);
    260e:	4b13      	ldr	r3, [pc, #76]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    2610:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    2612:	68fa      	ldr	r2, [r7, #12]
    2614:	18d3      	adds	r3, r2, r3
    2616:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:527
  GainValue += ADC_PDD_GetMinus2CalibrationValue(ADC0_BASE_PTR);
    2618:	4b10      	ldr	r3, [pc, #64]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    261a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    261c:	68fa      	ldr	r2, [r7, #12]
    261e:	18d3      	adds	r3, r2, r3
    2620:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:528
  GainValue += ADC_PDD_GetMinus3CalibrationValue(ADC0_BASE_PTR);
    2622:	4b0e      	ldr	r3, [pc, #56]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    2624:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    2626:	68fa      	ldr	r2, [r7, #12]
    2628:	18d3      	adds	r3, r2, r3
    262a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:529
  GainValue += ADC_PDD_GetMinus4CalibrationValue(ADC0_BASE_PTR);
    262c:	4b0b      	ldr	r3, [pc, #44]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    262e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    2630:	68fa      	ldr	r2, [r7, #12]
    2632:	18d3      	adds	r3, r2, r3
    2634:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:530
  GainValue += ADC_PDD_GetMinusSCalibrationValue(ADC0_BASE_PTR);
    2636:	4b09      	ldr	r3, [pc, #36]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    2638:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    263a:	68fa      	ldr	r2, [r7, #12]
    263c:	18d3      	adds	r3, r2, r3
    263e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:531
  GainValue =  (GainValue >> 1U) | 0x8000U;
    2640:	68fb      	ldr	r3, [r7, #12]
    2642:	085b      	lsrs	r3, r3, #1
    2644:	2280      	movs	r2, #128	; 0x80
    2646:	0212      	lsls	r2, r2, #8
    2648:	4313      	orrs	r3, r2
    264a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:532
  ADC_PDD_SetMinusGainValue(ADC0_BASE_PTR,GainValue); /* Set minus gain value */
    264c:	4b03      	ldr	r3, [pc, #12]	; (265c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    264e:	68fa      	ldr	r2, [r7, #12]
    2650:	631a      	str	r2, [r3, #48]	; 0x30
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:533
  return ERR_OK;
    2652:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:534
}
    2654:	1c18      	adds	r0, r3, #0
    2656:	46bd      	mov	sp, r7
    2658:	b004      	add	sp, #16
    265a:	bd80      	pop	{r7, pc}
    265c:	4003b000 	.word	0x4003b000

00002660 <AdcLdd1_MeasurementCompleteInterrupt>:
AdcLdd1_MeasurementCompleteInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:546
**         Measurement complete interrupt handler
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(AdcLdd1_MeasurementCompleteInterrupt)
{
    2660:	b580      	push	{r7, lr}
    2662:	b082      	sub	sp, #8
    2664:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:548
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  AdcLdd1_TDeviceDataPtr DeviceDataPrv = INT_ADC0__DEFAULT_RTOS_ISRPARAM;
    2666:	4b08      	ldr	r3, [pc, #32]	; (2688 <AdcLdd1_MeasurementCompleteInterrupt+0x28>)
    2668:	681b      	ldr	r3, [r3, #0]
    266a:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:549
  DeviceDataPrv->CompleteStatus = TRUE; /* Set measurement complete status flag */
    266c:	687b      	ldr	r3, [r7, #4]
    266e:	2201      	movs	r2, #1
    2670:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:550
  AdcLdd1_OnMeasurementComplete(DeviceDataPrv->UserData);
    2672:	687b      	ldr	r3, [r7, #4]
    2674:	685b      	ldr	r3, [r3, #4]
    2676:	1c18      	adds	r0, r3, #0
    2678:	f7ff fe0c 	bl	2294 <AdcLdd1_OnMeasurementComplete>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:551
  (void)ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, 0U); /* Clear conversion complete flag */
    267c:	4b03      	ldr	r3, [pc, #12]	; (268c <AdcLdd1_MeasurementCompleteInterrupt+0x2c>)
    267e:	691b      	ldr	r3, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:552
}
    2680:	46bd      	mov	sp, r7
    2682:	b002      	add	sp, #8
    2684:	bd80      	pop	{r7, pc}
    2686:	46c0      	nop			; (mov r8, r8)
    2688:	1ffff098 	.word	0x1ffff098
    268c:	4003b000 	.word	0x4003b000

00002690 <BitIoLdd1_Init>:
BitIoLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:123
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd1_Init(LDD_TUserData *UserDataPtr)
{
    2690:	b580      	push	{r7, lr}
    2692:	b084      	sub	sp, #16
    2694:	af00      	add	r7, sp, #0
    2696:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:128
  /* Allocate device structure */
  BitIoLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2698:	4b10      	ldr	r3, [pc, #64]	; (26dc <BitIoLdd1_Init+0x4c>)
    269a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:129
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    269c:	68fb      	ldr	r3, [r7, #12]
    269e:	687a      	ldr	r2, [r7, #4]
    26a0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:132
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x80 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x80);
    26a2:	4b0f      	ldr	r3, [pc, #60]	; (26e0 <BitIoLdd1_Init+0x50>)
    26a4:	4a0e      	ldr	r2, [pc, #56]	; (26e0 <BitIoLdd1_Init+0x50>)
    26a6:	6952      	ldr	r2, [r2, #20]
    26a8:	2180      	movs	r1, #128	; 0x80
    26aa:	430a      	orrs	r2, r1
    26ac:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:135
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x80 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x80));
    26ae:	4b0c      	ldr	r3, [pc, #48]	; (26e0 <BitIoLdd1_Init+0x50>)
    26b0:	4a0b      	ldr	r2, [pc, #44]	; (26e0 <BitIoLdd1_Init+0x50>)
    26b2:	6812      	ldr	r2, [r2, #0]
    26b4:	2180      	movs	r1, #128	; 0x80
    26b6:	438a      	bics	r2, r1
    26b8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:138
  /* Initialization of Port Control register */
  /* PORTD_PCR7: ISF=0,MUX=1 */
  PORTD_PCR7 = (uint32_t)((PORTD_PCR7 & (uint32_t)~(uint32_t)(
    26ba:	4b0a      	ldr	r3, [pc, #40]	; (26e4 <BitIoLdd1_Init+0x54>)
    26bc:	4a09      	ldr	r2, [pc, #36]	; (26e4 <BitIoLdd1_Init+0x54>)
    26be:	69d1      	ldr	r1, [r2, #28]
    26c0:	4a09      	ldr	r2, [pc, #36]	; (26e8 <BitIoLdd1_Init+0x58>)
    26c2:	400a      	ands	r2, r1
    26c4:	2180      	movs	r1, #128	; 0x80
    26c6:	0049      	lsls	r1, r1, #1
    26c8:	430a      	orrs	r2, r1
    26ca:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:145
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd1_ID,DeviceDataPrv);
    26cc:	4b07      	ldr	r3, [pc, #28]	; (26ec <BitIoLdd1_Init+0x5c>)
    26ce:	68fa      	ldr	r2, [r7, #12]
    26d0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:146
  return ((LDD_TDeviceData *)DeviceDataPrv);
    26d2:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:147
}
    26d4:	1c18      	adds	r0, r3, #0
    26d6:	46bd      	mov	sp, r7
    26d8:	b004      	add	sp, #16
    26da:	bd80      	pop	{r7, pc}
    26dc:	1ffff09c 	.word	0x1ffff09c
    26e0:	400ff0c0 	.word	0x400ff0c0
    26e4:	4004c000 	.word	0x4004c000
    26e8:	fefff8ff 	.word	0xfefff8ff
    26ec:	1ffff0cc 	.word	0x1ffff0cc

000026f0 <BitIoLdd1_GetVal>:
BitIoLdd1_GetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:169
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd1_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    26f0:	b580      	push	{r7, lr}
    26f2:	b084      	sub	sp, #16
    26f4:	af00      	add	r7, sp, #0
    26f6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:173
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataOutput(BitIoLdd1_MODULE_BASE_ADDRESS) & BitIoLdd1_PORT_MASK;
    26f8:	4b06      	ldr	r3, [pc, #24]	; (2714 <BitIoLdd1_GetVal+0x24>)
    26fa:	681a      	ldr	r2, [r3, #0]
    26fc:	2380      	movs	r3, #128	; 0x80
    26fe:	4013      	ands	r3, r2
    2700:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:174
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    2702:	68fb      	ldr	r3, [r7, #12]
    2704:	1e5a      	subs	r2, r3, #1
    2706:	4193      	sbcs	r3, r2
    2708:	b2db      	uxtb	r3, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:175
}
    270a:	1c18      	adds	r0, r3, #0
    270c:	46bd      	mov	sp, r7
    270e:	b004      	add	sp, #16
    2710:	bd80      	pop	{r7, pc}
    2712:	46c0      	nop			; (mov r8, r8)
    2714:	f80ff0c0 	.word	0xf80ff0c0

00002718 <BitIoLdd1_ClrVal>:
BitIoLdd1_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:226
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    2718:	b580      	push	{r7, lr}
    271a:	b082      	sub	sp, #8
    271c:	af00      	add	r7, sp, #0
    271e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:228
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
    2720:	4b02      	ldr	r3, [pc, #8]	; (272c <BitIoLdd1_ClrVal+0x14>)
    2722:	2280      	movs	r2, #128	; 0x80
    2724:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:229
}
    2726:	46bd      	mov	sp, r7
    2728:	b002      	add	sp, #8
    272a:	bd80      	pop	{r7, pc}
    272c:	f80ff0c0 	.word	0xf80ff0c0

00002730 <BitIoLdd1_SetVal>:
BitIoLdd1_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:246
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    2730:	b580      	push	{r7, lr}
    2732:	b082      	sub	sp, #8
    2734:	af00      	add	r7, sp, #0
    2736:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:248
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
    2738:	4b02      	ldr	r3, [pc, #8]	; (2744 <BitIoLdd1_SetVal+0x14>)
    273a:	2280      	movs	r2, #128	; 0x80
    273c:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:249
}
    273e:	46bd      	mov	sp, r7
    2740:	b002      	add	sp, #8
    2742:	bd80      	pop	{r7, pc}
    2744:	f80ff0c0 	.word	0xf80ff0c0

00002748 <BitIoLdd10_Init>:
BitIoLdd10_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd10_Init(LDD_TUserData *UserDataPtr)
{
    2748:	b580      	push	{r7, lr}
    274a:	b084      	sub	sp, #16
    274c:	af00      	add	r7, sp, #0
    274e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:127
  /* Allocate device structure */
  BitIoLdd10_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2750:	4b10      	ldr	r3, [pc, #64]	; (2794 <BitIoLdd10_Init+0x4c>)
    2752:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2754:	68fb      	ldr	r3, [r7, #12]
    2756:	687a      	ldr	r2, [r7, #4]
    2758:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:131
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=1 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x01);
    275a:	4b0f      	ldr	r3, [pc, #60]	; (2798 <BitIoLdd10_Init+0x50>)
    275c:	4a0e      	ldr	r2, [pc, #56]	; (2798 <BitIoLdd10_Init+0x50>)
    275e:	6952      	ldr	r2, [r2, #20]
    2760:	2101      	movs	r1, #1
    2762:	430a      	orrs	r2, r1
    2764:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:134
  /* Set initialization value */
  /* GPIOE_PDOR: PDO|=1 */
  GPIOE_PDOR |= GPIO_PDOR_PDO(0x01);
    2766:	4b0c      	ldr	r3, [pc, #48]	; (2798 <BitIoLdd10_Init+0x50>)
    2768:	4a0b      	ldr	r2, [pc, #44]	; (2798 <BitIoLdd10_Init+0x50>)
    276a:	6812      	ldr	r2, [r2, #0]
    276c:	2101      	movs	r1, #1
    276e:	430a      	orrs	r2, r1
    2770:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:137
  /* Initialization of Port Control register */
  /* PORTE_PCR0: ISF=0,MUX=1 */
  PORTE_PCR0 = (uint32_t)((PORTE_PCR0 & (uint32_t)~(uint32_t)(
    2772:	4b0a      	ldr	r3, [pc, #40]	; (279c <BitIoLdd10_Init+0x54>)
    2774:	4a09      	ldr	r2, [pc, #36]	; (279c <BitIoLdd10_Init+0x54>)
    2776:	6811      	ldr	r1, [r2, #0]
    2778:	4a09      	ldr	r2, [pc, #36]	; (27a0 <BitIoLdd10_Init+0x58>)
    277a:	400a      	ands	r2, r1
    277c:	2180      	movs	r1, #128	; 0x80
    277e:	0049      	lsls	r1, r1, #1
    2780:	430a      	orrs	r2, r1
    2782:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:144
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd10_ID,DeviceDataPrv);
    2784:	4b07      	ldr	r3, [pc, #28]	; (27a4 <BitIoLdd10_Init+0x5c>)
    2786:	68fa      	ldr	r2, [r7, #12]
    2788:	651a      	str	r2, [r3, #80]	; 0x50
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:145
  return ((LDD_TDeviceData *)DeviceDataPrv);
    278a:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:146
}
    278c:	1c18      	adds	r0, r3, #0
    278e:	46bd      	mov	sp, r7
    2790:	b004      	add	sp, #16
    2792:	bd80      	pop	{r7, pc}
    2794:	1ffff0a0 	.word	0x1ffff0a0
    2798:	400ff100 	.word	0x400ff100
    279c:	4004d000 	.word	0x4004d000
    27a0:	fefff8ff 	.word	0xfefff8ff
    27a4:	1ffff0cc 	.word	0x1ffff0cc

000027a8 <BitIoLdd11_Init>:
BitIoLdd11_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd11_Init(LDD_TUserData *UserDataPtr)
{
    27a8:	b580      	push	{r7, lr}
    27aa:	b084      	sub	sp, #16
    27ac:	af00      	add	r7, sp, #0
    27ae:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:127
  /* Allocate device structure */
  BitIoLdd11_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    27b0:	4b10      	ldr	r3, [pc, #64]	; (27f4 <BitIoLdd11_Init+0x4c>)
    27b2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    27b4:	68fb      	ldr	r3, [r7, #12]
    27b6:	687a      	ldr	r2, [r7, #4]
    27b8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:131
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=2 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x02);
    27ba:	4b0f      	ldr	r3, [pc, #60]	; (27f8 <BitIoLdd11_Init+0x50>)
    27bc:	4a0e      	ldr	r2, [pc, #56]	; (27f8 <BitIoLdd11_Init+0x50>)
    27be:	6952      	ldr	r2, [r2, #20]
    27c0:	2102      	movs	r1, #2
    27c2:	430a      	orrs	r2, r1
    27c4:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:134
  /* Set initialization value */
  /* GPIOD_PDOR: PDO|=2 */
  GPIOD_PDOR |= GPIO_PDOR_PDO(0x02);
    27c6:	4b0c      	ldr	r3, [pc, #48]	; (27f8 <BitIoLdd11_Init+0x50>)
    27c8:	4a0b      	ldr	r2, [pc, #44]	; (27f8 <BitIoLdd11_Init+0x50>)
    27ca:	6812      	ldr	r2, [r2, #0]
    27cc:	2102      	movs	r1, #2
    27ce:	430a      	orrs	r2, r1
    27d0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:137
  /* Initialization of Port Control register */
  /* PORTD_PCR1: ISF=0,MUX=1 */
  PORTD_PCR1 = (uint32_t)((PORTD_PCR1 & (uint32_t)~(uint32_t)(
    27d2:	4b0a      	ldr	r3, [pc, #40]	; (27fc <BitIoLdd11_Init+0x54>)
    27d4:	4a09      	ldr	r2, [pc, #36]	; (27fc <BitIoLdd11_Init+0x54>)
    27d6:	6851      	ldr	r1, [r2, #4]
    27d8:	4a09      	ldr	r2, [pc, #36]	; (2800 <BitIoLdd11_Init+0x58>)
    27da:	400a      	ands	r2, r1
    27dc:	2180      	movs	r1, #128	; 0x80
    27de:	0049      	lsls	r1, r1, #1
    27e0:	430a      	orrs	r2, r1
    27e2:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:144
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd11_ID,DeviceDataPrv);
    27e4:	4b07      	ldr	r3, [pc, #28]	; (2804 <BitIoLdd11_Init+0x5c>)
    27e6:	68fa      	ldr	r2, [r7, #12]
    27e8:	655a      	str	r2, [r3, #84]	; 0x54
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:145
  return ((LDD_TDeviceData *)DeviceDataPrv);
    27ea:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:146
}
    27ec:	1c18      	adds	r0, r3, #0
    27ee:	46bd      	mov	sp, r7
    27f0:	b004      	add	sp, #16
    27f2:	bd80      	pop	{r7, pc}
    27f4:	1ffff0a4 	.word	0x1ffff0a4
    27f8:	400ff0c0 	.word	0x400ff0c0
    27fc:	4004c000 	.word	0x4004c000
    2800:	fefff8ff 	.word	0xfefff8ff
    2804:	1ffff0cc 	.word	0x1ffff0cc

00002808 <BitIoLdd2_Init>:
BitIoLdd2_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:123
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd2_Init(LDD_TUserData *UserDataPtr)
{
    2808:	b580      	push	{r7, lr}
    280a:	b084      	sub	sp, #16
    280c:	af00      	add	r7, sp, #0
    280e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:128
  /* Allocate device structure */
  BitIoLdd2_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2810:	4b10      	ldr	r3, [pc, #64]	; (2854 <BitIoLdd2_Init+0x4c>)
    2812:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:129
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2814:	68fb      	ldr	r3, [r7, #12]
    2816:	687a      	ldr	r2, [r7, #4]
    2818:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:132
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=2 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x02);
    281a:	4b0f      	ldr	r3, [pc, #60]	; (2858 <BitIoLdd2_Init+0x50>)
    281c:	4a0e      	ldr	r2, [pc, #56]	; (2858 <BitIoLdd2_Init+0x50>)
    281e:	6952      	ldr	r2, [r2, #20]
    2820:	2102      	movs	r1, #2
    2822:	430a      	orrs	r2, r1
    2824:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:135
  /* Set initialization value */
  /* GPIOE_PDOR: PDO&=~2 */
  GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x02));
    2826:	4b0c      	ldr	r3, [pc, #48]	; (2858 <BitIoLdd2_Init+0x50>)
    2828:	4a0b      	ldr	r2, [pc, #44]	; (2858 <BitIoLdd2_Init+0x50>)
    282a:	6812      	ldr	r2, [r2, #0]
    282c:	2102      	movs	r1, #2
    282e:	438a      	bics	r2, r1
    2830:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:138
  /* Initialization of Port Control register */
  /* PORTE_PCR1: ISF=0,MUX=1 */
  PORTE_PCR1 = (uint32_t)((PORTE_PCR1 & (uint32_t)~(uint32_t)(
    2832:	4b0a      	ldr	r3, [pc, #40]	; (285c <BitIoLdd2_Init+0x54>)
    2834:	4a09      	ldr	r2, [pc, #36]	; (285c <BitIoLdd2_Init+0x54>)
    2836:	6851      	ldr	r1, [r2, #4]
    2838:	4a09      	ldr	r2, [pc, #36]	; (2860 <BitIoLdd2_Init+0x58>)
    283a:	400a      	ands	r2, r1
    283c:	2180      	movs	r1, #128	; 0x80
    283e:	0049      	lsls	r1, r1, #1
    2840:	430a      	orrs	r2, r1
    2842:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:145
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd2_ID,DeviceDataPrv);
    2844:	4b07      	ldr	r3, [pc, #28]	; (2864 <BitIoLdd2_Init+0x5c>)
    2846:	68fa      	ldr	r2, [r7, #12]
    2848:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:146
  return ((LDD_TDeviceData *)DeviceDataPrv);
    284a:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:147
}
    284c:	1c18      	adds	r0, r3, #0
    284e:	46bd      	mov	sp, r7
    2850:	b004      	add	sp, #16
    2852:	bd80      	pop	{r7, pc}
    2854:	1ffff0a8 	.word	0x1ffff0a8
    2858:	400ff100 	.word	0x400ff100
    285c:	4004d000 	.word	0x4004d000
    2860:	fefff8ff 	.word	0xfefff8ff
    2864:	1ffff0cc 	.word	0x1ffff0cc

00002868 <BitIoLdd2_GetVal>:
BitIoLdd2_GetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:169
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd2_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    2868:	b580      	push	{r7, lr}
    286a:	b084      	sub	sp, #16
    286c:	af00      	add	r7, sp, #0
    286e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:173
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataOutput(BitIoLdd2_MODULE_BASE_ADDRESS) & BitIoLdd2_PORT_MASK;
    2870:	4b06      	ldr	r3, [pc, #24]	; (288c <BitIoLdd2_GetVal+0x24>)
    2872:	681a      	ldr	r2, [r3, #0]
    2874:	2302      	movs	r3, #2
    2876:	4013      	ands	r3, r2
    2878:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:174
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    287a:	68fb      	ldr	r3, [r7, #12]
    287c:	1e5a      	subs	r2, r3, #1
    287e:	4193      	sbcs	r3, r2
    2880:	b2db      	uxtb	r3, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:175
}
    2882:	1c18      	adds	r0, r3, #0
    2884:	46bd      	mov	sp, r7
    2886:	b004      	add	sp, #16
    2888:	bd80      	pop	{r7, pc}
    288a:	46c0      	nop			; (mov r8, r8)
    288c:	f80ff100 	.word	0xf80ff100

00002890 <BitIoLdd2_ClrVal>:
BitIoLdd2_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:226
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    2890:	b580      	push	{r7, lr}
    2892:	b082      	sub	sp, #8
    2894:	af00      	add	r7, sp, #0
    2896:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:228
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
    2898:	4b02      	ldr	r3, [pc, #8]	; (28a4 <BitIoLdd2_ClrVal+0x14>)
    289a:	2202      	movs	r2, #2
    289c:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:229
}
    289e:	46bd      	mov	sp, r7
    28a0:	b002      	add	sp, #8
    28a2:	bd80      	pop	{r7, pc}
    28a4:	f80ff100 	.word	0xf80ff100

000028a8 <BitIoLdd2_SetVal>:
BitIoLdd2_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:246
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    28a8:	b580      	push	{r7, lr}
    28aa:	b082      	sub	sp, #8
    28ac:	af00      	add	r7, sp, #0
    28ae:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:248
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
    28b0:	4b02      	ldr	r3, [pc, #8]	; (28bc <BitIoLdd2_SetVal+0x14>)
    28b2:	2202      	movs	r2, #2
    28b4:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:249
}
    28b6:	46bd      	mov	sp, r7
    28b8:	b002      	add	sp, #8
    28ba:	bd80      	pop	{r7, pc}
    28bc:	f80ff100 	.word	0xf80ff100

000028c0 <BitIoLdd3_Init>:
BitIoLdd3_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:119
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd3_Init(LDD_TUserData *UserDataPtr)
{
    28c0:	b580      	push	{r7, lr}
    28c2:	b084      	sub	sp, #16
    28c4:	af00      	add	r7, sp, #0
    28c6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:124
  /* Allocate device structure */
  BitIoLdd3_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    28c8:	4b0d      	ldr	r3, [pc, #52]	; (2900 <BitIoLdd3_Init+0x40>)
    28ca:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:125
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    28cc:	68fb      	ldr	r3, [r7, #12]
    28ce:	687a      	ldr	r2, [r7, #4]
    28d0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:128
  /* Configure pin as input */
  /* GPIOC_PDDR: PDD&=~0x00020000 */
  GPIOC_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x00020000));
    28d2:	4b0c      	ldr	r3, [pc, #48]	; (2904 <BitIoLdd3_Init+0x44>)
    28d4:	4a0b      	ldr	r2, [pc, #44]	; (2904 <BitIoLdd3_Init+0x44>)
    28d6:	6951      	ldr	r1, [r2, #20]
    28d8:	4a0b      	ldr	r2, [pc, #44]	; (2908 <BitIoLdd3_Init+0x48>)
    28da:	400a      	ands	r2, r1
    28dc:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:131
  /* Initialization of Port Control register */
  /* PORTC_PCR17: ISF=0,MUX=1 */
  PORTC_PCR17 = (uint32_t)((PORTC_PCR17 & (uint32_t)~(uint32_t)(
    28de:	4b0b      	ldr	r3, [pc, #44]	; (290c <BitIoLdd3_Init+0x4c>)
    28e0:	4a0a      	ldr	r2, [pc, #40]	; (290c <BitIoLdd3_Init+0x4c>)
    28e2:	6c51      	ldr	r1, [r2, #68]	; 0x44
    28e4:	4a0a      	ldr	r2, [pc, #40]	; (2910 <BitIoLdd3_Init+0x50>)
    28e6:	400a      	ands	r2, r1
    28e8:	2180      	movs	r1, #128	; 0x80
    28ea:	0049      	lsls	r1, r1, #1
    28ec:	430a      	orrs	r2, r1
    28ee:	645a      	str	r2, [r3, #68]	; 0x44
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:138
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd3_ID,DeviceDataPrv);
    28f0:	4b08      	ldr	r3, [pc, #32]	; (2914 <BitIoLdd3_Init+0x54>)
    28f2:	68fa      	ldr	r2, [r7, #12]
    28f4:	639a      	str	r2, [r3, #56]	; 0x38
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:139
  return ((LDD_TDeviceData *)DeviceDataPrv);
    28f6:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:140
}
    28f8:	1c18      	adds	r0, r3, #0
    28fa:	46bd      	mov	sp, r7
    28fc:	b004      	add	sp, #16
    28fe:	bd80      	pop	{r7, pc}
    2900:	1ffff0ac 	.word	0x1ffff0ac
    2904:	400ff080 	.word	0x400ff080
    2908:	fffdffff 	.word	0xfffdffff
    290c:	4004b000 	.word	0x4004b000
    2910:	fefff8ff 	.word	0xfefff8ff
    2914:	1ffff0cc 	.word	0x1ffff0cc

00002918 <BitIoLdd3_GetVal>:
BitIoLdd3_GetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:162
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd3_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    2918:	b580      	push	{r7, lr}
    291a:	b084      	sub	sp, #16
    291c:	af00      	add	r7, sp, #0
    291e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:166
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd3_MODULE_BASE_ADDRESS) & BitIoLdd3_PORT_MASK;
    2920:	4b06      	ldr	r3, [pc, #24]	; (293c <BitIoLdd3_GetVal+0x24>)
    2922:	691a      	ldr	r2, [r3, #16]
    2924:	2380      	movs	r3, #128	; 0x80
    2926:	029b      	lsls	r3, r3, #10
    2928:	4013      	ands	r3, r2
    292a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:167
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    292c:	68fb      	ldr	r3, [r7, #12]
    292e:	1e5a      	subs	r2, r3, #1
    2930:	4193      	sbcs	r3, r2
    2932:	b2db      	uxtb	r3, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:168
}
    2934:	1c18      	adds	r0, r3, #0
    2936:	46bd      	mov	sp, r7
    2938:	b004      	add	sp, #16
    293a:	bd80      	pop	{r7, pc}
    293c:	f80ff080 	.word	0xf80ff080

00002940 <BitIoLdd4_Init>:
BitIoLdd4_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:120
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd4_Init(LDD_TUserData *UserDataPtr)
{
    2940:	b580      	push	{r7, lr}
    2942:	b084      	sub	sp, #16
    2944:	af00      	add	r7, sp, #0
    2946:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:125
  /* Allocate device structure */
  BitIoLdd4_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2948:	4b11      	ldr	r3, [pc, #68]	; (2990 <BitIoLdd4_Init+0x50>)
    294a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:126
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    294c:	68fb      	ldr	r3, [r7, #12]
    294e:	687a      	ldr	r2, [r7, #4]
    2950:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:129
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=0x00200000 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x00200000);
    2952:	4b10      	ldr	r3, [pc, #64]	; (2994 <BitIoLdd4_Init+0x54>)
    2954:	4a0f      	ldr	r2, [pc, #60]	; (2994 <BitIoLdd4_Init+0x54>)
    2956:	6952      	ldr	r2, [r2, #20]
    2958:	2180      	movs	r1, #128	; 0x80
    295a:	0389      	lsls	r1, r1, #14
    295c:	430a      	orrs	r2, r1
    295e:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:132
  /* Set initialization value */
  /* GPIOE_PDOR: PDO&=~0x00200000 */
  GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x00200000));
    2960:	4b0c      	ldr	r3, [pc, #48]	; (2994 <BitIoLdd4_Init+0x54>)
    2962:	4a0c      	ldr	r2, [pc, #48]	; (2994 <BitIoLdd4_Init+0x54>)
    2964:	6811      	ldr	r1, [r2, #0]
    2966:	4a0c      	ldr	r2, [pc, #48]	; (2998 <BitIoLdd4_Init+0x58>)
    2968:	400a      	ands	r2, r1
    296a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:135
  /* Initialization of Port Control register */
  /* PORTE_PCR21: ISF=0,MUX=1 */
  PORTE_PCR21 = (uint32_t)((PORTE_PCR21 & (uint32_t)~(uint32_t)(
    296c:	4b0b      	ldr	r3, [pc, #44]	; (299c <BitIoLdd4_Init+0x5c>)
    296e:	4a0b      	ldr	r2, [pc, #44]	; (299c <BitIoLdd4_Init+0x5c>)
    2970:	6d51      	ldr	r1, [r2, #84]	; 0x54
    2972:	4a0b      	ldr	r2, [pc, #44]	; (29a0 <BitIoLdd4_Init+0x60>)
    2974:	400a      	ands	r2, r1
    2976:	2180      	movs	r1, #128	; 0x80
    2978:	0049      	lsls	r1, r1, #1
    297a:	430a      	orrs	r2, r1
    297c:	655a      	str	r2, [r3, #84]	; 0x54
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:142
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd4_ID,DeviceDataPrv);
    297e:	4b09      	ldr	r3, [pc, #36]	; (29a4 <BitIoLdd4_Init+0x64>)
    2980:	68fa      	ldr	r2, [r7, #12]
    2982:	619a      	str	r2, [r3, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:143
  return ((LDD_TDeviceData *)DeviceDataPrv);
    2984:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:144
}
    2986:	1c18      	adds	r0, r3, #0
    2988:	46bd      	mov	sp, r7
    298a:	b004      	add	sp, #16
    298c:	bd80      	pop	{r7, pc}
    298e:	46c0      	nop			; (mov r8, r8)
    2990:	1ffff0b0 	.word	0x1ffff0b0
    2994:	400ff100 	.word	0x400ff100
    2998:	ffdfffff 	.word	0xffdfffff
    299c:	4004d000 	.word	0x4004d000
    29a0:	fefff8ff 	.word	0xfefff8ff
    29a4:	1ffff0cc 	.word	0x1ffff0cc

000029a8 <BitIoLdd4_SetVal>:
BitIoLdd4_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:180
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd4_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    29a8:	b580      	push	{r7, lr}
    29aa:	b082      	sub	sp, #8
    29ac:	af00      	add	r7, sp, #0
    29ae:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:182
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd4_MODULE_BASE_ADDRESS, BitIoLdd4_PORT_MASK);
    29b0:	4b03      	ldr	r3, [pc, #12]	; (29c0 <BitIoLdd4_SetVal+0x18>)
    29b2:	2280      	movs	r2, #128	; 0x80
    29b4:	0392      	lsls	r2, r2, #14
    29b6:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:183
}
    29b8:	46bd      	mov	sp, r7
    29ba:	b002      	add	sp, #8
    29bc:	bd80      	pop	{r7, pc}
    29be:	46c0      	nop			; (mov r8, r8)
    29c0:	f80ff100 	.word	0xf80ff100

000029c4 <BitIoLdd5_Init>:
BitIoLdd5_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd5_Init(LDD_TUserData *UserDataPtr)
{
    29c4:	b580      	push	{r7, lr}
    29c6:	b084      	sub	sp, #16
    29c8:	af00      	add	r7, sp, #0
    29ca:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:126
  /* Allocate device structure */
  BitIoLdd5_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    29cc:	4b11      	ldr	r3, [pc, #68]	; (2a14 <BitIoLdd5_Init+0x50>)
    29ce:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    29d0:	68fb      	ldr	r3, [r7, #12]
    29d2:	687a      	ldr	r2, [r7, #4]
    29d4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0800 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0800);
    29d6:	4b10      	ldr	r3, [pc, #64]	; (2a18 <BitIoLdd5_Init+0x54>)
    29d8:	4a0f      	ldr	r2, [pc, #60]	; (2a18 <BitIoLdd5_Init+0x54>)
    29da:	6952      	ldr	r2, [r2, #20]
    29dc:	2180      	movs	r1, #128	; 0x80
    29de:	0109      	lsls	r1, r1, #4
    29e0:	430a      	orrs	r2, r1
    29e2:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0800 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0800));
    29e4:	4b0c      	ldr	r3, [pc, #48]	; (2a18 <BitIoLdd5_Init+0x54>)
    29e6:	4a0c      	ldr	r2, [pc, #48]	; (2a18 <BitIoLdd5_Init+0x54>)
    29e8:	6811      	ldr	r1, [r2, #0]
    29ea:	4a0c      	ldr	r2, [pc, #48]	; (2a1c <BitIoLdd5_Init+0x58>)
    29ec:	400a      	ands	r2, r1
    29ee:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR11: ISF=0,MUX=1 */
  PORTB_PCR11 = (uint32_t)((PORTB_PCR11 & (uint32_t)~(uint32_t)(
    29f0:	4b0b      	ldr	r3, [pc, #44]	; (2a20 <BitIoLdd5_Init+0x5c>)
    29f2:	4a0b      	ldr	r2, [pc, #44]	; (2a20 <BitIoLdd5_Init+0x5c>)
    29f4:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    29f6:	4a0b      	ldr	r2, [pc, #44]	; (2a24 <BitIoLdd5_Init+0x60>)
    29f8:	400a      	ands	r2, r1
    29fa:	2180      	movs	r1, #128	; 0x80
    29fc:	0049      	lsls	r1, r1, #1
    29fe:	430a      	orrs	r2, r1
    2a00:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:143
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd5_ID,DeviceDataPrv);
    2a02:	4b09      	ldr	r3, [pc, #36]	; (2a28 <BitIoLdd5_Init+0x64>)
    2a04:	68fa      	ldr	r2, [r7, #12]
    2a06:	63da      	str	r2, [r3, #60]	; 0x3c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    2a08:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:145
}
    2a0a:	1c18      	adds	r0, r3, #0
    2a0c:	46bd      	mov	sp, r7
    2a0e:	b004      	add	sp, #16
    2a10:	bd80      	pop	{r7, pc}
    2a12:	46c0      	nop			; (mov r8, r8)
    2a14:	1ffff0b4 	.word	0x1ffff0b4
    2a18:	400ff040 	.word	0x400ff040
    2a1c:	fffff7ff 	.word	0xfffff7ff
    2a20:	4004a000 	.word	0x4004a000
    2a24:	fefff8ff 	.word	0xfefff8ff
    2a28:	1ffff0cc 	.word	0x1ffff0cc

00002a2c <BitIoLdd5_SetVal>:
BitIoLdd5_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd5_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    2a2c:	b580      	push	{r7, lr}
    2a2e:	b082      	sub	sp, #8
    2a30:	af00      	add	r7, sp, #0
    2a32:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd5_MODULE_BASE_ADDRESS, BitIoLdd5_PORT_MASK);
    2a34:	4b03      	ldr	r3, [pc, #12]	; (2a44 <BitIoLdd5_SetVal+0x18>)
    2a36:	2280      	movs	r2, #128	; 0x80
    2a38:	0112      	lsls	r2, r2, #4
    2a3a:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:184
}
    2a3c:	46bd      	mov	sp, r7
    2a3e:	b002      	add	sp, #8
    2a40:	bd80      	pop	{r7, pc}
    2a42:	46c0      	nop			; (mov r8, r8)
    2a44:	f80ff040 	.word	0xf80ff040

00002a48 <BitIoLdd5_NegVal>:
BitIoLdd5_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd5_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    2a48:	b580      	push	{r7, lr}
    2a4a:	b082      	sub	sp, #8
    2a4c:	af00      	add	r7, sp, #0
    2a4e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd5_MODULE_BASE_ADDRESS, BitIoLdd5_PORT_MASK);
    2a50:	4b03      	ldr	r3, [pc, #12]	; (2a60 <BitIoLdd5_NegVal+0x18>)
    2a52:	2280      	movs	r2, #128	; 0x80
    2a54:	0112      	lsls	r2, r2, #4
    2a56:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:204
}
    2a58:	46bd      	mov	sp, r7
    2a5a:	b002      	add	sp, #8
    2a5c:	bd80      	pop	{r7, pc}
    2a5e:	46c0      	nop			; (mov r8, r8)
    2a60:	f80ff040 	.word	0xf80ff040

00002a64 <BitIoLdd6_Init>:
BitIoLdd6_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd6_Init(LDD_TUserData *UserDataPtr)
{
    2a64:	b580      	push	{r7, lr}
    2a66:	b084      	sub	sp, #16
    2a68:	af00      	add	r7, sp, #0
    2a6a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:126
  /* Allocate device structure */
  BitIoLdd6_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2a6c:	4b11      	ldr	r3, [pc, #68]	; (2ab4 <BitIoLdd6_Init+0x50>)
    2a6e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2a70:	68fb      	ldr	r3, [r7, #12]
    2a72:	687a      	ldr	r2, [r7, #4]
    2a74:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0400 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0400);
    2a76:	4b10      	ldr	r3, [pc, #64]	; (2ab8 <BitIoLdd6_Init+0x54>)
    2a78:	4a0f      	ldr	r2, [pc, #60]	; (2ab8 <BitIoLdd6_Init+0x54>)
    2a7a:	6952      	ldr	r2, [r2, #20]
    2a7c:	2180      	movs	r1, #128	; 0x80
    2a7e:	00c9      	lsls	r1, r1, #3
    2a80:	430a      	orrs	r2, r1
    2a82:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0400 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0400));
    2a84:	4b0c      	ldr	r3, [pc, #48]	; (2ab8 <BitIoLdd6_Init+0x54>)
    2a86:	4a0c      	ldr	r2, [pc, #48]	; (2ab8 <BitIoLdd6_Init+0x54>)
    2a88:	6811      	ldr	r1, [r2, #0]
    2a8a:	4a0c      	ldr	r2, [pc, #48]	; (2abc <BitIoLdd6_Init+0x58>)
    2a8c:	400a      	ands	r2, r1
    2a8e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR10: ISF=0,MUX=1 */
  PORTB_PCR10 = (uint32_t)((PORTB_PCR10 & (uint32_t)~(uint32_t)(
    2a90:	4b0b      	ldr	r3, [pc, #44]	; (2ac0 <BitIoLdd6_Init+0x5c>)
    2a92:	4a0b      	ldr	r2, [pc, #44]	; (2ac0 <BitIoLdd6_Init+0x5c>)
    2a94:	6a91      	ldr	r1, [r2, #40]	; 0x28
    2a96:	4a0b      	ldr	r2, [pc, #44]	; (2ac4 <BitIoLdd6_Init+0x60>)
    2a98:	400a      	ands	r2, r1
    2a9a:	2180      	movs	r1, #128	; 0x80
    2a9c:	0049      	lsls	r1, r1, #1
    2a9e:	430a      	orrs	r2, r1
    2aa0:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:143
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd6_ID,DeviceDataPrv);
    2aa2:	4b09      	ldr	r3, [pc, #36]	; (2ac8 <BitIoLdd6_Init+0x64>)
    2aa4:	68fa      	ldr	r2, [r7, #12]
    2aa6:	641a      	str	r2, [r3, #64]	; 0x40
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    2aa8:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:145
}
    2aaa:	1c18      	adds	r0, r3, #0
    2aac:	46bd      	mov	sp, r7
    2aae:	b004      	add	sp, #16
    2ab0:	bd80      	pop	{r7, pc}
    2ab2:	46c0      	nop			; (mov r8, r8)
    2ab4:	1ffff0b8 	.word	0x1ffff0b8
    2ab8:	400ff040 	.word	0x400ff040
    2abc:	fffffbff 	.word	0xfffffbff
    2ac0:	4004a000 	.word	0x4004a000
    2ac4:	fefff8ff 	.word	0xfefff8ff
    2ac8:	1ffff0cc 	.word	0x1ffff0cc

00002acc <BitIoLdd6_ClrVal>:
BitIoLdd6_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:161
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    2acc:	b580      	push	{r7, lr}
    2ace:	b082      	sub	sp, #8
    2ad0:	af00      	add	r7, sp, #0
    2ad2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:163
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    2ad4:	4b03      	ldr	r3, [pc, #12]	; (2ae4 <BitIoLdd6_ClrVal+0x18>)
    2ad6:	2280      	movs	r2, #128	; 0x80
    2ad8:	00d2      	lsls	r2, r2, #3
    2ada:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:164
}
    2adc:	46bd      	mov	sp, r7
    2ade:	b002      	add	sp, #8
    2ae0:	bd80      	pop	{r7, pc}
    2ae2:	46c0      	nop			; (mov r8, r8)
    2ae4:	f80ff040 	.word	0xf80ff040

00002ae8 <BitIoLdd6_SetVal>:
BitIoLdd6_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    2ae8:	b580      	push	{r7, lr}
    2aea:	b082      	sub	sp, #8
    2aec:	af00      	add	r7, sp, #0
    2aee:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    2af0:	4b03      	ldr	r3, [pc, #12]	; (2b00 <BitIoLdd6_SetVal+0x18>)
    2af2:	2280      	movs	r2, #128	; 0x80
    2af4:	00d2      	lsls	r2, r2, #3
    2af6:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:184
}
    2af8:	46bd      	mov	sp, r7
    2afa:	b002      	add	sp, #8
    2afc:	bd80      	pop	{r7, pc}
    2afe:	46c0      	nop			; (mov r8, r8)
    2b00:	f80ff040 	.word	0xf80ff040

00002b04 <BitIoLdd6_NegVal>:
BitIoLdd6_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    2b04:	b580      	push	{r7, lr}
    2b06:	b082      	sub	sp, #8
    2b08:	af00      	add	r7, sp, #0
    2b0a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    2b0c:	4b03      	ldr	r3, [pc, #12]	; (2b1c <BitIoLdd6_NegVal+0x18>)
    2b0e:	2280      	movs	r2, #128	; 0x80
    2b10:	00d2      	lsls	r2, r2, #3
    2b12:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:204
}
    2b14:	46bd      	mov	sp, r7
    2b16:	b002      	add	sp, #8
    2b18:	bd80      	pop	{r7, pc}
    2b1a:	46c0      	nop			; (mov r8, r8)
    2b1c:	f80ff040 	.word	0xf80ff040

00002b20 <BitIoLdd7_Init>:
BitIoLdd7_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd7_Init(LDD_TUserData *UserDataPtr)
{
    2b20:	b580      	push	{r7, lr}
    2b22:	b084      	sub	sp, #16
    2b24:	af00      	add	r7, sp, #0
    2b26:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:126
  /* Allocate device structure */
  BitIoLdd7_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2b28:	4b11      	ldr	r3, [pc, #68]	; (2b70 <BitIoLdd7_Init+0x50>)
    2b2a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2b2c:	68fb      	ldr	r3, [r7, #12]
    2b2e:	687a      	ldr	r2, [r7, #4]
    2b30:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0200 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0200);
    2b32:	4b10      	ldr	r3, [pc, #64]	; (2b74 <BitIoLdd7_Init+0x54>)
    2b34:	4a0f      	ldr	r2, [pc, #60]	; (2b74 <BitIoLdd7_Init+0x54>)
    2b36:	6952      	ldr	r2, [r2, #20]
    2b38:	2180      	movs	r1, #128	; 0x80
    2b3a:	0089      	lsls	r1, r1, #2
    2b3c:	430a      	orrs	r2, r1
    2b3e:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0200 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0200));
    2b40:	4b0c      	ldr	r3, [pc, #48]	; (2b74 <BitIoLdd7_Init+0x54>)
    2b42:	4a0c      	ldr	r2, [pc, #48]	; (2b74 <BitIoLdd7_Init+0x54>)
    2b44:	6811      	ldr	r1, [r2, #0]
    2b46:	4a0c      	ldr	r2, [pc, #48]	; (2b78 <BitIoLdd7_Init+0x58>)
    2b48:	400a      	ands	r2, r1
    2b4a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR9: ISF=0,MUX=1 */
  PORTB_PCR9 = (uint32_t)((PORTB_PCR9 & (uint32_t)~(uint32_t)(
    2b4c:	4b0b      	ldr	r3, [pc, #44]	; (2b7c <BitIoLdd7_Init+0x5c>)
    2b4e:	4a0b      	ldr	r2, [pc, #44]	; (2b7c <BitIoLdd7_Init+0x5c>)
    2b50:	6a51      	ldr	r1, [r2, #36]	; 0x24
    2b52:	4a0b      	ldr	r2, [pc, #44]	; (2b80 <BitIoLdd7_Init+0x60>)
    2b54:	400a      	ands	r2, r1
    2b56:	2180      	movs	r1, #128	; 0x80
    2b58:	0049      	lsls	r1, r1, #1
    2b5a:	430a      	orrs	r2, r1
    2b5c:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:143
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd7_ID,DeviceDataPrv);
    2b5e:	4b09      	ldr	r3, [pc, #36]	; (2b84 <BitIoLdd7_Init+0x64>)
    2b60:	68fa      	ldr	r2, [r7, #12]
    2b62:	645a      	str	r2, [r3, #68]	; 0x44
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    2b64:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:145
}
    2b66:	1c18      	adds	r0, r3, #0
    2b68:	46bd      	mov	sp, r7
    2b6a:	b004      	add	sp, #16
    2b6c:	bd80      	pop	{r7, pc}
    2b6e:	46c0      	nop			; (mov r8, r8)
    2b70:	1ffff0bc 	.word	0x1ffff0bc
    2b74:	400ff040 	.word	0x400ff040
    2b78:	fffffdff 	.word	0xfffffdff
    2b7c:	4004a000 	.word	0x4004a000
    2b80:	fefff8ff 	.word	0xfefff8ff
    2b84:	1ffff0cc 	.word	0x1ffff0cc

00002b88 <BitIoLdd7_ClrVal>:
BitIoLdd7_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:161
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd7_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    2b88:	b580      	push	{r7, lr}
    2b8a:	b082      	sub	sp, #8
    2b8c:	af00      	add	r7, sp, #0
    2b8e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:163
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd7_MODULE_BASE_ADDRESS, BitIoLdd7_PORT_MASK);
    2b90:	4b03      	ldr	r3, [pc, #12]	; (2ba0 <BitIoLdd7_ClrVal+0x18>)
    2b92:	2280      	movs	r2, #128	; 0x80
    2b94:	0092      	lsls	r2, r2, #2
    2b96:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:164
}
    2b98:	46bd      	mov	sp, r7
    2b9a:	b002      	add	sp, #8
    2b9c:	bd80      	pop	{r7, pc}
    2b9e:	46c0      	nop			; (mov r8, r8)
    2ba0:	f80ff040 	.word	0xf80ff040

00002ba4 <BitIoLdd7_SetVal>:
BitIoLdd7_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd7_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    2ba4:	b580      	push	{r7, lr}
    2ba6:	b082      	sub	sp, #8
    2ba8:	af00      	add	r7, sp, #0
    2baa:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd7_MODULE_BASE_ADDRESS, BitIoLdd7_PORT_MASK);
    2bac:	4b03      	ldr	r3, [pc, #12]	; (2bbc <BitIoLdd7_SetVal+0x18>)
    2bae:	2280      	movs	r2, #128	; 0x80
    2bb0:	0092      	lsls	r2, r2, #2
    2bb2:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:184
}
    2bb4:	46bd      	mov	sp, r7
    2bb6:	b002      	add	sp, #8
    2bb8:	bd80      	pop	{r7, pc}
    2bba:	46c0      	nop			; (mov r8, r8)
    2bbc:	f80ff040 	.word	0xf80ff040

00002bc0 <BitIoLdd7_NegVal>:
BitIoLdd7_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd7_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    2bc0:	b580      	push	{r7, lr}
    2bc2:	b082      	sub	sp, #8
    2bc4:	af00      	add	r7, sp, #0
    2bc6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd7_MODULE_BASE_ADDRESS, BitIoLdd7_PORT_MASK);
    2bc8:	4b03      	ldr	r3, [pc, #12]	; (2bd8 <BitIoLdd7_NegVal+0x18>)
    2bca:	2280      	movs	r2, #128	; 0x80
    2bcc:	0092      	lsls	r2, r2, #2
    2bce:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:204
}
    2bd0:	46bd      	mov	sp, r7
    2bd2:	b002      	add	sp, #8
    2bd4:	bd80      	pop	{r7, pc}
    2bd6:	46c0      	nop			; (mov r8, r8)
    2bd8:	f80ff040 	.word	0xf80ff040

00002bdc <BitIoLdd8_Init>:
BitIoLdd8_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd8_Init(LDD_TUserData *UserDataPtr)
{
    2bdc:	b580      	push	{r7, lr}
    2bde:	b084      	sub	sp, #16
    2be0:	af00      	add	r7, sp, #0
    2be2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:126
  /* Allocate device structure */
  BitIoLdd8_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2be4:	4b11      	ldr	r3, [pc, #68]	; (2c2c <BitIoLdd8_Init+0x50>)
    2be6:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2be8:	68fb      	ldr	r3, [r7, #12]
    2bea:	687a      	ldr	r2, [r7, #4]
    2bec:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0100 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0100);
    2bee:	4b10      	ldr	r3, [pc, #64]	; (2c30 <BitIoLdd8_Init+0x54>)
    2bf0:	4a0f      	ldr	r2, [pc, #60]	; (2c30 <BitIoLdd8_Init+0x54>)
    2bf2:	6952      	ldr	r2, [r2, #20]
    2bf4:	2180      	movs	r1, #128	; 0x80
    2bf6:	0049      	lsls	r1, r1, #1
    2bf8:	430a      	orrs	r2, r1
    2bfa:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0100 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0100));
    2bfc:	4b0c      	ldr	r3, [pc, #48]	; (2c30 <BitIoLdd8_Init+0x54>)
    2bfe:	4a0c      	ldr	r2, [pc, #48]	; (2c30 <BitIoLdd8_Init+0x54>)
    2c00:	6811      	ldr	r1, [r2, #0]
    2c02:	4a0c      	ldr	r2, [pc, #48]	; (2c34 <BitIoLdd8_Init+0x58>)
    2c04:	400a      	ands	r2, r1
    2c06:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR8: ISF=0,MUX=1 */
  PORTB_PCR8 = (uint32_t)((PORTB_PCR8 & (uint32_t)~(uint32_t)(
    2c08:	4b0b      	ldr	r3, [pc, #44]	; (2c38 <BitIoLdd8_Init+0x5c>)
    2c0a:	4a0b      	ldr	r2, [pc, #44]	; (2c38 <BitIoLdd8_Init+0x5c>)
    2c0c:	6a11      	ldr	r1, [r2, #32]
    2c0e:	4a0b      	ldr	r2, [pc, #44]	; (2c3c <BitIoLdd8_Init+0x60>)
    2c10:	400a      	ands	r2, r1
    2c12:	2180      	movs	r1, #128	; 0x80
    2c14:	0049      	lsls	r1, r1, #1
    2c16:	430a      	orrs	r2, r1
    2c18:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:143
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd8_ID,DeviceDataPrv);
    2c1a:	4b09      	ldr	r3, [pc, #36]	; (2c40 <BitIoLdd8_Init+0x64>)
    2c1c:	68fa      	ldr	r2, [r7, #12]
    2c1e:	649a      	str	r2, [r3, #72]	; 0x48
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    2c20:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:145
}
    2c22:	1c18      	adds	r0, r3, #0
    2c24:	46bd      	mov	sp, r7
    2c26:	b004      	add	sp, #16
    2c28:	bd80      	pop	{r7, pc}
    2c2a:	46c0      	nop			; (mov r8, r8)
    2c2c:	1ffff0c0 	.word	0x1ffff0c0
    2c30:	400ff040 	.word	0x400ff040
    2c34:	fffffeff 	.word	0xfffffeff
    2c38:	4004a000 	.word	0x4004a000
    2c3c:	fefff8ff 	.word	0xfefff8ff
    2c40:	1ffff0cc 	.word	0x1ffff0cc

00002c44 <BitIoLdd8_ClrVal>:
BitIoLdd8_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:161
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    2c44:	b580      	push	{r7, lr}
    2c46:	b082      	sub	sp, #8
    2c48:	af00      	add	r7, sp, #0
    2c4a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:163
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    2c4c:	4b03      	ldr	r3, [pc, #12]	; (2c5c <BitIoLdd8_ClrVal+0x18>)
    2c4e:	2280      	movs	r2, #128	; 0x80
    2c50:	0052      	lsls	r2, r2, #1
    2c52:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:164
}
    2c54:	46bd      	mov	sp, r7
    2c56:	b002      	add	sp, #8
    2c58:	bd80      	pop	{r7, pc}
    2c5a:	46c0      	nop			; (mov r8, r8)
    2c5c:	f80ff040 	.word	0xf80ff040

00002c60 <BitIoLdd8_SetVal>:
BitIoLdd8_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    2c60:	b580      	push	{r7, lr}
    2c62:	b082      	sub	sp, #8
    2c64:	af00      	add	r7, sp, #0
    2c66:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    2c68:	4b03      	ldr	r3, [pc, #12]	; (2c78 <BitIoLdd8_SetVal+0x18>)
    2c6a:	2280      	movs	r2, #128	; 0x80
    2c6c:	0052      	lsls	r2, r2, #1
    2c6e:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:184
}
    2c70:	46bd      	mov	sp, r7
    2c72:	b002      	add	sp, #8
    2c74:	bd80      	pop	{r7, pc}
    2c76:	46c0      	nop			; (mov r8, r8)
    2c78:	f80ff040 	.word	0xf80ff040

00002c7c <BitIoLdd8_NegVal>:
BitIoLdd8_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    2c7c:	b580      	push	{r7, lr}
    2c7e:	b082      	sub	sp, #8
    2c80:	af00      	add	r7, sp, #0
    2c82:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    2c84:	4b03      	ldr	r3, [pc, #12]	; (2c94 <BitIoLdd8_NegVal+0x18>)
    2c86:	2280      	movs	r2, #128	; 0x80
    2c88:	0052      	lsls	r2, r2, #1
    2c8a:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:204
}
    2c8c:	46bd      	mov	sp, r7
    2c8e:	b002      	add	sp, #8
    2c90:	bd80      	pop	{r7, pc}
    2c92:	46c0      	nop			; (mov r8, r8)
    2c94:	f80ff040 	.word	0xf80ff040

00002c98 <BitIoLdd9_Init>:
BitIoLdd9_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd9_Init(LDD_TUserData *UserDataPtr)
{
    2c98:	b580      	push	{r7, lr}
    2c9a:	b084      	sub	sp, #16
    2c9c:	af00      	add	r7, sp, #0
    2c9e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:127
  /* Allocate device structure */
  BitIoLdd9_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2ca0:	4b11      	ldr	r3, [pc, #68]	; (2ce8 <BitIoLdd9_Init+0x50>)
    2ca2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2ca4:	68fb      	ldr	r3, [r7, #12]
    2ca6:	687a      	ldr	r2, [r7, #4]
    2ca8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:131
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x00040000 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x00040000);
    2caa:	4b10      	ldr	r3, [pc, #64]	; (2cec <BitIoLdd9_Init+0x54>)
    2cac:	4a0f      	ldr	r2, [pc, #60]	; (2cec <BitIoLdd9_Init+0x54>)
    2cae:	6952      	ldr	r2, [r2, #20]
    2cb0:	2180      	movs	r1, #128	; 0x80
    2cb2:	02c9      	lsls	r1, r1, #11
    2cb4:	430a      	orrs	r2, r1
    2cb6:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:134
  /* Set initialization value */
  /* GPIOB_PDOR: PDO|=0x00040000 */
  GPIOB_PDOR |= GPIO_PDOR_PDO(0x00040000);
    2cb8:	4b0c      	ldr	r3, [pc, #48]	; (2cec <BitIoLdd9_Init+0x54>)
    2cba:	4a0c      	ldr	r2, [pc, #48]	; (2cec <BitIoLdd9_Init+0x54>)
    2cbc:	6812      	ldr	r2, [r2, #0]
    2cbe:	2180      	movs	r1, #128	; 0x80
    2cc0:	02c9      	lsls	r1, r1, #11
    2cc2:	430a      	orrs	r2, r1
    2cc4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:137
  /* Initialization of Port Control register */
  /* PORTB_PCR18: ISF=0,MUX=1 */
  PORTB_PCR18 = (uint32_t)((PORTB_PCR18 & (uint32_t)~(uint32_t)(
    2cc6:	4b0a      	ldr	r3, [pc, #40]	; (2cf0 <BitIoLdd9_Init+0x58>)
    2cc8:	4a09      	ldr	r2, [pc, #36]	; (2cf0 <BitIoLdd9_Init+0x58>)
    2cca:	6c91      	ldr	r1, [r2, #72]	; 0x48
    2ccc:	4a09      	ldr	r2, [pc, #36]	; (2cf4 <BitIoLdd9_Init+0x5c>)
    2cce:	400a      	ands	r2, r1
    2cd0:	2180      	movs	r1, #128	; 0x80
    2cd2:	0049      	lsls	r1, r1, #1
    2cd4:	430a      	orrs	r2, r1
    2cd6:	649a      	str	r2, [r3, #72]	; 0x48
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:144
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd9_ID,DeviceDataPrv);
    2cd8:	4b07      	ldr	r3, [pc, #28]	; (2cf8 <BitIoLdd9_Init+0x60>)
    2cda:	68fa      	ldr	r2, [r7, #12]
    2cdc:	64da      	str	r2, [r3, #76]	; 0x4c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:145
  return ((LDD_TDeviceData *)DeviceDataPrv);
    2cde:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:146
}
    2ce0:	1c18      	adds	r0, r3, #0
    2ce2:	46bd      	mov	sp, r7
    2ce4:	b004      	add	sp, #16
    2ce6:	bd80      	pop	{r7, pc}
    2ce8:	1ffff0c4 	.word	0x1ffff0c4
    2cec:	400ff040 	.word	0x400ff040
    2cf0:	4004a000 	.word	0x4004a000
    2cf4:	fefff8ff 	.word	0xfefff8ff
    2cf8:	1ffff0cc 	.word	0x1ffff0cc

00002cfc <TimerIntLdd1_OnInterrupt>:
TimerIntLdd1_OnInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Camera_CLK_Interruption.c:186
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TimerIntLdd1_OnInterrupt(LDD_TUserData *UserDataPtr)
{
    2cfc:	b580      	push	{r7, lr}
    2cfe:	b082      	sub	sp, #8
    2d00:	af00      	add	r7, sp, #0
    2d02:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Camera_CLK_Interruption.c:188
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  Camera_CLK_Interruption_OnInterrupt(); /* Invoke OnInterrupt event */
    2d04:	f7fe ff42 	bl	1b8c <Camera_CLK_Interruption_OnInterrupt>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Camera_CLK_Interruption.c:189
}
    2d08:	46bd      	mov	sp, r7
    2d0a:	b002      	add	sp, #8
    2d0c:	bd80      	pop	{r7, pc}
    2d0e:	46c0      	nop			; (mov r8, r8)

00002d10 <Cpu_INT_NMIInterrupt>:
Cpu_INT_NMIInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:312
**         This ISR services the Non Maskable Interrupt interrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(Cpu_INT_NMIInterrupt)
{
    2d10:	b580      	push	{r7, lr}
    2d12:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:313
  Cpu_OnNMIINT();
    2d14:	f7fe ff36 	bl	1b84 <Cpu_OnNMIINT>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:314
}
    2d18:	46bd      	mov	sp, r7
    2d1a:	bd80      	pop	{r7, pc}

00002d1c <Cpu_Interrupt>:
Cpu_Interrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:326
**         This ISR services an unused interrupt/exception vector.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(Cpu_Interrupt)
{
    2d1c:	b580      	push	{r7, lr}
    2d1e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:328
  /* This code can be changed using the CPU component property "Build Options / Unhandled int code" */
  PE_DEBUGHALT();
    2d20:	beff      	bkpt	0x00ff
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:329
}
    2d22:	46bd      	mov	sp, r7
    2d24:	bd80      	pop	{r7, pc}
    2d26:	46c0      	nop			; (mov r8, r8)

00002d28 <__init_hardware>:
__init_hardware():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:337
/*** !!! Here you can place your own code using property "User data declarations" on the build options tab. !!! ***/

/*lint -esym(765,__init_hardware) Disable MISRA rule (8.10) checking for symbols (__init_hardware). The function is linked to the EWL library */
/*lint -esym(765,Cpu_Interrupt) Disable MISRA rule (8.10) checking for symbols (Cpu_Interrupt). */
void __init_hardware(void)
{
    2d28:	b580      	push	{r7, lr}
    2d2a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:343

  /*** !!! Here you can place your own code before PE initialization using property "User code before PE initialization" on the build options tab. !!! ***/

  /*** ### MKL25Z128VLK4 "Cpu" init code ... ***/
  /*** PE initialization code after reset ***/
  SCB_VTOR = (uint32_t)(&__vect_table); /* Set the interrupt vector table position */
    2d2c:	4a36      	ldr	r2, [pc, #216]	; (2e08 <__init_hardware+0xe0>)
    2d2e:	4937      	ldr	r1, [pc, #220]	; (2e0c <__init_hardware+0xe4>)
    2d30:	4b37      	ldr	r3, [pc, #220]	; (2e10 <__init_hardware+0xe8>)
    2d32:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:346
  /* Disable the WDOG module */
  /* SIM_COPC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COPT=0,COPCLKS=0,COPW=0 */
  SIM_COPC = SIM_COPC_COPT(0x00);
    2d34:	4a37      	ldr	r2, [pc, #220]	; (2e14 <__init_hardware+0xec>)
    2d36:	2388      	movs	r3, #136	; 0x88
    2d38:	015b      	lsls	r3, r3, #5
    2d3a:	2100      	movs	r1, #0
    2d3c:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:350

  /* System clock initialization */
  /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescalers to safe value */
    2d3e:	4a35      	ldr	r2, [pc, #212]	; (2e14 <__init_hardware+0xec>)
    2d40:	4b35      	ldr	r3, [pc, #212]	; (2e18 <__init_hardware+0xf0>)
    2d42:	21c0      	movs	r1, #192	; 0xc0
    2d44:	0289      	lsls	r1, r1, #10
    2d46:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:352
  /* SIM_SCGC5: PORTE=1,PORTD=1,PORTC=1,PORTB=1,PORTA=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK |
    2d48:	4a32      	ldr	r2, [pc, #200]	; (2e14 <__init_hardware+0xec>)
    2d4a:	4932      	ldr	r1, [pc, #200]	; (2e14 <__init_hardware+0xec>)
    2d4c:	4b33      	ldr	r3, [pc, #204]	; (2e1c <__init_hardware+0xf4>)
    2d4e:	58cb      	ldr	r3, [r1, r3]
    2d50:	21f8      	movs	r1, #248	; 0xf8
    2d52:	0189      	lsls	r1, r1, #6
    2d54:	4319      	orrs	r1, r3
    2d56:	4b31      	ldr	r3, [pc, #196]	; (2e1c <__init_hardware+0xf4>)
    2d58:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:357
               SIM_SCGC5_PORTD_MASK |
               SIM_SCGC5_PORTC_MASK |
               SIM_SCGC5_PORTB_MASK |
               SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
  if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
    2d5a:	4b31      	ldr	r3, [pc, #196]	; (2e20 <__init_hardware+0xf8>)
    2d5c:	789b      	ldrb	r3, [r3, #2]
    2d5e:	b2db      	uxtb	r3, r3
    2d60:	1c1a      	adds	r2, r3, #0
    2d62:	2308      	movs	r3, #8
    2d64:	4013      	ands	r3, r2
    2d66:	d007      	beq.n	2d78 <__init_hardware+0x50>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:359
    /* PMC_REGSC: ACKISO=1 */
    PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
    2d68:	4b2d      	ldr	r3, [pc, #180]	; (2e20 <__init_hardware+0xf8>)
    2d6a:	4a2d      	ldr	r2, [pc, #180]	; (2e20 <__init_hardware+0xf8>)
    2d6c:	7892      	ldrb	r2, [r2, #2]
    2d6e:	b2d2      	uxtb	r2, r2
    2d70:	2108      	movs	r1, #8
    2d72:	430a      	orrs	r2, r1
    2d74:	b2d2      	uxtb	r2, r2
    2d76:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:362
  }
  /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x00)); /* Update system prescalers */
    2d78:	4a26      	ldr	r2, [pc, #152]	; (2e14 <__init_hardware+0xec>)
    2d7a:	4b27      	ldr	r3, [pc, #156]	; (2e18 <__init_hardware+0xf0>)
    2d7c:	2100      	movs	r1, #0
    2d7e:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:364
  /* SIM_SOPT2: ??=0,PLLFLLSEL=0 */
  SIM_SOPT2 &= (uint32_t)~(uint32_t)((SIM_SOPT2_PLLFLLSEL_MASK | 0x00020000U)); /* Select FLL as a clock source for various peripherals */
    2d80:	4a24      	ldr	r2, [pc, #144]	; (2e14 <__init_hardware+0xec>)
    2d82:	4924      	ldr	r1, [pc, #144]	; (2e14 <__init_hardware+0xec>)
    2d84:	4b27      	ldr	r3, [pc, #156]	; (2e24 <__init_hardware+0xfc>)
    2d86:	58c9      	ldr	r1, [r1, r3]
    2d88:	4b27      	ldr	r3, [pc, #156]	; (2e28 <__init_hardware+0x100>)
    2d8a:	4019      	ands	r1, r3
    2d8c:	4b25      	ldr	r3, [pc, #148]	; (2e24 <__init_hardware+0xfc>)
    2d8e:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:366
  /* SIM_SOPT1: OSC32KSEL=3 */
  SIM_SOPT1 |= SIM_SOPT1_OSC32KSEL(0x03); /* LPO 1kHz oscillator drives 32 kHz clock for various peripherals */
    2d90:	4b20      	ldr	r3, [pc, #128]	; (2e14 <__init_hardware+0xec>)
    2d92:	4a20      	ldr	r2, [pc, #128]	; (2e14 <__init_hardware+0xec>)
    2d94:	6812      	ldr	r2, [r2, #0]
    2d96:	21c0      	movs	r1, #192	; 0xc0
    2d98:	0309      	lsls	r1, r1, #12
    2d9a:	430a      	orrs	r2, r1
    2d9c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:368
  /* SIM_SOPT2: TPMSRC=1 */
  SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
    2d9e:	4a1d      	ldr	r2, [pc, #116]	; (2e14 <__init_hardware+0xec>)
    2da0:	491c      	ldr	r1, [pc, #112]	; (2e14 <__init_hardware+0xec>)
    2da2:	4b20      	ldr	r3, [pc, #128]	; (2e24 <__init_hardware+0xfc>)
    2da4:	58c9      	ldr	r1, [r1, r3]
    2da6:	4b21      	ldr	r3, [pc, #132]	; (2e2c <__init_hardware+0x104>)
    2da8:	400b      	ands	r3, r1
    2daa:	2180      	movs	r1, #128	; 0x80
    2dac:	0449      	lsls	r1, r1, #17
    2dae:	4319      	orrs	r1, r3
    2db0:	4b1c      	ldr	r3, [pc, #112]	; (2e24 <__init_hardware+0xfc>)
    2db2:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:375
              )) | (uint32_t)(
               SIM_SOPT2_TPMSRC(0x01)
              ));                      /* Set the TPM clock */
  /* Switch to FEI Mode */
  /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
  MCG_C1 = MCG_C1_CLKS(0x00) |
    2db4:	4b1e      	ldr	r3, [pc, #120]	; (2e30 <__init_hardware+0x108>)
    2db6:	2206      	movs	r2, #6
    2db8:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:380
           MCG_C1_FRDIV(0x00) |
           MCG_C1_IREFS_MASK |
           MCG_C1_IRCLKEN_MASK;
  /* MCG_C2: LOCRE0=0,??=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
  MCG_C2 = MCG_C2_RANGE0(0x00);
    2dba:	4b1d      	ldr	r3, [pc, #116]	; (2e30 <__init_hardware+0x108>)
    2dbc:	2200      	movs	r2, #0
    2dbe:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:382
  /* MCG_C4: DMX32=0,DRST_DRS=0 */
  MCG_C4 &= (uint8_t)~(uint8_t)((MCG_C4_DMX32_MASK | MCG_C4_DRST_DRS(0x03)));
    2dc0:	4b1b      	ldr	r3, [pc, #108]	; (2e30 <__init_hardware+0x108>)
    2dc2:	4a1b      	ldr	r2, [pc, #108]	; (2e30 <__init_hardware+0x108>)
    2dc4:	78d2      	ldrb	r2, [r2, #3]
    2dc6:	b2d1      	uxtb	r1, r2
    2dc8:	221f      	movs	r2, #31
    2dca:	400a      	ands	r2, r1
    2dcc:	b2d2      	uxtb	r2, r2
    2dce:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:384
  /* OSC0_CR: ERCLKEN=1,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
  OSC0_CR = OSC_CR_ERCLKEN_MASK;
    2dd0:	4b18      	ldr	r3, [pc, #96]	; (2e34 <__init_hardware+0x10c>)
    2dd2:	2280      	movs	r2, #128	; 0x80
    2dd4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:386
  /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
  MCG_C5 = MCG_C5_PRDIV0(0x00);
    2dd6:	4b16      	ldr	r3, [pc, #88]	; (2e30 <__init_hardware+0x108>)
    2dd8:	2200      	movs	r2, #0
    2dda:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:388
  /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
  MCG_C6 = MCG_C6_VDIV0(0x00);
    2ddc:	4b14      	ldr	r3, [pc, #80]	; (2e30 <__init_hardware+0x108>)
    2dde:	2200      	movs	r2, #0
    2de0:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:389
  while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    2de2:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:389 (discriminator 1)
    2de4:	4b12      	ldr	r3, [pc, #72]	; (2e30 <__init_hardware+0x108>)
    2de6:	799b      	ldrb	r3, [r3, #6]
    2de8:	b2db      	uxtb	r3, r3
    2dea:	1c1a      	adds	r2, r3, #0
    2dec:	2310      	movs	r3, #16
    2dee:	4013      	ands	r3, r2
    2df0:	d0f8      	beq.n	2de4 <__init_hardware+0xbc>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:391
  }
  while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
    2df2:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:391 (discriminator 1)
    2df4:	4b0e      	ldr	r3, [pc, #56]	; (2e30 <__init_hardware+0x108>)
    2df6:	799b      	ldrb	r3, [r3, #6]
    2df8:	b2db      	uxtb	r3, r3
    2dfa:	1c1a      	adds	r2, r3, #0
    2dfc:	230c      	movs	r3, #12
    2dfe:	4013      	ands	r3, r2
    2e00:	d1f8      	bne.n	2df4 <__init_hardware+0xcc>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:397
  }
  /*** End of PE initialization code after reset ***/

  /*** !!! Here you can place your own code after PE initialization using property "User code after PE initialization" on the build options tab. !!! ***/

}
    2e02:	46bd      	mov	sp, r7
    2e04:	bd80      	pop	{r7, pc}
    2e06:	46c0      	nop			; (mov r8, r8)
    2e08:	e000e000 	.word	0xe000e000
    2e0c:	00000000 	.word	0x00000000
    2e10:	00000d08 	.word	0x00000d08
    2e14:	40047000 	.word	0x40047000
    2e18:	00001044 	.word	0x00001044
    2e1c:	00001038 	.word	0x00001038
    2e20:	4007d000 	.word	0x4007d000
    2e24:	00001004 	.word	0x00001004
    2e28:	fffcffff 	.word	0xfffcffff
    2e2c:	fcffffff 	.word	0xfcffffff
    2e30:	40064000 	.word	0x40064000
    2e34:	40065000 	.word	0x40065000

00002e38 <PE_low_level_init>:
PE_low_level_init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:413
**         application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void PE_low_level_init(void)
{
    2e38:	b580      	push	{r7, lr}
    2e3a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:419
  #ifdef PEX_RTOS_INIT
    PEX_RTOS_INIT();                   /* Initialization of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
      /* Initialization of the SIM module */
  /* PORTA_PCR4: ISF=0,MUX=7 */
  PORTA_PCR4 = (uint32_t)((PORTA_PCR4 & (uint32_t)~(uint32_t)(
    2e3c:	4b44      	ldr	r3, [pc, #272]	; (2f50 <PE_low_level_init+0x118>)
    2e3e:	4a44      	ldr	r2, [pc, #272]	; (2f50 <PE_low_level_init+0x118>)
    2e40:	6911      	ldr	r1, [r2, #16]
    2e42:	4a44      	ldr	r2, [pc, #272]	; (2f54 <PE_low_level_init+0x11c>)
    2e44:	400a      	ands	r2, r1
    2e46:	21e0      	movs	r1, #224	; 0xe0
    2e48:	00c9      	lsls	r1, r1, #3
    2e4a:	430a      	orrs	r2, r1
    2e4c:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:426
               )) | (uint32_t)(
                PORT_PCR_MUX(0x07)
               ));
        /* Initialization of the RCM module */
  /* RCM_RPFW: RSTFLTSEL=0 */
  RCM_RPFW &= (uint8_t)~(uint8_t)(RCM_RPFW_RSTFLTSEL(0x1F));
    2e4e:	4b42      	ldr	r3, [pc, #264]	; (2f58 <PE_low_level_init+0x120>)
    2e50:	4a41      	ldr	r2, [pc, #260]	; (2f58 <PE_low_level_init+0x120>)
    2e52:	7952      	ldrb	r2, [r2, #5]
    2e54:	b2d2      	uxtb	r2, r2
    2e56:	211f      	movs	r1, #31
    2e58:	438a      	bics	r2, r1
    2e5a:	b2d2      	uxtb	r2, r2
    2e5c:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:428
  /* RCM_RPFC: RSTFLTSS=0,RSTFLTSRW=0 */
  RCM_RPFC &= (uint8_t)~(uint8_t)(
    2e5e:	4b3e      	ldr	r3, [pc, #248]	; (2f58 <PE_low_level_init+0x120>)
    2e60:	4a3d      	ldr	r2, [pc, #244]	; (2f58 <PE_low_level_init+0x120>)
    2e62:	7912      	ldrb	r2, [r2, #4]
    2e64:	b2d2      	uxtb	r2, r2
    2e66:	2107      	movs	r1, #7
    2e68:	438a      	bics	r2, r1
    2e6a:	b2d2      	uxtb	r2, r2
    2e6c:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:435
               RCM_RPFC_RSTFLTSRW(0x03)
              );
        /* Initialization of the FTFL_FlashConfig module */
      /* Initialization of the PMC module */
  /* PMC_LVDSC1: LVDACK=1,LVDIE=0,LVDRE=1,LVDV=0 */
  PMC_LVDSC1 = (uint8_t)((PMC_LVDSC1 & (uint8_t)~(uint8_t)(
    2e6e:	4b3b      	ldr	r3, [pc, #236]	; (2f5c <PE_low_level_init+0x124>)
    2e70:	4a3a      	ldr	r2, [pc, #232]	; (2f5c <PE_low_level_init+0x124>)
    2e72:	7812      	ldrb	r2, [r2, #0]
    2e74:	b2d2      	uxtb	r2, r2
    2e76:	b2d2      	uxtb	r2, r2
    2e78:	2173      	movs	r1, #115	; 0x73
    2e7a:	438a      	bics	r2, r1
    2e7c:	b2d2      	uxtb	r2, r2
    2e7e:	2150      	movs	r1, #80	; 0x50
    2e80:	430a      	orrs	r2, r1
    2e82:	b2d2      	uxtb	r2, r2
    2e84:	b2d2      	uxtb	r2, r2
    2e86:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:443
               )) | (uint8_t)(
                PMC_LVDSC1_LVDACK_MASK |
                PMC_LVDSC1_LVDRE_MASK
               ));
  /* PMC_LVDSC2: LVWACK=1,LVWIE=0,LVWV=0 */
  PMC_LVDSC2 = (uint8_t)((PMC_LVDSC2 & (uint8_t)~(uint8_t)(
    2e88:	4b34      	ldr	r3, [pc, #208]	; (2f5c <PE_low_level_init+0x124>)
    2e8a:	4a34      	ldr	r2, [pc, #208]	; (2f5c <PE_low_level_init+0x124>)
    2e8c:	7852      	ldrb	r2, [r2, #1]
    2e8e:	b2d2      	uxtb	r2, r2
    2e90:	b2d2      	uxtb	r2, r2
    2e92:	2163      	movs	r1, #99	; 0x63
    2e94:	438a      	bics	r2, r1
    2e96:	b2d2      	uxtb	r2, r2
    2e98:	2140      	movs	r1, #64	; 0x40
    2e9a:	430a      	orrs	r2, r1
    2e9c:	b2d2      	uxtb	r2, r2
    2e9e:	b2d2      	uxtb	r2, r2
    2ea0:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:450
                PMC_LVDSC2_LVWV(0x03)
               )) | (uint8_t)(
                PMC_LVDSC2_LVWACK_MASK
               ));
  /* PMC_REGSC: BGEN=0,ACKISO=0,BGBE=0 */
  PMC_REGSC &= (uint8_t)~(uint8_t)(
    2ea2:	4b2e      	ldr	r3, [pc, #184]	; (2f5c <PE_low_level_init+0x124>)
    2ea4:	4a2d      	ldr	r2, [pc, #180]	; (2f5c <PE_low_level_init+0x124>)
    2ea6:	7892      	ldrb	r2, [r2, #2]
    2ea8:	b2d2      	uxtb	r2, r2
    2eaa:	2119      	movs	r1, #25
    2eac:	438a      	bics	r2, r1
    2eae:	b2d2      	uxtb	r2, r2
    2eb0:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:456
                PMC_REGSC_BGEN_MASK |
                PMC_REGSC_ACKISO_MASK |
                PMC_REGSC_BGBE_MASK
               );
  /* SMC_PMPROT: ??=0,??=0,AVLP=0,??=0,ALLS=0,??=0,AVLLS=0,??=0 */
  SMC_PMPROT = 0x00U;                  /* Setup Power mode protection register */
    2eb2:	4b2b      	ldr	r3, [pc, #172]	; (2f60 <PE_low_level_init+0x128>)
    2eb4:	2200      	movs	r2, #0
    2eb6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:459
  /* Common initialization of the CPU registers */
  /* PORTA_PCR20: ISF=0,MUX=7 */
  PORTA_PCR20 = (uint32_t)((PORTA_PCR20 & (uint32_t)~(uint32_t)(
    2eb8:	4b25      	ldr	r3, [pc, #148]	; (2f50 <PE_low_level_init+0x118>)
    2eba:	4a25      	ldr	r2, [pc, #148]	; (2f50 <PE_low_level_init+0x118>)
    2ebc:	6d11      	ldr	r1, [r2, #80]	; 0x50
    2ebe:	4a25      	ldr	r2, [pc, #148]	; (2f54 <PE_low_level_init+0x11c>)
    2ec0:	400a      	ands	r2, r1
    2ec2:	21e0      	movs	r1, #224	; 0xe0
    2ec4:	00c9      	lsls	r1, r1, #3
    2ec6:	430a      	orrs	r2, r1
    2ec8:	651a      	str	r2, [r3, #80]	; 0x50
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:465
                 PORT_PCR_ISF_MASK
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x07)
                ));
  /* NVIC_IPR1: PRI_6=0 */
  NVIC_IPR1 &= (uint32_t)~(uint32_t)(NVIC_IP_PRI_6(0xFF));
    2eca:	4a26      	ldr	r2, [pc, #152]	; (2f64 <PE_low_level_init+0x12c>)
    2ecc:	4925      	ldr	r1, [pc, #148]	; (2f64 <PE_low_level_init+0x12c>)
    2ece:	23c1      	movs	r3, #193	; 0xc1
    2ed0:	009b      	lsls	r3, r3, #2
    2ed2:	58c9      	ldr	r1, [r1, r3]
    2ed4:	4b24      	ldr	r3, [pc, #144]	; (2f68 <PE_low_level_init+0x130>)
    2ed6:	4019      	ands	r1, r3
    2ed8:	23c1      	movs	r3, #193	; 0xc1
    2eda:	009b      	lsls	r3, r3, #2
    2edc:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:467
  /* ### BitIO_LDD "BitIoLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd1_Init(NULL);
    2ede:	2000      	movs	r0, #0
    2ee0:	f7ff fbd6 	bl	2690 <BitIoLdd1_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:469
  /* ### BitIO_LDD "BitIoLdd2" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd2_Init(NULL);
    2ee4:	2000      	movs	r0, #0
    2ee6:	f7ff fc8f 	bl	2808 <BitIoLdd2_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:471
  /* ### TimerInt_LDD "TimerIntLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)TimerIntLdd1_Init(NULL);
    2eea:	2000      	movs	r0, #0
    2eec:	f000 fcf4 	bl	38d8 <TimerIntLdd1_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:474
  /* ### TimerInt "Camera_CLK_Interruption" init code ... */
  /* ### ADC "AD_Converter" init code ... */
  AD_Converter_Init();
    2ef0:	f7ff fa4c 	bl	238c <AD_Converter_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:476
  /* ### BitIO_LDD "BitIoLdd4" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd4_Init(NULL);
    2ef4:	2000      	movs	r0, #0
    2ef6:	f7ff fd23 	bl	2940 <BitIoLdd4_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:478
  /* ### PWM_LDD "PwmLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd1_Init(NULL);
    2efa:	2000      	movs	r0, #0
    2efc:	f000 f836 	bl	2f6c <PwmLdd1_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:480
  /* ### PWM_LDD "PwmLdd2" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd2_Init(NULL);
    2f00:	2000      	movs	r0, #0
    2f02:	f000 f85f 	bl	2fc4 <PwmLdd2_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:482
  /* ### PWM_LDD "PwmLdd3" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd3_Init(NULL);
    2f06:	2000      	movs	r0, #0
    2f08:	f000 f888 	bl	301c <PwmLdd3_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:484
  /* ### PWM_LDD "PwmLdd4" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd4_Init(NULL);
    2f0c:	2000      	movs	r0, #0
    2f0e:	f000 f8b1 	bl	3074 <PwmLdd4_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:486
  /* ### PWM_LDD "PwmLdd5" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd5_Init(NULL);
    2f12:	2000      	movs	r0, #0
    2f14:	f000 f8da 	bl	30cc <PwmLdd5_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:488
  /* ### BitIO_LDD "BitIoLdd3" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd3_Init(NULL);
    2f18:	2000      	movs	r0, #0
    2f1a:	f7ff fcd1 	bl	28c0 <BitIoLdd3_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:490
  /* ### BitIO_LDD "BitIoLdd5" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd5_Init(NULL);
    2f1e:	2000      	movs	r0, #0
    2f20:	f7ff fd50 	bl	29c4 <BitIoLdd5_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:492
  /* ### BitIO_LDD "BitIoLdd6" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd6_Init(NULL);
    2f24:	2000      	movs	r0, #0
    2f26:	f7ff fd9d 	bl	2a64 <BitIoLdd6_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:494
  /* ### BitIO_LDD "BitIoLdd7" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd7_Init(NULL);
    2f2a:	2000      	movs	r0, #0
    2f2c:	f7ff fdf8 	bl	2b20 <BitIoLdd7_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:496
  /* ### BitIO_LDD "BitIoLdd8" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd8_Init(NULL);
    2f30:	2000      	movs	r0, #0
    2f32:	f7ff fe53 	bl	2bdc <BitIoLdd8_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:498
  /* ### BitIO_LDD "BitIoLdd9" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd9_Init(NULL);
    2f36:	2000      	movs	r0, #0
    2f38:	f7ff feae 	bl	2c98 <BitIoLdd9_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:500
  /* ### BitIO_LDD "BitIoLdd10" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd10_Init(NULL);
    2f3c:	2000      	movs	r0, #0
    2f3e:	f7ff fc03 	bl	2748 <BitIoLdd10_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:502
  /* ### BitIO_LDD "BitIoLdd11" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd11_Init(NULL);
    2f42:	2000      	movs	r0, #0
    2f44:	f7ff fc30 	bl	27a8 <BitIoLdd11_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:503
  __EI();
    2f48:	b662      	cpsie	i
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:504
}
    2f4a:	46bd      	mov	sp, r7
    2f4c:	bd80      	pop	{r7, pc}
    2f4e:	46c0      	nop			; (mov r8, r8)
    2f50:	40049000 	.word	0x40049000
    2f54:	fefff8ff 	.word	0xfefff8ff
    2f58:	4007f000 	.word	0x4007f000
    2f5c:	4007d000 	.word	0x4007d000
    2f60:	4007e000 	.word	0x4007e000
    2f64:	e000e100 	.word	0xe000e100
    2f68:	ff3fffff 	.word	0xff3fffff

00002f6c <PwmLdd1_Init>:
PwmLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd1_Init(LDD_TUserData *UserDataPtr)
{
    2f6c:	b580      	push	{r7, lr}
    2f6e:	b084      	sub	sp, #16
    2f70:	af00      	add	r7, sp, #0
    2f72:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:147
  /* Allocate device structure */
  PwmLdd1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2f74:	4b11      	ldr	r3, [pc, #68]	; (2fbc <PwmLdd1_Init+0x50>)
    2f76:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2f78:	68fb      	ldr	r3, [r7, #12]
    2f7a:	687a      	ldr	r2, [r7, #4]
    2f7c:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    2f7e:	68fb      	ldr	r3, [r7, #12]
    2f80:	2201      	movs	r2, #1
    2f82:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    2f84:	68fb      	ldr	r3, [r7, #12]
    2f86:	2201      	movs	r2, #1
    2f88:	4252      	negs	r2, r2
    2f8a:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd1_ID,DeviceDataPrv);
    2f8c:	4b0c      	ldr	r3, [pc, #48]	; (2fc0 <PwmLdd1_Init+0x54>)
    2f8e:	68fa      	ldr	r2, [r7, #12]
    2f90:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    2f92:	2000      	movs	r0, #0
    2f94:	f000 fb88 	bl	36a8 <TU2_Init>
    2f98:	1c02      	adds	r2, r0, #0
    2f9a:	68fb      	ldr	r3, [r7, #12]
    2f9c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    2f9e:	68fb      	ldr	r3, [r7, #12]
    2fa0:	681b      	ldr	r3, [r3, #0]
    2fa2:	2b00      	cmp	r3, #0
    2fa4:	d104      	bne.n	2fb0 <PwmLdd1_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd1_ID);
    2fa6:	4b06      	ldr	r3, [pc, #24]	; (2fc0 <PwmLdd1_Init+0x54>)
    2fa8:	2200      	movs	r2, #0
    2faa:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    2fac:	2300      	movs	r3, #0
    2fae:	e000      	b.n	2fb2 <PwmLdd1_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    2fb0:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:162
}
    2fb2:	1c18      	adds	r0, r3, #0
    2fb4:	46bd      	mov	sp, r7
    2fb6:	b004      	add	sp, #16
    2fb8:	bd80      	pop	{r7, pc}
    2fba:	46c0      	nop			; (mov r8, r8)
    2fbc:	1ffff124 	.word	0x1ffff124
    2fc0:	1ffff0cc 	.word	0x1ffff0cc

00002fc4 <PwmLdd2_Init>:
PwmLdd2_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd2_Init(LDD_TUserData *UserDataPtr)
{
    2fc4:	b580      	push	{r7, lr}
    2fc6:	b084      	sub	sp, #16
    2fc8:	af00      	add	r7, sp, #0
    2fca:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:147
  /* Allocate device structure */
  PwmLdd2_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    2fcc:	4b11      	ldr	r3, [pc, #68]	; (3014 <PwmLdd2_Init+0x50>)
    2fce:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    2fd0:	68fb      	ldr	r3, [r7, #12]
    2fd2:	687a      	ldr	r2, [r7, #4]
    2fd4:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    2fd6:	68fb      	ldr	r3, [r7, #12]
    2fd8:	2201      	movs	r2, #1
    2fda:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    2fdc:	68fb      	ldr	r3, [r7, #12]
    2fde:	2201      	movs	r2, #1
    2fe0:	4252      	negs	r2, r2
    2fe2:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd2_ID,DeviceDataPrv);
    2fe4:	4b0c      	ldr	r3, [pc, #48]	; (3018 <PwmLdd2_Init+0x54>)
    2fe6:	68fa      	ldr	r2, [r7, #12]
    2fe8:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    2fea:	2000      	movs	r0, #0
    2fec:	f000 fb5c 	bl	36a8 <TU2_Init>
    2ff0:	1c02      	adds	r2, r0, #0
    2ff2:	68fb      	ldr	r3, [r7, #12]
    2ff4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    2ff6:	68fb      	ldr	r3, [r7, #12]
    2ff8:	681b      	ldr	r3, [r3, #0]
    2ffa:	2b00      	cmp	r3, #0
    2ffc:	d104      	bne.n	3008 <PwmLdd2_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd2_ID);
    2ffe:	4b06      	ldr	r3, [pc, #24]	; (3018 <PwmLdd2_Init+0x54>)
    3000:	2200      	movs	r2, #0
    3002:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    3004:	2300      	movs	r3, #0
    3006:	e000      	b.n	300a <PwmLdd2_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    3008:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:162
}
    300a:	1c18      	adds	r0, r3, #0
    300c:	46bd      	mov	sp, r7
    300e:	b004      	add	sp, #16
    3010:	bd80      	pop	{r7, pc}
    3012:	46c0      	nop			; (mov r8, r8)
    3014:	1ffff130 	.word	0x1ffff130
    3018:	1ffff0cc 	.word	0x1ffff0cc

0000301c <PwmLdd3_Init>:
PwmLdd3_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd3_Init(LDD_TUserData *UserDataPtr)
{
    301c:	b580      	push	{r7, lr}
    301e:	b084      	sub	sp, #16
    3020:	af00      	add	r7, sp, #0
    3022:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:147
  /* Allocate device structure */
  PwmLdd3_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    3024:	4b11      	ldr	r3, [pc, #68]	; (306c <PwmLdd3_Init+0x50>)
    3026:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3028:	68fb      	ldr	r3, [r7, #12]
    302a:	687a      	ldr	r2, [r7, #4]
    302c:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    302e:	68fb      	ldr	r3, [r7, #12]
    3030:	2201      	movs	r2, #1
    3032:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    3034:	68fb      	ldr	r3, [r7, #12]
    3036:	2201      	movs	r2, #1
    3038:	4252      	negs	r2, r2
    303a:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd3_ID,DeviceDataPrv);
    303c:	4b0c      	ldr	r3, [pc, #48]	; (3070 <PwmLdd3_Init+0x54>)
    303e:	68fa      	ldr	r2, [r7, #12]
    3040:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    3042:	2000      	movs	r0, #0
    3044:	f000 fb30 	bl	36a8 <TU2_Init>
    3048:	1c02      	adds	r2, r0, #0
    304a:	68fb      	ldr	r3, [r7, #12]
    304c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    304e:	68fb      	ldr	r3, [r7, #12]
    3050:	681b      	ldr	r3, [r3, #0]
    3052:	2b00      	cmp	r3, #0
    3054:	d104      	bne.n	3060 <PwmLdd3_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd3_ID);
    3056:	4b06      	ldr	r3, [pc, #24]	; (3070 <PwmLdd3_Init+0x54>)
    3058:	2200      	movs	r2, #0
    305a:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    305c:	2300      	movs	r3, #0
    305e:	e000      	b.n	3062 <PwmLdd3_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    3060:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:162
}
    3062:	1c18      	adds	r0, r3, #0
    3064:	46bd      	mov	sp, r7
    3066:	b004      	add	sp, #16
    3068:	bd80      	pop	{r7, pc}
    306a:	46c0      	nop			; (mov r8, r8)
    306c:	1ffff13c 	.word	0x1ffff13c
    3070:	1ffff0cc 	.word	0x1ffff0cc

00003074 <PwmLdd4_Init>:
PwmLdd4_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd4_Init(LDD_TUserData *UserDataPtr)
{
    3074:	b580      	push	{r7, lr}
    3076:	b084      	sub	sp, #16
    3078:	af00      	add	r7, sp, #0
    307a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:147
  /* Allocate device structure */
  PwmLdd4_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    307c:	4b11      	ldr	r3, [pc, #68]	; (30c4 <PwmLdd4_Init+0x50>)
    307e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3080:	68fb      	ldr	r3, [r7, #12]
    3082:	687a      	ldr	r2, [r7, #4]
    3084:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    3086:	68fb      	ldr	r3, [r7, #12]
    3088:	2201      	movs	r2, #1
    308a:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    308c:	68fb      	ldr	r3, [r7, #12]
    308e:	2201      	movs	r2, #1
    3090:	4252      	negs	r2, r2
    3092:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd4_ID,DeviceDataPrv);
    3094:	4b0c      	ldr	r3, [pc, #48]	; (30c8 <PwmLdd4_Init+0x54>)
    3096:	68fa      	ldr	r2, [r7, #12]
    3098:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    309a:	2000      	movs	r0, #0
    309c:	f000 fb04 	bl	36a8 <TU2_Init>
    30a0:	1c02      	adds	r2, r0, #0
    30a2:	68fb      	ldr	r3, [r7, #12]
    30a4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    30a6:	68fb      	ldr	r3, [r7, #12]
    30a8:	681b      	ldr	r3, [r3, #0]
    30aa:	2b00      	cmp	r3, #0
    30ac:	d104      	bne.n	30b8 <PwmLdd4_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd4_ID);
    30ae:	4b06      	ldr	r3, [pc, #24]	; (30c8 <PwmLdd4_Init+0x54>)
    30b0:	2200      	movs	r2, #0
    30b2:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    30b4:	2300      	movs	r3, #0
    30b6:	e000      	b.n	30ba <PwmLdd4_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    30b8:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:162
}
    30ba:	1c18      	adds	r0, r3, #0
    30bc:	46bd      	mov	sp, r7
    30be:	b004      	add	sp, #16
    30c0:	bd80      	pop	{r7, pc}
    30c2:	46c0      	nop			; (mov r8, r8)
    30c4:	1ffff148 	.word	0x1ffff148
    30c8:	1ffff0cc 	.word	0x1ffff0cc

000030cc <PwmLdd5_Init>:
PwmLdd5_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:147
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd5_Init(LDD_TUserData *UserDataPtr)
{
    30cc:	b580      	push	{r7, lr}
    30ce:	b084      	sub	sp, #16
    30d0:	af00      	add	r7, sp, #0
    30d2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:151
  /* Allocate device structure */
  PwmLdd5_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    30d4:	4b10      	ldr	r3, [pc, #64]	; (3118 <PwmLdd5_Init+0x4c>)
    30d6:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:152
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    30d8:	68fb      	ldr	r3, [r7, #12]
    30da:	687a      	ldr	r2, [r7, #4]
    30dc:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:153
  DeviceDataPrv->EnUser = FALSE;       /* Set the flag "device disabled" */
    30de:	68fb      	ldr	r3, [r7, #12]
    30e0:	2200      	movs	r2, #0
    30e2:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:154
  DeviceDataPrv->RatioStore = 0xED6FU; /* Ratio after initialization */
    30e4:	68fb      	ldr	r3, [r7, #12]
    30e6:	4a0d      	ldr	r2, [pc, #52]	; (311c <PwmLdd5_Init+0x50>)
    30e8:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:156
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd5_ID,DeviceDataPrv);
    30ea:	4b0d      	ldr	r3, [pc, #52]	; (3120 <PwmLdd5_Init+0x54>)
    30ec:	68fa      	ldr	r2, [r7, #12]
    30ee:	635a      	str	r2, [r3, #52]	; 0x34
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:157
  DeviceDataPrv->LinkedDeviceDataPtr = TU3_Init((LDD_TUserData *)NULL);
    30f0:	2000      	movs	r0, #0
    30f2:	f000 fb73 	bl	37dc <TU3_Init>
    30f6:	1c02      	adds	r2, r0, #0
    30f8:	68fb      	ldr	r3, [r7, #12]
    30fa:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:158
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    30fc:	68fb      	ldr	r3, [r7, #12]
    30fe:	681b      	ldr	r3, [r3, #0]
    3100:	2b00      	cmp	r3, #0
    3102:	d104      	bne.n	310e <PwmLdd5_Init+0x42>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:160
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd5_ID);
    3104:	4b06      	ldr	r3, [pc, #24]	; (3120 <PwmLdd5_Init+0x54>)
    3106:	2200      	movs	r2, #0
    3108:	635a      	str	r2, [r3, #52]	; 0x34
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:163
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    310a:	2300      	movs	r3, #0
    310c:	e000      	b.n	3110 <PwmLdd5_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:165
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    310e:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:166
}
    3110:	1c18      	adds	r0, r3, #0
    3112:	46bd      	mov	sp, r7
    3114:	b004      	add	sp, #16
    3116:	bd80      	pop	{r7, pc}
    3118:	1ffff154 	.word	0x1ffff154
    311c:	ffffed6f 	.word	0xffffed6f
    3120:	1ffff0cc 	.word	0x1ffff0cc

00003124 <PwmLdd5_Enable>:
PwmLdd5_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:187
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError PwmLdd5_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    3124:	b580      	push	{r7, lr}
    3126:	b084      	sub	sp, #16
    3128:	af00      	add	r7, sp, #0
    312a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:188
  PwmLdd5_TDeviceData *DeviceDataPrv = (PwmLdd5_TDeviceData *)DeviceDataPtr;
    312c:	687b      	ldr	r3, [r7, #4]
    312e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:190

  if (!DeviceDataPrv->EnUser) {        /* Is the device disabled by user? */
    3130:	68fb      	ldr	r3, [r7, #12]
    3132:	791b      	ldrb	r3, [r3, #4]
    3134:	2b00      	cmp	r3, #0
    3136:	d107      	bne.n	3148 <PwmLdd5_Enable+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:191
    DeviceDataPrv->EnUser = TRUE;      /* If yes then set the flag "device enabled" */
    3138:	68fb      	ldr	r3, [r7, #12]
    313a:	2201      	movs	r2, #1
    313c:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:192
    (void)TU3_Enable(DeviceDataPrv->LinkedDeviceDataPtr); /* Enable TimerUnit */
    313e:	68fb      	ldr	r3, [r7, #12]
    3140:	681b      	ldr	r3, [r3, #0]
    3142:	1c18      	adds	r0, r3, #0
    3144:	f000 fbb0 	bl	38a8 <TU3_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:194
  }
  return ERR_OK;
    3148:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:195
}
    314a:	1c18      	adds	r0, r3, #0
    314c:	46bd      	mov	sp, r7
    314e:	b004      	add	sp, #16
    3150:	bd80      	pop	{r7, pc}
    3152:	46c0      	nop			; (mov r8, r8)

00003154 <SerialCom_Init>:
SerialCom_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:160
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* SerialCom_Init(LDD_TUserData *UserDataPtr)
{
    3154:	b580      	push	{r7, lr}
    3156:	b084      	sub	sp, #16
    3158:	af00      	add	r7, sp, #0
    315a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:164
  /* Allocate device structure */
  SerialCom_TDeviceDataPtr DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    315c:	4b5e      	ldr	r3, [pc, #376]	; (32d8 <SerialCom_Init+0x184>)
    315e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:167

  /* Clear the receive counters and pointer */
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Clear the counter of received characters */
    3160:	68fb      	ldr	r3, [r7, #12]
    3162:	2200      	movs	r2, #0
    3164:	805a      	strh	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:168
  DeviceDataPrv->InpDataNumReq = 0x00U; /* Clear the counter of characters to receive by ReceiveBlock() */
    3166:	68fb      	ldr	r3, [r7, #12]
    3168:	2200      	movs	r2, #0
    316a:	811a      	strh	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:169
  DeviceDataPrv->InpDataPtr = NULL;    /* Clear the buffer pointer for received characters */
    316c:	68fb      	ldr	r3, [r7, #12]
    316e:	2200      	movs	r2, #0
    3170:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:171
  /* Clear the transmit counters and pointer */
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters */
    3172:	68fb      	ldr	r3, [r7, #12]
    3174:	2200      	movs	r2, #0
    3176:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:172
  DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    3178:	68fb      	ldr	r3, [r7, #12]
    317a:	2200      	movs	r2, #0
    317c:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:173
  DeviceDataPrv->OutDataPtr = NULL;    /* Clear the buffer pointer for data to be transmitted */
    317e:	68fb      	ldr	r3, [r7, #12]
    3180:	2200      	movs	r2, #0
    3182:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:174
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3184:	68fb      	ldr	r3, [r7, #12]
    3186:	687a      	ldr	r2, [r7, #4]
    3188:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:177
  /* Allocate interrupt vectors */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_UART0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    318a:	4b54      	ldr	r3, [pc, #336]	; (32dc <SerialCom_Init+0x188>)
    318c:	68fa      	ldr	r2, [r7, #12]
    318e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:179
  /* SIM_SCGC4: UART0=1 */
  SIM_SCGC4 |= SIM_SCGC4_UART0_MASK;
    3190:	4a53      	ldr	r2, [pc, #332]	; (32e0 <SerialCom_Init+0x18c>)
    3192:	4953      	ldr	r1, [pc, #332]	; (32e0 <SerialCom_Init+0x18c>)
    3194:	4b53      	ldr	r3, [pc, #332]	; (32e4 <SerialCom_Init+0x190>)
    3196:	58cb      	ldr	r3, [r1, r3]
    3198:	2180      	movs	r1, #128	; 0x80
    319a:	00c9      	lsls	r1, r1, #3
    319c:	4319      	orrs	r1, r3
    319e:	4b51      	ldr	r3, [pc, #324]	; (32e4 <SerialCom_Init+0x190>)
    31a0:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:181
  /* PORTA_PCR1: ISF=0,MUX=2 */
  PORTA_PCR1 = (uint32_t)((PORTA_PCR1 & (uint32_t)~(uint32_t)(
    31a2:	4b51      	ldr	r3, [pc, #324]	; (32e8 <SerialCom_Init+0x194>)
    31a4:	4a50      	ldr	r2, [pc, #320]	; (32e8 <SerialCom_Init+0x194>)
    31a6:	6851      	ldr	r1, [r2, #4]
    31a8:	4a50      	ldr	r2, [pc, #320]	; (32ec <SerialCom_Init+0x198>)
    31aa:	400a      	ands	r2, r1
    31ac:	2180      	movs	r1, #128	; 0x80
    31ae:	0089      	lsls	r1, r1, #2
    31b0:	430a      	orrs	r2, r1
    31b2:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:188
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* PORTA_PCR2: ISF=0,MUX=2 */
  PORTA_PCR2 = (uint32_t)((PORTA_PCR2 & (uint32_t)~(uint32_t)(
    31b4:	4b4c      	ldr	r3, [pc, #304]	; (32e8 <SerialCom_Init+0x194>)
    31b6:	4a4c      	ldr	r2, [pc, #304]	; (32e8 <SerialCom_Init+0x194>)
    31b8:	6891      	ldr	r1, [r2, #8]
    31ba:	4a4c      	ldr	r2, [pc, #304]	; (32ec <SerialCom_Init+0x198>)
    31bc:	400a      	ands	r2, r1
    31be:	2180      	movs	r1, #128	; 0x80
    31c0:	0089      	lsls	r1, r1, #2
    31c2:	430a      	orrs	r2, r1
    31c4:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:195
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* NVIC_IPR3: PRI_12=0x80 */
  NVIC_IPR3 = (uint32_t)((NVIC_IPR3 & (uint32_t)~(uint32_t)(
    31c6:	4a4a      	ldr	r2, [pc, #296]	; (32f0 <SerialCom_Init+0x19c>)
    31c8:	4949      	ldr	r1, [pc, #292]	; (32f0 <SerialCom_Init+0x19c>)
    31ca:	23c3      	movs	r3, #195	; 0xc3
    31cc:	009b      	lsls	r3, r3, #2
    31ce:	58cb      	ldr	r3, [r1, r3]
    31d0:	21c0      	movs	r1, #192	; 0xc0
    31d2:	1c18      	adds	r0, r3, #0
    31d4:	4388      	bics	r0, r1
    31d6:	1c01      	adds	r1, r0, #0
    31d8:	23c3      	movs	r3, #195	; 0xc3
    31da:	009b      	lsls	r3, r3, #2
    31dc:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:201
               NVIC_IP_PRI_12(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_12(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x1000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x1000);
    31de:	4b44      	ldr	r3, [pc, #272]	; (32f0 <SerialCom_Init+0x19c>)
    31e0:	4a43      	ldr	r2, [pc, #268]	; (32f0 <SerialCom_Init+0x19c>)
    31e2:	6812      	ldr	r2, [r2, #0]
    31e4:	2180      	movs	r1, #128	; 0x80
    31e6:	0149      	lsls	r1, r1, #5
    31e8:	430a      	orrs	r2, r1
    31ea:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:202
  UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_DISABLE); /* Disable transmitter. */
    31ec:	4b41      	ldr	r3, [pc, #260]	; (32f4 <SerialCom_Init+0x1a0>)
    31ee:	4a41      	ldr	r2, [pc, #260]	; (32f4 <SerialCom_Init+0x1a0>)
    31f0:	78d2      	ldrb	r2, [r2, #3]
    31f2:	b2d2      	uxtb	r2, r2
    31f4:	2108      	movs	r1, #8
    31f6:	438a      	bics	r2, r1
    31f8:	b2d2      	uxtb	r2, r2
    31fa:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:203
  UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_DISABLE); /* Disable receiver. */
    31fc:	4b3d      	ldr	r3, [pc, #244]	; (32f4 <SerialCom_Init+0x1a0>)
    31fe:	4a3d      	ldr	r2, [pc, #244]	; (32f4 <SerialCom_Init+0x1a0>)
    3200:	78d2      	ldrb	r2, [r2, #3]
    3202:	b2d2      	uxtb	r2, r2
    3204:	2104      	movs	r1, #4
    3206:	438a      	bics	r2, r1
    3208:	b2d2      	uxtb	r2, r2
    320a:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:204
  DeviceDataPrv->SerFlag = 0x00U;      /* Reset flags */
    320c:	68fb      	ldr	r3, [r7, #12]
    320e:	2200      	movs	r2, #0
    3210:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:206
  /* UART0_C1: LOOPS=0,DOZEEN=0,RSRC=0,M=0,WAKE=0,ILT=0,PE=0,PT=0 */
  UART0_C1 = 0x00U;                    /*  Set the C1 register */
    3212:	4b38      	ldr	r3, [pc, #224]	; (32f4 <SerialCom_Init+0x1a0>)
    3214:	2200      	movs	r2, #0
    3216:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:208
  /* UART0_C3: R8T9=0,R9T8=0,TXDIR=0,TXINV=0,ORIE=0,NEIE=0,FEIE=0,PEIE=0 */
  UART0_C3 = 0x00U;                    /*  Set the C3 register */
    3218:	4b36      	ldr	r3, [pc, #216]	; (32f4 <SerialCom_Init+0x1a0>)
    321a:	2200      	movs	r2, #0
    321c:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:210
  /* UART0_C4: MAEN1=0,MAEN2=0,M10=0,OSR=0 */
  UART0_C4 = UART0_C4_OSR(0x00);       /*  Set the C4 register */
    321e:	4b35      	ldr	r3, [pc, #212]	; (32f4 <SerialCom_Init+0x1a0>)
    3220:	2200      	movs	r2, #0
    3222:	729a      	strb	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:212
  /* UART0_S2: LBKDIF=0,RXEDGIF=0,MSBF=0,RXINV=0,RWUID=0,BRK13=0,LBKDE=0,RAF=0 */
  UART0_S2 = 0x00U;                    /*  Set the S2 register */
    3224:	4b33      	ldr	r3, [pc, #204]	; (32f4 <SerialCom_Init+0x1a0>)
    3226:	2200      	movs	r2, #0
    3228:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:213
  SIM_PDD_SetClockSourceUART0(SIM_BASE_PTR, SIM_PDD_UART0_PLL_FLL_CLOCK);
    322a:	4a2d      	ldr	r2, [pc, #180]	; (32e0 <SerialCom_Init+0x18c>)
    322c:	492c      	ldr	r1, [pc, #176]	; (32e0 <SerialCom_Init+0x18c>)
    322e:	4b32      	ldr	r3, [pc, #200]	; (32f8 <SerialCom_Init+0x1a4>)
    3230:	58c9      	ldr	r1, [r1, r3]
    3232:	4b32      	ldr	r3, [pc, #200]	; (32fc <SerialCom_Init+0x1a8>)
    3234:	400b      	ands	r3, r1
    3236:	2180      	movs	r1, #128	; 0x80
    3238:	04c9      	lsls	r1, r1, #19
    323a:	4319      	orrs	r1, r3
    323c:	4b2e      	ldr	r3, [pc, #184]	; (32f8 <SerialCom_Init+0x1a4>)
    323e:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:214
  UART0_PDD_SetBaudRate(UART0_BASE_PTR, 46U); /* Set the baud rate register. */
    3240:	4b2c      	ldr	r3, [pc, #176]	; (32f4 <SerialCom_Init+0x1a0>)
    3242:	4a2c      	ldr	r2, [pc, #176]	; (32f4 <SerialCom_Init+0x1a0>)
    3244:	7812      	ldrb	r2, [r2, #0]
    3246:	b2d2      	uxtb	r2, r2
    3248:	211f      	movs	r1, #31
    324a:	438a      	bics	r2, r1
    324c:	b2d2      	uxtb	r2, r2
    324e:	701a      	strb	r2, [r3, #0]
    3250:	4b28      	ldr	r3, [pc, #160]	; (32f4 <SerialCom_Init+0x1a0>)
    3252:	222e      	movs	r2, #46	; 0x2e
    3254:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:215
  UART0_PDD_SetOversamplingRatio(UART0_BASE_PTR, 3U);
    3256:	4b27      	ldr	r3, [pc, #156]	; (32f4 <SerialCom_Init+0x1a0>)
    3258:	4a26      	ldr	r2, [pc, #152]	; (32f4 <SerialCom_Init+0x1a0>)
    325a:	7a92      	ldrb	r2, [r2, #10]
    325c:	b2d2      	uxtb	r2, r2
    325e:	b2d2      	uxtb	r2, r2
    3260:	211f      	movs	r1, #31
    3262:	438a      	bics	r2, r1
    3264:	b2d2      	uxtb	r2, r2
    3266:	2103      	movs	r1, #3
    3268:	430a      	orrs	r2, r1
    326a:	b2d2      	uxtb	r2, r2
    326c:	b2d2      	uxtb	r2, r2
    326e:	729a      	strb	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:216
  UART0_PDD_EnableSamplingOnBothEdges(UART0_BASE_PTR, PDD_ENABLE);
    3270:	4b20      	ldr	r3, [pc, #128]	; (32f4 <SerialCom_Init+0x1a0>)
    3272:	4a20      	ldr	r2, [pc, #128]	; (32f4 <SerialCom_Init+0x1a0>)
    3274:	7ad2      	ldrb	r2, [r2, #11]
    3276:	b2d2      	uxtb	r2, r2
    3278:	b2d2      	uxtb	r2, r2
    327a:	2102      	movs	r1, #2
    327c:	430a      	orrs	r2, r1
    327e:	b2d2      	uxtb	r2, r2
    3280:	b2d2      	uxtb	r2, r2
    3282:	72da      	strb	r2, [r3, #11]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:217
  UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_ENABLE); /* Enable transmitter */
    3284:	4b1b      	ldr	r3, [pc, #108]	; (32f4 <SerialCom_Init+0x1a0>)
    3286:	4a1b      	ldr	r2, [pc, #108]	; (32f4 <SerialCom_Init+0x1a0>)
    3288:	78d2      	ldrb	r2, [r2, #3]
    328a:	b2d2      	uxtb	r2, r2
    328c:	b2d2      	uxtb	r2, r2
    328e:	2108      	movs	r1, #8
    3290:	430a      	orrs	r2, r1
    3292:	b2d2      	uxtb	r2, r2
    3294:	b2d2      	uxtb	r2, r2
    3296:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:218
  UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_ENABLE); /* Enable receiver */
    3298:	4b16      	ldr	r3, [pc, #88]	; (32f4 <SerialCom_Init+0x1a0>)
    329a:	4a16      	ldr	r2, [pc, #88]	; (32f4 <SerialCom_Init+0x1a0>)
    329c:	78d2      	ldrb	r2, [r2, #3]
    329e:	b2d2      	uxtb	r2, r2
    32a0:	b2d2      	uxtb	r2, r2
    32a2:	2104      	movs	r1, #4
    32a4:	430a      	orrs	r2, r1
    32a6:	b2d2      	uxtb	r2, r2
    32a8:	b2d2      	uxtb	r2, r2
    32aa:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:219
  UART0_PDD_EnableInterrupt(UART0_BASE_PTR, ( UART0_PDD_INTERRUPT_RECEIVER )); /* Enable interrupts */
    32ac:	4b11      	ldr	r3, [pc, #68]	; (32f4 <SerialCom_Init+0x1a0>)
    32ae:	4a11      	ldr	r2, [pc, #68]	; (32f4 <SerialCom_Init+0x1a0>)
    32b0:	78d2      	ldrb	r2, [r2, #3]
    32b2:	b2d2      	uxtb	r2, r2
    32b4:	2120      	movs	r1, #32
    32b6:	430a      	orrs	r2, r1
    32b8:	b2d2      	uxtb	r2, r2
    32ba:	70da      	strb	r2, [r3, #3]
    32bc:	4b0d      	ldr	r3, [pc, #52]	; (32f4 <SerialCom_Init+0x1a0>)
    32be:	4a0d      	ldr	r2, [pc, #52]	; (32f4 <SerialCom_Init+0x1a0>)
    32c0:	7992      	ldrb	r2, [r2, #6]
    32c2:	b2d2      	uxtb	r2, r2
    32c4:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:221
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_SerialCom_ID,DeviceDataPrv);
    32c6:	4b0e      	ldr	r3, [pc, #56]	; (3300 <SerialCom_Init+0x1ac>)
    32c8:	68fa      	ldr	r2, [r7, #12]
    32ca:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:222
  return ((LDD_TDeviceData *)DeviceDataPrv);
    32cc:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:223
}
    32ce:	1c18      	adds	r0, r3, #0
    32d0:	46bd      	mov	sp, r7
    32d2:	b004      	add	sp, #16
    32d4:	bd80      	pop	{r7, pc}
    32d6:	46c0      	nop			; (mov r8, r8)
    32d8:	1ffff160 	.word	0x1ffff160
    32dc:	1ffff178 	.word	0x1ffff178
    32e0:	40047000 	.word	0x40047000
    32e4:	00001034 	.word	0x00001034
    32e8:	40049000 	.word	0x40049000
    32ec:	fefff8ff 	.word	0xfefff8ff
    32f0:	e000e100 	.word	0xe000e100
    32f4:	4006a000 	.word	0x4006a000
    32f8:	00001004 	.word	0x00001004
    32fc:	f3ffffff 	.word	0xf3ffffff
    3300:	1ffff0cc 	.word	0x1ffff0cc

00003304 <SerialCom_SendBlock>:
SerialCom_SendBlock():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:330
**                           ERR_BUSY - The previous transmit request is
**                           pending.
*/
/* ===================================================================*/
LDD_TError SerialCom_SendBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    3304:	b580      	push	{r7, lr}
    3306:	b086      	sub	sp, #24
    3308:	af00      	add	r7, sp, #0
    330a:	60f8      	str	r0, [r7, #12]
    330c:	60b9      	str	r1, [r7, #8]
    330e:	1dbb      	adds	r3, r7, #6
    3310:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:331
  SerialCom_TDeviceDataPtr DeviceDataPrv = (SerialCom_TDeviceDataPtr)DeviceDataPtr;
    3312:	68fb      	ldr	r3, [r7, #12]
    3314:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:333

  if (Size == 0U) {                    /* Is the parameter Size within an expected range? */
    3316:	1dbb      	adds	r3, r7, #6
    3318:	881b      	ldrh	r3, [r3, #0]
    331a:	2b00      	cmp	r3, #0
    331c:	d101      	bne.n	3322 <SerialCom_SendBlock+0x1e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:334
    return ERR_PARAM_SIZE;             /* If no then error */
    331e:	2384      	movs	r3, #132	; 0x84
    3320:	e048      	b.n	33b4 <SerialCom_SendBlock+0xb0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:336
  }
  if (DeviceDataPrv->OutDataNumReq != 0x00U) { /* Is the previous transmit operation pending? */
    3322:	697b      	ldr	r3, [r7, #20]
    3324:	8a1b      	ldrh	r3, [r3, #16]
    3326:	2b00      	cmp	r3, #0
    3328:	d001      	beq.n	332e <SerialCom_SendBlock+0x2a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:337
    return ERR_BUSY;                   /* If yes then error */
    332a:	2308      	movs	r3, #8
    332c:	e042      	b.n	33b4 <SerialCom_SendBlock+0xb0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:340
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    332e:	1c3b      	adds	r3, r7, #0
    3330:	3313      	adds	r3, #19
    3332:	f3ef 8010 	mrs	r0, PRIMASK
    3336:	b672      	cpsid	i
    3338:	7018      	strb	r0, [r3, #0]
    333a:	4b20      	ldr	r3, [pc, #128]	; (33bc <SerialCom_SendBlock+0xb8>)
    333c:	781b      	ldrb	r3, [r3, #0]
    333e:	b2db      	uxtb	r3, r3
    3340:	3301      	adds	r3, #1
    3342:	b2db      	uxtb	r3, r3
    3344:	4a1d      	ldr	r2, [pc, #116]	; (33bc <SerialCom_SendBlock+0xb8>)
    3346:	1c19      	adds	r1, r3, #0
    3348:	7011      	strb	r1, [r2, #0]
    334a:	2b01      	cmp	r3, #1
    334c:	d104      	bne.n	3358 <SerialCom_SendBlock+0x54>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:340 (discriminator 1)
    334e:	1c3b      	adds	r3, r7, #0
    3350:	3313      	adds	r3, #19
    3352:	781a      	ldrb	r2, [r3, #0]
    3354:	4b1a      	ldr	r3, [pc, #104]	; (33c0 <SerialCom_SendBlock+0xbc>)
    3356:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:341
  DeviceDataPrv->OutDataPtr = (uint8_t*)BufferPtr; /* Set a pointer to the output data. */
    3358:	697b      	ldr	r3, [r7, #20]
    335a:	68ba      	ldr	r2, [r7, #8]
    335c:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:342
  DeviceDataPrv->OutDataNumReq = Size; /* Set the counter of characters to be sent. */
    335e:	697b      	ldr	r3, [r7, #20]
    3360:	1dba      	adds	r2, r7, #6
    3362:	8812      	ldrh	r2, [r2, #0]
    3364:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:343
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters. */
    3366:	697b      	ldr	r3, [r7, #20]
    3368:	2200      	movs	r2, #0
    336a:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:344
  DeviceDataPrv->SerFlag |= ENABLED_TX_INT; /* Set the flag ENABLED_TX_INT */
    336c:	697b      	ldr	r3, [r7, #20]
    336e:	881b      	ldrh	r3, [r3, #0]
    3370:	2201      	movs	r2, #1
    3372:	4313      	orrs	r3, r2
    3374:	b29a      	uxth	r2, r3
    3376:	697b      	ldr	r3, [r7, #20]
    3378:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:345
  UART0_PDD_EnableInterrupt(UART0_BASE_PTR, UART0_PDD_INTERRUPT_TRANSMITTER); /* Enable TX interrupt */
    337a:	4b12      	ldr	r3, [pc, #72]	; (33c4 <SerialCom_SendBlock+0xc0>)
    337c:	4a11      	ldr	r2, [pc, #68]	; (33c4 <SerialCom_SendBlock+0xc0>)
    337e:	78d2      	ldrb	r2, [r2, #3]
    3380:	b2d2      	uxtb	r2, r2
    3382:	2180      	movs	r1, #128	; 0x80
    3384:	4249      	negs	r1, r1
    3386:	430a      	orrs	r2, r1
    3388:	b2d2      	uxtb	r2, r2
    338a:	70da      	strb	r2, [r3, #3]
    338c:	4b0d      	ldr	r3, [pc, #52]	; (33c4 <SerialCom_SendBlock+0xc0>)
    338e:	4a0d      	ldr	r2, [pc, #52]	; (33c4 <SerialCom_SendBlock+0xc0>)
    3390:	7992      	ldrb	r2, [r2, #6]
    3392:	b2d2      	uxtb	r2, r2
    3394:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:347
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    3396:	4b09      	ldr	r3, [pc, #36]	; (33bc <SerialCom_SendBlock+0xb8>)
    3398:	781b      	ldrb	r3, [r3, #0]
    339a:	b2db      	uxtb	r3, r3
    339c:	3b01      	subs	r3, #1
    339e:	b2db      	uxtb	r3, r3
    33a0:	4a06      	ldr	r2, [pc, #24]	; (33bc <SerialCom_SendBlock+0xb8>)
    33a2:	1c19      	adds	r1, r3, #0
    33a4:	7011      	strb	r1, [r2, #0]
    33a6:	2b00      	cmp	r3, #0
    33a8:	d103      	bne.n	33b2 <SerialCom_SendBlock+0xae>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:347 (discriminator 1)
    33aa:	4b05      	ldr	r3, [pc, #20]	; (33c0 <SerialCom_SendBlock+0xbc>)
    33ac:	7818      	ldrb	r0, [r3, #0]
    33ae:	f380 8810 	msr	PRIMASK, r0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:348
  return ERR_OK;                       /* OK */
    33b2:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:349
}
    33b4:	1c18      	adds	r0, r3, #0
    33b6:	46bd      	mov	sp, r7
    33b8:	b006      	add	sp, #24
    33ba:	bd80      	pop	{r7, pc}
    33bc:	1ffff0c8 	.word	0x1ffff0c8
    33c0:	1ffff34e 	.word	0x1ffff34e
    33c4:	4006a000 	.word	0x4006a000

000033c8 <InterruptRx>:
InterruptRx():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:362
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptRx(SerialCom_TDeviceDataPtr DeviceDataPrv)
{
    33c8:	b590      	push	{r4, r7, lr}
    33ca:	b083      	sub	sp, #12
    33cc:	af00      	add	r7, sp, #0
    33ce:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:365
  register uint16_t Data;              /* Temporary variable for data */

  Data = (uint16_t)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Read an 8-bit character from the receiver */
    33d0:	4b10      	ldr	r3, [pc, #64]	; (3414 <InterruptRx+0x4c>)
    33d2:	79db      	ldrb	r3, [r3, #7]
    33d4:	b2db      	uxtb	r3, r3
    33d6:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:366
  if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the receive block operation pending? */
    33d8:	687b      	ldr	r3, [r7, #4]
    33da:	891b      	ldrh	r3, [r3, #8]
    33dc:	2b00      	cmp	r3, #0
    33de:	d015      	beq.n	340c <InterruptRx+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:367
    *(DeviceDataPrv->InpDataPtr++) = (uint8_t)Data; /* Put an 8-bit character to the receive buffer */
    33e0:	687b      	ldr	r3, [r7, #4]
    33e2:	685b      	ldr	r3, [r3, #4]
    33e4:	1c59      	adds	r1, r3, #1
    33e6:	687a      	ldr	r2, [r7, #4]
    33e8:	6051      	str	r1, [r2, #4]
    33ea:	b2e2      	uxtb	r2, r4
    33ec:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:368
    DeviceDataPrv->InpRecvDataNum++;   /* Increment received char. counter */
    33ee:	687b      	ldr	r3, [r7, #4]
    33f0:	885b      	ldrh	r3, [r3, #2]
    33f2:	3301      	adds	r3, #1
    33f4:	b29a      	uxth	r2, r3
    33f6:	687b      	ldr	r3, [r7, #4]
    33f8:	805a      	strh	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:369
    if (DeviceDataPrv->InpRecvDataNum == DeviceDataPrv->InpDataNumReq) { /* Is the requested number of characters received? */
    33fa:	687b      	ldr	r3, [r7, #4]
    33fc:	885a      	ldrh	r2, [r3, #2]
    33fe:	687b      	ldr	r3, [r7, #4]
    3400:	891b      	ldrh	r3, [r3, #8]
    3402:	429a      	cmp	r2, r3
    3404:	d102      	bne.n	340c <InterruptRx+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:370
      DeviceDataPrv->InpDataNumReq = 0x00U; /* If yes then clear number of requested characters to be received. */
    3406:	687b      	ldr	r3, [r7, #4]
    3408:	2200      	movs	r2, #0
    340a:	811a      	strh	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:373
    }
  }
}
    340c:	46bd      	mov	sp, r7
    340e:	b003      	add	sp, #12
    3410:	bd90      	pop	{r4, r7, pc}
    3412:	46c0      	nop			; (mov r8, r8)
    3414:	4006a000 	.word	0x4006a000

00003418 <InterruptTx>:
InterruptTx():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:386
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptTx(SerialCom_TDeviceDataPtr DeviceDataPrv)
{
    3418:	b580      	push	{r7, lr}
    341a:	b082      	sub	sp, #8
    341c:	af00      	add	r7, sp, #0
    341e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:388

  if (DeviceDataPrv->OutSentDataNum < DeviceDataPrv->OutDataNumReq) { /* Is number of sent characters less than the number of requested incoming characters? */
    3420:	687b      	ldr	r3, [r7, #4]
    3422:	895a      	ldrh	r2, [r3, #10]
    3424:	687b      	ldr	r3, [r7, #4]
    3426:	8a1b      	ldrh	r3, [r3, #16]
    3428:	429a      	cmp	r2, r3
    342a:	d21c      	bcs.n	3466 <InterruptTx+0x4e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:389
    UART0_PDD_PutChar8(UART0_BASE_PTR, *(DeviceDataPrv->OutDataPtr++)); /* Put a 8-bit character to the transmit register */
    342c:	4919      	ldr	r1, [pc, #100]	; (3494 <InterruptTx+0x7c>)
    342e:	687b      	ldr	r3, [r7, #4]
    3430:	68db      	ldr	r3, [r3, #12]
    3432:	1c58      	adds	r0, r3, #1
    3434:	687a      	ldr	r2, [r7, #4]
    3436:	60d0      	str	r0, [r2, #12]
    3438:	781b      	ldrb	r3, [r3, #0]
    343a:	71cb      	strb	r3, [r1, #7]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:390
    DeviceDataPrv->OutSentDataNum++;   /* Increment the counter of sent characters. */
    343c:	687b      	ldr	r3, [r7, #4]
    343e:	895b      	ldrh	r3, [r3, #10]
    3440:	3301      	adds	r3, #1
    3442:	b29a      	uxth	r2, r3
    3444:	687b      	ldr	r3, [r7, #4]
    3446:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:391
    if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
    3448:	687b      	ldr	r3, [r7, #4]
    344a:	895a      	ldrh	r2, [r3, #10]
    344c:	687b      	ldr	r3, [r7, #4]
    344e:	8a1b      	ldrh	r3, [r3, #16]
    3450:	429a      	cmp	r2, r3
    3452:	d11c      	bne.n	348e <InterruptTx+0x76>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:392
      DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    3454:	687b      	ldr	r3, [r7, #4]
    3456:	2200      	movs	r2, #0
    3458:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:393
      SerialCom_OnBlockSent(DeviceDataPrv->UserDataPtr);
    345a:	687b      	ldr	r3, [r7, #4]
    345c:	695b      	ldr	r3, [r3, #20]
    345e:	1c18      	adds	r0, r3, #0
    3460:	f7fe fc3e 	bl	1ce0 <SerialCom_OnBlockSent>
    3464:	e013      	b.n	348e <InterruptTx+0x76>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:396
    }
  } else {
    UART0_PDD_DisableInterrupt(UART0_BASE_PTR, UART0_PDD_INTERRUPT_TRANSMITTER); /* Disable TX interrupt */
    3466:	4b0b      	ldr	r3, [pc, #44]	; (3494 <InterruptTx+0x7c>)
    3468:	4a0a      	ldr	r2, [pc, #40]	; (3494 <InterruptTx+0x7c>)
    346a:	78d2      	ldrb	r2, [r2, #3]
    346c:	b2d1      	uxtb	r1, r2
    346e:	227f      	movs	r2, #127	; 0x7f
    3470:	400a      	ands	r2, r1
    3472:	b2d2      	uxtb	r2, r2
    3474:	70da      	strb	r2, [r3, #3]
    3476:	4b07      	ldr	r3, [pc, #28]	; (3494 <InterruptTx+0x7c>)
    3478:	4a06      	ldr	r2, [pc, #24]	; (3494 <InterruptTx+0x7c>)
    347a:	7992      	ldrb	r2, [r2, #6]
    347c:	b2d2      	uxtb	r2, r2
    347e:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:397
    DeviceDataPrv->SerFlag &= (uint16_t)(~(uint16_t)ENABLED_TX_INT); /* Clear the flag ENABLED_TX_INT */
    3480:	687b      	ldr	r3, [r7, #4]
    3482:	881b      	ldrh	r3, [r3, #0]
    3484:	2201      	movs	r2, #1
    3486:	4393      	bics	r3, r2
    3488:	b29a      	uxth	r2, r3
    348a:	687b      	ldr	r3, [r7, #4]
    348c:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:399
  }
}
    348e:	46bd      	mov	sp, r7
    3490:	b002      	add	sp, #8
    3492:	bd80      	pop	{r7, pc}
    3494:	4006a000 	.word	0x4006a000

00003498 <SerialCom_Interrupt>:
SerialCom_Interrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:412
**         interrupt. Calls InterruptTX/InterruptRX methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(SerialCom_Interrupt)
{
    3498:	b590      	push	{r4, r7, lr}
    349a:	b083      	sub	sp, #12
    349c:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:414
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  SerialCom_TDeviceDataPtr DeviceDataPrv = INT_UART0__DEFAULT_RTOS_ISRPARAM;
    349e:	4b15      	ldr	r3, [pc, #84]	; (34f4 <SerialCom_Interrupt+0x5c>)
    34a0:	681b      	ldr	r3, [r3, #0]
    34a2:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:415
  register uint32_t StatReg = UART0_PDD_ReadInterruptStatusReg(UART0_BASE_PTR); /* Read status register */
    34a4:	4b14      	ldr	r3, [pc, #80]	; (34f8 <SerialCom_Interrupt+0x60>)
    34a6:	791b      	ldrb	r3, [r3, #4]
    34a8:	b2db      	uxtb	r3, r3
    34aa:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:417

  if (StatReg & (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_FE_MASK | UART0_S1_PF_MASK)) { /* Is any error flag set? */
    34ac:	230f      	movs	r3, #15
    34ae:	4023      	ands	r3, r4
    34b0:	d009      	beq.n	34c6 <SerialCom_Interrupt+0x2e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:418
    UART0_PDD_ClearInterruptFlags(UART0_BASE_PTR, (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_FE_MASK | UART0_S1_PF_MASK));
    34b2:	4b11      	ldr	r3, [pc, #68]	; (34f8 <SerialCom_Interrupt+0x60>)
    34b4:	220f      	movs	r2, #15
    34b6:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:419
    (void)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Dummy read 8-bit character from receiver */
    34b8:	4b0f      	ldr	r3, [pc, #60]	; (34f8 <SerialCom_Interrupt+0x60>)
    34ba:	79db      	ldrb	r3, [r3, #7]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:420
    StatReg &= (uint32_t)(~(uint32_t)UART0_S1_RDRF_MASK); /* Clear the receive data flag to discard the errorneous data */
    34bc:	2320      	movs	r3, #32
    34be:	1c22      	adds	r2, r4, #0
    34c0:	439a      	bics	r2, r3
    34c2:	1c13      	adds	r3, r2, #0
    34c4:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:422
  }
  if (StatReg & UART0_S1_RDRF_MASK) {  /* Is the receiver's interrupt flag set? */
    34c6:	2320      	movs	r3, #32
    34c8:	4023      	ands	r3, r4
    34ca:	d003      	beq.n	34d4 <SerialCom_Interrupt+0x3c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:423
    InterruptRx(DeviceDataPrv);        /* If yes, then invoke the internal service routine. This routine is inlined. */
    34cc:	687b      	ldr	r3, [r7, #4]
    34ce:	1c18      	adds	r0, r3, #0
    34d0:	f7ff ff7a 	bl	33c8 <InterruptRx>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:425
  }
  if (DeviceDataPrv->SerFlag & ENABLED_TX_INT) { /* Is the transmitter interrupt enabled? */
    34d4:	687b      	ldr	r3, [r7, #4]
    34d6:	881b      	ldrh	r3, [r3, #0]
    34d8:	1c1a      	adds	r2, r3, #0
    34da:	2301      	movs	r3, #1
    34dc:	4013      	ands	r3, r2
    34de:	d006      	beq.n	34ee <SerialCom_Interrupt+0x56>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:426
    if (StatReg & UART0_S1_TDRE_MASK) { /* Is the transmitter empty? */
    34e0:	2380      	movs	r3, #128	; 0x80
    34e2:	4023      	ands	r3, r4
    34e4:	d003      	beq.n	34ee <SerialCom_Interrupt+0x56>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:427
      InterruptTx(DeviceDataPrv);      /* If yes, then invoke the internal service routine. This routine is inlined. */
    34e6:	687b      	ldr	r3, [r7, #4]
    34e8:	1c18      	adds	r0, r3, #0
    34ea:	f7ff ff95 	bl	3418 <InterruptTx>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:430
    }
  }
}
    34ee:	46bd      	mov	sp, r7
    34f0:	b003      	add	sp, #12
    34f2:	bd90      	pop	{r4, r7, pc}
    34f4:	1ffff178 	.word	0x1ffff178
    34f8:	4006a000 	.word	0x4006a000

000034fc <TU1_Init>:
TU1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:153
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
{
    34fc:	b580      	push	{r7, lr}
    34fe:	b084      	sub	sp, #16
    3500:	af00      	add	r7, sp, #0
    3502:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:156
  TU1_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID] == NULL) {
    3504:	4b2a      	ldr	r3, [pc, #168]	; (35b0 <TU1_Init+0xb4>)
    3506:	689b      	ldr	r3, [r3, #8]
    3508:	2b00      	cmp	r3, #0
    350a:	d140      	bne.n	358e <TU1_Init+0x92>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:159
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    350c:	4b29      	ldr	r3, [pc, #164]	; (35b4 <TU1_Init+0xb8>)
    350e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:160
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3510:	68fb      	ldr	r3, [r7, #12]
    3512:	687a      	ldr	r2, [r7, #4]
    3514:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:161
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    3516:	68fb      	ldr	r3, [r7, #12]
    3518:	2201      	movs	r2, #1
    351a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:172
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_PIT__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    351c:	4b26      	ldr	r3, [pc, #152]	; (35b8 <TU1_Init+0xbc>)
    351e:	68fa      	ldr	r2, [r7, #12]
    3520:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:174
  /* SIM_SCGC6: PIT=1 */
  SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;
    3522:	4a26      	ldr	r2, [pc, #152]	; (35bc <TU1_Init+0xc0>)
    3524:	4925      	ldr	r1, [pc, #148]	; (35bc <TU1_Init+0xc0>)
    3526:	4b26      	ldr	r3, [pc, #152]	; (35c0 <TU1_Init+0xc4>)
    3528:	58cb      	ldr	r3, [r1, r3]
    352a:	2180      	movs	r1, #128	; 0x80
    352c:	0409      	lsls	r1, r1, #16
    352e:	4319      	orrs	r1, r3
    3530:	4b23      	ldr	r3, [pc, #140]	; (35c0 <TU1_Init+0xc4>)
    3532:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:176
  /* PIT_MCR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MDIS=0,FRZ=0 */
  PIT_MCR = 0x00U;                     /* Enable device clock */
    3534:	4b23      	ldr	r3, [pc, #140]	; (35c4 <TU1_Init+0xc8>)
    3536:	2200      	movs	r2, #0
    3538:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:178
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=0,TEN=0 */
  PIT_TCTRL0 = 0x00U;                  /* Clear control register */
    353a:	4a22      	ldr	r2, [pc, #136]	; (35c4 <TU1_Init+0xc8>)
    353c:	2384      	movs	r3, #132	; 0x84
    353e:	005b      	lsls	r3, r3, #1
    3540:	2100      	movs	r1, #0
    3542:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:180
  /* PIT_TFLG0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TIF=1 */
  PIT_TFLG0 = PIT_TFLG_TIF_MASK;       /* Clear timer flag register */
    3544:	4a1f      	ldr	r2, [pc, #124]	; (35c4 <TU1_Init+0xc8>)
    3546:	2386      	movs	r3, #134	; 0x86
    3548:	005b      	lsls	r3, r3, #1
    354a:	2101      	movs	r1, #1
    354c:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:182
  /* PIT_LDVAL0: TSV=0xD1 */
  PIT_LDVAL0 = PIT_LDVAL_TSV(0xD1);    /* Set up load register */
    354e:	4a1d      	ldr	r2, [pc, #116]	; (35c4 <TU1_Init+0xc8>)
    3550:	2380      	movs	r3, #128	; 0x80
    3552:	005b      	lsls	r3, r3, #1
    3554:	21d1      	movs	r1, #209	; 0xd1
    3556:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:184
  /* NVIC_IPR5: PRI_22=0x80 */
  NVIC_IPR5 = (uint32_t)((NVIC_IPR5 & (uint32_t)~(uint32_t)(
    3558:	4a1b      	ldr	r2, [pc, #108]	; (35c8 <TU1_Init+0xcc>)
    355a:	491b      	ldr	r1, [pc, #108]	; (35c8 <TU1_Init+0xcc>)
    355c:	23c5      	movs	r3, #197	; 0xc5
    355e:	009b      	lsls	r3, r3, #2
    3560:	58c9      	ldr	r1, [r1, r3]
    3562:	4b1a      	ldr	r3, [pc, #104]	; (35cc <TU1_Init+0xd0>)
    3564:	4019      	ands	r1, r3
    3566:	23c5      	movs	r3, #197	; 0xc5
    3568:	009b      	lsls	r3, r3, #2
    356a:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:190
               NVIC_IP_PRI_22(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_22(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x00400000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x00400000);
    356c:	4b16      	ldr	r3, [pc, #88]	; (35c8 <TU1_Init+0xcc>)
    356e:	4a16      	ldr	r2, [pc, #88]	; (35c8 <TU1_Init+0xcc>)
    3570:	6812      	ldr	r2, [r2, #0]
    3572:	2180      	movs	r1, #128	; 0x80
    3574:	03c9      	lsls	r1, r1, #15
    3576:	430a      	orrs	r2, r1
    3578:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:192
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=0,TEN=0 */
  PIT_TCTRL0 = 0x00U;                  /* Set up control register */
    357a:	4a12      	ldr	r2, [pc, #72]	; (35c4 <TU1_Init+0xc8>)
    357c:	2384      	movs	r3, #132	; 0x84
    357e:	005b      	lsls	r3, r3, #1
    3580:	2100      	movs	r1, #0
    3582:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:194
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
    3584:	4b0a      	ldr	r3, [pc, #40]	; (35b0 <TU1_Init+0xb4>)
    3586:	68fa      	ldr	r2, [r7, #12]
    3588:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:195
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    358a:	68fb      	ldr	r3, [r7, #12]
    358c:	e00c      	b.n	35a8 <TU1_Init+0xac>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:165
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU1_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID];
    358e:	4b08      	ldr	r3, [pc, #32]	; (35b0 <TU1_Init+0xb4>)
    3590:	689b      	ldr	r3, [r3, #8]
    3592:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:166
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3594:	68fb      	ldr	r3, [r7, #12]
    3596:	687a      	ldr	r2, [r7, #4]
    3598:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:167
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    359a:	68fb      	ldr	r3, [r7, #12]
    359c:	781b      	ldrb	r3, [r3, #0]
    359e:	3301      	adds	r3, #1
    35a0:	b2da      	uxtb	r2, r3
    35a2:	68fb      	ldr	r3, [r7, #12]
    35a4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:168
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    35a6:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:196
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=0,TEN=0 */
  PIT_TCTRL0 = 0x00U;                  /* Set up control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    35a8:	1c18      	adds	r0, r3, #0
    35aa:	46bd      	mov	sp, r7
    35ac:	b004      	add	sp, #16
    35ae:	bd80      	pop	{r7, pc}
    35b0:	1ffff0cc 	.word	0x1ffff0cc
    35b4:	1ffff17c 	.word	0x1ffff17c
    35b8:	1ffff184 	.word	0x1ffff184
    35bc:	40047000 	.word	0x40047000
    35c0:	0000103c 	.word	0x0000103c
    35c4:	40037000 	.word	0x40037000
    35c8:	e000e100 	.word	0xe000e100
    35cc:	ff3fffff 	.word	0xff3fffff

000035d0 <TU1_Enable>:
TU1_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:218
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU1_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    35d0:	b580      	push	{r7, lr}
    35d2:	b082      	sub	sp, #8
    35d4:	af00      	add	r7, sp, #0
    35d6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:220
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PIT_PDD_EnableDevice(PIT_BASE_PTR, PIT_PDD_CHANNEL_0, PDD_ENABLE); /* Enable the device */
    35d8:	4a07      	ldr	r2, [pc, #28]	; (35f8 <TU1_Enable+0x28>)
    35da:	4907      	ldr	r1, [pc, #28]	; (35f8 <TU1_Enable+0x28>)
    35dc:	2384      	movs	r3, #132	; 0x84
    35de:	005b      	lsls	r3, r3, #1
    35e0:	58cb      	ldr	r3, [r1, r3]
    35e2:	2101      	movs	r1, #1
    35e4:	4319      	orrs	r1, r3
    35e6:	2384      	movs	r3, #132	; 0x84
    35e8:	005b      	lsls	r3, r3, #1
    35ea:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:221
  return ERR_OK;
    35ec:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:222
}
    35ee:	1c18      	adds	r0, r3, #0
    35f0:	46bd      	mov	sp, r7
    35f2:	b002      	add	sp, #8
    35f4:	bd80      	pop	{r7, pc}
    35f6:	46c0      	nop			; (mov r8, r8)
    35f8:	40037000 	.word	0x40037000

000035fc <TU1_SetEventMask>:
TU1_SetEventMask():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:277
**                           the active clock configuration
**                           ERR_PARAM_MASK - Event mask is not valid
*/
/* ===================================================================*/
LDD_TError TU1_SetEventMask(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask)
{
    35fc:	b580      	push	{r7, lr}
    35fe:	b082      	sub	sp, #8
    3600:	af00      	add	r7, sp, #0
    3602:	6078      	str	r0, [r7, #4]
    3604:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:281
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  /* Event mask test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((EventMask & ((LDD_TEventMask)~AVAILABLE_EVENTS_MASK)) != 0U) {
    3606:	683a      	ldr	r2, [r7, #0]
    3608:	4b17      	ldr	r3, [pc, #92]	; (3668 <TU1_SetEventMask+0x6c>)
    360a:	4013      	ands	r3, r2
    360c:	d001      	beq.n	3612 <TU1_SetEventMask+0x16>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:282
    return ERR_PARAM_MASK;
    360e:	2380      	movs	r3, #128	; 0x80
    3610:	e025      	b.n	365e <TU1_SetEventMask+0x62>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:284
  }
  if ((EventMask & LDD_TIMERUNIT_ON_COUNTER_RESTART) != 0U) { /* Is the event enabled? */
    3612:	683a      	ldr	r2, [r7, #0]
    3614:	2380      	movs	r3, #128	; 0x80
    3616:	005b      	lsls	r3, r3, #1
    3618:	4013      	ands	r3, r2
    361a:	d013      	beq.n	3644 <TU1_SetEventMask+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:285
    PIT_PDD_ClearInterruptFlag(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* If yes then clear flag */
    361c:	4a13      	ldr	r2, [pc, #76]	; (366c <TU1_SetEventMask+0x70>)
    361e:	2386      	movs	r3, #134	; 0x86
    3620:	005b      	lsls	r3, r3, #1
    3622:	2101      	movs	r1, #1
    3624:	50d1      	str	r1, [r2, r3]
    3626:	4a11      	ldr	r2, [pc, #68]	; (366c <TU1_SetEventMask+0x70>)
    3628:	2380      	movs	r3, #128	; 0x80
    362a:	005b      	lsls	r3, r3, #1
    362c:	58d3      	ldr	r3, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:286
    PIT_PDD_EnableInterrupt(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* and enable interrupt */
    362e:	4a0f      	ldr	r2, [pc, #60]	; (366c <TU1_SetEventMask+0x70>)
    3630:	490e      	ldr	r1, [pc, #56]	; (366c <TU1_SetEventMask+0x70>)
    3632:	2384      	movs	r3, #132	; 0x84
    3634:	005b      	lsls	r3, r3, #1
    3636:	58cb      	ldr	r3, [r1, r3]
    3638:	2102      	movs	r1, #2
    363a:	4319      	orrs	r1, r3
    363c:	2384      	movs	r3, #132	; 0x84
    363e:	005b      	lsls	r3, r3, #1
    3640:	50d1      	str	r1, [r2, r3]
    3642:	e00b      	b.n	365c <TU1_SetEventMask+0x60>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:289
  }
  else {
    PIT_PDD_DisableInterrupt(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* Disable PIT interrupt */
    3644:	4a09      	ldr	r2, [pc, #36]	; (366c <TU1_SetEventMask+0x70>)
    3646:	4909      	ldr	r1, [pc, #36]	; (366c <TU1_SetEventMask+0x70>)
    3648:	2384      	movs	r3, #132	; 0x84
    364a:	005b      	lsls	r3, r3, #1
    364c:	58cb      	ldr	r3, [r1, r3]
    364e:	2102      	movs	r1, #2
    3650:	1c18      	adds	r0, r3, #0
    3652:	4388      	bics	r0, r1
    3654:	1c01      	adds	r1, r0, #0
    3656:	2384      	movs	r3, #132	; 0x84
    3658:	005b      	lsls	r3, r3, #1
    365a:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:291
  }
  return ERR_OK;
    365c:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:292
}
    365e:	1c18      	adds	r0, r3, #0
    3660:	46bd      	mov	sp, r7
    3662:	b002      	add	sp, #8
    3664:	bd80      	pop	{r7, pc}
    3666:	46c0      	nop			; (mov r8, r8)
    3668:	fffffeff 	.word	0xfffffeff
    366c:	40037000 	.word	0x40037000

00003670 <TU1_Interrupt>:
TU1_Interrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:305
**         and eventually invokes event(s) of the component.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(TU1_Interrupt)
{
    3670:	b580      	push	{r7, lr}
    3672:	b082      	sub	sp, #8
    3674:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:307
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  TU1_TDeviceDataPtr DeviceDataPrv = INT_PIT__DEFAULT_RTOS_ISRPARAM;
    3676:	4b0a      	ldr	r3, [pc, #40]	; (36a0 <TU1_Interrupt+0x30>)
    3678:	681b      	ldr	r3, [r3, #0]
    367a:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:309

  PIT_PDD_ClearInterruptFlag(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* Clear interrupt flag */
    367c:	4a09      	ldr	r2, [pc, #36]	; (36a4 <TU1_Interrupt+0x34>)
    367e:	2386      	movs	r3, #134	; 0x86
    3680:	005b      	lsls	r3, r3, #1
    3682:	2101      	movs	r1, #1
    3684:	50d1      	str	r1, [r2, r3]
    3686:	4a07      	ldr	r2, [pc, #28]	; (36a4 <TU1_Interrupt+0x34>)
    3688:	2380      	movs	r3, #128	; 0x80
    368a:	005b      	lsls	r3, r3, #1
    368c:	58d3      	ldr	r3, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:310
  TU1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
    368e:	687b      	ldr	r3, [r7, #4]
    3690:	685b      	ldr	r3, [r3, #4]
    3692:	1c18      	adds	r0, r3, #0
    3694:	f000 f980 	bl	3998 <TU1_OnCounterRestart>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:311
}
    3698:	46bd      	mov	sp, r7
    369a:	b002      	add	sp, #8
    369c:	bd80      	pop	{r7, pc}
    369e:	46c0      	nop			; (mov r8, r8)
    36a0:	1ffff184 	.word	0x1ffff184
    36a4:	40037000 	.word	0x40037000

000036a8 <TU2_Init>:
TU2_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:197
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr)
{
    36a8:	b580      	push	{r7, lr}
    36aa:	b084      	sub	sp, #16
    36ac:	af00      	add	r7, sp, #0
    36ae:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:200
  TU2_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID] == NULL) {
    36b0:	4b42      	ldr	r3, [pc, #264]	; (37bc <TU2_Init+0x114>)
    36b2:	69db      	ldr	r3, [r3, #28]
    36b4:	2b00      	cmp	r3, #0
    36b6:	d16f      	bne.n	3798 <TU2_Init+0xf0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:203
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    36b8:	4b41      	ldr	r3, [pc, #260]	; (37c0 <TU2_Init+0x118>)
    36ba:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:204
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    36bc:	68fb      	ldr	r3, [r7, #12]
    36be:	687a      	ldr	r2, [r7, #4]
    36c0:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:205
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    36c2:	68fb      	ldr	r3, [r7, #12]
    36c4:	2201      	movs	r2, #1
    36c6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:215
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* SIM_SCGC6: TPM0=1 */
  SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;
    36c8:	4a3e      	ldr	r2, [pc, #248]	; (37c4 <TU2_Init+0x11c>)
    36ca:	493e      	ldr	r1, [pc, #248]	; (37c4 <TU2_Init+0x11c>)
    36cc:	4b3e      	ldr	r3, [pc, #248]	; (37c8 <TU2_Init+0x120>)
    36ce:	58cb      	ldr	r3, [r1, r3]
    36d0:	2180      	movs	r1, #128	; 0x80
    36d2:	0449      	lsls	r1, r1, #17
    36d4:	4319      	orrs	r1, r3
    36d6:	4b3c      	ldr	r3, [pc, #240]	; (37c8 <TU2_Init+0x120>)
    36d8:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:217
  /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=0 */
  TPM0_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
    36da:	4b3c      	ldr	r3, [pc, #240]	; (37cc <TU2_Init+0x124>)
    36dc:	2200      	movs	r2, #0
    36de:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:219
  /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNT=0 */
  TPM0_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
    36e0:	4b3a      	ldr	r3, [pc, #232]	; (37cc <TU2_Init+0x124>)
    36e2:	2200      	movs	r2, #0
    36e4:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:221
  /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
    36e6:	4b39      	ldr	r3, [pc, #228]	; (37cc <TU2_Init+0x124>)
    36e8:	2200      	movs	r2, #0
    36ea:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:223
  /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
    36ec:	4b37      	ldr	r3, [pc, #220]	; (37cc <TU2_Init+0x124>)
    36ee:	2200      	movs	r2, #0
    36f0:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:225
  /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
    36f2:	4b36      	ldr	r3, [pc, #216]	; (37cc <TU2_Init+0x124>)
    36f4:	2200      	movs	r2, #0
    36f6:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:227
  /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
    36f8:	4b34      	ldr	r3, [pc, #208]	; (37cc <TU2_Init+0x124>)
    36fa:	2200      	movs	r2, #0
    36fc:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:229
  /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
    36fe:	4b33      	ldr	r3, [pc, #204]	; (37cc <TU2_Init+0x124>)
    3700:	2200      	movs	r2, #0
    3702:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:231
  /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
    3704:	4b31      	ldr	r3, [pc, #196]	; (37cc <TU2_Init+0x124>)
    3706:	2200      	movs	r2, #0
    3708:	635a      	str	r2, [r3, #52]	; 0x34
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:233
  /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=0xFFFF */
  TPM0_MOD = TPM_MOD_MOD(0xFFFF);      /* Set up modulo register */
    370a:	4b30      	ldr	r3, [pc, #192]	; (37cc <TU2_Init+0x124>)
    370c:	4a30      	ldr	r2, [pc, #192]	; (37d0 <TU2_Init+0x128>)
    370e:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:235
  /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C2SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    3710:	4b2e      	ldr	r3, [pc, #184]	; (37cc <TU2_Init+0x124>)
    3712:	222c      	movs	r2, #44	; 0x2c
    3714:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:237
  /* TPM0_C2V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C2V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    3716:	4b2d      	ldr	r3, [pc, #180]	; (37cc <TU2_Init+0x124>)
    3718:	4a2d      	ldr	r2, [pc, #180]	; (37d0 <TU2_Init+0x128>)
    371a:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:239
  /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C3SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    371c:	4b2b      	ldr	r3, [pc, #172]	; (37cc <TU2_Init+0x124>)
    371e:	222c      	movs	r2, #44	; 0x2c
    3720:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:241
  /* TPM0_C3V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C3V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    3722:	4b2a      	ldr	r3, [pc, #168]	; (37cc <TU2_Init+0x124>)
    3724:	4a2a      	ldr	r2, [pc, #168]	; (37d0 <TU2_Init+0x128>)
    3726:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:243
  /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C0SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    3728:	4b28      	ldr	r3, [pc, #160]	; (37cc <TU2_Init+0x124>)
    372a:	222c      	movs	r2, #44	; 0x2c
    372c:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:245
  /* TPM0_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C0V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    372e:	4b27      	ldr	r3, [pc, #156]	; (37cc <TU2_Init+0x124>)
    3730:	4a27      	ldr	r2, [pc, #156]	; (37d0 <TU2_Init+0x128>)
    3732:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:247
  /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C1SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    3734:	4b25      	ldr	r3, [pc, #148]	; (37cc <TU2_Init+0x124>)
    3736:	222c      	movs	r2, #44	; 0x2c
    3738:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:249
  /* TPM0_C1V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C1V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    373a:	4b24      	ldr	r3, [pc, #144]	; (37cc <TU2_Init+0x124>)
    373c:	4a24      	ldr	r2, [pc, #144]	; (37d0 <TU2_Init+0x128>)
    373e:	619a      	str	r2, [r3, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:251
  /* PORTC_PCR3: ISF=0,MUX=4 */
  PORTC_PCR3 = (uint32_t)((PORTC_PCR3 & (uint32_t)~(uint32_t)(
    3740:	4b24      	ldr	r3, [pc, #144]	; (37d4 <TU2_Init+0x12c>)
    3742:	4a24      	ldr	r2, [pc, #144]	; (37d4 <TU2_Init+0x12c>)
    3744:	68d1      	ldr	r1, [r2, #12]
    3746:	4a24      	ldr	r2, [pc, #144]	; (37d8 <TU2_Init+0x130>)
    3748:	400a      	ands	r2, r1
    374a:	2180      	movs	r1, #128	; 0x80
    374c:	00c9      	lsls	r1, r1, #3
    374e:	430a      	orrs	r2, r1
    3750:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:258
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* PORTC_PCR4: ISF=0,MUX=4 */
  PORTC_PCR4 = (uint32_t)((PORTC_PCR4 & (uint32_t)~(uint32_t)(
    3752:	4b20      	ldr	r3, [pc, #128]	; (37d4 <TU2_Init+0x12c>)
    3754:	4a1f      	ldr	r2, [pc, #124]	; (37d4 <TU2_Init+0x12c>)
    3756:	6911      	ldr	r1, [r2, #16]
    3758:	4a1f      	ldr	r2, [pc, #124]	; (37d8 <TU2_Init+0x130>)
    375a:	400a      	ands	r2, r1
    375c:	2180      	movs	r1, #128	; 0x80
    375e:	00c9      	lsls	r1, r1, #3
    3760:	430a      	orrs	r2, r1
    3762:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:265
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* PORTC_PCR1: ISF=0,MUX=4 */
  PORTC_PCR1 = (uint32_t)((PORTC_PCR1 & (uint32_t)~(uint32_t)(
    3764:	4b1b      	ldr	r3, [pc, #108]	; (37d4 <TU2_Init+0x12c>)
    3766:	4a1b      	ldr	r2, [pc, #108]	; (37d4 <TU2_Init+0x12c>)
    3768:	6851      	ldr	r1, [r2, #4]
    376a:	4a1b      	ldr	r2, [pc, #108]	; (37d8 <TU2_Init+0x130>)
    376c:	400a      	ands	r2, r1
    376e:	2180      	movs	r1, #128	; 0x80
    3770:	00c9      	lsls	r1, r1, #3
    3772:	430a      	orrs	r2, r1
    3774:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:272
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* PORTC_PCR2: ISF=0,MUX=4 */
  PORTC_PCR2 = (uint32_t)((PORTC_PCR2 & (uint32_t)~(uint32_t)(
    3776:	4b17      	ldr	r3, [pc, #92]	; (37d4 <TU2_Init+0x12c>)
    3778:	4a16      	ldr	r2, [pc, #88]	; (37d4 <TU2_Init+0x12c>)
    377a:	6891      	ldr	r1, [r2, #8]
    377c:	4a16      	ldr	r2, [pc, #88]	; (37d8 <TU2_Init+0x130>)
    377e:	400a      	ands	r2, r1
    3780:	2180      	movs	r1, #128	; 0x80
    3782:	00c9      	lsls	r1, r1, #3
    3784:	430a      	orrs	r2, r1
    3786:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:279
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=1,PS=3 */
  TPM0_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control register */
    3788:	4b10      	ldr	r3, [pc, #64]	; (37cc <TU2_Init+0x124>)
    378a:	220b      	movs	r2, #11
    378c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:281
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID,DeviceDataPrv);
    378e:	4b0b      	ldr	r3, [pc, #44]	; (37bc <TU2_Init+0x114>)
    3790:	68fa      	ldr	r2, [r7, #12]
    3792:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:282
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    3794:	68fb      	ldr	r3, [r7, #12]
    3796:	e00c      	b.n	37b2 <TU2_Init+0x10a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:209
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU2_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
    3798:	4b08      	ldr	r3, [pc, #32]	; (37bc <TU2_Init+0x114>)
    379a:	69db      	ldr	r3, [r3, #28]
    379c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:210
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    379e:	68fb      	ldr	r3, [r7, #12]
    37a0:	687a      	ldr	r2, [r7, #4]
    37a2:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:211
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    37a4:	68fb      	ldr	r3, [r7, #12]
    37a6:	781b      	ldrb	r3, [r3, #0]
    37a8:	3301      	adds	r3, #1
    37aa:	b2da      	uxtb	r2, r3
    37ac:	68fb      	ldr	r3, [r7, #12]
    37ae:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:212
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    37b0:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:283
  /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=1,PS=3 */
  TPM0_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    37b2:	1c18      	adds	r0, r3, #0
    37b4:	46bd      	mov	sp, r7
    37b6:	b004      	add	sp, #16
    37b8:	bd80      	pop	{r7, pc}
    37ba:	46c0      	nop			; (mov r8, r8)
    37bc:	1ffff0cc 	.word	0x1ffff0cc
    37c0:	1ffff188 	.word	0x1ffff188
    37c4:	40047000 	.word	0x40047000
    37c8:	0000103c 	.word	0x0000103c
    37cc:	40038000 	.word	0x40038000
    37d0:	0000ffff 	.word	0x0000ffff
    37d4:	4004b000 	.word	0x4004b000
    37d8:	fefff8ff 	.word	0xfefff8ff

000037dc <TU3_Init>:
TU3_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:171
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU3_Init(LDD_TUserData *UserDataPtr)
{
    37dc:	b580      	push	{r7, lr}
    37de:	b084      	sub	sp, #16
    37e0:	af00      	add	r7, sp, #0
    37e2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:174
  TU3_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU3_ID] == NULL) {
    37e4:	4b27      	ldr	r3, [pc, #156]	; (3884 <TU3_Init+0xa8>)
    37e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    37e8:	2b00      	cmp	r3, #0
    37ea:	d139      	bne.n	3860 <TU3_Init+0x84>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:177
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    37ec:	4b26      	ldr	r3, [pc, #152]	; (3888 <TU3_Init+0xac>)
    37ee:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:178
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    37f0:	68fb      	ldr	r3, [r7, #12]
    37f2:	687a      	ldr	r2, [r7, #4]
    37f4:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:179
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    37f6:	68fb      	ldr	r3, [r7, #12]
    37f8:	2201      	movs	r2, #1
    37fa:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:189
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* SIM_SCGC6: TPM1=1 */
  SIM_SCGC6 |= SIM_SCGC6_TPM1_MASK;
    37fc:	4a23      	ldr	r2, [pc, #140]	; (388c <TU3_Init+0xb0>)
    37fe:	4923      	ldr	r1, [pc, #140]	; (388c <TU3_Init+0xb0>)
    3800:	4b23      	ldr	r3, [pc, #140]	; (3890 <TU3_Init+0xb4>)
    3802:	58cb      	ldr	r3, [r1, r3]
    3804:	2180      	movs	r1, #128	; 0x80
    3806:	0489      	lsls	r1, r1, #18
    3808:	4319      	orrs	r1, r3
    380a:	4b21      	ldr	r3, [pc, #132]	; (3890 <TU3_Init+0xb4>)
    380c:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:191
  /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=0 */
  TPM1_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
    380e:	4b21      	ldr	r3, [pc, #132]	; (3894 <TU3_Init+0xb8>)
    3810:	2200      	movs	r2, #0
    3812:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:193
  /* TPM1_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNT=0 */
  TPM1_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
    3814:	4b1f      	ldr	r3, [pc, #124]	; (3894 <TU3_Init+0xb8>)
    3816:	2200      	movs	r2, #0
    3818:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:195
  /* TPM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM1_C0SC = 0x00U;                   /* Clear channel status and control register */
    381a:	4b1e      	ldr	r3, [pc, #120]	; (3894 <TU3_Init+0xb8>)
    381c:	2200      	movs	r2, #0
    381e:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:197
  /* TPM1_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM1_C1SC = 0x00U;                   /* Clear channel status and control register */
    3820:	4b1c      	ldr	r3, [pc, #112]	; (3894 <TU3_Init+0xb8>)
    3822:	2200      	movs	r2, #0
    3824:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:199
  /* TPM1_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=0xCCCC */
  TPM1_MOD = TPM_MOD_MOD(0xCCCC);      /* Set up modulo register */
    3826:	4b1b      	ldr	r3, [pc, #108]	; (3894 <TU3_Init+0xb8>)
    3828:	4a1b      	ldr	r2, [pc, #108]	; (3898 <TU3_Init+0xbc>)
    382a:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:201
  /* TPM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM1_C0SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    382c:	4b19      	ldr	r3, [pc, #100]	; (3894 <TU3_Init+0xb8>)
    382e:	222c      	movs	r2, #44	; 0x2c
    3830:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:203
  /* TPM1_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xBDF4 */
  TPM1_C0V = TPM_CnV_VAL(0xBDF4);      /* Set up channel value register */
    3832:	4b18      	ldr	r3, [pc, #96]	; (3894 <TU3_Init+0xb8>)
    3834:	4a19      	ldr	r2, [pc, #100]	; (389c <TU3_Init+0xc0>)
    3836:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:205
  /* PORTB_PCR0: ISF=0,MUX=3 */
  PORTB_PCR0 = (uint32_t)((PORTB_PCR0 & (uint32_t)~(uint32_t)(
    3838:	4b19      	ldr	r3, [pc, #100]	; (38a0 <TU3_Init+0xc4>)
    383a:	4a19      	ldr	r2, [pc, #100]	; (38a0 <TU3_Init+0xc4>)
    383c:	6811      	ldr	r1, [r2, #0]
    383e:	4a19      	ldr	r2, [pc, #100]	; (38a4 <TU3_Init+0xc8>)
    3840:	400a      	ands	r2, r1
    3842:	21c0      	movs	r1, #192	; 0xc0
    3844:	0089      	lsls	r1, r1, #2
    3846:	430a      	orrs	r2, r1
    3848:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:211
                PORT_PCR_ISF_MASK |
                PORT_PCR_MUX(0x04)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x03)
               ));
  DeviceDataPrv->Source = TPM_PDD_SYSTEM; /* Store clock source */
    384a:	68fb      	ldr	r3, [r7, #12]
    384c:	2208      	movs	r2, #8
    384e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:213
  /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=3 */
  TPM1_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x03)); /* Set up status and control register */
    3850:	4b10      	ldr	r3, [pc, #64]	; (3894 <TU3_Init+0xb8>)
    3852:	2203      	movs	r2, #3
    3854:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:215
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID,DeviceDataPrv);
    3856:	4b0b      	ldr	r3, [pc, #44]	; (3884 <TU3_Init+0xa8>)
    3858:	68fa      	ldr	r2, [r7, #12]
    385a:	631a      	str	r2, [r3, #48]	; 0x30
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:216
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    385c:	68fb      	ldr	r3, [r7, #12]
    385e:	e00c      	b.n	387a <TU3_Init+0x9e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:183
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU3_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU3_ID];
    3860:	4b08      	ldr	r3, [pc, #32]	; (3884 <TU3_Init+0xa8>)
    3862:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    3864:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:184
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3866:	68fb      	ldr	r3, [r7, #12]
    3868:	687a      	ldr	r2, [r7, #4]
    386a:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:185
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    386c:	68fb      	ldr	r3, [r7, #12]
    386e:	791b      	ldrb	r3, [r3, #4]
    3870:	3301      	adds	r3, #1
    3872:	b2da      	uxtb	r2, r3
    3874:	68fb      	ldr	r3, [r7, #12]
    3876:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:186
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    3878:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:217
  /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=3 */
  TPM1_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x03)); /* Set up status and control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    387a:	1c18      	adds	r0, r3, #0
    387c:	46bd      	mov	sp, r7
    387e:	b004      	add	sp, #16
    3880:	bd80      	pop	{r7, pc}
    3882:	46c0      	nop			; (mov r8, r8)
    3884:	1ffff0cc 	.word	0x1ffff0cc
    3888:	1ffff190 	.word	0x1ffff190
    388c:	40047000 	.word	0x40047000
    3890:	0000103c 	.word	0x0000103c
    3894:	40039000 	.word	0x40039000
    3898:	0000cccc 	.word	0x0000cccc
    389c:	0000bdf4 	.word	0x0000bdf4
    38a0:	4004a000 	.word	0x4004a000
    38a4:	fefff8ff 	.word	0xfefff8ff

000038a8 <TU3_Enable>:
TU3_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:239
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU3_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    38a8:	b580      	push	{r7, lr}
    38aa:	b084      	sub	sp, #16
    38ac:	af00      	add	r7, sp, #0
    38ae:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:240
  TU3_TDeviceData *DeviceDataPrv = (TU3_TDeviceData *)DeviceDataPtr;
    38b0:	687b      	ldr	r3, [r7, #4]
    38b2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:242

  TPM_PDD_SelectPrescalerSource(TPM1_BASE_PTR, DeviceDataPrv->Source); /* Enable the device */
    38b4:	4b07      	ldr	r3, [pc, #28]	; (38d4 <TU3_Enable+0x2c>)
    38b6:	4a07      	ldr	r2, [pc, #28]	; (38d4 <TU3_Enable+0x2c>)
    38b8:	6812      	ldr	r2, [r2, #0]
    38ba:	2198      	movs	r1, #152	; 0x98
    38bc:	1c10      	adds	r0, r2, #0
    38be:	4388      	bics	r0, r1
    38c0:	1c01      	adds	r1, r0, #0
    38c2:	68fa      	ldr	r2, [r7, #12]
    38c4:	6812      	ldr	r2, [r2, #0]
    38c6:	430a      	orrs	r2, r1
    38c8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:243
  return ERR_OK;
    38ca:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:244
}
    38cc:	1c18      	adds	r0, r3, #0
    38ce:	46bd      	mov	sp, r7
    38d0:	b004      	add	sp, #16
    38d2:	bd80      	pop	{r7, pc}
    38d4:	40039000 	.word	0x40039000

000038d8 <TimerIntLdd1_Init>:
TimerIntLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:145
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TimerIntLdd1_Init(LDD_TUserData *UserDataPtr)
{
    38d8:	b580      	push	{r7, lr}
    38da:	b084      	sub	sp, #16
    38dc:	af00      	add	r7, sp, #0
    38de:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:149
  /* Allocate device structure */
  TimerIntLdd1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    38e0:	4b0f      	ldr	r3, [pc, #60]	; (3920 <TimerIntLdd1_Init+0x48>)
    38e2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:150
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    38e4:	68fb      	ldr	r3, [r7, #12]
    38e6:	687a      	ldr	r2, [r7, #4]
    38e8:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:151
  DeviceDataPrv->EnUser = FALSE;       /* Set the flag "device disabled" */
    38ea:	68fb      	ldr	r3, [r7, #12]
    38ec:	2200      	movs	r2, #0
    38ee:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:153
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID,DeviceDataPrv);
    38f0:	4b0c      	ldr	r3, [pc, #48]	; (3924 <TimerIntLdd1_Init+0x4c>)
    38f2:	68fa      	ldr	r2, [r7, #12]
    38f4:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:154
  DeviceDataPrv->LinkedDeviceDataPtr = TU1_Init((LDD_TUserData *)NULL);
    38f6:	2000      	movs	r0, #0
    38f8:	f7ff fe00 	bl	34fc <TU1_Init>
    38fc:	1c02      	adds	r2, r0, #0
    38fe:	68fb      	ldr	r3, [r7, #12]
    3900:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:155
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    3902:	68fb      	ldr	r3, [r7, #12]
    3904:	681b      	ldr	r3, [r3, #0]
    3906:	2b00      	cmp	r3, #0
    3908:	d104      	bne.n	3914 <TimerIntLdd1_Init+0x3c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:157
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID);
    390a:	4b06      	ldr	r3, [pc, #24]	; (3924 <TimerIntLdd1_Init+0x4c>)
    390c:	2200      	movs	r2, #0
    390e:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:160
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the TimerInt initialization is also unsuccessful */
    3910:	2300      	movs	r3, #0
    3912:	e000      	b.n	3916 <TimerIntLdd1_Init+0x3e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:162
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    3914:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:163
}
    3916:	1c18      	adds	r0, r3, #0
    3918:	46bd      	mov	sp, r7
    391a:	b004      	add	sp, #16
    391c:	bd80      	pop	{r7, pc}
    391e:	46c0      	nop			; (mov r8, r8)
    3920:	1ffff19c 	.word	0x1ffff19c
    3924:	1ffff0cc 	.word	0x1ffff0cc

00003928 <TimerIntLdd1_Enable>:
TimerIntLdd1_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:184
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TimerIntLdd1_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    3928:	b580      	push	{r7, lr}
    392a:	b084      	sub	sp, #16
    392c:	af00      	add	r7, sp, #0
    392e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:185
  TimerIntLdd1_TDeviceData *DeviceDataPrv = (TimerIntLdd1_TDeviceData *)DeviceDataPtr;
    3930:	687b      	ldr	r3, [r7, #4]
    3932:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:187

  if (!DeviceDataPrv->EnUser) {        /* Is the device disabled by user? */
    3934:	68fb      	ldr	r3, [r7, #12]
    3936:	791b      	ldrb	r3, [r3, #4]
    3938:	2b00      	cmp	r3, #0
    393a:	d107      	bne.n	394c <TimerIntLdd1_Enable+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:188
    DeviceDataPrv->EnUser = TRUE;      /* If yes then set the flag "device enabled" */
    393c:	68fb      	ldr	r3, [r7, #12]
    393e:	2201      	movs	r2, #1
    3940:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:189
    (void)TU1_Enable(DeviceDataPrv->LinkedDeviceDataPtr); /* Enable TimerUnit */
    3942:	68fb      	ldr	r3, [r7, #12]
    3944:	681b      	ldr	r3, [r3, #0]
    3946:	1c18      	adds	r0, r3, #0
    3948:	f7ff fe42 	bl	35d0 <TU1_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:191
  }
  return ERR_OK;
    394c:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:192
}
    394e:	1c18      	adds	r0, r3, #0
    3950:	46bd      	mov	sp, r7
    3952:	b004      	add	sp, #16
    3954:	bd80      	pop	{r7, pc}
    3956:	46c0      	nop			; (mov r8, r8)

00003958 <TimerIntLdd1_SetEventMask>:
TimerIntLdd1_SetEventMask():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:250
**                           the active clock configuration
**                           ERR_PARAM_MASK - Event mask is not valid
*/
/* ===================================================================*/
LDD_TError TimerIntLdd1_SetEventMask(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask)
{
    3958:	b580      	push	{r7, lr}
    395a:	b084      	sub	sp, #16
    395c:	af00      	add	r7, sp, #0
    395e:	6078      	str	r0, [r7, #4]
    3960:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:251
  TimerIntLdd1_TDeviceData *DeviceDataPrv = (TimerIntLdd1_TDeviceData *)DeviceDataPtr;
    3962:	687b      	ldr	r3, [r7, #4]
    3964:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:255

  /* Event mask test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((EventMask & ((LDD_TEventMask)~AVAILABLE_EVENTS_MASK)) != 0U) {
    3966:	683b      	ldr	r3, [r7, #0]
    3968:	2201      	movs	r2, #1
    396a:	4393      	bics	r3, r2
    396c:	d001      	beq.n	3972 <TimerIntLdd1_SetEventMask+0x1a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:256
    return ERR_PARAM_MASK;
    396e:	2380      	movs	r3, #128	; 0x80
    3970:	e00e      	b.n	3990 <TimerIntLdd1_SetEventMask+0x38>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258
  }
  return TU1_SetEventMask(DeviceDataPrv->LinkedDeviceDataPtr, ((EventMask & LDD_TIMERINT_ON_INTERRUPT) != 0U) ? LDD_TIMERUNIT_ON_COUNTER_RESTART : (LDD_TEventMask)0U);
    3972:	68fb      	ldr	r3, [r7, #12]
    3974:	681a      	ldr	r2, [r3, #0]
    3976:	6839      	ldr	r1, [r7, #0]
    3978:	2301      	movs	r3, #1
    397a:	400b      	ands	r3, r1
    397c:	d002      	beq.n	3984 <TimerIntLdd1_SetEventMask+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258 (discriminator 1)
    397e:	2380      	movs	r3, #128	; 0x80
    3980:	005b      	lsls	r3, r3, #1
    3982:	e000      	b.n	3986 <TimerIntLdd1_SetEventMask+0x2e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258 (discriminator 2)
    3984:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258 (discriminator 3)
    3986:	1c10      	adds	r0, r2, #0
    3988:	1c19      	adds	r1, r3, #0
    398a:	f7ff fe37 	bl	35fc <TU1_SetEventMask>
    398e:	1c03      	adds	r3, r0, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:259
}
    3990:	1c18      	adds	r0, r3, #0
    3992:	46bd      	mov	sp, r7
    3994:	b004      	add	sp, #16
    3996:	bd80      	pop	{r7, pc}

00003998 <TU1_OnCounterRestart>:
TU1_OnCounterRestart():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:272
**         eventually invokes event TimerIntLdd1_OnInterrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TU1_OnCounterRestart(LDD_TUserData *UserDataPtr)
{
    3998:	b580      	push	{r7, lr}
    399a:	b084      	sub	sp, #16
    399c:	af00      	add	r7, sp, #0
    399e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:273
  TimerIntLdd1_TDeviceData *DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TimerIntLdd1_ID];
    39a0:	4b05      	ldr	r3, [pc, #20]	; (39b8 <TU1_OnCounterRestart+0x20>)
    39a2:	68db      	ldr	r3, [r3, #12]
    39a4:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:276

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  TimerIntLdd1_OnInterrupt(DeviceDataPrv->UserDataPtr); /* Invoke OnInterrupt event */
    39a6:	68fb      	ldr	r3, [r7, #12]
    39a8:	689b      	ldr	r3, [r3, #8]
    39aa:	1c18      	adds	r0, r3, #0
    39ac:	f7ff f9a6 	bl	2cfc <TimerIntLdd1_OnInterrupt>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:277
}
    39b0:	46bd      	mov	sp, r7
    39b2:	b004      	add	sp, #16
    39b4:	bd80      	pop	{r7, pc}
    39b6:	46c0      	nop			; (mov r8, r8)
    39b8:	1ffff0cc 	.word	0x1ffff0cc

000039bc <exit>:
exit():
    39bc:	4b08      	ldr	r3, [pc, #32]	; (39e0 <exit+0x24>)
    39be:	b510      	push	{r4, lr}
    39c0:	1c04      	adds	r4, r0, #0
    39c2:	2b00      	cmp	r3, #0
    39c4:	d002      	beq.n	39cc <exit+0x10>
    39c6:	2100      	movs	r1, #0
    39c8:	e000      	b.n	39cc <exit+0x10>
    39ca:	bf00      	nop
    39cc:	4b05      	ldr	r3, [pc, #20]	; (39e4 <exit+0x28>)
    39ce:	6818      	ldr	r0, [r3, #0]
    39d0:	6a83      	ldr	r3, [r0, #40]	; 0x28
    39d2:	2b00      	cmp	r3, #0
    39d4:	d000      	beq.n	39d8 <exit+0x1c>
    39d6:	4798      	blx	r3
    39d8:	1c20      	adds	r0, r4, #0
    39da:	f000 f833 	bl	3a44 <_exit>
    39de:	46c0      	nop			; (mov r8, r8)
    39e0:	00000000 	.word	0x00000000
    39e4:	00003ae8 	.word	0x00003ae8

000039e8 <__libc_init_array>:
__libc_init_array():
    39e8:	b570      	push	{r4, r5, r6, lr}
    39ea:	4b0e      	ldr	r3, [pc, #56]	; (3a24 <__libc_init_array+0x3c>)
    39ec:	4d0e      	ldr	r5, [pc, #56]	; (3a28 <__libc_init_array+0x40>)
    39ee:	2400      	movs	r4, #0
    39f0:	1aed      	subs	r5, r5, r3
    39f2:	10ad      	asrs	r5, r5, #2
    39f4:	1c1e      	adds	r6, r3, #0
    39f6:	42ac      	cmp	r4, r5
    39f8:	d004      	beq.n	3a04 <__libc_init_array+0x1c>
    39fa:	00a3      	lsls	r3, r4, #2
    39fc:	58f3      	ldr	r3, [r6, r3]
    39fe:	4798      	blx	r3
    3a00:	3401      	adds	r4, #1
    3a02:	e7f8      	b.n	39f6 <__libc_init_array+0xe>
    3a04:	f000 f872 	bl	3aec <_init>
    3a08:	4b08      	ldr	r3, [pc, #32]	; (3a2c <__libc_init_array+0x44>)
    3a0a:	4d09      	ldr	r5, [pc, #36]	; (3a30 <__libc_init_array+0x48>)
    3a0c:	2400      	movs	r4, #0
    3a0e:	1aed      	subs	r5, r5, r3
    3a10:	10ad      	asrs	r5, r5, #2
    3a12:	1c1e      	adds	r6, r3, #0
    3a14:	42ac      	cmp	r4, r5
    3a16:	d004      	beq.n	3a22 <__libc_init_array+0x3a>
    3a18:	00a3      	lsls	r3, r4, #2
    3a1a:	58f3      	ldr	r3, [r6, r3]
    3a1c:	4798      	blx	r3
    3a1e:	3401      	adds	r4, #1
    3a20:	e7f8      	b.n	3a14 <__libc_init_array+0x2c>
    3a22:	bd70      	pop	{r4, r5, r6, pc}
    3a24:	00003b0c 	.word	0x00003b0c
    3a28:	00003b0c 	.word	0x00003b0c
    3a2c:	00003b0c 	.word	0x00003b0c
    3a30:	00003b10 	.word	0x00003b10

00003a34 <memset>:
memset():
    3a34:	1c03      	adds	r3, r0, #0
    3a36:	1882      	adds	r2, r0, r2
    3a38:	4293      	cmp	r3, r2
    3a3a:	d002      	beq.n	3a42 <memset+0xe>
    3a3c:	7019      	strb	r1, [r3, #0]
    3a3e:	3301      	adds	r3, #1
    3a40:	e7fa      	b.n	3a38 <memset+0x4>
    3a42:	4770      	bx	lr

00003a44 <_exit>:
_exit():
    3a44:	e7fe      	b.n	3a44 <_exit>
    3a46:	46c0      	nop			; (mov r8, r8)
$d():
    3a48:	00000b5c 	.word	0x00000b5c
    3a4c:	00000b0e 	.word	0x00000b0e
    3a50:	00000b3c 	.word	0x00000b3c
    3a54:	00000a96 	.word	0x00000a96
    3a58:	00000b3c 	.word	0x00000b3c
    3a5c:	00000b32 	.word	0x00000b32
    3a60:	00000b3c 	.word	0x00000b3c
    3a64:	00000a96 	.word	0x00000a96
    3a68:	00000b0e 	.word	0x00000b0e
    3a6c:	00000b0e 	.word	0x00000b0e
    3a70:	00000b32 	.word	0x00000b32
    3a74:	00000a96 	.word	0x00000a96
    3a78:	00000a8e 	.word	0x00000a8e
    3a7c:	00000a8e 	.word	0x00000a8e
    3a80:	00000a8e 	.word	0x00000a8e
    3a84:	00000b42 	.word	0x00000b42
    3a88:	000012e8 	.word	0x000012e8
    3a8c:	000014d6 	.word	0x000014d6
    3a90:	000014d6 	.word	0x000014d6
    3a94:	000012c8 	.word	0x000012c8
    3a98:	000011b2 	.word	0x000011b2
    3a9c:	000011b2 	.word	0x000011b2
    3aa0:	000012ba 	.word	0x000012ba
    3aa4:	000012c8 	.word	0x000012c8
    3aa8:	000011b2 	.word	0x000011b2
    3aac:	000012ba 	.word	0x000012ba
    3ab0:	000011b2 	.word	0x000011b2
    3ab4:	000012c8 	.word	0x000012c8
    3ab8:	000011b0 	.word	0x000011b0
    3abc:	000011b0 	.word	0x000011b0
    3ac0:	000011b0 	.word	0x000011b0
    3ac4:	000014de 	.word	0x000014de
    3ac8:	00001bec 	.word	0x00001bec
    3acc:	00001c1a 	.word	0x00001c1a
    3ad0:	00001c4e 	.word	0x00001c4e
    3ad4:	00001ba4 	.word	0x00001ba4
    3ad8:	00001c72 	.word	0x00001c72

00003adc <Table>:
    3adc:	00000201                                ....

00003ae0 <ChannelToPin>:
    3ae0:	00004446 00000043                       FD..C...

00003ae8 <_global_impure_ptr>:
    3ae8:	1ffff000                                ....

00003aec <_init>:
$t():
    3aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3aee:	46c0      	nop			; (mov r8, r8)
    3af0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3af2:	bc08      	pop	{r3}
    3af4:	469e      	mov	lr, r3
    3af6:	4770      	bx	lr

00003af8 <_fini>:
    3af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3afa:	46c0      	nop			; (mov r8, r8)
    3afc:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3afe:	bc08      	pop	{r3}
    3b00:	469e      	mov	lr, r3
    3b02:	4770      	bx	lr
