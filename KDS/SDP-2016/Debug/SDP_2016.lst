
SDP_2016.elf:     file format elf32-littlearm
SDP_2016.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000acd

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x000000c0 memsz 0x000000c0 flags r--
    LOAD off    0x00008400 vaddr 0x00000400 paddr 0x00000400 align 2**15
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00008410 vaddr 0x00000410 paddr 0x00000410 align 2**15
         filesz 0x00001570 memsz 0x00001570 flags rwx
    LOAD off    0x0000f000 vaddr 0x1ffff000 paddr 0x00001980 align 2**15
         filesz 0x00000060 memsz 0x00000218 flags rw-
    LOAD off    0x0000f218 vaddr 0x1ffff218 paddr 0x000019e0 align 2**15
         filesz 0x00000018 memsz 0x00000418 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts   000000c0  00000000  00000000  00008000  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .cfmprotect   00000010  00000400  00000400  00008400  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00001560  00000410  00000410  00008410  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM          00000008  00001970  00001970  00009970  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  00001978  00001978  00009978  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0000197c  0000197c  0000997c  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000060  1ffff000  00001980  0000f000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000001b8  1ffff060  000019e0  0000f060  2**2  ALLOC
  8 .romp         00000018  1ffff218  000019e0  0000f218  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 ._user_heap_stack 00000400  1ffff230  000019f8  0000f230  2**0  ALLOC
 10 .ARM.attributes 00000028  00000000  00000000  0000f230  2**0  CONTENTS, READONLY
 11 .debug_info   00003dff  00000000  00000000  0000f258  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 000014b0  00000000  00000000  00013057  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 00000428  00000000  00000000  00014507  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000310  00000000  00000000  0001492f  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro  00012e4c  00000000  00000000  00014c3f  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   000042a4  00000000  00000000  00027a8b  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    00040dd1  00000000  00000000  0002bd2f  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment      00000070  00000000  00000000  0006cb00  2**0  CONTENTS, READONLY
 19 .debug_frame  00000bb4  00000000  00000000  0006cb70  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .interrupts	00000000 .interrupts
00000400 l    d  .cfmprotect	00000000 .cfmprotect
00000410 l    d  .text	00000000 .text
00001970 l    d  .ARM	00000000 .ARM
00001978 l    d  .init_array	00000000 .init_array
0000197c l    d  .fini_array	00000000 .fini_array
1ffff000 l    d  .data	00000000 .data
1ffff060 l    d  .bss	00000000 .bss
1ffff218 l    d  .romp	00000000 .romp
1ffff230 l    d  ._user_heap_stack	00000000 ._user_heap_stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 Vectors.c
00000000 l    df *ABS*	00000000 Cpu.c
00000000 l    df *ABS*	00000000 crtstuff.c
00001958 l     O .text	00000000 __EH_FRAME_BEGIN__
00000410 l     F .text	00000000 __do_global_dtors_aux
1ffff060 l       .bss	00000000 completed.7863
0000197c l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00000438 l     F .text	00000000 frame_dummy
1ffff064 l       .bss	00000000 object.7868
00001978 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/../../../../arm-none-eabi/lib/armv6-m/crt0.o
00000000 l    df *ABS*	00000000 _udivsi3.o
000004ec l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
00000588 l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 Events.c
00000000 l    df *ABS*	00000000 SerialCommunication.c
1ffff07c l     O .bss	00000008 deviceData
000007a4 l     F .text	00000020 init_Serial
000007c4 l     F .text	00000044 sendChar
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 startup.c
00000ae0 l       .text	00000000 skip_sp
00000000 l    df *ABS*	00000000 AdcLdd1.c
1ffff084 l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff08c l     O .bss	00000004 INT_ADC0__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 BitIoLdd1.c
1ffff090 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd2.c
1ffff094 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd3.c
1ffff098 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 ClockInterruption.c
00000000 l    df *ABS*	00000000 ImageConverter.c
1ffff09d l     O .bss	00000001 ModeFlg
1ffff0a0 l     O .bss	00000001 SampleGroup
1ffff0a4 l     O .bss	00000001 OutFlg
00000000 l    df *ABS*	00000000 SerialCom.c
1ffff0c4 l     O .bss	00000018 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff0dc l     O .bss	00000004 INT_UART0__DEFAULT_RTOS_ISRPARAM
00001538 l     F .text	00000058 InterruptRx
00001590 l     F .text	00000080 InterruptTx
00000000 l    df *ABS*	00000000 TU1.c
1ffff0e0 l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff0e8 l     O .bss	00000004 INT_PIT__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 TimerIntLdd1.c
1ffff0ec l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 impure.c
1ffff000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 CameraController.c
00000000 l    df *ABS*	00000000 PE_LDD.c
00000000 l    df *ABS*	00000000 
00000400 l       *ABS*	00000000 __stack_size
00020000 l       *ABS*	00000000 text_end
1ffff000 l       .data	00000000 _sdata
000019f8 l       .fini_array	00000000 data_init_end
00000000 l       *UND*	00000000 send
00001980 l       .fini_array	00000000 ___ROM_AT
00000000 l       *ABS*	00000000 __heap_size
0000197c l       .init_array	00000000 __init_array_end
00001978 l       .init_array	00000000 __preinit_array_end
20003000 l       *ABS*	00000000 _estack
1ffff060 l       .data	00000000 _edata
00001978 l       .init_array	00000000 __init_array_start
00001978 l       .init_array	00000000 __preinit_array_start
00000d80 g     F .text	00000030 AdcLdd1_MeasurementCompleteInterrupt
1ffff0f8 g     O .bss	00000004 clockCounter
1ffff230 g       ._user_heap_stack	00000000 __HeapBase
000012c4 g     F .text	000001b0 SerialCom_Init
00001748 g     F .text	0000002c TU1_Enable
1ffff230 g       ._user_heap_stack	00000000 __heap_addr
1ffff09c g     O .bss	00000001 SR_lock
00001978 g       .ARM	00000000 __exidx_end
1ffff0fc g     O .bss	00000004 transferTime
00000ee0 g     F .text	00000018 BitIoLdd2_SetVal
00000db0 g     F .text	00000060 BitIoLdd1_Init
00001970 g       .text	00000000 _etext
00000000 g     O .interrupts	000000c0 __vect_table
00001298 g     F .text	0000002c ImageConverter_Init
00000bc0 g     F .text	00000044 AdcLdd1_StartSingleMeasurement
00001978 g       .init_array	00000000 __DTOR_END__
0000185c g     F .text	0000002e TimerIntLdd1_Disable
00001774 g     F .text	00000030 TU1_Disable
000004e8 g     F .text	00000088 .hidden __udivsi3
1ffff060 g       .bss	00000000 __START_BSS
1ffff230 g       ._user_heap_stack	00000000 __HeapLimit
1ffff060 g       .bss	00000000 __bss_start__
0000078c g     F .text	00000018 SerialCom_OnBlockSent
00000650 g     F .text	00000104 ClockInterruption_OnInterrupt
00000cc8 g     F .text	000000b8 AdcLdd1_GetCalibrationResultStatus
1ffff210 g     O .bss	00000001 ImageConverter_OutV
00000acc g     F .text	00000030 __thumb_startup
00000808 g     F .text	0000009a itoa_8_bit
00001970 g       .ARM	00000000 __exidx_start
00001954 g     O .text	00000004 _global_impure_ptr
000018dc g     F .text	0000004c __libc_init_array
00000ac4  w    F .text	00000008 __init_user
00000470 g     F .text	00000000 _mainCRTStartup
1ffff108 g     O .bss	00000001 serialTest
00001958 g     F .text	00000000 _init
1ffff100 g     O .bss	00000004 state
0000182c g     F .text	0000002e TimerIntLdd1_Enable
00000000  w      *UND*	00000000 __libc_fini_array
00000f84 g     F .text	00000110 __init_hardware
00000e68 g     F .text	00000060 BitIoLdd2_Init
00001610 g     F .text	00000064 SerialCom_Interrupt
0000188c g     F .text	00000024 TU1_OnCounterRestart
1ffff214 g     O .bss	00000004 AdcLdd1_DeviceDataPtr
00000e38 g     F .text	00000018 BitIoLdd1_ClrVal
00000000  w      *UND*	00000000 __sf_fake_stderr
00000000  w      *UND*	00000000 __deregister_frame_info
00000584 g     F .text	00000000 .hidden __aeabi_idiv
0000094c g     F .text	000000d6 __copy_rom_section
00000648 g     F .text	00000008 Cpu_OnNMIINT
00001978 g       .init_array	00000000 __CTOR_LIST__
1ffff104 g     O .bss	00000004 COMMUNICATION_SERIAL
1ffff218 g       .bss	00000000 __bss_end__
00000000  w      *UND*	00000000 __call_exitprocs
00000ec8 g     F .text	00000018 BitIoLdd2_ClrVal
00000470 g     F .text	00000000 _start
00000afc g     F .text	000000c4 AdcLdd1_Init
00000e50 g     F .text	00000018 BitIoLdd1_SetVal
00000400 g     O .cfmprotect	00000010 _cfm
0000077c g     F .text	0000000e SerialCom_OnBlockReceived
00000000 g       .interrupts	00000000 __vector_table
20003000 g       *ABS*	00000000 __SP_INIT
00000000  w      *UND*	00000000 software_init_hook
00000c04 g     F .text	00000064 AdcLdd1_CreateSampleGroup
00000774 g     F .text	00000008 ImageConverter_OnCalibrationEnd
00001094 g     F .text	000000e4 PE_low_level_init
00000644  w    F .text	00000002 .hidden __aeabi_ldiv0
00000c68 g     F .text	00000060 AdcLdd1_GetMeasuredValues
00000a24 g     F .text	00000098 __copy_rom_sections_to_ram
00000000  w      *UND*	00000000 __sf_fake_stdin
1ffff20c g     O .bss	00000001 SR_reg
00001928 g     F .text	00000010 memset
000008f4 g     F .text	00000058 main
00000754 g     F .text	00000020 ImageConverter_OnEnd
0000123c g     F .text	0000005c AdcLdd1_OnMeasurementComplete
000004e8 g     F .text	00000000 .hidden __aeabi_uidiv
00000f78 g     F .text	0000000a Cpu_Interrupt
1ffff0a8 g     O .bss	0000001c PE_LDD_DeviceDataList
00000000  w      *UND*	00000000 hardware_init_hook
00000f58 g     F .text	00000012 TimerIntLdd1_OnInterrupt
00000584 g     F .text	000000ac .hidden __divsi3
00001978 g       .init_array	00000000 __CTOR_END__
00001978 g       .init_array	00000000 __DTOR_LIST__
1ffff218 g       .bss	00000000 __END_BSS
00001964 g     F .text	00000000 _fini
000019e0 g       .fini_array	00000000 _romp_at
00000000  w      *UND*	00000000 atexit
1ffff109 g     O .bss	00000001 serialFinished
1ffff10a g     O .bss	00000001 serialTestStart
1ffff000 g       .data	00000000 _mtb_end
000008a4 g     F .text	00000050 sendArrayOfPixels
000017a4 g     F .text	00000038 TU1_Interrupt
00000ef8 g     F .text	00000060 BitIoLdd3_Init
000019e0 g       .fini_array	00000000 __S_romp
00001178 g     F .text	00000048 ImageConverter_HWEnDi
20003000 g       *ABS*	00000000 __stack
00000570 g     F .text	00000012 .hidden __aeabi_uidivmod
000011c0 g     F .text	00000048 ImageConverter_Measure
00000e10 g     F .text	00000028 BitIoLdd1_GetVal
000018b0 g     F .text	0000002c exit
00000abc  w    F .text	00000008 __init_registers
1ffff000 g       .data	00000000 _mtb_start
00000000  w      *UND*	00000000 __sf_fake_stdout
000017dc g     F .text	00000050 TimerIntLdd1_Init
00001674 g     F .text	000000d4 TU1_Init
00000644  w    F .text	00000002 .hidden __aeabi_idiv0
00001938 g     F .text	00000002 _exit
00001474 g     F .text	000000c4 SerialCom_SendBlock
00000000  w      *UND*	00000000 _Jv_RegisterClasses
1ffff10c g     O .bss	00000100 pixelArray
00000630 g     F .text	00000012 .hidden __aeabi_idivmod
00000060 g       *ABS*	00000000 ___data_size
00000f6c g     F .text	0000000c Cpu_INT_NMIInterrupt
00000000  w      *UND*	00000000 __register_frame_info
00001208 g     F .text	00000034 PE_ImageConverter_GetChanValue



Disassembly of section .text:

00000410 <__do_global_dtors_aux>:
$t():
     410:	b510      	push	{r4, lr}
     412:	4c06      	ldr	r4, [pc, #24]	; (42c <__do_global_dtors_aux+0x1c>)
     414:	7823      	ldrb	r3, [r4, #0]
     416:	2b00      	cmp	r3, #0
     418:	d107      	bne.n	42a <__do_global_dtors_aux+0x1a>
     41a:	4b05      	ldr	r3, [pc, #20]	; (430 <__do_global_dtors_aux+0x20>)
     41c:	2b00      	cmp	r3, #0
     41e:	d002      	beq.n	426 <__do_global_dtors_aux+0x16>
     420:	4804      	ldr	r0, [pc, #16]	; (434 <__do_global_dtors_aux+0x24>)
     422:	e000      	b.n	426 <__do_global_dtors_aux+0x16>
     424:	bf00      	nop
     426:	2301      	movs	r3, #1
     428:	7023      	strb	r3, [r4, #0]
     42a:	bd10      	pop	{r4, pc}
$d():
     42c:	1ffff060 	.word	0x1ffff060
     430:	00000000 	.word	0x00000000
     434:	00001958 	.word	0x00001958

00000438 <frame_dummy>:
$t():
     438:	b508      	push	{r3, lr}
     43a:	4b08      	ldr	r3, [pc, #32]	; (45c <frame_dummy+0x24>)
     43c:	2b00      	cmp	r3, #0
     43e:	d003      	beq.n	448 <frame_dummy+0x10>
     440:	4807      	ldr	r0, [pc, #28]	; (460 <frame_dummy+0x28>)
     442:	4908      	ldr	r1, [pc, #32]	; (464 <frame_dummy+0x2c>)
     444:	e000      	b.n	448 <frame_dummy+0x10>
     446:	bf00      	nop
     448:	4807      	ldr	r0, [pc, #28]	; (468 <frame_dummy+0x30>)
     44a:	6803      	ldr	r3, [r0, #0]
     44c:	2b00      	cmp	r3, #0
     44e:	d003      	beq.n	458 <frame_dummy+0x20>
     450:	4b06      	ldr	r3, [pc, #24]	; (46c <frame_dummy+0x34>)
     452:	2b00      	cmp	r3, #0
     454:	d000      	beq.n	458 <frame_dummy+0x20>
     456:	4798      	blx	r3
     458:	bd08      	pop	{r3, pc}
     45a:	46c0      	nop			; (mov r8, r8)
$d():
     45c:	00000000 	.word	0x00000000
     460:	00001958 	.word	0x00001958
     464:	1ffff064 	.word	0x1ffff064
     468:	1ffff060 	.word	0x1ffff060
     46c:	00000000 	.word	0x00000000

00000470 <_mainCRTStartup>:
$t():
     470:	4b16      	ldr	r3, [pc, #88]	; (4cc <_mainCRTStartup+0x5c>)
     472:	2b00      	cmp	r3, #0
     474:	d100      	bne.n	478 <_mainCRTStartup+0x8>
     476:	4b14      	ldr	r3, [pc, #80]	; (4c8 <_mainCRTStartup+0x58>)
     478:	469d      	mov	sp, r3
     47a:	2240      	movs	r2, #64	; 0x40
     47c:	0292      	lsls	r2, r2, #10
     47e:	1a9a      	subs	r2, r3, r2
     480:	4692      	mov	sl, r2
     482:	2100      	movs	r1, #0
     484:	468b      	mov	fp, r1
     486:	460f      	mov	r7, r1
     488:	4813      	ldr	r0, [pc, #76]	; (4d8 <_mainCRTStartup+0x68>)
     48a:	4a14      	ldr	r2, [pc, #80]	; (4dc <_mainCRTStartup+0x6c>)
     48c:	1a12      	subs	r2, r2, r0
     48e:	f001 fa4b 	bl	1928 <memset>
     492:	4b0f      	ldr	r3, [pc, #60]	; (4d0 <_mainCRTStartup+0x60>)
     494:	2b00      	cmp	r3, #0
     496:	d000      	beq.n	49a <_mainCRTStartup+0x2a>
     498:	4798      	blx	r3
     49a:	4b0e      	ldr	r3, [pc, #56]	; (4d4 <_mainCRTStartup+0x64>)
     49c:	2b00      	cmp	r3, #0
     49e:	d000      	beq.n	4a2 <_mainCRTStartup+0x32>
     4a0:	4798      	blx	r3
     4a2:	2000      	movs	r0, #0
     4a4:	2100      	movs	r1, #0
     4a6:	0004      	movs	r4, r0
     4a8:	000d      	movs	r5, r1
     4aa:	480d      	ldr	r0, [pc, #52]	; (4e0 <_mainCRTStartup+0x70>)
     4ac:	2800      	cmp	r0, #0
     4ae:	d002      	beq.n	4b6 <_mainCRTStartup+0x46>
     4b0:	480c      	ldr	r0, [pc, #48]	; (4e4 <_mainCRTStartup+0x74>)
     4b2:	e000      	b.n	4b6 <_mainCRTStartup+0x46>
     4b4:	bf00      	nop
     4b6:	f001 fa11 	bl	18dc <__libc_init_array>
     4ba:	0020      	movs	r0, r4
     4bc:	0029      	movs	r1, r5
     4be:	f000 fa19 	bl	8f4 <main>
     4c2:	f001 f9f5 	bl	18b0 <exit>
     4c6:	46c0      	nop			; (mov r8, r8)
$d():
     4c8:	00080000 	.word	0x00080000
     4cc:	20003000 	.word	0x20003000
	...
     4d8:	1ffff060 	.word	0x1ffff060
     4dc:	1ffff218 	.word	0x1ffff218
	...

000004e8 <__aeabi_uidiv>:
__udivsi3():
     4e8:	2900      	cmp	r1, #0
     4ea:	d034      	beq.n	556 <.udivsi3_skip_div0_test+0x6a>

000004ec <.udivsi3_skip_div0_test>:
     4ec:	2301      	movs	r3, #1
     4ee:	2200      	movs	r2, #0
     4f0:	b410      	push	{r4}
     4f2:	4288      	cmp	r0, r1
     4f4:	d32c      	bcc.n	550 <.udivsi3_skip_div0_test+0x64>
     4f6:	2401      	movs	r4, #1
     4f8:	0724      	lsls	r4, r4, #28
     4fa:	42a1      	cmp	r1, r4
     4fc:	d204      	bcs.n	508 <.udivsi3_skip_div0_test+0x1c>
     4fe:	4281      	cmp	r1, r0
     500:	d202      	bcs.n	508 <.udivsi3_skip_div0_test+0x1c>
     502:	0109      	lsls	r1, r1, #4
     504:	011b      	lsls	r3, r3, #4
     506:	e7f8      	b.n	4fa <.udivsi3_skip_div0_test+0xe>
     508:	00e4      	lsls	r4, r4, #3
     50a:	42a1      	cmp	r1, r4
     50c:	d204      	bcs.n	518 <.udivsi3_skip_div0_test+0x2c>
     50e:	4281      	cmp	r1, r0
     510:	d202      	bcs.n	518 <.udivsi3_skip_div0_test+0x2c>
     512:	0049      	lsls	r1, r1, #1
     514:	005b      	lsls	r3, r3, #1
     516:	e7f8      	b.n	50a <.udivsi3_skip_div0_test+0x1e>
     518:	4288      	cmp	r0, r1
     51a:	d301      	bcc.n	520 <.udivsi3_skip_div0_test+0x34>
     51c:	1a40      	subs	r0, r0, r1
     51e:	431a      	orrs	r2, r3
     520:	084c      	lsrs	r4, r1, #1
     522:	42a0      	cmp	r0, r4
     524:	d302      	bcc.n	52c <.udivsi3_skip_div0_test+0x40>
     526:	1b00      	subs	r0, r0, r4
     528:	085c      	lsrs	r4, r3, #1
     52a:	4322      	orrs	r2, r4
     52c:	088c      	lsrs	r4, r1, #2
     52e:	42a0      	cmp	r0, r4
     530:	d302      	bcc.n	538 <.udivsi3_skip_div0_test+0x4c>
     532:	1b00      	subs	r0, r0, r4
     534:	089c      	lsrs	r4, r3, #2
     536:	4322      	orrs	r2, r4
     538:	08cc      	lsrs	r4, r1, #3
     53a:	42a0      	cmp	r0, r4
     53c:	d302      	bcc.n	544 <.udivsi3_skip_div0_test+0x58>
     53e:	1b00      	subs	r0, r0, r4
     540:	08dc      	lsrs	r4, r3, #3
     542:	4322      	orrs	r2, r4
     544:	2800      	cmp	r0, #0
     546:	d003      	beq.n	550 <.udivsi3_skip_div0_test+0x64>
     548:	091b      	lsrs	r3, r3, #4
     54a:	d001      	beq.n	550 <.udivsi3_skip_div0_test+0x64>
     54c:	0909      	lsrs	r1, r1, #4
     54e:	e7e3      	b.n	518 <.udivsi3_skip_div0_test+0x2c>
     550:	1c10      	adds	r0, r2, #0
     552:	bc10      	pop	{r4}
     554:	4770      	bx	lr
     556:	2800      	cmp	r0, #0
     558:	d001      	beq.n	55e <.udivsi3_skip_div0_test+0x72>
     55a:	2000      	movs	r0, #0
     55c:	43c0      	mvns	r0, r0
     55e:	b407      	push	{r0, r1, r2}
     560:	4802      	ldr	r0, [pc, #8]	; (56c <.udivsi3_skip_div0_test+0x80>)
     562:	a102      	add	r1, pc, #8	; (adr r1, 56c <.udivsi3_skip_div0_test+0x80>)
     564:	1840      	adds	r0, r0, r1
     566:	9002      	str	r0, [sp, #8]
     568:	bd03      	pop	{r0, r1, pc}
     56a:	46c0      	nop			; (mov r8, r8)
     56c:	000000d9 	.word	0x000000d9

00000570 <__aeabi_uidivmod>:
__aeabi_uidivmod():
     570:	2900      	cmp	r1, #0
     572:	d0f0      	beq.n	556 <.udivsi3_skip_div0_test+0x6a>
     574:	b503      	push	{r0, r1, lr}
     576:	f7ff ffb9 	bl	4ec <.udivsi3_skip_div0_test>
     57a:	bc0e      	pop	{r1, r2, r3}
     57c:	4342      	muls	r2, r0
     57e:	1a89      	subs	r1, r1, r2
     580:	4718      	bx	r3
     582:	46c0      	nop			; (mov r8, r8)

00000584 <__aeabi_idiv>:
__divsi3():
     584:	2900      	cmp	r1, #0
     586:	d041      	beq.n	60c <.divsi3_skip_div0_test+0x84>

00000588 <.divsi3_skip_div0_test>:
     588:	b410      	push	{r4}
     58a:	1c04      	adds	r4, r0, #0
     58c:	404c      	eors	r4, r1
     58e:	46a4      	mov	ip, r4
     590:	2301      	movs	r3, #1
     592:	2200      	movs	r2, #0
     594:	2900      	cmp	r1, #0
     596:	d500      	bpl.n	59a <.divsi3_skip_div0_test+0x12>
     598:	4249      	negs	r1, r1
     59a:	2800      	cmp	r0, #0
     59c:	d500      	bpl.n	5a0 <.divsi3_skip_div0_test+0x18>
     59e:	4240      	negs	r0, r0
     5a0:	4288      	cmp	r0, r1
     5a2:	d32c      	bcc.n	5fe <.divsi3_skip_div0_test+0x76>
     5a4:	2401      	movs	r4, #1
     5a6:	0724      	lsls	r4, r4, #28
     5a8:	42a1      	cmp	r1, r4
     5aa:	d204      	bcs.n	5b6 <.divsi3_skip_div0_test+0x2e>
     5ac:	4281      	cmp	r1, r0
     5ae:	d202      	bcs.n	5b6 <.divsi3_skip_div0_test+0x2e>
     5b0:	0109      	lsls	r1, r1, #4
     5b2:	011b      	lsls	r3, r3, #4
     5b4:	e7f8      	b.n	5a8 <.divsi3_skip_div0_test+0x20>
     5b6:	00e4      	lsls	r4, r4, #3
     5b8:	42a1      	cmp	r1, r4
     5ba:	d204      	bcs.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5bc:	4281      	cmp	r1, r0
     5be:	d202      	bcs.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5c0:	0049      	lsls	r1, r1, #1
     5c2:	005b      	lsls	r3, r3, #1
     5c4:	e7f8      	b.n	5b8 <.divsi3_skip_div0_test+0x30>
     5c6:	4288      	cmp	r0, r1
     5c8:	d301      	bcc.n	5ce <.divsi3_skip_div0_test+0x46>
     5ca:	1a40      	subs	r0, r0, r1
     5cc:	431a      	orrs	r2, r3
     5ce:	084c      	lsrs	r4, r1, #1
     5d0:	42a0      	cmp	r0, r4
     5d2:	d302      	bcc.n	5da <.divsi3_skip_div0_test+0x52>
     5d4:	1b00      	subs	r0, r0, r4
     5d6:	085c      	lsrs	r4, r3, #1
     5d8:	4322      	orrs	r2, r4
     5da:	088c      	lsrs	r4, r1, #2
     5dc:	42a0      	cmp	r0, r4
     5de:	d302      	bcc.n	5e6 <.divsi3_skip_div0_test+0x5e>
     5e0:	1b00      	subs	r0, r0, r4
     5e2:	089c      	lsrs	r4, r3, #2
     5e4:	4322      	orrs	r2, r4
     5e6:	08cc      	lsrs	r4, r1, #3
     5e8:	42a0      	cmp	r0, r4
     5ea:	d302      	bcc.n	5f2 <.divsi3_skip_div0_test+0x6a>
     5ec:	1b00      	subs	r0, r0, r4
     5ee:	08dc      	lsrs	r4, r3, #3
     5f0:	4322      	orrs	r2, r4
     5f2:	2800      	cmp	r0, #0
     5f4:	d003      	beq.n	5fe <.divsi3_skip_div0_test+0x76>
     5f6:	091b      	lsrs	r3, r3, #4
     5f8:	d001      	beq.n	5fe <.divsi3_skip_div0_test+0x76>
     5fa:	0909      	lsrs	r1, r1, #4
     5fc:	e7e3      	b.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5fe:	1c10      	adds	r0, r2, #0
     600:	4664      	mov	r4, ip
     602:	2c00      	cmp	r4, #0
     604:	d500      	bpl.n	608 <.divsi3_skip_div0_test+0x80>
     606:	4240      	negs	r0, r0
     608:	bc10      	pop	{r4}
     60a:	4770      	bx	lr
     60c:	2800      	cmp	r0, #0
     60e:	d006      	beq.n	61e <.divsi3_skip_div0_test+0x96>
     610:	db03      	blt.n	61a <.divsi3_skip_div0_test+0x92>
     612:	2000      	movs	r0, #0
     614:	43c0      	mvns	r0, r0
     616:	0840      	lsrs	r0, r0, #1
     618:	e001      	b.n	61e <.divsi3_skip_div0_test+0x96>
     61a:	2080      	movs	r0, #128	; 0x80
     61c:	0600      	lsls	r0, r0, #24
     61e:	b407      	push	{r0, r1, r2}
     620:	4802      	ldr	r0, [pc, #8]	; (62c <.divsi3_skip_div0_test+0xa4>)
     622:	a102      	add	r1, pc, #8	; (adr r1, 62c <.divsi3_skip_div0_test+0xa4>)
     624:	1840      	adds	r0, r0, r1
     626:	9002      	str	r0, [sp, #8]
     628:	bd03      	pop	{r0, r1, pc}
     62a:	46c0      	nop			; (mov r8, r8)
     62c:	00000019 	.word	0x00000019

00000630 <__aeabi_idivmod>:
__aeabi_idivmod():
     630:	2900      	cmp	r1, #0
     632:	d0eb      	beq.n	60c <.divsi3_skip_div0_test+0x84>
     634:	b503      	push	{r0, r1, lr}
     636:	f7ff ffa7 	bl	588 <.divsi3_skip_div0_test>
     63a:	bc0e      	pop	{r1, r2, r3}
     63c:	4342      	muls	r2, r0
     63e:	1a89      	subs	r1, r1, r2
     640:	4718      	bx	r3
     642:	46c0      	nop			; (mov r8, r8)

00000644 <__aeabi_idiv0>:
__aeabi_ldiv0():
     644:	4770      	bx	lr
     646:	46c0      	nop			; (mov r8, r8)

00000648 <Cpu_OnNMIINT>:
Cpu_OnNMIINT():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:53
 **         occurred. This event is automatically enabled when the [NMI
 **         interrupt] property is set to 'Enabled'.
 */
/* ===================================================================*/
void Cpu_OnNMIINT(void)
{
     648:	b580      	push	{r7, lr}
     64a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:55
	/* Write your code here ... */
}
     64c:	46bd      	mov	sp, r7
     64e:	bd80      	pop	{r7, pc}

00000650 <ClockInterruption_OnInterrupt>:
ClockInterruption_OnInterrupt():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:72
 **     Parameters  : None
 **     Returns     : Nothing
 ** ===================================================================
 */
void ClockInterruption_OnInterrupt(void)
{
     650:	b580      	push	{r7, lr}
     652:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:73
	switch (state)
     654:	4b39      	ldr	r3, [pc, #228]	; (73c <ClockInterruption_OnInterrupt+0xec>)
     656:	681b      	ldr	r3, [r3, #0]
     658:	2b04      	cmp	r3, #4
     65a:	d86c      	bhi.n	736 <ClockInterruption_OnInterrupt+0xe6>
     65c:	009a      	lsls	r2, r3, #2
     65e:	4b38      	ldr	r3, [pc, #224]	; (740 <ClockInterruption_OnInterrupt+0xf0>)
     660:	18d3      	adds	r3, r2, r3
     662:	681b      	ldr	r3, [r3, #0]
     664:	469f      	mov	pc, r3
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:80

	case HALF_LOW_CLK:
	{

		// next state
		state = HIGH_CLK;
     666:	4b35      	ldr	r3, [pc, #212]	; (73c <ClockInterruption_OnInterrupt+0xec>)
     668:	2200      	movs	r2, #0
     66a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:82

		if (clockCounter == 0)
     66c:	4b35      	ldr	r3, [pc, #212]	; (744 <ClockInterruption_OnInterrupt+0xf4>)
     66e:	681b      	ldr	r3, [r3, #0]
     670:	2b00      	cmp	r3, #0
     672:	d10e      	bne.n	692 <ClockInterruption_OnInterrupt+0x42>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:85
		{
			// SI High.
			SI_SetVal();
     674:	4b34      	ldr	r3, [pc, #208]	; (748 <ClockInterruption_OnInterrupt+0xf8>)
     676:	681b      	ldr	r3, [r3, #0]
     678:	1c18      	adds	r0, r3, #0
     67a:	f000 fbe9 	bl	e50 <BitIoLdd1_SetVal>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:86
			while (!SI_GetVal());
     67e:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:86 (discriminator 1)
     680:	4b31      	ldr	r3, [pc, #196]	; (748 <ClockInterruption_OnInterrupt+0xf8>)
     682:	681b      	ldr	r3, [r3, #0]
     684:	1c18      	adds	r0, r3, #0
     686:	f000 fbc3 	bl	e10 <BitIoLdd1_GetVal>
     68a:	1c03      	adds	r3, r0, #0
     68c:	2b00      	cmp	r3, #0
     68e:	d0f7      	beq.n	680 <ClockInterruption_OnInterrupt+0x30>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:99
			state = WAIT_TRANSFER_CHARGE;
//			DebugLED_NegVal();// APAGAR
			COMMUNICATION_SERIAL++;
		}

		break;
     690:	e051      	b.n	736 <ClockInterruption_OnInterrupt+0xe6>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:90
			SI_SetVal();
			while (!SI_GetVal());
		}
		// Fim de um ciclo.
		// A camera precisa de um clock a mais para enviar o ultimo pixel.
		else if (clockCounter == 129)
     692:	4b2c      	ldr	r3, [pc, #176]	; (744 <ClockInterruption_OnInterrupt+0xf4>)
     694:	681b      	ldr	r3, [r3, #0]
     696:	2b81      	cmp	r3, #129	; 0x81
     698:	d10b      	bne.n	6b2 <ClockInterruption_OnInterrupt+0x62>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:92
		{
			clockCounter = 0;
     69a:	4b2a      	ldr	r3, [pc, #168]	; (744 <ClockInterruption_OnInterrupt+0xf4>)
     69c:	2200      	movs	r2, #0
     69e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:94
			// E 20 microssegundos para se preparar para o proximo ciclo.
			state = WAIT_TRANSFER_CHARGE;
     6a0:	4b26      	ldr	r3, [pc, #152]	; (73c <ClockInterruption_OnInterrupt+0xec>)
     6a2:	2204      	movs	r2, #4
     6a4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:96
//			DebugLED_NegVal();// APAGAR
			COMMUNICATION_SERIAL++;
     6a6:	4b29      	ldr	r3, [pc, #164]	; (74c <ClockInterruption_OnInterrupt+0xfc>)
     6a8:	681b      	ldr	r3, [r3, #0]
     6aa:	1c5a      	adds	r2, r3, #1
     6ac:	4b27      	ldr	r3, [pc, #156]	; (74c <ClockInterruption_OnInterrupt+0xfc>)
     6ae:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:99
		}

		break;
     6b0:	e041      	b.n	736 <ClockInterruption_OnInterrupt+0xe6>
     6b2:	e040      	b.n	736 <ClockInterruption_OnInterrupt+0xe6>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:104
	}
	case HIGH_CLK:
	{
		// Clock High.
		CLK_SetVal();
     6b4:	4b24      	ldr	r3, [pc, #144]	; (748 <ClockInterruption_OnInterrupt+0xf8>)
     6b6:	685b      	ldr	r3, [r3, #4]
     6b8:	1c18      	adds	r0, r3, #0
     6ba:	f000 fc11 	bl	ee0 <BitIoLdd2_SetVal>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:106

		clockCounter++;
     6be:	4b21      	ldr	r3, [pc, #132]	; (744 <ClockInterruption_OnInterrupt+0xf4>)
     6c0:	681b      	ldr	r3, [r3, #0]
     6c2:	1c5a      	adds	r2, r3, #1
     6c4:	4b1f      	ldr	r3, [pc, #124]	; (744 <ClockInterruption_OnInterrupt+0xf4>)
     6c6:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:108

		state = HALF_HIGH_CLK;
     6c8:	4b1c      	ldr	r3, [pc, #112]	; (73c <ClockInterruption_OnInterrupt+0xec>)
     6ca:	2201      	movs	r2, #1
     6cc:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:110

		break;
     6ce:	e032      	b.n	736 <ClockInterruption_OnInterrupt+0xe6>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:114
	}
	case HALF_HIGH_CLK:
	{
		if (clockCounter == 1)
     6d0:	4b1c      	ldr	r3, [pc, #112]	; (744 <ClockInterruption_OnInterrupt+0xf4>)
     6d2:	681b      	ldr	r3, [r3, #0]
     6d4:	2b01      	cmp	r3, #1
     6d6:	d10d      	bne.n	6f4 <ClockInterruption_OnInterrupt+0xa4>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:117
		{
			// SI Low.
			SI_ClrVal();
     6d8:	4b1b      	ldr	r3, [pc, #108]	; (748 <ClockInterruption_OnInterrupt+0xf8>)
     6da:	681b      	ldr	r3, [r3, #0]
     6dc:	1c18      	adds	r0, r3, #0
     6de:	f000 fbab 	bl	e38 <BitIoLdd1_ClrVal>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:118
			while (SI_GetVal());
     6e2:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:118 (discriminator 1)
     6e4:	4b18      	ldr	r3, [pc, #96]	; (748 <ClockInterruption_OnInterrupt+0xf8>)
     6e6:	681b      	ldr	r3, [r3, #0]
     6e8:	1c18      	adds	r0, r3, #0
     6ea:	f000 fb91 	bl	e10 <BitIoLdd1_GetVal>
     6ee:	1c03      	adds	r3, r0, #0
     6f0:	2b00      	cmp	r3, #0
     6f2:	d1f7      	bne.n	6e4 <ClockInterruption_OnInterrupt+0x94>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:122
		}

		// Começa conversão AD
		ImageConverter_Measure(FALSE);
     6f4:	2000      	movs	r0, #0
     6f6:	f000 fd63 	bl	11c0 <ImageConverter_Measure>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:123
		state = LOW_CLK;
     6fa:	4b10      	ldr	r3, [pc, #64]	; (73c <ClockInterruption_OnInterrupt+0xec>)
     6fc:	2202      	movs	r2, #2
     6fe:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:124
		break;
     700:	e019      	b.n	736 <ClockInterruption_OnInterrupt+0xe6>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:129
	}
	case LOW_CLK:
	{
		// Clock Low.
		CLK_ClrVal();
     702:	4b11      	ldr	r3, [pc, #68]	; (748 <ClockInterruption_OnInterrupt+0xf8>)
     704:	685b      	ldr	r3, [r3, #4]
     706:	1c18      	adds	r0, r3, #0
     708:	f000 fbde 	bl	ec8 <BitIoLdd2_ClrVal>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:131

		state = HALF_LOW_CLK;
     70c:	4b0b      	ldr	r3, [pc, #44]	; (73c <ClockInterruption_OnInterrupt+0xec>)
     70e:	2203      	movs	r2, #3
     710:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:133

		break;
     712:	e010      	b.n	736 <ClockInterruption_OnInterrupt+0xe6>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:139
	}

	// Pixel charge transfer time
	case WAIT_TRANSFER_CHARGE:
	{
		if (transferTime)
     714:	4b0e      	ldr	r3, [pc, #56]	; (750 <ClockInterruption_OnInterrupt+0x100>)
     716:	681b      	ldr	r3, [r3, #0]
     718:	2b00      	cmp	r3, #0
     71a:	d005      	beq.n	728 <ClockInterruption_OnInterrupt+0xd8>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:141
		{
			transferTime++;
     71c:	4b0c      	ldr	r3, [pc, #48]	; (750 <ClockInterruption_OnInterrupt+0x100>)
     71e:	681b      	ldr	r3, [r3, #0]
     720:	1c5a      	adds	r2, r3, #1
     722:	4b0b      	ldr	r3, [pc, #44]	; (750 <ClockInterruption_OnInterrupt+0x100>)
     724:	601a      	str	r2, [r3, #0]
     726:	e005      	b.n	734 <ClockInterruption_OnInterrupt+0xe4>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:145
		}
		else
		{
			transferTime = 0;
     728:	4b09      	ldr	r3, [pc, #36]	; (750 <ClockInterruption_OnInterrupt+0x100>)
     72a:	2200      	movs	r2, #0
     72c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:146
			state = HALF_LOW_CLK;
     72e:	4b03      	ldr	r3, [pc, #12]	; (73c <ClockInterruption_OnInterrupt+0xec>)
     730:	2203      	movs	r2, #3
     732:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:149
		}

		break;
     734:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:152
	}
	}
}
     736:	46bd      	mov	sp, r7
     738:	bd80      	pop	{r7, pc}
     73a:	46c0      	nop			; (mov r8, r8)
     73c:	1ffff100 	.word	0x1ffff100
     740:	0000193c 	.word	0x0000193c
     744:	1ffff0f8 	.word	0x1ffff0f8
     748:	1ffff0a8 	.word	0x1ffff0a8
     74c:	1ffff104 	.word	0x1ffff104
     750:	1ffff0fc 	.word	0x1ffff0fc

00000754 <ImageConverter_OnEnd>:
ImageConverter_OnEnd():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:169
 **     Parameters  : None
 **     Returns     : Nothing
 ** ===================================================================
 */
void ImageConverter_OnEnd(void)
{
     754:	b580      	push	{r7, lr}
     756:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:171

	ImageConverter_GetChanValue(0, &pixelArray[0][clockCounter]);
     758:	4b04      	ldr	r3, [pc, #16]	; (76c <ImageConverter_OnEnd+0x18>)
     75a:	681a      	ldr	r2, [r3, #0]
     75c:	4b04      	ldr	r3, [pc, #16]	; (770 <ImageConverter_OnEnd+0x1c>)
     75e:	18d3      	adds	r3, r2, r3
     760:	1c18      	adds	r0, r3, #0
     762:	f000 fd51 	bl	1208 <PE_ImageConverter_GetChanValue>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:172
}
     766:	46bd      	mov	sp, r7
     768:	bd80      	pop	{r7, pc}
     76a:	46c0      	nop			; (mov r8, r8)
     76c:	1ffff0f8 	.word	0x1ffff0f8
     770:	1ffff10c 	.word	0x1ffff10c

00000774 <ImageConverter_OnCalibrationEnd>:
ImageConverter_OnCalibrationEnd():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:189
 **     Parameters  : None
 **     Returns     : Nothing
 ** ===================================================================
 */
void ImageConverter_OnCalibrationEnd(void)
{
     774:	b580      	push	{r7, lr}
     776:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:191
	/* Write your code here ... */
}
     778:	46bd      	mov	sp, r7
     77a:	bd80      	pop	{r7, pc}

0000077c <SerialCom_OnBlockReceived>:
SerialCom_OnBlockReceived():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:210
 **                           RTOS specific data. This pointer is passed
 **                           as the parameter of Init method.
 */
/* ===================================================================*/
void SerialCom_OnBlockReceived(LDD_TUserData *UserDataPtr)
{
     77c:	b580      	push	{r7, lr}
     77e:	b082      	sub	sp, #8
     780:	af00      	add	r7, sp, #0
     782:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:212
	/* Write your code here ... */
}
     784:	46bd      	mov	sp, r7
     786:	b002      	add	sp, #8
     788:	bd80      	pop	{r7, pc}
     78a:	46c0      	nop			; (mov r8, r8)

0000078c <SerialCom_OnBlockSent>:
SerialCom_OnBlockSent():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:231
 **                           RTOS specific data. This pointer is passed
 **                           as the parameter of Init method.
 */
/* ===================================================================*/
void SerialCom_OnBlockSent(LDD_TUserData *UserDataPtr)
{
     78c:	b580      	push	{r7, lr}
     78e:	b084      	sub	sp, #16
     790:	af00      	add	r7, sp, #0
     792:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:232
	Serial_Device *ptr = (Serial_Device*)UserDataPtr;
     794:	687b      	ldr	r3, [r7, #4]
     796:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:234

	ptr->isSent = TRUE; /* set flag so sender knows we have finished */
     798:	68fb      	ldr	r3, [r7, #12]
     79a:	2201      	movs	r2, #1
     79c:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/Events.c:236

}
     79e:	46bd      	mov	sp, r7
     7a0:	b004      	add	sp, #16
     7a2:	bd80      	pop	{r7, pc}

000007a4 <init_Serial>:
init_Serial():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:14
#include "DebugLED.h"

static Serial_Device deviceData;

static void init_Serial()
{
     7a4:	b580      	push	{r7, lr}
     7a6:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:15
	deviceData.handle = SerialCom_Init(&deviceData); /* Initialization of serial component */
     7a8:	4b05      	ldr	r3, [pc, #20]	; (7c0 <init_Serial+0x1c>)
     7aa:	1c18      	adds	r0, r3, #0
     7ac:	f000 fd8a 	bl	12c4 <SerialCom_Init>
     7b0:	1c02      	adds	r2, r0, #0
     7b2:	4b03      	ldr	r3, [pc, #12]	; (7c0 <init_Serial+0x1c>)
     7b4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:16
	deviceData.isSent = FALSE;
     7b6:	4b02      	ldr	r3, [pc, #8]	; (7c0 <init_Serial+0x1c>)
     7b8:	2200      	movs	r2, #0
     7ba:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:17
}
     7bc:	46bd      	mov	sp, r7
     7be:	bd80      	pop	{r7, pc}
     7c0:	1ffff07c 	.word	0x1ffff07c

000007c4 <sendChar>:
sendChar():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:20

static int sendChar(unsigned char ch)
{
     7c4:	b580      	push	{r7, lr}
     7c6:	b082      	sub	sp, #8
     7c8:	af00      	add	r7, sp, #0
     7ca:	1c02      	adds	r2, r0, #0
     7cc:	1dfb      	adds	r3, r7, #7
     7ce:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:21
	deviceData.isSent = FALSE;
     7d0:	4b0c      	ldr	r3, [pc, #48]	; (804 <sendChar+0x40>)
     7d2:	2200      	movs	r2, #0
     7d4:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:22
	while(SerialCom_SendBlock(deviceData.handle, (LDD_TData*)&ch, 1)!= ERR_OK) {} /* Send char */
     7d6:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:22 (discriminator 1)
     7d8:	4b0a      	ldr	r3, [pc, #40]	; (804 <sendChar+0x40>)
     7da:	681a      	ldr	r2, [r3, #0]
     7dc:	1dfb      	adds	r3, r7, #7
     7de:	1c10      	adds	r0, r2, #0
     7e0:	1c19      	adds	r1, r3, #0
     7e2:	2201      	movs	r2, #1
     7e4:	f000 fe46 	bl	1474 <SerialCom_SendBlock>
     7e8:	1c03      	adds	r3, r0, #0
     7ea:	2b00      	cmp	r3, #0
     7ec:	d1f4      	bne.n	7d8 <sendChar+0x14>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:23
	while(!deviceData.isSent) {} /* wait until we get the green flag from the TX interrupt */
     7ee:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:23 (discriminator 1)
     7f0:	4b04      	ldr	r3, [pc, #16]	; (804 <sendChar+0x40>)
     7f2:	791b      	ldrb	r3, [r3, #4]
     7f4:	b2db      	uxtb	r3, r3
     7f6:	2b00      	cmp	r3, #0
     7f8:	d0fa      	beq.n	7f0 <sendChar+0x2c>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:24
}
     7fa:	1c18      	adds	r0, r3, #0
     7fc:	46bd      	mov	sp, r7
     7fe:	b002      	add	sp, #8
     800:	bd80      	pop	{r7, pc}
     802:	46c0      	nop			; (mov r8, r8)
     804:	1ffff07c 	.word	0x1ffff07c

00000808 <itoa_8_bit>:
itoa_8_bit():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:27

void itoa_8_bit(uint8_t sample)
{
     808:	b580      	push	{r7, lr}
     80a:	b088      	sub	sp, #32
     80c:	af00      	add	r7, sp, #0
     80e:	1c02      	adds	r2, r0, #0
     810:	1dfb      	adds	r3, r7, #7
     812:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:37
	{
		sendChar('E');
		return;
	}

	R1 = (unsigned char) (sample % 10) + '0';
     814:	1dfb      	adds	r3, r7, #7
     816:	781b      	ldrb	r3, [r3, #0]
     818:	1c18      	adds	r0, r3, #0
     81a:	210a      	movs	r1, #10
     81c:	f7ff fea8 	bl	570 <__aeabi_uidivmod>
     820:	1c0b      	adds	r3, r1, #0
     822:	b2da      	uxtb	r2, r3
     824:	1c3b      	adds	r3, r7, #0
     826:	331f      	adds	r3, #31
     828:	3230      	adds	r2, #48	; 0x30
     82a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:38
	Q1 = sample / 10;
     82c:	1dfb      	adds	r3, r7, #7
     82e:	781b      	ldrb	r3, [r3, #0]
     830:	1c18      	adds	r0, r3, #0
     832:	210a      	movs	r1, #10
     834:	f7ff fe58 	bl	4e8 <__aeabi_uidiv>
     838:	1c03      	adds	r3, r0, #0
     83a:	b2db      	uxtb	r3, r3
     83c:	61bb      	str	r3, [r7, #24]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:40

	R2 = (unsigned char) (Q1 % 10) + '0';
     83e:	69bb      	ldr	r3, [r7, #24]
     840:	1c18      	adds	r0, r3, #0
     842:	210a      	movs	r1, #10
     844:	f7ff fef4 	bl	630 <__aeabi_idivmod>
     848:	1c0b      	adds	r3, r1, #0
     84a:	b2da      	uxtb	r2, r3
     84c:	1c3b      	adds	r3, r7, #0
     84e:	3317      	adds	r3, #23
     850:	3230      	adds	r2, #48	; 0x30
     852:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:41
	Q2 = Q1 / 10;
     854:	69bb      	ldr	r3, [r7, #24]
     856:	1c18      	adds	r0, r3, #0
     858:	210a      	movs	r1, #10
     85a:	f7ff fe93 	bl	584 <__aeabi_idiv>
     85e:	1c03      	adds	r3, r0, #0
     860:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:43

	R3 = (unsigned char) (Q2 % 10) + '0';
     862:	693b      	ldr	r3, [r7, #16]
     864:	1c18      	adds	r0, r3, #0
     866:	210a      	movs	r1, #10
     868:	f7ff fee2 	bl	630 <__aeabi_idivmod>
     86c:	1c0b      	adds	r3, r1, #0
     86e:	b2da      	uxtb	r2, r3
     870:	1c3b      	adds	r3, r7, #0
     872:	330f      	adds	r3, #15
     874:	3230      	adds	r2, #48	; 0x30
     876:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:45

	sendChar(R3);
     878:	1c3b      	adds	r3, r7, #0
     87a:	330f      	adds	r3, #15
     87c:	781b      	ldrb	r3, [r3, #0]
     87e:	1c18      	adds	r0, r3, #0
     880:	f7ff ffa0 	bl	7c4 <sendChar>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:46
	sendChar(R2);
     884:	1c3b      	adds	r3, r7, #0
     886:	3317      	adds	r3, #23
     888:	781b      	ldrb	r3, [r3, #0]
     88a:	1c18      	adds	r0, r3, #0
     88c:	f7ff ff9a 	bl	7c4 <sendChar>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:47
	sendChar(R1);
     890:	1c3b      	adds	r3, r7, #0
     892:	331f      	adds	r3, #31
     894:	781b      	ldrb	r3, [r3, #0]
     896:	1c18      	adds	r0, r3, #0
     898:	f7ff ff94 	bl	7c4 <sendChar>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:48
}
     89c:	46bd      	mov	sp, r7
     89e:	b008      	add	sp, #32
     8a0:	bd80      	pop	{r7, pc}
     8a2:	46c0      	nop			; (mov r8, r8)

000008a4 <sendArrayOfPixels>:
sendArrayOfPixels():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:51

void sendArrayOfPixels(uint8_t array[])
{
     8a4:	b580      	push	{r7, lr}
     8a6:	b084      	sub	sp, #16
     8a8:	af00      	add	r7, sp, #0
     8aa:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:52
	init_Serial();
     8ac:	f7ff ff7a 	bl	7a4 <init_Serial>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:54

	for (int pixel = 0; pixel < 128; pixel++)
     8b0:	2300      	movs	r3, #0
     8b2:	60fb      	str	r3, [r7, #12]
     8b4:	e00c      	b.n	8d0 <sendArrayOfPixels+0x2c>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:56 (discriminator 2)
	{
		itoa_8_bit(array[pixel]);
     8b6:	68fb      	ldr	r3, [r7, #12]
     8b8:	687a      	ldr	r2, [r7, #4]
     8ba:	18d3      	adds	r3, r2, r3
     8bc:	781b      	ldrb	r3, [r3, #0]
     8be:	1c18      	adds	r0, r3, #0
     8c0:	f7ff ffa2 	bl	808 <itoa_8_bit>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:57 (discriminator 2)
		sendChar(' ');
     8c4:	2020      	movs	r0, #32
     8c6:	f7ff ff7d 	bl	7c4 <sendChar>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:54 (discriminator 2)

void sendArrayOfPixels(uint8_t array[])
{
	init_Serial();

	for (int pixel = 0; pixel < 128; pixel++)
     8ca:	68fb      	ldr	r3, [r7, #12]
     8cc:	3301      	adds	r3, #1
     8ce:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:54 (discriminator 1)
     8d0:	68fb      	ldr	r3, [r7, #12]
     8d2:	2b7f      	cmp	r3, #127	; 0x7f
     8d4:	ddef      	ble.n	8b6 <sendArrayOfPixels+0x12>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:60
	{
		itoa_8_bit(array[pixel]);
		sendChar(' ');
	}

	sendChar('\n');
     8d6:	200a      	movs	r0, #10
     8d8:	f7ff ff74 	bl	7c4 <sendChar>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:61
	sendChar('\r');
     8dc:	200d      	movs	r0, #13
     8de:	f7ff ff71 	bl	7c4 <sendChar>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:63

	serialFinished = TRUE;
     8e2:	4b03      	ldr	r3, [pc, #12]	; (8f0 <sendArrayOfPixels+0x4c>)
     8e4:	2201      	movs	r2, #1
     8e6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/SerialCommunication.c:64
}
     8e8:	46bd      	mov	sp, r7
     8ea:	b004      	add	sp, #16
     8ec:	bd80      	pop	{r7, pc}
     8ee:	46c0      	nop			; (mov r8, r8)
     8f0:	1ffff109 	.word	0x1ffff109

000008f4 <main>:
main():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:59


/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
     8f4:	b580      	push	{r7, lr}
     8f6:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:63
	/* Write your local variable definition here */

	/*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
	PE_low_level_init();
     8f8:	f000 fbcc 	bl	1094 <PE_low_level_init>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:71
	/* Write your code here */
//	cameraStartReading(1);

		while(1)
	{
		state = HALF_LOW_CLK;
     8fc:	4b0e      	ldr	r3, [pc, #56]	; (938 <main+0x44>)
     8fe:	2203      	movs	r2, #3
     900:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:72
		clockCounter = 0;
     902:	4b0e      	ldr	r3, [pc, #56]	; (93c <main+0x48>)
     904:	2200      	movs	r2, #0
     906:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:73
		ClockInterruption_Enable();
     908:	4b0d      	ldr	r3, [pc, #52]	; (940 <main+0x4c>)
     90a:	68db      	ldr	r3, [r3, #12]
     90c:	1c18      	adds	r0, r3, #0
     90e:	f000 ff8d 	bl	182c <TimerIntLdd1_Enable>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:75

		while (COMMUNICATION_SERIAL != 10);
     912:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:75 (discriminator 1)
     914:	4b0b      	ldr	r3, [pc, #44]	; (944 <main+0x50>)
     916:	681b      	ldr	r3, [r3, #0]
     918:	2b0a      	cmp	r3, #10
     91a:	d1fb      	bne.n	914 <main+0x20>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:76
		ClockInterruption_Disable();
     91c:	4b08      	ldr	r3, [pc, #32]	; (940 <main+0x4c>)
     91e:	68db      	ldr	r3, [r3, #12]
     920:	1c18      	adds	r0, r3, #0
     922:	f000 ff9b 	bl	185c <TimerIntLdd1_Disable>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:77
		sendArrayOfPixels(pixelArray[0]);
     926:	4b08      	ldr	r3, [pc, #32]	; (948 <main+0x54>)
     928:	1c18      	adds	r0, r3, #0
     92a:	f7ff ffbb 	bl	8a4 <sendArrayOfPixels>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:79

		COMMUNICATION_SERIAL = 0;
     92e:	4b05      	ldr	r3, [pc, #20]	; (944 <main+0x50>)
     930:	2200      	movs	r2, #0
     932:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Sources/main.c:80
	}
     934:	e7e2      	b.n	8fc <main+0x8>
     936:	46c0      	nop			; (mov r8, r8)
     938:	1ffff100 	.word	0x1ffff100
     93c:	1ffff0f8 	.word	0x1ffff0f8
     940:	1ffff0a8 	.word	0x1ffff0a8
     944:	1ffff104 	.word	0x1ffff104
     948:	1ffff10c 	.word	0x1ffff10c

0000094c <__copy_rom_section>:
__copy_rom_section():
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:44

/*
 *	Routine to copy a single section from ROM to RAM ...
 */
void __copy_rom_section(unsigned long dst, unsigned long src, unsigned long size)
{
     94c:	b580      	push	{r7, lr}
     94e:	b08a      	sub	sp, #40	; 0x28
     950:	af00      	add	r7, sp, #0
     952:	60f8      	str	r0, [r7, #12]
     954:	60b9      	str	r1, [r7, #8]
     956:	607a      	str	r2, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:45
	unsigned long len = size;
     958:	687b      	ldr	r3, [r7, #4]
     95a:	627b      	str	r3, [r7, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:47

	const unsigned int size_int = sizeof(int);
     95c:	2304      	movs	r3, #4
     95e:	623b      	str	r3, [r7, #32]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:48
	const unsigned int mask_int = sizeof(int)-1;
     960:	2303      	movs	r3, #3
     962:	61fb      	str	r3, [r7, #28]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:50

	const unsigned int size_short = sizeof(short);
     964:	2302      	movs	r3, #2
     966:	61bb      	str	r3, [r7, #24]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:51
	const unsigned int mask_short = sizeof(short)-1;
     968:	2301      	movs	r3, #1
     96a:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:53

	const unsigned int size_char = sizeof(char);
     96c:	2301      	movs	r3, #1
     96e:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:55

	if( dst == src || size == 0)
     970:	68fa      	ldr	r2, [r7, #12]
     972:	68bb      	ldr	r3, [r7, #8]
     974:	429a      	cmp	r2, r3
     976:	d002      	beq.n	97e <__copy_rom_section+0x32>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:55 (discriminator 1)
     978:	687b      	ldr	r3, [r7, #4]
     97a:	2b00      	cmp	r3, #0
     97c:	d100      	bne.n	980 <__copy_rom_section+0x34>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:57
	{
		return;
     97e:	e04d      	b.n	a1c <__copy_rom_section+0xd0>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:61
	}


	while( len > 0)
     980:	e049      	b.n	a16 <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:64
	{

		if( !(src & mask_int) && !(dst & mask_int) && len >= size_int)
     982:	68bb      	ldr	r3, [r7, #8]
     984:	69fa      	ldr	r2, [r7, #28]
     986:	4013      	ands	r3, r2
     988:	d118      	bne.n	9bc <__copy_rom_section+0x70>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:64 (discriminator 1)
     98a:	68fb      	ldr	r3, [r7, #12]
     98c:	69fa      	ldr	r2, [r7, #28]
     98e:	4013      	ands	r3, r2
     990:	d114      	bne.n	9bc <__copy_rom_section+0x70>
     992:	6a7a      	ldr	r2, [r7, #36]	; 0x24
     994:	6a3b      	ldr	r3, [r7, #32]
     996:	429a      	cmp	r2, r3
     998:	d310      	bcc.n	9bc <__copy_rom_section+0x70>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:66
		{
			*((int *)dst)  = *((int*)src);
     99a:	68fb      	ldr	r3, [r7, #12]
     99c:	68ba      	ldr	r2, [r7, #8]
     99e:	6812      	ldr	r2, [r2, #0]
     9a0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:67
			dst += size_int;
     9a2:	68fa      	ldr	r2, [r7, #12]
     9a4:	6a3b      	ldr	r3, [r7, #32]
     9a6:	18d3      	adds	r3, r2, r3
     9a8:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:68
			src += size_int;
     9aa:	68ba      	ldr	r2, [r7, #8]
     9ac:	6a3b      	ldr	r3, [r7, #32]
     9ae:	18d3      	adds	r3, r2, r3
     9b0:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:69
			len -= size_int;
     9b2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
     9b4:	6a3b      	ldr	r3, [r7, #32]
     9b6:	1ad3      	subs	r3, r2, r3
     9b8:	627b      	str	r3, [r7, #36]	; 0x24
     9ba:	e02c      	b.n	a16 <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:71
		}
		else if( !(src & mask_short) && !(dst & mask_short) && len >= size_short)
     9bc:	68bb      	ldr	r3, [r7, #8]
     9be:	697a      	ldr	r2, [r7, #20]
     9c0:	4013      	ands	r3, r2
     9c2:	d118      	bne.n	9f6 <__copy_rom_section+0xaa>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:71 (discriminator 1)
     9c4:	68fb      	ldr	r3, [r7, #12]
     9c6:	697a      	ldr	r2, [r7, #20]
     9c8:	4013      	ands	r3, r2
     9ca:	d114      	bne.n	9f6 <__copy_rom_section+0xaa>
     9cc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
     9ce:	69bb      	ldr	r3, [r7, #24]
     9d0:	429a      	cmp	r2, r3
     9d2:	d310      	bcc.n	9f6 <__copy_rom_section+0xaa>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:73
		{
			*((short *)dst)  = *((short*)src);
     9d4:	68fb      	ldr	r3, [r7, #12]
     9d6:	68ba      	ldr	r2, [r7, #8]
     9d8:	8812      	ldrh	r2, [r2, #0]
     9da:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:74
			dst += size_short;
     9dc:	68fa      	ldr	r2, [r7, #12]
     9de:	69bb      	ldr	r3, [r7, #24]
     9e0:	18d3      	adds	r3, r2, r3
     9e2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:75
			src += size_short;
     9e4:	68ba      	ldr	r2, [r7, #8]
     9e6:	69bb      	ldr	r3, [r7, #24]
     9e8:	18d3      	adds	r3, r2, r3
     9ea:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:76
			len -= size_short;
     9ec:	6a7a      	ldr	r2, [r7, #36]	; 0x24
     9ee:	69bb      	ldr	r3, [r7, #24]
     9f0:	1ad3      	subs	r3, r2, r3
     9f2:	627b      	str	r3, [r7, #36]	; 0x24
     9f4:	e00f      	b.n	a16 <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:80
		}
		else
		{
			*((char *)dst)  = *((char*)src);
     9f6:	68fb      	ldr	r3, [r7, #12]
     9f8:	68ba      	ldr	r2, [r7, #8]
     9fa:	7812      	ldrb	r2, [r2, #0]
     9fc:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:81
			dst += size_char;
     9fe:	68fa      	ldr	r2, [r7, #12]
     a00:	693b      	ldr	r3, [r7, #16]
     a02:	18d3      	adds	r3, r2, r3
     a04:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:82
			src += size_char;
     a06:	68ba      	ldr	r2, [r7, #8]
     a08:	693b      	ldr	r3, [r7, #16]
     a0a:	18d3      	adds	r3, r2, r3
     a0c:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:83
			len -= size_char;
     a0e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
     a10:	693b      	ldr	r3, [r7, #16]
     a12:	1ad3      	subs	r3, r2, r3
     a14:	627b      	str	r3, [r7, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:61 (discriminator 1)
	{
		return;
	}


	while( len > 0)
     a16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
     a18:	2b00      	cmp	r3, #0
     a1a:	d1b2      	bne.n	982 <__copy_rom_section+0x36>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:86
			dst += size_char;
			src += size_char;
			len -= size_char;
		}
	}
}
     a1c:	46bd      	mov	sp, r7
     a1e:	b00a      	add	sp, #40	; 0x28
     a20:	bd80      	pop	{r7, pc}
     a22:	46c0      	nop			; (mov r8, r8)

00000a24 <__copy_rom_sections_to_ram>:
__copy_rom_sections_to_ram():
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:98
 *  It is a table of RomInfo
 *	structures.  The final entry in the table has all-zero
 *	fields.
 */
void __copy_rom_sections_to_ram(void)
{
     a24:	b590      	push	{r4, r7, lr}
     a26:	b083      	sub	sp, #12
     a28:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:102

	int				index;

	if (__S_romp == 0L) return;
     a2a:	4b23      	ldr	r3, [pc, #140]	; (ab8 <__copy_rom_sections_to_ram+0x94>)
     a2c:	2b00      	cmp	r3, #0
     a2e:	d100      	bne.n	a32 <__copy_rom_sections_to_ram+0xe>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:102 (discriminator 1)
     a30:	e03e      	b.n	ab0 <__copy_rom_sections_to_ram+0x8c>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:107

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
     a32:	2300      	movs	r3, #0
     a34:	607b      	str	r3, [r7, #4]
     a36:	e01d      	b.n	a74 <__copy_rom_sections_to_ram+0x50>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:113
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
	{
		__copy_rom_section( __S_romp[index].Target,
     a38:	491f      	ldr	r1, [pc, #124]	; (ab8 <__copy_rom_sections_to_ram+0x94>)
     a3a:	687a      	ldr	r2, [r7, #4]
     a3c:	1c13      	adds	r3, r2, #0
     a3e:	005b      	lsls	r3, r3, #1
     a40:	189b      	adds	r3, r3, r2
     a42:	009b      	lsls	r3, r3, #2
     a44:	18cb      	adds	r3, r1, r3
     a46:	6858      	ldr	r0, [r3, #4]
     a48:	491b      	ldr	r1, [pc, #108]	; (ab8 <__copy_rom_sections_to_ram+0x94>)
     a4a:	687a      	ldr	r2, [r7, #4]
     a4c:	1c13      	adds	r3, r2, #0
     a4e:	005b      	lsls	r3, r3, #1
     a50:	189b      	adds	r3, r3, r2
     a52:	009b      	lsls	r3, r3, #2
     a54:	5859      	ldr	r1, [r3, r1]
     a56:	4c18      	ldr	r4, [pc, #96]	; (ab8 <__copy_rom_sections_to_ram+0x94>)
     a58:	687a      	ldr	r2, [r7, #4]
     a5a:	1c13      	adds	r3, r2, #0
     a5c:	005b      	lsls	r3, r3, #1
     a5e:	189b      	adds	r3, r3, r2
     a60:	009b      	lsls	r3, r3, #2
     a62:	18e3      	adds	r3, r4, r3
     a64:	3308      	adds	r3, #8
     a66:	681b      	ldr	r3, [r3, #0]
     a68:	1c1a      	adds	r2, r3, #0
     a6a:	f7ff ff6f 	bl	94c <__copy_rom_section>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:111
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
     a6e:	687b      	ldr	r3, [r7, #4]
     a70:	3301      	adds	r3, #1
     a72:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:108 (discriminator 1)

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
     a74:	4910      	ldr	r1, [pc, #64]	; (ab8 <__copy_rom_sections_to_ram+0x94>)
     a76:	687a      	ldr	r2, [r7, #4]
     a78:	1c13      	adds	r3, r2, #0
     a7a:	005b      	lsls	r3, r3, #1
     a7c:	189b      	adds	r3, r3, r2
     a7e:	009b      	lsls	r3, r3, #2
     a80:	585b      	ldr	r3, [r3, r1]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:107 (discriminator 1)
	if (__S_romp == 0L) return;

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
     a82:	2b00      	cmp	r3, #0
     a84:	d1d8      	bne.n	a38 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:109
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
     a86:	490c      	ldr	r1, [pc, #48]	; (ab8 <__copy_rom_sections_to_ram+0x94>)
     a88:	687a      	ldr	r2, [r7, #4]
     a8a:	1c13      	adds	r3, r2, #0
     a8c:	005b      	lsls	r3, r3, #1
     a8e:	189b      	adds	r3, r3, r2
     a90:	009b      	lsls	r3, r3, #2
     a92:	18cb      	adds	r3, r1, r3
     a94:	685b      	ldr	r3, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:108

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
     a96:	2b00      	cmp	r3, #0
     a98:	d1ce      	bne.n	a38 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:110
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
     a9a:	4907      	ldr	r1, [pc, #28]	; (ab8 <__copy_rom_sections_to_ram+0x94>)
     a9c:	687a      	ldr	r2, [r7, #4]
     a9e:	1c13      	adds	r3, r2, #0
     aa0:	005b      	lsls	r3, r3, #1
     aa2:	189b      	adds	r3, r3, r2
     aa4:	009b      	lsls	r3, r3, #2
     aa6:	18cb      	adds	r3, r1, r3
     aa8:	3308      	adds	r3, #8
     aaa:	681b      	ldr	r3, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:109
	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
     aac:	2b00      	cmp	r3, #0
     aae:	d1c3      	bne.n	a38 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:118
		__copy_rom_section( __S_romp[index].Target,
							__S_romp[index].Source,
							__S_romp[index].Size );

	}
}
     ab0:	46bd      	mov	sp, r7
     ab2:	b003      	add	sp, #12
     ab4:	bd90      	pop	{r4, r7, pc}
     ab6:	46c0      	nop			; (mov r8, r8)
     ab8:	000019e0 	.word	0x000019e0

00000abc <__init_registers>:
__init_registers():
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:168
  }
}
#endif

void __attribute__ ((weak)) __init_registers(void)
{
     abc:	b580      	push	{r7, lr}
     abe:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:174
  #if defined(SCB_CPACR)
  /* Initialize FPU */
  SCB_CPACR |= SCB_CPACR_CP10(3U) | SCB_CPACR_CP11(3U); 
  #endif

}
     ac0:	46bd      	mov	sp, r7
     ac2:	bd80      	pop	{r7, pc}

00000ac4 <__init_user>:
__init_user():
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:182
{

}

void __attribute__ ((weak)) __init_user(void)
{
     ac4:	b580      	push	{r7, lr}
     ac6:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:184

}
     ac8:	46bd      	mov	sp, r7
     aca:	bd80      	pop	{r7, pc}

00000acc <__thumb_startup>:
__thumb_startup():
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:197
	__thumb_startup();
}

__attribute__((naked)) void __thumb_startup(void)
{
int addr = (int)__SP_INIT;
     acc:	4c0a      	ldr	r4, [pc, #40]	; (af8 <skip_sp+0x18>)
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:202

    /* setup the stack before we attempt anything else
       skip stack setup if __SP_INIT is 0
       assume sp is already setup. */
    __asm (
     ace:	1c20      	adds	r0, r4, #0
     ad0:	2800      	cmp	r0, #0
     ad2:	d005      	beq.n	ae0 <skip_sp>
     ad4:	4685      	mov	sp, r0
     ad6:	b081      	sub	sp, #4
     ad8:	2000      	movs	r0, #0
     ada:	43c0      	mvns	r0, r0
     adc:	9000      	str	r0, [sp, #0]
     ade:	b001      	add	sp, #4

00000ae0 <skip_sp>:
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:216
    "add  sp,#4\n\t"
    "skip_sp:\n\t"
    ::"r"(addr));

    /* Setup registers */
    __init_registers();
     ae0:	f7ff ffec 	bl	abc <__init_registers>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:219
    
    /* setup hardware */
    __init_hardware();
     ae4:	f000 fa4e 	bl	f84 <__init_hardware>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:222
    
    /* SUPPORT_ROM_TO_RAM */
    __copy_rom_sections_to_ram();
     ae8:	f7ff ff9c 	bl	a24 <__copy_rom_sections_to_ram>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:225
    
    /* initializations before main, user specific */
    __init_user();
     aec:	f7ff ffea 	bl	ac4 <__init_user>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:228

#ifndef __ATOLLIC__
    _start();
     af0:	f7ff fcbe 	bl	470 <_mainCRTStartup>
/home/marcelo/Documentos/GER/SDP/Projeto/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:238 (discriminator 1)
    __libc_init_array();
    main();
#endif

    /*	should never get here */
    while (1);
     af4:	e7fe      	b.n	af4 <skip_sp+0x14>
     af6:	46c0      	nop			; (mov r8, r8)
     af8:	20003000 	.word	0x20003000

00000afc <AdcLdd1_Init>:
AdcLdd1_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:176
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* AdcLdd1_Init(LDD_TUserData *UserDataPtr)
{
     afc:	b580      	push	{r7, lr}
     afe:	b084      	sub	sp, #16
     b00:	af00      	add	r7, sp, #0
     b02:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:181
  /* Allocate LDD device structure */
  AdcLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
     b04:	4b25      	ldr	r3, [pc, #148]	; (b9c <AdcLdd1_Init+0xa0>)
     b06:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:182
  DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
     b08:	68fb      	ldr	r3, [r7, #12]
     b0a:	687a      	ldr	r2, [r7, #4]
     b0c:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:185
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_ADC0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
     b0e:	4b24      	ldr	r3, [pc, #144]	; (ba0 <AdcLdd1_Init+0xa4>)
     b10:	68fa      	ldr	r2, [r7, #12]
     b12:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:186
  DeviceDataPrv->SampleCount = 0U;     /* Initializing SampleCount for right access of some methods to SC1n registers before first conversion is done */
     b14:	68fb      	ldr	r3, [r7, #12]
     b16:	2200      	movs	r2, #0
     b18:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:187
  DeviceDataPrv->CompleteStatus = FALSE; /* Clear measurement complete status flag */
     b1a:	68fb      	ldr	r3, [r7, #12]
     b1c:	2200      	movs	r2, #0
     b1e:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:189
  /* SIM_SCGC6: ADC0=1 */
  SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
     b20:	4a20      	ldr	r2, [pc, #128]	; (ba4 <AdcLdd1_Init+0xa8>)
     b22:	4920      	ldr	r1, [pc, #128]	; (ba4 <AdcLdd1_Init+0xa8>)
     b24:	4b20      	ldr	r3, [pc, #128]	; (ba8 <AdcLdd1_Init+0xac>)
     b26:	58cb      	ldr	r3, [r1, r3]
     b28:	2180      	movs	r1, #128	; 0x80
     b2a:	0509      	lsls	r1, r1, #20
     b2c:	4319      	orrs	r1, r3
     b2e:	4b1e      	ldr	r3, [pc, #120]	; (ba8 <AdcLdd1_Init+0xac>)
     b30:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:192
  /* Interrupt vector(s) priority setting */
  /* NVIC_IPR3: PRI_15=0x80 */
  NVIC_IPR3 = (uint32_t)((NVIC_IPR3 & (uint32_t)~(uint32_t)(
     b32:	4a1e      	ldr	r2, [pc, #120]	; (bac <AdcLdd1_Init+0xb0>)
     b34:	491d      	ldr	r1, [pc, #116]	; (bac <AdcLdd1_Init+0xb0>)
     b36:	23c3      	movs	r3, #195	; 0xc3
     b38:	009b      	lsls	r3, r3, #2
     b3a:	58cb      	ldr	r3, [r1, r3]
     b3c:	009b      	lsls	r3, r3, #2
     b3e:	0899      	lsrs	r1, r3, #2
     b40:	23c3      	movs	r3, #195	; 0xc3
     b42:	009b      	lsls	r3, r3, #2
     b44:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:198
               NVIC_IP_PRI_15(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_15(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x8000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x8000);
     b46:	4b19      	ldr	r3, [pc, #100]	; (bac <AdcLdd1_Init+0xb0>)
     b48:	4a18      	ldr	r2, [pc, #96]	; (bac <AdcLdd1_Init+0xb0>)
     b4a:	6812      	ldr	r2, [r2, #0]
     b4c:	2180      	movs	r1, #128	; 0x80
     b4e:	0209      	lsls	r1, r1, #8
     b50:	430a      	orrs	r2, r1
     b52:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:200
  /* PORTD_PCR5: ISF=0,MUX=0 */
  PORTD_PCR5 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
     b54:	4b16      	ldr	r3, [pc, #88]	; (bb0 <AdcLdd1_Init+0xb4>)
     b56:	4a16      	ldr	r2, [pc, #88]	; (bb0 <AdcLdd1_Init+0xb4>)
     b58:	6951      	ldr	r1, [r2, #20]
     b5a:	4a16      	ldr	r2, [pc, #88]	; (bb4 <AdcLdd1_Init+0xb8>)
     b5c:	400a      	ands	r2, r1
     b5e:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:202
  /* ADC0_CFG2: MUXSEL=1 */
  ADC0_CFG2 |= ADC_CFG2_MUXSEL_MASK;
     b60:	4b15      	ldr	r3, [pc, #84]	; (bb8 <AdcLdd1_Init+0xbc>)
     b62:	4a15      	ldr	r2, [pc, #84]	; (bb8 <AdcLdd1_Init+0xbc>)
     b64:	68d2      	ldr	r2, [r2, #12]
     b66:	2110      	movs	r1, #16
     b68:	430a      	orrs	r2, r1
     b6a:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:204
  /* ADC0_CFG1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADLPC=0,ADIV=3,ADLSMP=0,MODE=0,ADICLK=0 */
  ADC0_CFG1 = ADC_CFG1_ADIV(0x03) |
     b6c:	4b12      	ldr	r3, [pc, #72]	; (bb8 <AdcLdd1_Init+0xbc>)
     b6e:	2260      	movs	r2, #96	; 0x60
     b70:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:209
              ADC_CFG1_MODE(0x00) |
              ADC_CFG1_ADICLK(0x00);

  /* ADC0_CFG2: ADACKEN=0,ADHSC=0,ADLSTS=0 */
  ADC0_CFG2 &= (uint32_t)~(uint32_t)(
     b72:	4b11      	ldr	r3, [pc, #68]	; (bb8 <AdcLdd1_Init+0xbc>)
     b74:	4a10      	ldr	r2, [pc, #64]	; (bb8 <AdcLdd1_Init+0xbc>)
     b76:	68d2      	ldr	r2, [r2, #12]
     b78:	210f      	movs	r1, #15
     b7a:	438a      	bics	r2, r1
     b7c:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:215
                ADC_CFG2_ADACKEN_MASK |
                ADC_CFG2_ADHSC_MASK |
                ADC_CFG2_ADLSTS(0x03)
               );
  /* ADC0_SC2: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADACT=0,ADTRG=0,ACFE=0,ACFGT=0,ACREN=0,DMAEN=0,REFSEL=0 */
  ADC0_SC2 = ADC_SC2_REFSEL(0x00);
     b7e:	4b0e      	ldr	r3, [pc, #56]	; (bb8 <AdcLdd1_Init+0xbc>)
     b80:	2200      	movs	r2, #0
     b82:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:217
  /* ADC0_SC3: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CAL=0,CALF=1,??=0,??=0,ADCO=0,AVGE=0,AVGS=0 */
  ADC0_SC3 = (ADC_SC3_CALF_MASK | ADC_SC3_AVGS(0x00));
     b84:	4b0c      	ldr	r3, [pc, #48]	; (bb8 <AdcLdd1_Init+0xbc>)
     b86:	2240      	movs	r2, #64	; 0x40
     b88:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:219
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_AdcLdd1_ID,DeviceDataPrv);
     b8a:	4b0c      	ldr	r3, [pc, #48]	; (bbc <AdcLdd1_Init+0xc0>)
     b8c:	68fa      	ldr	r2, [r7, #12]
     b8e:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:220
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the data data structure */
     b90:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:221
}
     b92:	1c18      	adds	r0, r3, #0
     b94:	46bd      	mov	sp, r7
     b96:	b004      	add	sp, #16
     b98:	bd80      	pop	{r7, pc}
     b9a:	46c0      	nop			; (mov r8, r8)
     b9c:	1ffff084 	.word	0x1ffff084
     ba0:	1ffff08c 	.word	0x1ffff08c
     ba4:	40047000 	.word	0x40047000
     ba8:	0000103c 	.word	0x0000103c
     bac:	e000e100 	.word	0xe000e100
     bb0:	4004c000 	.word	0x4004c000
     bb4:	fefff8ff 	.word	0xfefff8ff
     bb8:	4003b000 	.word	0x4003b000
     bbc:	1ffff0a8 	.word	0x1ffff0a8

00000bc0 <AdcLdd1_StartSingleMeasurement>:
AdcLdd1_StartSingleMeasurement():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:262
**                           ERR_DISABLED - Component is disabled
**                           ERR_BUSY - A measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd1_StartSingleMeasurement(LDD_TDeviceData *DeviceDataPtr)
{
     bc0:	b580      	push	{r7, lr}
     bc2:	b082      	sub	sp, #8
     bc4:	af00      	add	r7, sp, #0
     bc6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:264
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
     bc8:	4b0d      	ldr	r3, [pc, #52]	; (c00 <AdcLdd1_StartSingleMeasurement+0x40>)
     bca:	6a1a      	ldr	r2, [r3, #32]
     bcc:	2380      	movs	r3, #128	; 0x80
     bce:	4013      	ands	r3, r2
     bd0:	d001      	beq.n	bd6 <AdcLdd1_StartSingleMeasurement+0x16>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:265
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
     bd2:	2308      	movs	r3, #8
     bd4:	e010      	b.n	bf8 <AdcLdd1_StartSingleMeasurement+0x38>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:267
  }
  ADC_PDD_SetContinuousMode(ADC0_BASE_PTR, ADC_PDD_ONE_CONVERSION); /* Set one conversion mode */
     bd6:	4b0a      	ldr	r3, [pc, #40]	; (c00 <AdcLdd1_StartSingleMeasurement+0x40>)
     bd8:	4a09      	ldr	r2, [pc, #36]	; (c00 <AdcLdd1_StartSingleMeasurement+0x40>)
     bda:	6a52      	ldr	r2, [r2, #36]	; 0x24
     bdc:	2148      	movs	r1, #72	; 0x48
     bde:	438a      	bics	r2, r1
     be0:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:268
  ADC_PDD_SetConversionTriggerType(ADC0_BASE_PTR, ADC_PDD_SW_TRIGGER); /* Select SW triggering */
     be2:	4b07      	ldr	r3, [pc, #28]	; (c00 <AdcLdd1_StartSingleMeasurement+0x40>)
     be4:	4a06      	ldr	r2, [pc, #24]	; (c00 <AdcLdd1_StartSingleMeasurement+0x40>)
     be6:	6a12      	ldr	r2, [r2, #32]
     be8:	2140      	movs	r1, #64	; 0x40
     bea:	438a      	bics	r2, r1
     bec:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:269
  ADC_PDD_WriteStatusControl1Reg(ADC0_BASE_PTR, 0U, ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->FirstSample); /* Set sample 0 and start conversion */
     bee:	4b04      	ldr	r3, [pc, #16]	; (c00 <AdcLdd1_StartSingleMeasurement+0x40>)
     bf0:	687a      	ldr	r2, [r7, #4]
     bf2:	7852      	ldrb	r2, [r2, #1]
     bf4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:270
  return ERR_OK;                       /* OK */
     bf6:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:271
}
     bf8:	1c18      	adds	r0, r3, #0
     bfa:	46bd      	mov	sp, r7
     bfc:	b002      	add	sp, #8
     bfe:	bd80      	pop	{r7, pc}
     c00:	4003b000 	.word	0x4003b000

00000c04 <AdcLdd1_CreateSampleGroup>:
AdcLdd1_CreateSampleGroup():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:345
**                           variable value is out of range
**                           ERR_BUSY - Measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd1_CreateSampleGroup(LDD_TDeviceData *DeviceDataPtr, LDD_ADC_TSample *SampleGroupPtr, uint8_t SampleCount)
{
     c04:	b580      	push	{r7, lr}
     c06:	b086      	sub	sp, #24
     c08:	af00      	add	r7, sp, #0
     c0a:	60f8      	str	r0, [r7, #12]
     c0c:	60b9      	str	r1, [r7, #8]
     c0e:	1dfb      	adds	r3, r7, #7
     c10:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:346
  AdcLdd1_TDeviceDataPtr DeviceDataPrv = (AdcLdd1_TDeviceDataPtr)DeviceDataPtr;
     c12:	68fb      	ldr	r3, [r7, #12]
     c14:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:350

  /* Sample count test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((SampleCount > AdcLdd1_MAX_HW_SAMPLE_COUNT) || (SampleCount == 0U)) { /* Is number of sample greater then supported by the HW? */
     c16:	1dfb      	adds	r3, r7, #7
     c18:	781b      	ldrb	r3, [r3, #0]
     c1a:	2b01      	cmp	r3, #1
     c1c:	d803      	bhi.n	c26 <AdcLdd1_CreateSampleGroup+0x22>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:350 (discriminator 1)
     c1e:	1dfb      	adds	r3, r7, #7
     c20:	781b      	ldrb	r3, [r3, #0]
     c22:	2b00      	cmp	r3, #0
     c24:	d101      	bne.n	c2a <AdcLdd1_CreateSampleGroup+0x26>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:351
    return ERR_PARAM_SAMPLE_COUNT;     /* Yes, return ERR_PARAM_SAMPLE_COUNT */
     c26:	2396      	movs	r3, #150	; 0x96
     c28:	e017      	b.n	c5a <AdcLdd1_CreateSampleGroup+0x56>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:353
  }
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
     c2a:	4b0e      	ldr	r3, [pc, #56]	; (c64 <AdcLdd1_CreateSampleGroup+0x60>)
     c2c:	6a1a      	ldr	r2, [r3, #32]
     c2e:	2380      	movs	r3, #128	; 0x80
     c30:	4013      	ands	r3, r2
     c32:	d001      	beq.n	c38 <AdcLdd1_CreateSampleGroup+0x34>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:354
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
     c34:	2308      	movs	r3, #8
     c36:	e010      	b.n	c5a <AdcLdd1_CreateSampleGroup+0x56>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:356
  }
  DeviceDataPrv->SampleCount = SampleCount; /* Remember sample count */
     c38:	697b      	ldr	r3, [r7, #20]
     c3a:	1dfa      	adds	r2, r7, #7
     c3c:	7812      	ldrb	r2, [r2, #0]
     c3e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:359
  /* Channel index test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (SampleGroupPtr[0].ChannelIdx >= AdcLdd1_CHANNEL_COUNT) { /* Is channel index out of range? */
     c40:	68bb      	ldr	r3, [r7, #8]
     c42:	781b      	ldrb	r3, [r3, #0]
     c44:	2b00      	cmp	r3, #0
     c46:	d001      	beq.n	c4c <AdcLdd1_CreateSampleGroup+0x48>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:360
    return ERR_PARAM_INDEX;            /* Yes, return ERR_PARAM_INDEX */
     c48:	2382      	movs	r3, #130	; 0x82
     c4a:	e006      	b.n	c5a <AdcLdd1_CreateSampleGroup+0x56>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:362
  }
  DeviceDataPrv->FirstSample = (ChannelToPin[SampleGroupPtr[0].ChannelIdx]) | (uint8_t)(LDD_ADC_ON_MEASUREMENT_COMPLETE); /* Remember first sample */
     c4c:	2346      	movs	r3, #70	; 0x46
     c4e:	2240      	movs	r2, #64	; 0x40
     c50:	4313      	orrs	r3, r2
     c52:	b2da      	uxtb	r2, r3
     c54:	697b      	ldr	r3, [r7, #20]
     c56:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:363
  return ERR_OK;                       /* OK */
     c58:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:364
}
     c5a:	1c18      	adds	r0, r3, #0
     c5c:	46bd      	mov	sp, r7
     c5e:	b006      	add	sp, #24
     c60:	bd80      	pop	{r7, pc}
     c62:	46c0      	nop			; (mov r8, r8)
     c64:	4003b000 	.word	0x4003b000

00000c68 <AdcLdd1_GetMeasuredValues>:
AdcLdd1_GetMeasuredValues():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:399
**                           active clock configuration
**                           ERR_DISABLED - Component is disabled
*/
/* ===================================================================*/
LDD_TError AdcLdd1_GetMeasuredValues(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr)
{
     c68:	b580      	push	{r7, lr}
     c6a:	b084      	sub	sp, #16
     c6c:	af00      	add	r7, sp, #0
     c6e:	6078      	str	r0, [r7, #4]
     c70:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:401
  uint8_t Sample;
  AdcLdd1_TResultData *pBuffer = (AdcLdd1_TResultData *)BufferPtr;
     c72:	683b      	ldr	r3, [r7, #0]
     c74:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:405

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
     c76:	1c3b      	adds	r3, r7, #0
     c78:	330f      	adds	r3, #15
     c7a:	2200      	movs	r2, #0
     c7c:	701a      	strb	r2, [r3, #0]
     c7e:	e014      	b.n	caa <AdcLdd1_GetMeasuredValues+0x42>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:406 (discriminator 2)
    pBuffer[Sample] =(uint8_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
     c80:	1c3b      	adds	r3, r7, #0
     c82:	330f      	adds	r3, #15
     c84:	781b      	ldrb	r3, [r3, #0]
     c86:	68ba      	ldr	r2, [r7, #8]
     c88:	18d3      	adds	r3, r2, r3
     c8a:	4a0e      	ldr	r2, [pc, #56]	; (cc4 <AdcLdd1_GetMeasuredValues+0x5c>)
     c8c:	1c39      	adds	r1, r7, #0
     c8e:	310f      	adds	r1, #15
     c90:	7809      	ldrb	r1, [r1, #0]
     c92:	3104      	adds	r1, #4
     c94:	0089      	lsls	r1, r1, #2
     c96:	588a      	ldr	r2, [r1, r2]
     c98:	b2d2      	uxtb	r2, r2
     c9a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:405 (discriminator 2)
  uint8_t Sample;
  AdcLdd1_TResultData *pBuffer = (AdcLdd1_TResultData *)BufferPtr;

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
     c9c:	1c3b      	adds	r3, r7, #0
     c9e:	330f      	adds	r3, #15
     ca0:	781a      	ldrb	r2, [r3, #0]
     ca2:	1c3b      	adds	r3, r7, #0
     ca4:	330f      	adds	r3, #15
     ca6:	3201      	adds	r2, #1
     ca8:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:405 (discriminator 1)
     caa:	687b      	ldr	r3, [r7, #4]
     cac:	781b      	ldrb	r3, [r3, #0]
     cae:	1c3a      	adds	r2, r7, #0
     cb0:	320f      	adds	r2, #15
     cb2:	7812      	ldrb	r2, [r2, #0]
     cb4:	429a      	cmp	r2, r3
     cb6:	d3e3      	bcc.n	c80 <AdcLdd1_GetMeasuredValues+0x18>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:408
    pBuffer[Sample] =(uint8_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
  }
  return ERR_OK;                       /* OK */
     cb8:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:409
}
     cba:	1c18      	adds	r0, r3, #0
     cbc:	46bd      	mov	sp, r7
     cbe:	b004      	add	sp, #16
     cc0:	bd80      	pop	{r7, pc}
     cc2:	46c0      	nop			; (mov r8, r8)
     cc4:	4003b000 	.word	0x4003b000

00000cc8 <AdcLdd1_GetCalibrationResultStatus>:
AdcLdd1_GetCalibrationResultStatus():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:497
**                           ERR_FAILED - Last calibration hasn't been
**                           finished correctly
*/
/* ===================================================================*/
LDD_TError AdcLdd1_GetCalibrationResultStatus(LDD_TDeviceData *DeviceDataPtr)
{
     cc8:	b580      	push	{r7, lr}
     cca:	b084      	sub	sp, #16
     ccc:	af00      	add	r7, sp, #0
     cce:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:501
  uint32_t GainValue;

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (ADC_PDD_GetCalibrationFailedStatusFlag(ADC0_BASE_PTR)) {
     cd0:	4b2a      	ldr	r3, [pc, #168]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     cd2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
     cd4:	2340      	movs	r3, #64	; 0x40
     cd6:	4013      	ands	r3, r2
     cd8:	d001      	beq.n	cde <AdcLdd1_GetCalibrationResultStatus+0x16>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:502
    return ERR_FAILED;
     cda:	231b      	movs	r3, #27
     cdc:	e04a      	b.n	d74 <AdcLdd1_GetCalibrationResultStatus+0xac>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:506
  }
  /* If calibration is successfully passed place calibrated value into gain registers */
  /* Cumulated gradually because of undefined behavior: the order of volatile accesses is undefined in this statement */
  GainValue = ADC_PDD_GetPlus0CalibrationValue(ADC0_BASE_PTR); /* Find plus gain value */
     cde:	4b27      	ldr	r3, [pc, #156]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     ce0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
     ce2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:507
  GainValue += ADC_PDD_GetPlus1CalibrationValue(ADC0_BASE_PTR);
     ce4:	4b25      	ldr	r3, [pc, #148]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     ce6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
     ce8:	68fa      	ldr	r2, [r7, #12]
     cea:	18d3      	adds	r3, r2, r3
     cec:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:508
  GainValue += ADC_PDD_GetPlus2CalibrationValue(ADC0_BASE_PTR);
     cee:	4b23      	ldr	r3, [pc, #140]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     cf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
     cf2:	68fa      	ldr	r2, [r7, #12]
     cf4:	18d3      	adds	r3, r2, r3
     cf6:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:509
  GainValue += ADC_PDD_GetPlus3CalibrationValue(ADC0_BASE_PTR);
     cf8:	4b20      	ldr	r3, [pc, #128]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     cfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
     cfc:	68fa      	ldr	r2, [r7, #12]
     cfe:	18d3      	adds	r3, r2, r3
     d00:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:510
  GainValue += ADC_PDD_GetPlus4CalibrationValue(ADC0_BASE_PTR);
     d02:	4b1e      	ldr	r3, [pc, #120]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
     d06:	68fa      	ldr	r2, [r7, #12]
     d08:	18d3      	adds	r3, r2, r3
     d0a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:511
  GainValue += ADC_PDD_GetPlusSCalibrationValue(ADC0_BASE_PTR);
     d0c:	4b1b      	ldr	r3, [pc, #108]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
     d10:	68fa      	ldr	r2, [r7, #12]
     d12:	18d3      	adds	r3, r2, r3
     d14:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:512
  GainValue = (GainValue >> 1U) | 0x8000U;
     d16:	68fb      	ldr	r3, [r7, #12]
     d18:	085b      	lsrs	r3, r3, #1
     d1a:	2280      	movs	r2, #128	; 0x80
     d1c:	0212      	lsls	r2, r2, #8
     d1e:	4313      	orrs	r3, r2
     d20:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:513
  ADC_PDD_SetPlusGainValue(ADC0_BASE_PTR,GainValue); /* Set plus gain value */
     d22:	4b16      	ldr	r3, [pc, #88]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d24:	68fa      	ldr	r2, [r7, #12]
     d26:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:514
  GainValue = ADC_PDD_GetMinus0CalibrationValue(ADC0_BASE_PTR); /* Find minus gain value */
     d28:	4b14      	ldr	r3, [pc, #80]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d2a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
     d2c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:515
  GainValue += ADC_PDD_GetMinus1CalibrationValue(ADC0_BASE_PTR);
     d2e:	4b13      	ldr	r3, [pc, #76]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d30:	6e9b      	ldr	r3, [r3, #104]	; 0x68
     d32:	68fa      	ldr	r2, [r7, #12]
     d34:	18d3      	adds	r3, r2, r3
     d36:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:516
  GainValue += ADC_PDD_GetMinus2CalibrationValue(ADC0_BASE_PTR);
     d38:	4b10      	ldr	r3, [pc, #64]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d3a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
     d3c:	68fa      	ldr	r2, [r7, #12]
     d3e:	18d3      	adds	r3, r2, r3
     d40:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:517
  GainValue += ADC_PDD_GetMinus3CalibrationValue(ADC0_BASE_PTR);
     d42:	4b0e      	ldr	r3, [pc, #56]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d44:	6e1b      	ldr	r3, [r3, #96]	; 0x60
     d46:	68fa      	ldr	r2, [r7, #12]
     d48:	18d3      	adds	r3, r2, r3
     d4a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:518
  GainValue += ADC_PDD_GetMinus4CalibrationValue(ADC0_BASE_PTR);
     d4c:	4b0b      	ldr	r3, [pc, #44]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d4e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
     d50:	68fa      	ldr	r2, [r7, #12]
     d52:	18d3      	adds	r3, r2, r3
     d54:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:519
  GainValue += ADC_PDD_GetMinusSCalibrationValue(ADC0_BASE_PTR);
     d56:	4b09      	ldr	r3, [pc, #36]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d58:	6d9b      	ldr	r3, [r3, #88]	; 0x58
     d5a:	68fa      	ldr	r2, [r7, #12]
     d5c:	18d3      	adds	r3, r2, r3
     d5e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:520
  GainValue =  (GainValue >> 1U) | 0x8000U;
     d60:	68fb      	ldr	r3, [r7, #12]
     d62:	085b      	lsrs	r3, r3, #1
     d64:	2280      	movs	r2, #128	; 0x80
     d66:	0212      	lsls	r2, r2, #8
     d68:	4313      	orrs	r3, r2
     d6a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:521
  ADC_PDD_SetMinusGainValue(ADC0_BASE_PTR,GainValue); /* Set minus gain value */
     d6c:	4b03      	ldr	r3, [pc, #12]	; (d7c <AdcLdd1_GetCalibrationResultStatus+0xb4>)
     d6e:	68fa      	ldr	r2, [r7, #12]
     d70:	631a      	str	r2, [r3, #48]	; 0x30
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:522
  return ERR_OK;
     d72:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:523
}
     d74:	1c18      	adds	r0, r3, #0
     d76:	46bd      	mov	sp, r7
     d78:	b004      	add	sp, #16
     d7a:	bd80      	pop	{r7, pc}
     d7c:	4003b000 	.word	0x4003b000

00000d80 <AdcLdd1_MeasurementCompleteInterrupt>:
AdcLdd1_MeasurementCompleteInterrupt():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:535
**         Measurement complete interrupt handler
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(AdcLdd1_MeasurementCompleteInterrupt)
{
     d80:	b580      	push	{r7, lr}
     d82:	b082      	sub	sp, #8
     d84:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:537
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  AdcLdd1_TDeviceDataPtr DeviceDataPrv = INT_ADC0__DEFAULT_RTOS_ISRPARAM;
     d86:	4b08      	ldr	r3, [pc, #32]	; (da8 <AdcLdd1_MeasurementCompleteInterrupt+0x28>)
     d88:	681b      	ldr	r3, [r3, #0]
     d8a:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:538
  DeviceDataPrv->CompleteStatus = TRUE; /* Set measurement complete status flag */
     d8c:	687b      	ldr	r3, [r7, #4]
     d8e:	2201      	movs	r2, #1
     d90:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:539
  AdcLdd1_OnMeasurementComplete(DeviceDataPrv->UserData);
     d92:	687b      	ldr	r3, [r7, #4]
     d94:	685b      	ldr	r3, [r3, #4]
     d96:	1c18      	adds	r0, r3, #0
     d98:	f000 fa50 	bl	123c <AdcLdd1_OnMeasurementComplete>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:540
  (void)ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, 0U); /* Clear conversion complete flag */
     d9c:	4b03      	ldr	r3, [pc, #12]	; (dac <AdcLdd1_MeasurementCompleteInterrupt+0x2c>)
     d9e:	691b      	ldr	r3, [r3, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:541
}
     da0:	46bd      	mov	sp, r7
     da2:	b002      	add	sp, #8
     da4:	bd80      	pop	{r7, pc}
     da6:	46c0      	nop			; (mov r8, r8)
     da8:	1ffff08c 	.word	0x1ffff08c
     dac:	4003b000 	.word	0x4003b000

00000db0 <BitIoLdd1_Init>:
BitIoLdd1_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:123
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd1_Init(LDD_TUserData *UserDataPtr)
{
     db0:	b580      	push	{r7, lr}
     db2:	b084      	sub	sp, #16
     db4:	af00      	add	r7, sp, #0
     db6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:128
  /* Allocate device structure */
  BitIoLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
     db8:	4b10      	ldr	r3, [pc, #64]	; (dfc <BitIoLdd1_Init+0x4c>)
     dba:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:129
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
     dbc:	68fb      	ldr	r3, [r7, #12]
     dbe:	687a      	ldr	r2, [r7, #4]
     dc0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:132
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x80 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x80);
     dc2:	4b0f      	ldr	r3, [pc, #60]	; (e00 <BitIoLdd1_Init+0x50>)
     dc4:	4a0e      	ldr	r2, [pc, #56]	; (e00 <BitIoLdd1_Init+0x50>)
     dc6:	6952      	ldr	r2, [r2, #20]
     dc8:	2180      	movs	r1, #128	; 0x80
     dca:	430a      	orrs	r2, r1
     dcc:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:135
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x80 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x80));
     dce:	4b0c      	ldr	r3, [pc, #48]	; (e00 <BitIoLdd1_Init+0x50>)
     dd0:	4a0b      	ldr	r2, [pc, #44]	; (e00 <BitIoLdd1_Init+0x50>)
     dd2:	6812      	ldr	r2, [r2, #0]
     dd4:	2180      	movs	r1, #128	; 0x80
     dd6:	438a      	bics	r2, r1
     dd8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:138
  /* Initialization of Port Control register */
  /* PORTD_PCR7: ISF=0,MUX=1 */
  PORTD_PCR7 = (uint32_t)((PORTD_PCR7 & (uint32_t)~(uint32_t)(
     dda:	4b0a      	ldr	r3, [pc, #40]	; (e04 <BitIoLdd1_Init+0x54>)
     ddc:	4a09      	ldr	r2, [pc, #36]	; (e04 <BitIoLdd1_Init+0x54>)
     dde:	69d1      	ldr	r1, [r2, #28]
     de0:	4a09      	ldr	r2, [pc, #36]	; (e08 <BitIoLdd1_Init+0x58>)
     de2:	400a      	ands	r2, r1
     de4:	2180      	movs	r1, #128	; 0x80
     de6:	0049      	lsls	r1, r1, #1
     de8:	430a      	orrs	r2, r1
     dea:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:145
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd1_ID,DeviceDataPrv);
     dec:	4b07      	ldr	r3, [pc, #28]	; (e0c <BitIoLdd1_Init+0x5c>)
     dee:	68fa      	ldr	r2, [r7, #12]
     df0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:146
  return ((LDD_TDeviceData *)DeviceDataPrv);
     df2:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:147
}
     df4:	1c18      	adds	r0, r3, #0
     df6:	46bd      	mov	sp, r7
     df8:	b004      	add	sp, #16
     dfa:	bd80      	pop	{r7, pc}
     dfc:	1ffff090 	.word	0x1ffff090
     e00:	400ff0c0 	.word	0x400ff0c0
     e04:	4004c000 	.word	0x4004c000
     e08:	fefff8ff 	.word	0xfefff8ff
     e0c:	1ffff0a8 	.word	0x1ffff0a8

00000e10 <BitIoLdd1_GetVal>:
BitIoLdd1_GetVal():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:169
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd1_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
     e10:	b580      	push	{r7, lr}
     e12:	b084      	sub	sp, #16
     e14:	af00      	add	r7, sp, #0
     e16:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:173
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataOutput(BitIoLdd1_MODULE_BASE_ADDRESS) & BitIoLdd1_PORT_MASK;
     e18:	4b06      	ldr	r3, [pc, #24]	; (e34 <BitIoLdd1_GetVal+0x24>)
     e1a:	681a      	ldr	r2, [r3, #0]
     e1c:	2380      	movs	r3, #128	; 0x80
     e1e:	4013      	ands	r3, r2
     e20:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:174
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
     e22:	68fb      	ldr	r3, [r7, #12]
     e24:	1e5a      	subs	r2, r3, #1
     e26:	4193      	sbcs	r3, r2
     e28:	b2db      	uxtb	r3, r3
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:175
}
     e2a:	1c18      	adds	r0, r3, #0
     e2c:	46bd      	mov	sp, r7
     e2e:	b004      	add	sp, #16
     e30:	bd80      	pop	{r7, pc}
     e32:	46c0      	nop			; (mov r8, r8)
     e34:	f80ff0c0 	.word	0xf80ff0c0

00000e38 <BitIoLdd1_ClrVal>:
BitIoLdd1_ClrVal():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:226
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
     e38:	b580      	push	{r7, lr}
     e3a:	b082      	sub	sp, #8
     e3c:	af00      	add	r7, sp, #0
     e3e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:228
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
     e40:	4b02      	ldr	r3, [pc, #8]	; (e4c <BitIoLdd1_ClrVal+0x14>)
     e42:	2280      	movs	r2, #128	; 0x80
     e44:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:229
}
     e46:	46bd      	mov	sp, r7
     e48:	b002      	add	sp, #8
     e4a:	bd80      	pop	{r7, pc}
     e4c:	f80ff0c0 	.word	0xf80ff0c0

00000e50 <BitIoLdd1_SetVal>:
BitIoLdd1_SetVal():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:246
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
     e50:	b580      	push	{r7, lr}
     e52:	b082      	sub	sp, #8
     e54:	af00      	add	r7, sp, #0
     e56:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:248
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
     e58:	4b02      	ldr	r3, [pc, #8]	; (e64 <BitIoLdd1_SetVal+0x14>)
     e5a:	2280      	movs	r2, #128	; 0x80
     e5c:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:249
}
     e5e:	46bd      	mov	sp, r7
     e60:	b002      	add	sp, #8
     e62:	bd80      	pop	{r7, pc}
     e64:	f80ff0c0 	.word	0xf80ff0c0

00000e68 <BitIoLdd2_Init>:
BitIoLdd2_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:123
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd2_Init(LDD_TUserData *UserDataPtr)
{
     e68:	b580      	push	{r7, lr}
     e6a:	b084      	sub	sp, #16
     e6c:	af00      	add	r7, sp, #0
     e6e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:128
  /* Allocate device structure */
  BitIoLdd2_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
     e70:	4b10      	ldr	r3, [pc, #64]	; (eb4 <BitIoLdd2_Init+0x4c>)
     e72:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:129
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
     e74:	68fb      	ldr	r3, [r7, #12]
     e76:	687a      	ldr	r2, [r7, #4]
     e78:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:132
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=2 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x02);
     e7a:	4b0f      	ldr	r3, [pc, #60]	; (eb8 <BitIoLdd2_Init+0x50>)
     e7c:	4a0e      	ldr	r2, [pc, #56]	; (eb8 <BitIoLdd2_Init+0x50>)
     e7e:	6952      	ldr	r2, [r2, #20]
     e80:	2102      	movs	r1, #2
     e82:	430a      	orrs	r2, r1
     e84:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:135
  /* Set initialization value */
  /* GPIOE_PDOR: PDO&=~2 */
  GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x02));
     e86:	4b0c      	ldr	r3, [pc, #48]	; (eb8 <BitIoLdd2_Init+0x50>)
     e88:	4a0b      	ldr	r2, [pc, #44]	; (eb8 <BitIoLdd2_Init+0x50>)
     e8a:	6812      	ldr	r2, [r2, #0]
     e8c:	2102      	movs	r1, #2
     e8e:	438a      	bics	r2, r1
     e90:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:138
  /* Initialization of Port Control register */
  /* PORTE_PCR1: ISF=0,MUX=1 */
  PORTE_PCR1 = (uint32_t)((PORTE_PCR1 & (uint32_t)~(uint32_t)(
     e92:	4b0a      	ldr	r3, [pc, #40]	; (ebc <BitIoLdd2_Init+0x54>)
     e94:	4a09      	ldr	r2, [pc, #36]	; (ebc <BitIoLdd2_Init+0x54>)
     e96:	6851      	ldr	r1, [r2, #4]
     e98:	4a09      	ldr	r2, [pc, #36]	; (ec0 <BitIoLdd2_Init+0x58>)
     e9a:	400a      	ands	r2, r1
     e9c:	2180      	movs	r1, #128	; 0x80
     e9e:	0049      	lsls	r1, r1, #1
     ea0:	430a      	orrs	r2, r1
     ea2:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:145
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd2_ID,DeviceDataPrv);
     ea4:	4b07      	ldr	r3, [pc, #28]	; (ec4 <BitIoLdd2_Init+0x5c>)
     ea6:	68fa      	ldr	r2, [r7, #12]
     ea8:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:146
  return ((LDD_TDeviceData *)DeviceDataPrv);
     eaa:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:147
}
     eac:	1c18      	adds	r0, r3, #0
     eae:	46bd      	mov	sp, r7
     eb0:	b004      	add	sp, #16
     eb2:	bd80      	pop	{r7, pc}
     eb4:	1ffff094 	.word	0x1ffff094
     eb8:	400ff100 	.word	0x400ff100
     ebc:	4004d000 	.word	0x4004d000
     ec0:	fefff8ff 	.word	0xfefff8ff
     ec4:	1ffff0a8 	.word	0x1ffff0a8

00000ec8 <BitIoLdd2_ClrVal>:
BitIoLdd2_ClrVal():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:226
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
     ec8:	b580      	push	{r7, lr}
     eca:	b082      	sub	sp, #8
     ecc:	af00      	add	r7, sp, #0
     ece:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:228
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
     ed0:	4b02      	ldr	r3, [pc, #8]	; (edc <BitIoLdd2_ClrVal+0x14>)
     ed2:	2202      	movs	r2, #2
     ed4:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:229
}
     ed6:	46bd      	mov	sp, r7
     ed8:	b002      	add	sp, #8
     eda:	bd80      	pop	{r7, pc}
     edc:	f80ff100 	.word	0xf80ff100

00000ee0 <BitIoLdd2_SetVal>:
BitIoLdd2_SetVal():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:246
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
     ee0:	b580      	push	{r7, lr}
     ee2:	b082      	sub	sp, #8
     ee4:	af00      	add	r7, sp, #0
     ee6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:248
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
     ee8:	4b02      	ldr	r3, [pc, #8]	; (ef4 <BitIoLdd2_SetVal+0x14>)
     eea:	2202      	movs	r2, #2
     eec:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:249
}
     eee:	46bd      	mov	sp, r7
     ef0:	b002      	add	sp, #8
     ef2:	bd80      	pop	{r7, pc}
     ef4:	f80ff100 	.word	0xf80ff100

00000ef8 <BitIoLdd3_Init>:
BitIoLdd3_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:123
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd3_Init(LDD_TUserData *UserDataPtr)
{
     ef8:	b580      	push	{r7, lr}
     efa:	b084      	sub	sp, #16
     efc:	af00      	add	r7, sp, #0
     efe:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:128
  /* Allocate device structure */
  BitIoLdd3_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
     f00:	4b10      	ldr	r3, [pc, #64]	; (f44 <BitIoLdd3_Init+0x4c>)
     f02:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:129
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
     f04:	68fb      	ldr	r3, [r7, #12]
     f06:	687a      	ldr	r2, [r7, #4]
     f08:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:132
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=1 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x01);
     f0a:	4b0f      	ldr	r3, [pc, #60]	; (f48 <BitIoLdd3_Init+0x50>)
     f0c:	4a0e      	ldr	r2, [pc, #56]	; (f48 <BitIoLdd3_Init+0x50>)
     f0e:	6952      	ldr	r2, [r2, #20]
     f10:	2101      	movs	r1, #1
     f12:	430a      	orrs	r2, r1
     f14:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:135
  /* Set initialization value */
  /* GPIOB_PDOR: PDO|=1 */
  GPIOB_PDOR |= GPIO_PDOR_PDO(0x01);
     f16:	4b0c      	ldr	r3, [pc, #48]	; (f48 <BitIoLdd3_Init+0x50>)
     f18:	4a0b      	ldr	r2, [pc, #44]	; (f48 <BitIoLdd3_Init+0x50>)
     f1a:	6812      	ldr	r2, [r2, #0]
     f1c:	2101      	movs	r1, #1
     f1e:	430a      	orrs	r2, r1
     f20:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:138
  /* Initialization of Port Control register */
  /* PORTB_PCR0: ISF=0,MUX=1 */
  PORTB_PCR0 = (uint32_t)((PORTB_PCR0 & (uint32_t)~(uint32_t)(
     f22:	4b0a      	ldr	r3, [pc, #40]	; (f4c <BitIoLdd3_Init+0x54>)
     f24:	4a09      	ldr	r2, [pc, #36]	; (f4c <BitIoLdd3_Init+0x54>)
     f26:	6811      	ldr	r1, [r2, #0]
     f28:	4a09      	ldr	r2, [pc, #36]	; (f50 <BitIoLdd3_Init+0x58>)
     f2a:	400a      	ands	r2, r1
     f2c:	2180      	movs	r1, #128	; 0x80
     f2e:	0049      	lsls	r1, r1, #1
     f30:	430a      	orrs	r2, r1
     f32:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:145
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd3_ID,DeviceDataPrv);
     f34:	4b07      	ldr	r3, [pc, #28]	; (f54 <BitIoLdd3_Init+0x5c>)
     f36:	68fa      	ldr	r2, [r7, #12]
     f38:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:146
  return ((LDD_TDeviceData *)DeviceDataPrv);
     f3a:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:147
}
     f3c:	1c18      	adds	r0, r3, #0
     f3e:	46bd      	mov	sp, r7
     f40:	b004      	add	sp, #16
     f42:	bd80      	pop	{r7, pc}
     f44:	1ffff098 	.word	0x1ffff098
     f48:	400ff040 	.word	0x400ff040
     f4c:	4004a000 	.word	0x4004a000
     f50:	fefff8ff 	.word	0xfefff8ff
     f54:	1ffff0a8 	.word	0x1ffff0a8

00000f58 <TimerIntLdd1_OnInterrupt>:
TimerIntLdd1_OnInterrupt():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ClockInterruption.c:186
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TimerIntLdd1_OnInterrupt(LDD_TUserData *UserDataPtr)
{
     f58:	b580      	push	{r7, lr}
     f5a:	b082      	sub	sp, #8
     f5c:	af00      	add	r7, sp, #0
     f5e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ClockInterruption.c:188
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  ClockInterruption_OnInterrupt();     /* Invoke OnInterrupt event */
     f60:	f7ff fb76 	bl	650 <ClockInterruption_OnInterrupt>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ClockInterruption.c:189
}
     f64:	46bd      	mov	sp, r7
     f66:	b002      	add	sp, #8
     f68:	bd80      	pop	{r7, pc}
     f6a:	46c0      	nop			; (mov r8, r8)

00000f6c <Cpu_INT_NMIInterrupt>:
Cpu_INT_NMIInterrupt():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:284
**         This ISR services the Non Maskable Interrupt interrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(Cpu_INT_NMIInterrupt)
{
     f6c:	b580      	push	{r7, lr}
     f6e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:285
  Cpu_OnNMIINT();
     f70:	f7ff fb6a 	bl	648 <Cpu_OnNMIINT>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:286
}
     f74:	46bd      	mov	sp, r7
     f76:	bd80      	pop	{r7, pc}

00000f78 <Cpu_Interrupt>:
Cpu_Interrupt():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:298
**         This ISR services an unused interrupt/exception vector.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(Cpu_Interrupt)
{
     f78:	b580      	push	{r7, lr}
     f7a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:300
  /* This code can be changed using the CPU component property "Build Options / Unhandled int code" */
  PE_DEBUGHALT();
     f7c:	beff      	bkpt	0x00ff
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:301
}
     f7e:	46bd      	mov	sp, r7
     f80:	bd80      	pop	{r7, pc}
     f82:	46c0      	nop			; (mov r8, r8)

00000f84 <__init_hardware>:
__init_hardware():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:309
/*** !!! Here you can place your own code using property "User data declarations" on the build options tab. !!! ***/

/*lint -esym(765,__init_hardware) Disable MISRA rule (8.10) checking for symbols (__init_hardware). The function is linked to the EWL library */
/*lint -esym(765,Cpu_Interrupt) Disable MISRA rule (8.10) checking for symbols (Cpu_Interrupt). */
void __init_hardware(void)
{
     f84:	b580      	push	{r7, lr}
     f86:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:315

  /*** !!! Here you can place your own code before PE initialization using property "User code before PE initialization" on the build options tab. !!! ***/

  /*** ### MKL25Z128VLK4 "Cpu" init code ... ***/
  /*** PE initialization code after reset ***/
  SCB_VTOR = (uint32_t)(&__vect_table); /* Set the interrupt vector table position */
     f88:	4a36      	ldr	r2, [pc, #216]	; (1064 <__init_hardware+0xe0>)
     f8a:	4937      	ldr	r1, [pc, #220]	; (1068 <__init_hardware+0xe4>)
     f8c:	4b37      	ldr	r3, [pc, #220]	; (106c <__init_hardware+0xe8>)
     f8e:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:318
  /* Disable the WDOG module */
  /* SIM_COPC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COPT=0,COPCLKS=0,COPW=0 */
  SIM_COPC = SIM_COPC_COPT(0x00);
     f90:	4a37      	ldr	r2, [pc, #220]	; (1070 <__init_hardware+0xec>)
     f92:	2388      	movs	r3, #136	; 0x88
     f94:	015b      	lsls	r3, r3, #5
     f96:	2100      	movs	r1, #0
     f98:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:322

  /* System clock initialization */
  /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescalers to safe value */
     f9a:	4a35      	ldr	r2, [pc, #212]	; (1070 <__init_hardware+0xec>)
     f9c:	4b35      	ldr	r3, [pc, #212]	; (1074 <__init_hardware+0xf0>)
     f9e:	21c0      	movs	r1, #192	; 0xc0
     fa0:	0289      	lsls	r1, r1, #10
     fa2:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:324
  /* SIM_SCGC5: PORTE=1,PORTD=1,PORTB=1,PORTA=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK |
     fa4:	4a32      	ldr	r2, [pc, #200]	; (1070 <__init_hardware+0xec>)
     fa6:	4932      	ldr	r1, [pc, #200]	; (1070 <__init_hardware+0xec>)
     fa8:	4b33      	ldr	r3, [pc, #204]	; (1078 <__init_hardware+0xf4>)
     faa:	58cb      	ldr	r3, [r1, r3]
     fac:	21d8      	movs	r1, #216	; 0xd8
     fae:	0189      	lsls	r1, r1, #6
     fb0:	4319      	orrs	r1, r3
     fb2:	4b31      	ldr	r3, [pc, #196]	; (1078 <__init_hardware+0xf4>)
     fb4:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:328
               SIM_SCGC5_PORTD_MASK |
               SIM_SCGC5_PORTB_MASK |
               SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
  if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
     fb6:	4b31      	ldr	r3, [pc, #196]	; (107c <__init_hardware+0xf8>)
     fb8:	789b      	ldrb	r3, [r3, #2]
     fba:	b2db      	uxtb	r3, r3
     fbc:	1c1a      	adds	r2, r3, #0
     fbe:	2308      	movs	r3, #8
     fc0:	4013      	ands	r3, r2
     fc2:	d007      	beq.n	fd4 <__init_hardware+0x50>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:330
    /* PMC_REGSC: ACKISO=1 */
    PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
     fc4:	4b2d      	ldr	r3, [pc, #180]	; (107c <__init_hardware+0xf8>)
     fc6:	4a2d      	ldr	r2, [pc, #180]	; (107c <__init_hardware+0xf8>)
     fc8:	7892      	ldrb	r2, [r2, #2]
     fca:	b2d2      	uxtb	r2, r2
     fcc:	2108      	movs	r1, #8
     fce:	430a      	orrs	r2, r1
     fd0:	b2d2      	uxtb	r2, r2
     fd2:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:333
  }
  /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x00)); /* Update system prescalers */
     fd4:	4a26      	ldr	r2, [pc, #152]	; (1070 <__init_hardware+0xec>)
     fd6:	4b27      	ldr	r3, [pc, #156]	; (1074 <__init_hardware+0xf0>)
     fd8:	2100      	movs	r1, #0
     fda:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:335
  /* SIM_SOPT2: ??=0,PLLFLLSEL=0 */
  SIM_SOPT2 &= (uint32_t)~(uint32_t)((SIM_SOPT2_PLLFLLSEL_MASK | 0x00020000U)); /* Select FLL as a clock source for various peripherals */
     fdc:	4a24      	ldr	r2, [pc, #144]	; (1070 <__init_hardware+0xec>)
     fde:	4924      	ldr	r1, [pc, #144]	; (1070 <__init_hardware+0xec>)
     fe0:	4b27      	ldr	r3, [pc, #156]	; (1080 <__init_hardware+0xfc>)
     fe2:	58c9      	ldr	r1, [r1, r3]
     fe4:	4b27      	ldr	r3, [pc, #156]	; (1084 <__init_hardware+0x100>)
     fe6:	4019      	ands	r1, r3
     fe8:	4b25      	ldr	r3, [pc, #148]	; (1080 <__init_hardware+0xfc>)
     fea:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:337
  /* SIM_SOPT1: OSC32KSEL=3 */
  SIM_SOPT1 |= SIM_SOPT1_OSC32KSEL(0x03); /* LPO 1kHz oscillator drives 32 kHz clock for various peripherals */
     fec:	4b20      	ldr	r3, [pc, #128]	; (1070 <__init_hardware+0xec>)
     fee:	4a20      	ldr	r2, [pc, #128]	; (1070 <__init_hardware+0xec>)
     ff0:	6812      	ldr	r2, [r2, #0]
     ff2:	21c0      	movs	r1, #192	; 0xc0
     ff4:	0309      	lsls	r1, r1, #12
     ff6:	430a      	orrs	r2, r1
     ff8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:339
  /* SIM_SOPT2: TPMSRC=1 */
  SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
     ffa:	4a1d      	ldr	r2, [pc, #116]	; (1070 <__init_hardware+0xec>)
     ffc:	491c      	ldr	r1, [pc, #112]	; (1070 <__init_hardware+0xec>)
     ffe:	4b20      	ldr	r3, [pc, #128]	; (1080 <__init_hardware+0xfc>)
    1000:	58c9      	ldr	r1, [r1, r3]
    1002:	4b21      	ldr	r3, [pc, #132]	; (1088 <__init_hardware+0x104>)
    1004:	400b      	ands	r3, r1
    1006:	2180      	movs	r1, #128	; 0x80
    1008:	0449      	lsls	r1, r1, #17
    100a:	4319      	orrs	r1, r3
    100c:	4b1c      	ldr	r3, [pc, #112]	; (1080 <__init_hardware+0xfc>)
    100e:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:346
              )) | (uint32_t)(
               SIM_SOPT2_TPMSRC(0x01)
              ));                      /* Set the TPM clock */
  /* Switch to FEI Mode */
  /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
  MCG_C1 = MCG_C1_CLKS(0x00) |
    1010:	4b1e      	ldr	r3, [pc, #120]	; (108c <__init_hardware+0x108>)
    1012:	2206      	movs	r2, #6
    1014:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:351
           MCG_C1_FRDIV(0x00) |
           MCG_C1_IREFS_MASK |
           MCG_C1_IRCLKEN_MASK;
  /* MCG_C2: LOCRE0=0,??=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
  MCG_C2 = MCG_C2_RANGE0(0x00);
    1016:	4b1d      	ldr	r3, [pc, #116]	; (108c <__init_hardware+0x108>)
    1018:	2200      	movs	r2, #0
    101a:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:353
  /* MCG_C4: DMX32=0,DRST_DRS=0 */
  MCG_C4 &= (uint8_t)~(uint8_t)((MCG_C4_DMX32_MASK | MCG_C4_DRST_DRS(0x03)));
    101c:	4b1b      	ldr	r3, [pc, #108]	; (108c <__init_hardware+0x108>)
    101e:	4a1b      	ldr	r2, [pc, #108]	; (108c <__init_hardware+0x108>)
    1020:	78d2      	ldrb	r2, [r2, #3]
    1022:	b2d1      	uxtb	r1, r2
    1024:	221f      	movs	r2, #31
    1026:	400a      	ands	r2, r1
    1028:	b2d2      	uxtb	r2, r2
    102a:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:355
  /* OSC0_CR: ERCLKEN=1,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
  OSC0_CR = OSC_CR_ERCLKEN_MASK;
    102c:	4b18      	ldr	r3, [pc, #96]	; (1090 <__init_hardware+0x10c>)
    102e:	2280      	movs	r2, #128	; 0x80
    1030:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:357
  /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
  MCG_C5 = MCG_C5_PRDIV0(0x00);
    1032:	4b16      	ldr	r3, [pc, #88]	; (108c <__init_hardware+0x108>)
    1034:	2200      	movs	r2, #0
    1036:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:359
  /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
  MCG_C6 = MCG_C6_VDIV0(0x00);
    1038:	4b14      	ldr	r3, [pc, #80]	; (108c <__init_hardware+0x108>)
    103a:	2200      	movs	r2, #0
    103c:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:360
  while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    103e:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:360 (discriminator 1)
    1040:	4b12      	ldr	r3, [pc, #72]	; (108c <__init_hardware+0x108>)
    1042:	799b      	ldrb	r3, [r3, #6]
    1044:	b2db      	uxtb	r3, r3
    1046:	1c1a      	adds	r2, r3, #0
    1048:	2310      	movs	r3, #16
    104a:	4013      	ands	r3, r2
    104c:	d0f8      	beq.n	1040 <__init_hardware+0xbc>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:362
  }
  while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
    104e:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:362 (discriminator 1)
    1050:	4b0e      	ldr	r3, [pc, #56]	; (108c <__init_hardware+0x108>)
    1052:	799b      	ldrb	r3, [r3, #6]
    1054:	b2db      	uxtb	r3, r3
    1056:	1c1a      	adds	r2, r3, #0
    1058:	230c      	movs	r3, #12
    105a:	4013      	ands	r3, r2
    105c:	d1f8      	bne.n	1050 <__init_hardware+0xcc>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:368
  }
  /*** End of PE initialization code after reset ***/

  /*** !!! Here you can place your own code after PE initialization using property "User code after PE initialization" on the build options tab. !!! ***/

}
    105e:	46bd      	mov	sp, r7
    1060:	bd80      	pop	{r7, pc}
    1062:	46c0      	nop			; (mov r8, r8)
    1064:	e000e000 	.word	0xe000e000
    1068:	00000000 	.word	0x00000000
    106c:	00000d08 	.word	0x00000d08
    1070:	40047000 	.word	0x40047000
    1074:	00001044 	.word	0x00001044
    1078:	00001038 	.word	0x00001038
    107c:	4007d000 	.word	0x4007d000
    1080:	00001004 	.word	0x00001004
    1084:	fffcffff 	.word	0xfffcffff
    1088:	fcffffff 	.word	0xfcffffff
    108c:	40064000 	.word	0x40064000
    1090:	40065000 	.word	0x40065000

00001094 <PE_low_level_init>:
PE_low_level_init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:384
**         application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void PE_low_level_init(void)
{
    1094:	b580      	push	{r7, lr}
    1096:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:390
  #ifdef PEX_RTOS_INIT
    PEX_RTOS_INIT();                   /* Initialization of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
      /* Initialization of the SIM module */
  /* PORTA_PCR4: ISF=0,MUX=7 */
  PORTA_PCR4 = (uint32_t)((PORTA_PCR4 & (uint32_t)~(uint32_t)(
    1098:	4b30      	ldr	r3, [pc, #192]	; (115c <PE_low_level_init+0xc8>)
    109a:	4a30      	ldr	r2, [pc, #192]	; (115c <PE_low_level_init+0xc8>)
    109c:	6911      	ldr	r1, [r2, #16]
    109e:	4a30      	ldr	r2, [pc, #192]	; (1160 <PE_low_level_init+0xcc>)
    10a0:	400a      	ands	r2, r1
    10a2:	21e0      	movs	r1, #224	; 0xe0
    10a4:	00c9      	lsls	r1, r1, #3
    10a6:	430a      	orrs	r2, r1
    10a8:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:397
               )) | (uint32_t)(
                PORT_PCR_MUX(0x07)
               ));
        /* Initialization of the RCM module */
  /* RCM_RPFW: RSTFLTSEL=0 */
  RCM_RPFW &= (uint8_t)~(uint8_t)(RCM_RPFW_RSTFLTSEL(0x1F));
    10aa:	4b2e      	ldr	r3, [pc, #184]	; (1164 <PE_low_level_init+0xd0>)
    10ac:	4a2d      	ldr	r2, [pc, #180]	; (1164 <PE_low_level_init+0xd0>)
    10ae:	7952      	ldrb	r2, [r2, #5]
    10b0:	b2d2      	uxtb	r2, r2
    10b2:	211f      	movs	r1, #31
    10b4:	438a      	bics	r2, r1
    10b6:	b2d2      	uxtb	r2, r2
    10b8:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:399
  /* RCM_RPFC: RSTFLTSS=0,RSTFLTSRW=0 */
  RCM_RPFC &= (uint8_t)~(uint8_t)(
    10ba:	4b2a      	ldr	r3, [pc, #168]	; (1164 <PE_low_level_init+0xd0>)
    10bc:	4a29      	ldr	r2, [pc, #164]	; (1164 <PE_low_level_init+0xd0>)
    10be:	7912      	ldrb	r2, [r2, #4]
    10c0:	b2d2      	uxtb	r2, r2
    10c2:	2107      	movs	r1, #7
    10c4:	438a      	bics	r2, r1
    10c6:	b2d2      	uxtb	r2, r2
    10c8:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:406
               RCM_RPFC_RSTFLTSRW(0x03)
              );
        /* Initialization of the FTFL_FlashConfig module */
      /* Initialization of the PMC module */
  /* PMC_LVDSC1: LVDACK=1,LVDIE=0,LVDRE=1,LVDV=0 */
  PMC_LVDSC1 = (uint8_t)((PMC_LVDSC1 & (uint8_t)~(uint8_t)(
    10ca:	4b27      	ldr	r3, [pc, #156]	; (1168 <PE_low_level_init+0xd4>)
    10cc:	4a26      	ldr	r2, [pc, #152]	; (1168 <PE_low_level_init+0xd4>)
    10ce:	7812      	ldrb	r2, [r2, #0]
    10d0:	b2d2      	uxtb	r2, r2
    10d2:	b2d2      	uxtb	r2, r2
    10d4:	2173      	movs	r1, #115	; 0x73
    10d6:	438a      	bics	r2, r1
    10d8:	b2d2      	uxtb	r2, r2
    10da:	2150      	movs	r1, #80	; 0x50
    10dc:	430a      	orrs	r2, r1
    10de:	b2d2      	uxtb	r2, r2
    10e0:	b2d2      	uxtb	r2, r2
    10e2:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:414
               )) | (uint8_t)(
                PMC_LVDSC1_LVDACK_MASK |
                PMC_LVDSC1_LVDRE_MASK
               ));
  /* PMC_LVDSC2: LVWACK=1,LVWIE=0,LVWV=0 */
  PMC_LVDSC2 = (uint8_t)((PMC_LVDSC2 & (uint8_t)~(uint8_t)(
    10e4:	4b20      	ldr	r3, [pc, #128]	; (1168 <PE_low_level_init+0xd4>)
    10e6:	4a20      	ldr	r2, [pc, #128]	; (1168 <PE_low_level_init+0xd4>)
    10e8:	7852      	ldrb	r2, [r2, #1]
    10ea:	b2d2      	uxtb	r2, r2
    10ec:	b2d2      	uxtb	r2, r2
    10ee:	2163      	movs	r1, #99	; 0x63
    10f0:	438a      	bics	r2, r1
    10f2:	b2d2      	uxtb	r2, r2
    10f4:	2140      	movs	r1, #64	; 0x40
    10f6:	430a      	orrs	r2, r1
    10f8:	b2d2      	uxtb	r2, r2
    10fa:	b2d2      	uxtb	r2, r2
    10fc:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:421
                PMC_LVDSC2_LVWV(0x03)
               )) | (uint8_t)(
                PMC_LVDSC2_LVWACK_MASK
               ));
  /* PMC_REGSC: BGEN=0,ACKISO=0,BGBE=0 */
  PMC_REGSC &= (uint8_t)~(uint8_t)(
    10fe:	4b1a      	ldr	r3, [pc, #104]	; (1168 <PE_low_level_init+0xd4>)
    1100:	4a19      	ldr	r2, [pc, #100]	; (1168 <PE_low_level_init+0xd4>)
    1102:	7892      	ldrb	r2, [r2, #2]
    1104:	b2d2      	uxtb	r2, r2
    1106:	2119      	movs	r1, #25
    1108:	438a      	bics	r2, r1
    110a:	b2d2      	uxtb	r2, r2
    110c:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:427
                PMC_REGSC_BGEN_MASK |
                PMC_REGSC_ACKISO_MASK |
                PMC_REGSC_BGBE_MASK
               );
  /* SMC_PMPROT: ??=0,??=0,AVLP=0,??=0,ALLS=0,??=0,AVLLS=0,??=0 */
  SMC_PMPROT = 0x00U;                  /* Setup Power mode protection register */
    110e:	4b17      	ldr	r3, [pc, #92]	; (116c <PE_low_level_init+0xd8>)
    1110:	2200      	movs	r2, #0
    1112:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:430
  /* Common initialization of the CPU registers */
  /* PORTA_PCR20: ISF=0,MUX=7 */
  PORTA_PCR20 = (uint32_t)((PORTA_PCR20 & (uint32_t)~(uint32_t)(
    1114:	4b11      	ldr	r3, [pc, #68]	; (115c <PE_low_level_init+0xc8>)
    1116:	4a11      	ldr	r2, [pc, #68]	; (115c <PE_low_level_init+0xc8>)
    1118:	6d11      	ldr	r1, [r2, #80]	; 0x50
    111a:	4a11      	ldr	r2, [pc, #68]	; (1160 <PE_low_level_init+0xcc>)
    111c:	400a      	ands	r2, r1
    111e:	21e0      	movs	r1, #224	; 0xe0
    1120:	00c9      	lsls	r1, r1, #3
    1122:	430a      	orrs	r2, r1
    1124:	651a      	str	r2, [r3, #80]	; 0x50
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:436
                 PORT_PCR_ISF_MASK
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x07)
                ));
  /* NVIC_IPR1: PRI_6=0 */
  NVIC_IPR1 &= (uint32_t)~(uint32_t)(NVIC_IP_PRI_6(0xFF));
    1126:	4a12      	ldr	r2, [pc, #72]	; (1170 <PE_low_level_init+0xdc>)
    1128:	4911      	ldr	r1, [pc, #68]	; (1170 <PE_low_level_init+0xdc>)
    112a:	23c1      	movs	r3, #193	; 0xc1
    112c:	009b      	lsls	r3, r3, #2
    112e:	58c9      	ldr	r1, [r1, r3]
    1130:	4b10      	ldr	r3, [pc, #64]	; (1174 <PE_low_level_init+0xe0>)
    1132:	4019      	ands	r1, r3
    1134:	23c1      	movs	r3, #193	; 0xc1
    1136:	009b      	lsls	r3, r3, #2
    1138:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:438
  /* ### BitIO_LDD "BitIoLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd1_Init(NULL);
    113a:	2000      	movs	r0, #0
    113c:	f7ff fe38 	bl	db0 <BitIoLdd1_Init>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:440
  /* ### BitIO_LDD "BitIoLdd2" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd2_Init(NULL);
    1140:	2000      	movs	r0, #0
    1142:	f7ff fe91 	bl	e68 <BitIoLdd2_Init>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:442
  /* ### TimerInt_LDD "TimerIntLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)TimerIntLdd1_Init(NULL);
    1146:	2000      	movs	r0, #0
    1148:	f000 fb48 	bl	17dc <TimerIntLdd1_Init>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:445
  /* ### TimerInt "ClockInterruption" init code ... */
  /* ### BitIO_LDD "BitIoLdd3" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd3_Init(NULL);
    114c:	2000      	movs	r0, #0
    114e:	f7ff fed3 	bl	ef8 <BitIoLdd3_Init>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:447
  /* ### ADC "ImageConverter" init code ... */
  ImageConverter_Init();
    1152:	f000 f8a1 	bl	1298 <ImageConverter_Init>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:448
  __EI();
    1156:	b662      	cpsie	i
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/Cpu.c:449
}
    1158:	46bd      	mov	sp, r7
    115a:	bd80      	pop	{r7, pc}
    115c:	40049000 	.word	0x40049000
    1160:	fefff8ff 	.word	0xfefff8ff
    1164:	4007f000 	.word	0x4007f000
    1168:	4007d000 	.word	0x4007d000
    116c:	4007e000 	.word	0x4007e000
    1170:	e000e100 	.word	0xe000e100
    1174:	ff3fffff 	.word	0xff3fffff

00001178 <ImageConverter_HWEnDi>:
ImageConverter_HWEnDi():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:127
**         Enable and Disable methods and several internal methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ImageConverter_HWEnDi(void)
{
    1178:	b580      	push	{r7, lr}
    117a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:128
  if (ModeFlg) {                       /* Start or stop measurement? */
    117c:	4b0c      	ldr	r3, [pc, #48]	; (11b0 <ImageConverter_HWEnDi+0x38>)
    117e:	781b      	ldrb	r3, [r3, #0]
    1180:	b2db      	uxtb	r3, r3
    1182:	2b00      	cmp	r3, #0
    1184:	d012      	beq.n	11ac <ImageConverter_HWEnDi+0x34>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:129
    OutFlg = FALSE;                    /* Output value isn't available */
    1186:	4b0b      	ldr	r3, [pc, #44]	; (11b4 <ImageConverter_HWEnDi+0x3c>)
    1188:	2200      	movs	r2, #0
    118a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:130
    SampleGroup[0].ChannelIdx = 0U;
    118c:	4b0a      	ldr	r3, [pc, #40]	; (11b8 <ImageConverter_HWEnDi+0x40>)
    118e:	2200      	movs	r2, #0
    1190:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:131
    (void)AdcLdd1_CreateSampleGroup(AdcLdd1_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    1192:	4b0a      	ldr	r3, [pc, #40]	; (11bc <ImageConverter_HWEnDi+0x44>)
    1194:	681a      	ldr	r2, [r3, #0]
    1196:	4b08      	ldr	r3, [pc, #32]	; (11b8 <ImageConverter_HWEnDi+0x40>)
    1198:	1c10      	adds	r0, r2, #0
    119a:	1c19      	adds	r1, r3, #0
    119c:	2201      	movs	r2, #1
    119e:	f7ff fd31 	bl	c04 <AdcLdd1_CreateSampleGroup>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:132
    (void)AdcLdd1_StartSingleMeasurement(AdcLdd1_DeviceDataPtr);
    11a2:	4b06      	ldr	r3, [pc, #24]	; (11bc <ImageConverter_HWEnDi+0x44>)
    11a4:	681b      	ldr	r3, [r3, #0]
    11a6:	1c18      	adds	r0, r3, #0
    11a8:	f7ff fd0a 	bl	bc0 <AdcLdd1_StartSingleMeasurement>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:134
  }
}
    11ac:	46bd      	mov	sp, r7
    11ae:	bd80      	pop	{r7, pc}
    11b0:	1ffff09d 	.word	0x1ffff09d
    11b4:	1ffff0a4 	.word	0x1ffff0a4
    11b8:	1ffff0a0 	.word	0x1ffff0a0
    11bc:	1ffff214 	.word	0x1ffff214

000011c0 <ImageConverter_Measure>:
ImageConverter_Measure():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:170
**                           ERR_DISABLED - Device is disabled
**                           ERR_BUSY - A conversion is already running
*/
/* ===================================================================*/
byte ImageConverter_Measure(bool WaitForResult)
{
    11c0:	b580      	push	{r7, lr}
    11c2:	b082      	sub	sp, #8
    11c4:	af00      	add	r7, sp, #0
    11c6:	1c02      	adds	r2, r0, #0
    11c8:	1dfb      	adds	r3, r7, #7
    11ca:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:171
  if (ModeFlg != STOP) {               /* Is the device in different mode than "stop"? */
    11cc:	4b0d      	ldr	r3, [pc, #52]	; (1204 <ImageConverter_Measure+0x44>)
    11ce:	781b      	ldrb	r3, [r3, #0]
    11d0:	b2db      	uxtb	r3, r3
    11d2:	2b00      	cmp	r3, #0
    11d4:	d001      	beq.n	11da <ImageConverter_Measure+0x1a>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:172
    return ERR_BUSY;                   /* If yes then error */
    11d6:	2308      	movs	r3, #8
    11d8:	e00f      	b.n	11fa <ImageConverter_Measure+0x3a>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:174
  }
  ModeFlg = MEASURE;                   /* Set state of device to the measure mode */
    11da:	4b0a      	ldr	r3, [pc, #40]	; (1204 <ImageConverter_Measure+0x44>)
    11dc:	2201      	movs	r2, #1
    11de:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:175
  ImageConverter_HWEnDi();             /* Enable the device */
    11e0:	f7ff ffca 	bl	1178 <ImageConverter_HWEnDi>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:176
  if (WaitForResult) {                 /* Is WaitForResult TRUE? */
    11e4:	1dfb      	adds	r3, r7, #7
    11e6:	781b      	ldrb	r3, [r3, #0]
    11e8:	2b00      	cmp	r3, #0
    11ea:	d005      	beq.n	11f8 <ImageConverter_Measure+0x38>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:177
    while (ModeFlg == MEASURE) {}      /* If yes then wait for end of measurement */
    11ec:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:177 (discriminator 1)
    11ee:	4b05      	ldr	r3, [pc, #20]	; (1204 <ImageConverter_Measure+0x44>)
    11f0:	781b      	ldrb	r3, [r3, #0]
    11f2:	b2db      	uxtb	r3, r3
    11f4:	2b01      	cmp	r3, #1
    11f6:	d0fa      	beq.n	11ee <ImageConverter_Measure+0x2e>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:179
  }
  return ERR_OK;                       /* OK */
    11f8:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:180
}
    11fa:	1c18      	adds	r0, r3, #0
    11fc:	46bd      	mov	sp, r7
    11fe:	b002      	add	sp, #8
    1200:	bd80      	pop	{r7, pc}
    1202:	46c0      	nop			; (mov r8, r8)
    1204:	1ffff09d 	.word	0x1ffff09d

00001208 <PE_ImageConverter_GetChanValue>:
PE_ImageConverter_GetChanValue():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:315
byte ImageConverter_GetChanValue(byte Channel, void* Value)
was optimised based on the current component setting. An appropriate macro has been defined 
in the AD1.h to maintain API compatibility.
*/
byte PE_ImageConverter_GetChanValue(void* Value)
{
    1208:	b580      	push	{r7, lr}
    120a:	b082      	sub	sp, #8
    120c:	af00      	add	r7, sp, #0
    120e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:316
  if (!OutFlg) {                       /* Is output flag set? */
    1210:	4b08      	ldr	r3, [pc, #32]	; (1234 <PE_ImageConverter_GetChanValue+0x2c>)
    1212:	781b      	ldrb	r3, [r3, #0]
    1214:	b2db      	uxtb	r3, r3
    1216:	2b00      	cmp	r3, #0
    1218:	d101      	bne.n	121e <PE_ImageConverter_GetChanValue+0x16>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:317
    return ERR_NOTAVAIL;               /* If no then error */
    121a:	2309      	movs	r3, #9
    121c:	e005      	b.n	122a <PE_ImageConverter_GetChanValue+0x22>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:320
  }
  /* Copy value from temporary buffer */
  *(AdcLdd1_TResultData *)Value = ImageConverter_OutV;
    121e:	4b06      	ldr	r3, [pc, #24]	; (1238 <PE_ImageConverter_GetChanValue+0x30>)
    1220:	781b      	ldrb	r3, [r3, #0]
    1222:	b2da      	uxtb	r2, r3
    1224:	687b      	ldr	r3, [r7, #4]
    1226:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:321
  return ERR_OK;
    1228:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:322
}
    122a:	1c18      	adds	r0, r3, #0
    122c:	46bd      	mov	sp, r7
    122e:	b002      	add	sp, #8
    1230:	bd80      	pop	{r7, pc}
    1232:	46c0      	nop			; (mov r8, r8)
    1234:	1ffff0a4 	.word	0x1ffff0a4
    1238:	1ffff210 	.word	0x1ffff210

0000123c <AdcLdd1_OnMeasurementComplete>:
AdcLdd1_OnMeasurementComplete():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:380
**         event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AdcLdd1_OnMeasurementComplete(LDD_TUserData *UserDataPtr)
{
    123c:	b580      	push	{r7, lr}
    123e:	b082      	sub	sp, #8
    1240:	af00      	add	r7, sp, #0
    1242:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:382
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  if (ModeFlg == CALIBRATING) {        /* If the driver is in CALIBRATING mode */
    1244:	4b10      	ldr	r3, [pc, #64]	; (1288 <AdcLdd1_OnMeasurementComplete+0x4c>)
    1246:	781b      	ldrb	r3, [r3, #0]
    1248:	b2db      	uxtb	r3, r3
    124a:	2b04      	cmp	r3, #4
    124c:	d10a      	bne.n	1264 <AdcLdd1_OnMeasurementComplete+0x28>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:383
    (void)AdcLdd1_GetCalibrationResultStatus(AdcLdd1_DeviceDataPtr);
    124e:	4b0f      	ldr	r3, [pc, #60]	; (128c <AdcLdd1_OnMeasurementComplete+0x50>)
    1250:	681b      	ldr	r3, [r3, #0]
    1252:	1c18      	adds	r0, r3, #0
    1254:	f7ff fd38 	bl	cc8 <AdcLdd1_GetCalibrationResultStatus>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:384
    ModeFlg = STOP;                    /* Set the device to the stop mode */
    1258:	4b0b      	ldr	r3, [pc, #44]	; (1288 <AdcLdd1_OnMeasurementComplete+0x4c>)
    125a:	2200      	movs	r2, #0
    125c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:385
    ImageConverter_OnCalibrationEnd(); /* If yes then invoke user event */
    125e:	f7ff fa89 	bl	774 <ImageConverter_OnCalibrationEnd>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:386
    return;                            /* Return from interrupt */
    1262:	e00e      	b.n	1282 <AdcLdd1_OnMeasurementComplete+0x46>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:388
  }
  AdcLdd1_GetMeasuredValues(AdcLdd1_DeviceDataPtr, (LDD_TData *)&ImageConverter_OutV);
    1264:	4b09      	ldr	r3, [pc, #36]	; (128c <AdcLdd1_OnMeasurementComplete+0x50>)
    1266:	681a      	ldr	r2, [r3, #0]
    1268:	4b09      	ldr	r3, [pc, #36]	; (1290 <AdcLdd1_OnMeasurementComplete+0x54>)
    126a:	1c10      	adds	r0, r2, #0
    126c:	1c19      	adds	r1, r3, #0
    126e:	f7ff fcfb 	bl	c68 <AdcLdd1_GetMeasuredValues>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:389
  OutFlg = TRUE;                       /* Measured value is available */
    1272:	4b08      	ldr	r3, [pc, #32]	; (1294 <AdcLdd1_OnMeasurementComplete+0x58>)
    1274:	2201      	movs	r2, #1
    1276:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:390
  ImageConverter_OnEnd();              /* If yes then invoke user event */
    1278:	f7ff fa6c 	bl	754 <ImageConverter_OnEnd>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:391
  ModeFlg = STOP;                      /* Set the device to the stop mode */
    127c:	4b02      	ldr	r3, [pc, #8]	; (1288 <AdcLdd1_OnMeasurementComplete+0x4c>)
    127e:	2200      	movs	r2, #0
    1280:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:392
}
    1282:	46bd      	mov	sp, r7
    1284:	b002      	add	sp, #8
    1286:	bd80      	pop	{r7, pc}
    1288:	1ffff09d 	.word	0x1ffff09d
    128c:	1ffff214 	.word	0x1ffff214
    1290:	1ffff210 	.word	0x1ffff210
    1294:	1ffff0a4 	.word	0x1ffff0a4

00001298 <ImageConverter_Init>:
ImageConverter_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:406
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ImageConverter_Init(void)
{
    1298:	b580      	push	{r7, lr}
    129a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:407
  OutFlg = FALSE;                      /* No measured value */
    129c:	4b06      	ldr	r3, [pc, #24]	; (12b8 <ImageConverter_Init+0x20>)
    129e:	2200      	movs	r2, #0
    12a0:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:408
  ModeFlg = STOP;                      /* Device isn't running */
    12a2:	4b06      	ldr	r3, [pc, #24]	; (12bc <ImageConverter_Init+0x24>)
    12a4:	2200      	movs	r2, #0
    12a6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:409
  AdcLdd1_DeviceDataPtr = AdcLdd1_Init(NULL); /* Calling init method of the inherited component */
    12a8:	2000      	movs	r0, #0
    12aa:	f7ff fc27 	bl	afc <AdcLdd1_Init>
    12ae:	1c02      	adds	r2, r0, #0
    12b0:	4b03      	ldr	r3, [pc, #12]	; (12c0 <ImageConverter_Init+0x28>)
    12b2:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/ImageConverter.c:410
}
    12b4:	46bd      	mov	sp, r7
    12b6:	bd80      	pop	{r7, pc}
    12b8:	1ffff0a4 	.word	0x1ffff0a4
    12bc:	1ffff09d 	.word	0x1ffff09d
    12c0:	1ffff214 	.word	0x1ffff214

000012c4 <SerialCom_Init>:
SerialCom_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:160
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* SerialCom_Init(LDD_TUserData *UserDataPtr)
{
    12c4:	b580      	push	{r7, lr}
    12c6:	b084      	sub	sp, #16
    12c8:	af00      	add	r7, sp, #0
    12ca:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:164
  /* Allocate device structure */
  SerialCom_TDeviceDataPtr DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    12cc:	4b5e      	ldr	r3, [pc, #376]	; (1448 <SerialCom_Init+0x184>)
    12ce:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:167

  /* Clear the receive counters and pointer */
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Clear the counter of received characters */
    12d0:	68fb      	ldr	r3, [r7, #12]
    12d2:	2200      	movs	r2, #0
    12d4:	805a      	strh	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:168
  DeviceDataPrv->InpDataNumReq = 0x00U; /* Clear the counter of characters to receive by ReceiveBlock() */
    12d6:	68fb      	ldr	r3, [r7, #12]
    12d8:	2200      	movs	r2, #0
    12da:	811a      	strh	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:169
  DeviceDataPrv->InpDataPtr = NULL;    /* Clear the buffer pointer for received characters */
    12dc:	68fb      	ldr	r3, [r7, #12]
    12de:	2200      	movs	r2, #0
    12e0:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:171
  /* Clear the transmit counters and pointer */
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters */
    12e2:	68fb      	ldr	r3, [r7, #12]
    12e4:	2200      	movs	r2, #0
    12e6:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:172
  DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    12e8:	68fb      	ldr	r3, [r7, #12]
    12ea:	2200      	movs	r2, #0
    12ec:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:173
  DeviceDataPrv->OutDataPtr = NULL;    /* Clear the buffer pointer for data to be transmitted */
    12ee:	68fb      	ldr	r3, [r7, #12]
    12f0:	2200      	movs	r2, #0
    12f2:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:174
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    12f4:	68fb      	ldr	r3, [r7, #12]
    12f6:	687a      	ldr	r2, [r7, #4]
    12f8:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:177
  /* Allocate interrupt vectors */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_UART0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    12fa:	4b54      	ldr	r3, [pc, #336]	; (144c <SerialCom_Init+0x188>)
    12fc:	68fa      	ldr	r2, [r7, #12]
    12fe:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:179
  /* SIM_SCGC4: UART0=1 */
  SIM_SCGC4 |= SIM_SCGC4_UART0_MASK;
    1300:	4a53      	ldr	r2, [pc, #332]	; (1450 <SerialCom_Init+0x18c>)
    1302:	4953      	ldr	r1, [pc, #332]	; (1450 <SerialCom_Init+0x18c>)
    1304:	4b53      	ldr	r3, [pc, #332]	; (1454 <SerialCom_Init+0x190>)
    1306:	58cb      	ldr	r3, [r1, r3]
    1308:	2180      	movs	r1, #128	; 0x80
    130a:	00c9      	lsls	r1, r1, #3
    130c:	4319      	orrs	r1, r3
    130e:	4b51      	ldr	r3, [pc, #324]	; (1454 <SerialCom_Init+0x190>)
    1310:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:181
  /* PORTA_PCR1: ISF=0,MUX=2 */
  PORTA_PCR1 = (uint32_t)((PORTA_PCR1 & (uint32_t)~(uint32_t)(
    1312:	4b51      	ldr	r3, [pc, #324]	; (1458 <SerialCom_Init+0x194>)
    1314:	4a50      	ldr	r2, [pc, #320]	; (1458 <SerialCom_Init+0x194>)
    1316:	6851      	ldr	r1, [r2, #4]
    1318:	4a50      	ldr	r2, [pc, #320]	; (145c <SerialCom_Init+0x198>)
    131a:	400a      	ands	r2, r1
    131c:	2180      	movs	r1, #128	; 0x80
    131e:	0089      	lsls	r1, r1, #2
    1320:	430a      	orrs	r2, r1
    1322:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:188
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* PORTA_PCR2: ISF=0,MUX=2 */
  PORTA_PCR2 = (uint32_t)((PORTA_PCR2 & (uint32_t)~(uint32_t)(
    1324:	4b4c      	ldr	r3, [pc, #304]	; (1458 <SerialCom_Init+0x194>)
    1326:	4a4c      	ldr	r2, [pc, #304]	; (1458 <SerialCom_Init+0x194>)
    1328:	6891      	ldr	r1, [r2, #8]
    132a:	4a4c      	ldr	r2, [pc, #304]	; (145c <SerialCom_Init+0x198>)
    132c:	400a      	ands	r2, r1
    132e:	2180      	movs	r1, #128	; 0x80
    1330:	0089      	lsls	r1, r1, #2
    1332:	430a      	orrs	r2, r1
    1334:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:195
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* NVIC_IPR3: PRI_12=0x80 */
  NVIC_IPR3 = (uint32_t)((NVIC_IPR3 & (uint32_t)~(uint32_t)(
    1336:	4a4a      	ldr	r2, [pc, #296]	; (1460 <SerialCom_Init+0x19c>)
    1338:	4949      	ldr	r1, [pc, #292]	; (1460 <SerialCom_Init+0x19c>)
    133a:	23c3      	movs	r3, #195	; 0xc3
    133c:	009b      	lsls	r3, r3, #2
    133e:	58cb      	ldr	r3, [r1, r3]
    1340:	21c0      	movs	r1, #192	; 0xc0
    1342:	1c18      	adds	r0, r3, #0
    1344:	4388      	bics	r0, r1
    1346:	1c01      	adds	r1, r0, #0
    1348:	23c3      	movs	r3, #195	; 0xc3
    134a:	009b      	lsls	r3, r3, #2
    134c:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:201
               NVIC_IP_PRI_12(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_12(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x1000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x1000);
    134e:	4b44      	ldr	r3, [pc, #272]	; (1460 <SerialCom_Init+0x19c>)
    1350:	4a43      	ldr	r2, [pc, #268]	; (1460 <SerialCom_Init+0x19c>)
    1352:	6812      	ldr	r2, [r2, #0]
    1354:	2180      	movs	r1, #128	; 0x80
    1356:	0149      	lsls	r1, r1, #5
    1358:	430a      	orrs	r2, r1
    135a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:202
  UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_DISABLE); /* Disable transmitter. */
    135c:	4b41      	ldr	r3, [pc, #260]	; (1464 <SerialCom_Init+0x1a0>)
    135e:	4a41      	ldr	r2, [pc, #260]	; (1464 <SerialCom_Init+0x1a0>)
    1360:	78d2      	ldrb	r2, [r2, #3]
    1362:	b2d2      	uxtb	r2, r2
    1364:	2108      	movs	r1, #8
    1366:	438a      	bics	r2, r1
    1368:	b2d2      	uxtb	r2, r2
    136a:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:203
  UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_DISABLE); /* Disable receiver. */
    136c:	4b3d      	ldr	r3, [pc, #244]	; (1464 <SerialCom_Init+0x1a0>)
    136e:	4a3d      	ldr	r2, [pc, #244]	; (1464 <SerialCom_Init+0x1a0>)
    1370:	78d2      	ldrb	r2, [r2, #3]
    1372:	b2d2      	uxtb	r2, r2
    1374:	2104      	movs	r1, #4
    1376:	438a      	bics	r2, r1
    1378:	b2d2      	uxtb	r2, r2
    137a:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:204
  DeviceDataPrv->SerFlag = 0x00U;      /* Reset flags */
    137c:	68fb      	ldr	r3, [r7, #12]
    137e:	2200      	movs	r2, #0
    1380:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:206
  /* UART0_C1: LOOPS=0,DOZEEN=0,RSRC=0,M=0,WAKE=0,ILT=0,PE=0,PT=0 */
  UART0_C1 = 0x00U;                    /*  Set the C1 register */
    1382:	4b38      	ldr	r3, [pc, #224]	; (1464 <SerialCom_Init+0x1a0>)
    1384:	2200      	movs	r2, #0
    1386:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:208
  /* UART0_C3: R8T9=0,R9T8=0,TXDIR=0,TXINV=0,ORIE=0,NEIE=0,FEIE=0,PEIE=0 */
  UART0_C3 = 0x00U;                    /*  Set the C3 register */
    1388:	4b36      	ldr	r3, [pc, #216]	; (1464 <SerialCom_Init+0x1a0>)
    138a:	2200      	movs	r2, #0
    138c:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:210
  /* UART0_C4: MAEN1=0,MAEN2=0,M10=0,OSR=0 */
  UART0_C4 = UART0_C4_OSR(0x00);       /*  Set the C4 register */
    138e:	4b35      	ldr	r3, [pc, #212]	; (1464 <SerialCom_Init+0x1a0>)
    1390:	2200      	movs	r2, #0
    1392:	729a      	strb	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:212
  /* UART0_S2: LBKDIF=0,RXEDGIF=0,MSBF=0,RXINV=0,RWUID=0,BRK13=0,LBKDE=0,RAF=0 */
  UART0_S2 = 0x00U;                    /*  Set the S2 register */
    1394:	4b33      	ldr	r3, [pc, #204]	; (1464 <SerialCom_Init+0x1a0>)
    1396:	2200      	movs	r2, #0
    1398:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:213
  SIM_PDD_SetClockSourceUART0(SIM_BASE_PTR, SIM_PDD_UART0_PLL_FLL_CLOCK);
    139a:	4a2d      	ldr	r2, [pc, #180]	; (1450 <SerialCom_Init+0x18c>)
    139c:	492c      	ldr	r1, [pc, #176]	; (1450 <SerialCom_Init+0x18c>)
    139e:	4b32      	ldr	r3, [pc, #200]	; (1468 <SerialCom_Init+0x1a4>)
    13a0:	58c9      	ldr	r1, [r1, r3]
    13a2:	4b32      	ldr	r3, [pc, #200]	; (146c <SerialCom_Init+0x1a8>)
    13a4:	400b      	ands	r3, r1
    13a6:	2180      	movs	r1, #128	; 0x80
    13a8:	04c9      	lsls	r1, r1, #19
    13aa:	4319      	orrs	r1, r3
    13ac:	4b2e      	ldr	r3, [pc, #184]	; (1468 <SerialCom_Init+0x1a4>)
    13ae:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:214
  UART0_PDD_SetBaudRate(UART0_BASE_PTR, 46U); /* Set the baud rate register. */
    13b0:	4b2c      	ldr	r3, [pc, #176]	; (1464 <SerialCom_Init+0x1a0>)
    13b2:	4a2c      	ldr	r2, [pc, #176]	; (1464 <SerialCom_Init+0x1a0>)
    13b4:	7812      	ldrb	r2, [r2, #0]
    13b6:	b2d2      	uxtb	r2, r2
    13b8:	211f      	movs	r1, #31
    13ba:	438a      	bics	r2, r1
    13bc:	b2d2      	uxtb	r2, r2
    13be:	701a      	strb	r2, [r3, #0]
    13c0:	4b28      	ldr	r3, [pc, #160]	; (1464 <SerialCom_Init+0x1a0>)
    13c2:	222e      	movs	r2, #46	; 0x2e
    13c4:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:215
  UART0_PDD_SetOversamplingRatio(UART0_BASE_PTR, 3U);
    13c6:	4b27      	ldr	r3, [pc, #156]	; (1464 <SerialCom_Init+0x1a0>)
    13c8:	4a26      	ldr	r2, [pc, #152]	; (1464 <SerialCom_Init+0x1a0>)
    13ca:	7a92      	ldrb	r2, [r2, #10]
    13cc:	b2d2      	uxtb	r2, r2
    13ce:	b2d2      	uxtb	r2, r2
    13d0:	211f      	movs	r1, #31
    13d2:	438a      	bics	r2, r1
    13d4:	b2d2      	uxtb	r2, r2
    13d6:	2103      	movs	r1, #3
    13d8:	430a      	orrs	r2, r1
    13da:	b2d2      	uxtb	r2, r2
    13dc:	b2d2      	uxtb	r2, r2
    13de:	729a      	strb	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:216
  UART0_PDD_EnableSamplingOnBothEdges(UART0_BASE_PTR, PDD_ENABLE);
    13e0:	4b20      	ldr	r3, [pc, #128]	; (1464 <SerialCom_Init+0x1a0>)
    13e2:	4a20      	ldr	r2, [pc, #128]	; (1464 <SerialCom_Init+0x1a0>)
    13e4:	7ad2      	ldrb	r2, [r2, #11]
    13e6:	b2d2      	uxtb	r2, r2
    13e8:	b2d2      	uxtb	r2, r2
    13ea:	2102      	movs	r1, #2
    13ec:	430a      	orrs	r2, r1
    13ee:	b2d2      	uxtb	r2, r2
    13f0:	b2d2      	uxtb	r2, r2
    13f2:	72da      	strb	r2, [r3, #11]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:217
  UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_ENABLE); /* Enable transmitter */
    13f4:	4b1b      	ldr	r3, [pc, #108]	; (1464 <SerialCom_Init+0x1a0>)
    13f6:	4a1b      	ldr	r2, [pc, #108]	; (1464 <SerialCom_Init+0x1a0>)
    13f8:	78d2      	ldrb	r2, [r2, #3]
    13fa:	b2d2      	uxtb	r2, r2
    13fc:	b2d2      	uxtb	r2, r2
    13fe:	2108      	movs	r1, #8
    1400:	430a      	orrs	r2, r1
    1402:	b2d2      	uxtb	r2, r2
    1404:	b2d2      	uxtb	r2, r2
    1406:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:218
  UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_ENABLE); /* Enable receiver */
    1408:	4b16      	ldr	r3, [pc, #88]	; (1464 <SerialCom_Init+0x1a0>)
    140a:	4a16      	ldr	r2, [pc, #88]	; (1464 <SerialCom_Init+0x1a0>)
    140c:	78d2      	ldrb	r2, [r2, #3]
    140e:	b2d2      	uxtb	r2, r2
    1410:	b2d2      	uxtb	r2, r2
    1412:	2104      	movs	r1, #4
    1414:	430a      	orrs	r2, r1
    1416:	b2d2      	uxtb	r2, r2
    1418:	b2d2      	uxtb	r2, r2
    141a:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:219
  UART0_PDD_EnableInterrupt(UART0_BASE_PTR, ( UART0_PDD_INTERRUPT_RECEIVER )); /* Enable interrupts */
    141c:	4b11      	ldr	r3, [pc, #68]	; (1464 <SerialCom_Init+0x1a0>)
    141e:	4a11      	ldr	r2, [pc, #68]	; (1464 <SerialCom_Init+0x1a0>)
    1420:	78d2      	ldrb	r2, [r2, #3]
    1422:	b2d2      	uxtb	r2, r2
    1424:	2120      	movs	r1, #32
    1426:	430a      	orrs	r2, r1
    1428:	b2d2      	uxtb	r2, r2
    142a:	70da      	strb	r2, [r3, #3]
    142c:	4b0d      	ldr	r3, [pc, #52]	; (1464 <SerialCom_Init+0x1a0>)
    142e:	4a0d      	ldr	r2, [pc, #52]	; (1464 <SerialCom_Init+0x1a0>)
    1430:	7992      	ldrb	r2, [r2, #6]
    1432:	b2d2      	uxtb	r2, r2
    1434:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:221
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_SerialCom_ID,DeviceDataPrv);
    1436:	4b0e      	ldr	r3, [pc, #56]	; (1470 <SerialCom_Init+0x1ac>)
    1438:	68fa      	ldr	r2, [r7, #12]
    143a:	619a      	str	r2, [r3, #24]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:222
  return ((LDD_TDeviceData *)DeviceDataPrv);
    143c:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:223
}
    143e:	1c18      	adds	r0, r3, #0
    1440:	46bd      	mov	sp, r7
    1442:	b004      	add	sp, #16
    1444:	bd80      	pop	{r7, pc}
    1446:	46c0      	nop			; (mov r8, r8)
    1448:	1ffff0c4 	.word	0x1ffff0c4
    144c:	1ffff0dc 	.word	0x1ffff0dc
    1450:	40047000 	.word	0x40047000
    1454:	00001034 	.word	0x00001034
    1458:	40049000 	.word	0x40049000
    145c:	fefff8ff 	.word	0xfefff8ff
    1460:	e000e100 	.word	0xe000e100
    1464:	4006a000 	.word	0x4006a000
    1468:	00001004 	.word	0x00001004
    146c:	f3ffffff 	.word	0xf3ffffff
    1470:	1ffff0a8 	.word	0x1ffff0a8

00001474 <SerialCom_SendBlock>:
SerialCom_SendBlock():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:330
**                           ERR_BUSY - The previous transmit request is
**                           pending.
*/
/* ===================================================================*/
LDD_TError SerialCom_SendBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    1474:	b580      	push	{r7, lr}
    1476:	b086      	sub	sp, #24
    1478:	af00      	add	r7, sp, #0
    147a:	60f8      	str	r0, [r7, #12]
    147c:	60b9      	str	r1, [r7, #8]
    147e:	1dbb      	adds	r3, r7, #6
    1480:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:331
  SerialCom_TDeviceDataPtr DeviceDataPrv = (SerialCom_TDeviceDataPtr)DeviceDataPtr;
    1482:	68fb      	ldr	r3, [r7, #12]
    1484:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:333

  if (Size == 0U) {                    /* Is the parameter Size within an expected range? */
    1486:	1dbb      	adds	r3, r7, #6
    1488:	881b      	ldrh	r3, [r3, #0]
    148a:	2b00      	cmp	r3, #0
    148c:	d101      	bne.n	1492 <SerialCom_SendBlock+0x1e>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:334
    return ERR_PARAM_SIZE;             /* If no then error */
    148e:	2384      	movs	r3, #132	; 0x84
    1490:	e048      	b.n	1524 <SerialCom_SendBlock+0xb0>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:336
  }
  if (DeviceDataPrv->OutDataNumReq != 0x00U) { /* Is the previous transmit operation pending? */
    1492:	697b      	ldr	r3, [r7, #20]
    1494:	8a1b      	ldrh	r3, [r3, #16]
    1496:	2b00      	cmp	r3, #0
    1498:	d001      	beq.n	149e <SerialCom_SendBlock+0x2a>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:337
    return ERR_BUSY;                   /* If yes then error */
    149a:	2308      	movs	r3, #8
    149c:	e042      	b.n	1524 <SerialCom_SendBlock+0xb0>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:340
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    149e:	1c3b      	adds	r3, r7, #0
    14a0:	3313      	adds	r3, #19
    14a2:	f3ef 8010 	mrs	r0, PRIMASK
    14a6:	b672      	cpsid	i
    14a8:	7018      	strb	r0, [r3, #0]
    14aa:	4b20      	ldr	r3, [pc, #128]	; (152c <SerialCom_SendBlock+0xb8>)
    14ac:	781b      	ldrb	r3, [r3, #0]
    14ae:	b2db      	uxtb	r3, r3
    14b0:	3301      	adds	r3, #1
    14b2:	b2db      	uxtb	r3, r3
    14b4:	4a1d      	ldr	r2, [pc, #116]	; (152c <SerialCom_SendBlock+0xb8>)
    14b6:	1c19      	adds	r1, r3, #0
    14b8:	7011      	strb	r1, [r2, #0]
    14ba:	2b01      	cmp	r3, #1
    14bc:	d104      	bne.n	14c8 <SerialCom_SendBlock+0x54>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:340 (discriminator 1)
    14be:	1c3b      	adds	r3, r7, #0
    14c0:	3313      	adds	r3, #19
    14c2:	781a      	ldrb	r2, [r3, #0]
    14c4:	4b1a      	ldr	r3, [pc, #104]	; (1530 <SerialCom_SendBlock+0xbc>)
    14c6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:341
  DeviceDataPrv->OutDataPtr = (uint8_t*)BufferPtr; /* Set a pointer to the output data. */
    14c8:	697b      	ldr	r3, [r7, #20]
    14ca:	68ba      	ldr	r2, [r7, #8]
    14cc:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:342
  DeviceDataPrv->OutDataNumReq = Size; /* Set the counter of characters to be sent. */
    14ce:	697b      	ldr	r3, [r7, #20]
    14d0:	1dba      	adds	r2, r7, #6
    14d2:	8812      	ldrh	r2, [r2, #0]
    14d4:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:343
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters. */
    14d6:	697b      	ldr	r3, [r7, #20]
    14d8:	2200      	movs	r2, #0
    14da:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:344
  DeviceDataPrv->SerFlag |= ENABLED_TX_INT; /* Set the flag ENABLED_TX_INT */
    14dc:	697b      	ldr	r3, [r7, #20]
    14de:	881b      	ldrh	r3, [r3, #0]
    14e0:	2201      	movs	r2, #1
    14e2:	4313      	orrs	r3, r2
    14e4:	b29a      	uxth	r2, r3
    14e6:	697b      	ldr	r3, [r7, #20]
    14e8:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:345
  UART0_PDD_EnableInterrupt(UART0_BASE_PTR, UART0_PDD_INTERRUPT_TRANSMITTER); /* Enable TX interrupt */
    14ea:	4b12      	ldr	r3, [pc, #72]	; (1534 <SerialCom_SendBlock+0xc0>)
    14ec:	4a11      	ldr	r2, [pc, #68]	; (1534 <SerialCom_SendBlock+0xc0>)
    14ee:	78d2      	ldrb	r2, [r2, #3]
    14f0:	b2d2      	uxtb	r2, r2
    14f2:	2180      	movs	r1, #128	; 0x80
    14f4:	4249      	negs	r1, r1
    14f6:	430a      	orrs	r2, r1
    14f8:	b2d2      	uxtb	r2, r2
    14fa:	70da      	strb	r2, [r3, #3]
    14fc:	4b0d      	ldr	r3, [pc, #52]	; (1534 <SerialCom_SendBlock+0xc0>)
    14fe:	4a0d      	ldr	r2, [pc, #52]	; (1534 <SerialCom_SendBlock+0xc0>)
    1500:	7992      	ldrb	r2, [r2, #6]
    1502:	b2d2      	uxtb	r2, r2
    1504:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:347
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    1506:	4b09      	ldr	r3, [pc, #36]	; (152c <SerialCom_SendBlock+0xb8>)
    1508:	781b      	ldrb	r3, [r3, #0]
    150a:	b2db      	uxtb	r3, r3
    150c:	3b01      	subs	r3, #1
    150e:	b2db      	uxtb	r3, r3
    1510:	4a06      	ldr	r2, [pc, #24]	; (152c <SerialCom_SendBlock+0xb8>)
    1512:	1c19      	adds	r1, r3, #0
    1514:	7011      	strb	r1, [r2, #0]
    1516:	2b00      	cmp	r3, #0
    1518:	d103      	bne.n	1522 <SerialCom_SendBlock+0xae>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:347 (discriminator 1)
    151a:	4b05      	ldr	r3, [pc, #20]	; (1530 <SerialCom_SendBlock+0xbc>)
    151c:	7818      	ldrb	r0, [r3, #0]
    151e:	f380 8810 	msr	PRIMASK, r0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:348
  return ERR_OK;                       /* OK */
    1522:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:349
}
    1524:	1c18      	adds	r0, r3, #0
    1526:	46bd      	mov	sp, r7
    1528:	b006      	add	sp, #24
    152a:	bd80      	pop	{r7, pc}
    152c:	1ffff09c 	.word	0x1ffff09c
    1530:	1ffff20c 	.word	0x1ffff20c
    1534:	4006a000 	.word	0x4006a000

00001538 <InterruptRx>:
InterruptRx():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:362
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptRx(SerialCom_TDeviceDataPtr DeviceDataPrv)
{
    1538:	b590      	push	{r4, r7, lr}
    153a:	b083      	sub	sp, #12
    153c:	af00      	add	r7, sp, #0
    153e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:365
  register uint16_t Data;              /* Temporary variable for data */

  Data = (uint16_t)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Read an 8-bit character from the receiver */
    1540:	4b12      	ldr	r3, [pc, #72]	; (158c <InterruptRx+0x54>)
    1542:	79db      	ldrb	r3, [r3, #7]
    1544:	b2db      	uxtb	r3, r3
    1546:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:366
  if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the receive block operation pending? */
    1548:	687b      	ldr	r3, [r7, #4]
    154a:	891b      	ldrh	r3, [r3, #8]
    154c:	2b00      	cmp	r3, #0
    154e:	d01a      	beq.n	1586 <InterruptRx+0x4e>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:367
    *(DeviceDataPrv->InpDataPtr++) = (uint8_t)Data; /* Put an 8-bit character to the receive buffer */
    1550:	687b      	ldr	r3, [r7, #4]
    1552:	685b      	ldr	r3, [r3, #4]
    1554:	1c59      	adds	r1, r3, #1
    1556:	687a      	ldr	r2, [r7, #4]
    1558:	6051      	str	r1, [r2, #4]
    155a:	b2e2      	uxtb	r2, r4
    155c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:368
    DeviceDataPrv->InpRecvDataNum++;   /* Increment received char. counter */
    155e:	687b      	ldr	r3, [r7, #4]
    1560:	885b      	ldrh	r3, [r3, #2]
    1562:	3301      	adds	r3, #1
    1564:	b29a      	uxth	r2, r3
    1566:	687b      	ldr	r3, [r7, #4]
    1568:	805a      	strh	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:369
    if (DeviceDataPrv->InpRecvDataNum == DeviceDataPrv->InpDataNumReq) { /* Is the requested number of characters received? */
    156a:	687b      	ldr	r3, [r7, #4]
    156c:	885a      	ldrh	r2, [r3, #2]
    156e:	687b      	ldr	r3, [r7, #4]
    1570:	891b      	ldrh	r3, [r3, #8]
    1572:	429a      	cmp	r2, r3
    1574:	d107      	bne.n	1586 <InterruptRx+0x4e>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:370
      DeviceDataPrv->InpDataNumReq = 0x00U; /* If yes then clear number of requested characters to be received. */
    1576:	687b      	ldr	r3, [r7, #4]
    1578:	2200      	movs	r2, #0
    157a:	811a      	strh	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:371
      SerialCom_OnBlockReceived(DeviceDataPrv->UserDataPtr);
    157c:	687b      	ldr	r3, [r7, #4]
    157e:	695b      	ldr	r3, [r3, #20]
    1580:	1c18      	adds	r0, r3, #0
    1582:	f7ff f8fb 	bl	77c <SerialCom_OnBlockReceived>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:374
    }
  }
}
    1586:	46bd      	mov	sp, r7
    1588:	b003      	add	sp, #12
    158a:	bd90      	pop	{r4, r7, pc}
    158c:	4006a000 	.word	0x4006a000

00001590 <InterruptTx>:
InterruptTx():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:387
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptTx(SerialCom_TDeviceDataPtr DeviceDataPrv)
{
    1590:	b580      	push	{r7, lr}
    1592:	b082      	sub	sp, #8
    1594:	af00      	add	r7, sp, #0
    1596:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:389

  if (DeviceDataPrv->OutSentDataNum < DeviceDataPrv->OutDataNumReq) { /* Is number of sent characters less than the number of requested incoming characters? */
    1598:	687b      	ldr	r3, [r7, #4]
    159a:	895a      	ldrh	r2, [r3, #10]
    159c:	687b      	ldr	r3, [r7, #4]
    159e:	8a1b      	ldrh	r3, [r3, #16]
    15a0:	429a      	cmp	r2, r3
    15a2:	d21c      	bcs.n	15de <InterruptTx+0x4e>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:390
    UART0_PDD_PutChar8(UART0_BASE_PTR, *(DeviceDataPrv->OutDataPtr++)); /* Put a 8-bit character to the transmit register */
    15a4:	4919      	ldr	r1, [pc, #100]	; (160c <InterruptTx+0x7c>)
    15a6:	687b      	ldr	r3, [r7, #4]
    15a8:	68db      	ldr	r3, [r3, #12]
    15aa:	1c58      	adds	r0, r3, #1
    15ac:	687a      	ldr	r2, [r7, #4]
    15ae:	60d0      	str	r0, [r2, #12]
    15b0:	781b      	ldrb	r3, [r3, #0]
    15b2:	71cb      	strb	r3, [r1, #7]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:391
    DeviceDataPrv->OutSentDataNum++;   /* Increment the counter of sent characters. */
    15b4:	687b      	ldr	r3, [r7, #4]
    15b6:	895b      	ldrh	r3, [r3, #10]
    15b8:	3301      	adds	r3, #1
    15ba:	b29a      	uxth	r2, r3
    15bc:	687b      	ldr	r3, [r7, #4]
    15be:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:392
    if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
    15c0:	687b      	ldr	r3, [r7, #4]
    15c2:	895a      	ldrh	r2, [r3, #10]
    15c4:	687b      	ldr	r3, [r7, #4]
    15c6:	8a1b      	ldrh	r3, [r3, #16]
    15c8:	429a      	cmp	r2, r3
    15ca:	d11c      	bne.n	1606 <InterruptTx+0x76>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:393
      DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    15cc:	687b      	ldr	r3, [r7, #4]
    15ce:	2200      	movs	r2, #0
    15d0:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:394
      SerialCom_OnBlockSent(DeviceDataPrv->UserDataPtr);
    15d2:	687b      	ldr	r3, [r7, #4]
    15d4:	695b      	ldr	r3, [r3, #20]
    15d6:	1c18      	adds	r0, r3, #0
    15d8:	f7ff f8d8 	bl	78c <SerialCom_OnBlockSent>
    15dc:	e013      	b.n	1606 <InterruptTx+0x76>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:397
    }
  } else {
    UART0_PDD_DisableInterrupt(UART0_BASE_PTR, UART0_PDD_INTERRUPT_TRANSMITTER); /* Disable TX interrupt */
    15de:	4b0b      	ldr	r3, [pc, #44]	; (160c <InterruptTx+0x7c>)
    15e0:	4a0a      	ldr	r2, [pc, #40]	; (160c <InterruptTx+0x7c>)
    15e2:	78d2      	ldrb	r2, [r2, #3]
    15e4:	b2d1      	uxtb	r1, r2
    15e6:	227f      	movs	r2, #127	; 0x7f
    15e8:	400a      	ands	r2, r1
    15ea:	b2d2      	uxtb	r2, r2
    15ec:	70da      	strb	r2, [r3, #3]
    15ee:	4b07      	ldr	r3, [pc, #28]	; (160c <InterruptTx+0x7c>)
    15f0:	4a06      	ldr	r2, [pc, #24]	; (160c <InterruptTx+0x7c>)
    15f2:	7992      	ldrb	r2, [r2, #6]
    15f4:	b2d2      	uxtb	r2, r2
    15f6:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:398
    DeviceDataPrv->SerFlag &= (uint16_t)(~(uint16_t)ENABLED_TX_INT); /* Clear the flag ENABLED_TX_INT */
    15f8:	687b      	ldr	r3, [r7, #4]
    15fa:	881b      	ldrh	r3, [r3, #0]
    15fc:	2201      	movs	r2, #1
    15fe:	4393      	bics	r3, r2
    1600:	b29a      	uxth	r2, r3
    1602:	687b      	ldr	r3, [r7, #4]
    1604:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:400
  }
}
    1606:	46bd      	mov	sp, r7
    1608:	b002      	add	sp, #8
    160a:	bd80      	pop	{r7, pc}
    160c:	4006a000 	.word	0x4006a000

00001610 <SerialCom_Interrupt>:
SerialCom_Interrupt():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:413
**         interrupt. Calls InterruptTX/InterruptRX methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(SerialCom_Interrupt)
{
    1610:	b590      	push	{r4, r7, lr}
    1612:	b083      	sub	sp, #12
    1614:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:415
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  SerialCom_TDeviceDataPtr DeviceDataPrv = INT_UART0__DEFAULT_RTOS_ISRPARAM;
    1616:	4b15      	ldr	r3, [pc, #84]	; (166c <SerialCom_Interrupt+0x5c>)
    1618:	681b      	ldr	r3, [r3, #0]
    161a:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:416
  register uint32_t StatReg = UART0_PDD_ReadInterruptStatusReg(UART0_BASE_PTR); /* Read status register */
    161c:	4b14      	ldr	r3, [pc, #80]	; (1670 <SerialCom_Interrupt+0x60>)
    161e:	791b      	ldrb	r3, [r3, #4]
    1620:	b2db      	uxtb	r3, r3
    1622:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:418

  if (StatReg & (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_FE_MASK | UART0_S1_PF_MASK)) { /* Is any error flag set? */
    1624:	230f      	movs	r3, #15
    1626:	4023      	ands	r3, r4
    1628:	d009      	beq.n	163e <SerialCom_Interrupt+0x2e>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:419
    UART0_PDD_ClearInterruptFlags(UART0_BASE_PTR, (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_FE_MASK | UART0_S1_PF_MASK));
    162a:	4b11      	ldr	r3, [pc, #68]	; (1670 <SerialCom_Interrupt+0x60>)
    162c:	220f      	movs	r2, #15
    162e:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:420
    (void)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Dummy read 8-bit character from receiver */
    1630:	4b0f      	ldr	r3, [pc, #60]	; (1670 <SerialCom_Interrupt+0x60>)
    1632:	79db      	ldrb	r3, [r3, #7]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:421
    StatReg &= (uint32_t)(~(uint32_t)UART0_S1_RDRF_MASK); /* Clear the receive data flag to discard the errorneous data */
    1634:	2320      	movs	r3, #32
    1636:	1c22      	adds	r2, r4, #0
    1638:	439a      	bics	r2, r3
    163a:	1c13      	adds	r3, r2, #0
    163c:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:423
  }
  if (StatReg & UART0_S1_RDRF_MASK) {  /* Is the receiver's interrupt flag set? */
    163e:	2320      	movs	r3, #32
    1640:	4023      	ands	r3, r4
    1642:	d003      	beq.n	164c <SerialCom_Interrupt+0x3c>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:424
    InterruptRx(DeviceDataPrv);        /* If yes, then invoke the internal service routine. This routine is inlined. */
    1644:	687b      	ldr	r3, [r7, #4]
    1646:	1c18      	adds	r0, r3, #0
    1648:	f7ff ff76 	bl	1538 <InterruptRx>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:426
  }
  if (DeviceDataPrv->SerFlag & ENABLED_TX_INT) { /* Is the transmitter interrupt enabled? */
    164c:	687b      	ldr	r3, [r7, #4]
    164e:	881b      	ldrh	r3, [r3, #0]
    1650:	1c1a      	adds	r2, r3, #0
    1652:	2301      	movs	r3, #1
    1654:	4013      	ands	r3, r2
    1656:	d006      	beq.n	1666 <SerialCom_Interrupt+0x56>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:427
    if (StatReg & UART0_S1_TDRE_MASK) { /* Is the transmitter empty? */
    1658:	2380      	movs	r3, #128	; 0x80
    165a:	4023      	ands	r3, r4
    165c:	d003      	beq.n	1666 <SerialCom_Interrupt+0x56>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:428
      InterruptTx(DeviceDataPrv);      /* If yes, then invoke the internal service routine. This routine is inlined. */
    165e:	687b      	ldr	r3, [r7, #4]
    1660:	1c18      	adds	r0, r3, #0
    1662:	f7ff ff95 	bl	1590 <InterruptTx>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/SerialCom.c:431
    }
  }
}
    1666:	46bd      	mov	sp, r7
    1668:	b003      	add	sp, #12
    166a:	bd90      	pop	{r4, r7, pc}
    166c:	1ffff0dc 	.word	0x1ffff0dc
    1670:	4006a000 	.word	0x4006a000

00001674 <TU1_Init>:
TU1_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:153
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
{
    1674:	b580      	push	{r7, lr}
    1676:	b084      	sub	sp, #16
    1678:	af00      	add	r7, sp, #0
    167a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:156
  TU1_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID] == NULL) {
    167c:	4b2a      	ldr	r3, [pc, #168]	; (1728 <TU1_Init+0xb4>)
    167e:	689b      	ldr	r3, [r3, #8]
    1680:	2b00      	cmp	r3, #0
    1682:	d140      	bne.n	1706 <TU1_Init+0x92>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:159
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    1684:	4b29      	ldr	r3, [pc, #164]	; (172c <TU1_Init+0xb8>)
    1686:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:160
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    1688:	68fb      	ldr	r3, [r7, #12]
    168a:	687a      	ldr	r2, [r7, #4]
    168c:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:161
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    168e:	68fb      	ldr	r3, [r7, #12]
    1690:	2201      	movs	r2, #1
    1692:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:172
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_PIT__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    1694:	4b26      	ldr	r3, [pc, #152]	; (1730 <TU1_Init+0xbc>)
    1696:	68fa      	ldr	r2, [r7, #12]
    1698:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:174
  /* SIM_SCGC6: PIT=1 */
  SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;
    169a:	4a26      	ldr	r2, [pc, #152]	; (1734 <TU1_Init+0xc0>)
    169c:	4925      	ldr	r1, [pc, #148]	; (1734 <TU1_Init+0xc0>)
    169e:	4b26      	ldr	r3, [pc, #152]	; (1738 <TU1_Init+0xc4>)
    16a0:	58cb      	ldr	r3, [r1, r3]
    16a2:	2180      	movs	r1, #128	; 0x80
    16a4:	0409      	lsls	r1, r1, #16
    16a6:	4319      	orrs	r1, r3
    16a8:	4b23      	ldr	r3, [pc, #140]	; (1738 <TU1_Init+0xc4>)
    16aa:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:176
  /* PIT_MCR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MDIS=0,FRZ=0 */
  PIT_MCR = 0x00U;                     /* Enable device clock */
    16ac:	4b23      	ldr	r3, [pc, #140]	; (173c <TU1_Init+0xc8>)
    16ae:	2200      	movs	r2, #0
    16b0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:178
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=0,TEN=0 */
  PIT_TCTRL0 = 0x00U;                  /* Clear control register */
    16b2:	4a22      	ldr	r2, [pc, #136]	; (173c <TU1_Init+0xc8>)
    16b4:	2384      	movs	r3, #132	; 0x84
    16b6:	005b      	lsls	r3, r3, #1
    16b8:	2100      	movs	r1, #0
    16ba:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:180
  /* PIT_TFLG0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TIF=1 */
  PIT_TFLG0 = PIT_TFLG_TIF_MASK;       /* Clear timer flag register */
    16bc:	4a1f      	ldr	r2, [pc, #124]	; (173c <TU1_Init+0xc8>)
    16be:	2386      	movs	r3, #134	; 0x86
    16c0:	005b      	lsls	r3, r3, #1
    16c2:	2101      	movs	r1, #1
    16c4:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:182
  /* PIT_LDVAL0: TSV=0xD1 */
  PIT_LDVAL0 = PIT_LDVAL_TSV(0xD1);    /* Set up load register */
    16c6:	4a1d      	ldr	r2, [pc, #116]	; (173c <TU1_Init+0xc8>)
    16c8:	2380      	movs	r3, #128	; 0x80
    16ca:	005b      	lsls	r3, r3, #1
    16cc:	21d1      	movs	r1, #209	; 0xd1
    16ce:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:184
  /* NVIC_IPR5: PRI_22=0x80 */
  NVIC_IPR5 = (uint32_t)((NVIC_IPR5 & (uint32_t)~(uint32_t)(
    16d0:	4a1b      	ldr	r2, [pc, #108]	; (1740 <TU1_Init+0xcc>)
    16d2:	491b      	ldr	r1, [pc, #108]	; (1740 <TU1_Init+0xcc>)
    16d4:	23c5      	movs	r3, #197	; 0xc5
    16d6:	009b      	lsls	r3, r3, #2
    16d8:	58c9      	ldr	r1, [r1, r3]
    16da:	4b1a      	ldr	r3, [pc, #104]	; (1744 <TU1_Init+0xd0>)
    16dc:	4019      	ands	r1, r3
    16de:	23c5      	movs	r3, #197	; 0xc5
    16e0:	009b      	lsls	r3, r3, #2
    16e2:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:190
               NVIC_IP_PRI_22(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_22(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x00400000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x00400000);
    16e4:	4b16      	ldr	r3, [pc, #88]	; (1740 <TU1_Init+0xcc>)
    16e6:	4a16      	ldr	r2, [pc, #88]	; (1740 <TU1_Init+0xcc>)
    16e8:	6812      	ldr	r2, [r2, #0]
    16ea:	2180      	movs	r1, #128	; 0x80
    16ec:	03c9      	lsls	r1, r1, #15
    16ee:	430a      	orrs	r2, r1
    16f0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:192
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=1,TEN=0 */
  PIT_TCTRL0 = PIT_TCTRL_TIE_MASK;     /* Set up control register */
    16f2:	4a12      	ldr	r2, [pc, #72]	; (173c <TU1_Init+0xc8>)
    16f4:	2384      	movs	r3, #132	; 0x84
    16f6:	005b      	lsls	r3, r3, #1
    16f8:	2102      	movs	r1, #2
    16fa:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:194
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
    16fc:	4b0a      	ldr	r3, [pc, #40]	; (1728 <TU1_Init+0xb4>)
    16fe:	68fa      	ldr	r2, [r7, #12]
    1700:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:195
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    1702:	68fb      	ldr	r3, [r7, #12]
    1704:	e00c      	b.n	1720 <TU1_Init+0xac>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:165
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU1_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID];
    1706:	4b08      	ldr	r3, [pc, #32]	; (1728 <TU1_Init+0xb4>)
    1708:	689b      	ldr	r3, [r3, #8]
    170a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:166
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    170c:	68fb      	ldr	r3, [r7, #12]
    170e:	687a      	ldr	r2, [r7, #4]
    1710:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:167
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    1712:	68fb      	ldr	r3, [r7, #12]
    1714:	781b      	ldrb	r3, [r3, #0]
    1716:	3301      	adds	r3, #1
    1718:	b2da      	uxtb	r2, r3
    171a:	68fb      	ldr	r3, [r7, #12]
    171c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:168
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    171e:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:196
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=1,TEN=0 */
  PIT_TCTRL0 = PIT_TCTRL_TIE_MASK;     /* Set up control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    1720:	1c18      	adds	r0, r3, #0
    1722:	46bd      	mov	sp, r7
    1724:	b004      	add	sp, #16
    1726:	bd80      	pop	{r7, pc}
    1728:	1ffff0a8 	.word	0x1ffff0a8
    172c:	1ffff0e0 	.word	0x1ffff0e0
    1730:	1ffff0e8 	.word	0x1ffff0e8
    1734:	40047000 	.word	0x40047000
    1738:	0000103c 	.word	0x0000103c
    173c:	40037000 	.word	0x40037000
    1740:	e000e100 	.word	0xe000e100
    1744:	ff3fffff 	.word	0xff3fffff

00001748 <TU1_Enable>:
TU1_Enable():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:218
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU1_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    1748:	b580      	push	{r7, lr}
    174a:	b082      	sub	sp, #8
    174c:	af00      	add	r7, sp, #0
    174e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:220
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PIT_PDD_EnableDevice(PIT_BASE_PTR, PIT_PDD_CHANNEL_0, PDD_ENABLE); /* Enable the device */
    1750:	4a07      	ldr	r2, [pc, #28]	; (1770 <TU1_Enable+0x28>)
    1752:	4907      	ldr	r1, [pc, #28]	; (1770 <TU1_Enable+0x28>)
    1754:	2384      	movs	r3, #132	; 0x84
    1756:	005b      	lsls	r3, r3, #1
    1758:	58cb      	ldr	r3, [r1, r3]
    175a:	2101      	movs	r1, #1
    175c:	4319      	orrs	r1, r3
    175e:	2384      	movs	r3, #132	; 0x84
    1760:	005b      	lsls	r3, r3, #1
    1762:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:221
  return ERR_OK;
    1764:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:222
}
    1766:	1c18      	adds	r0, r3, #0
    1768:	46bd      	mov	sp, r7
    176a:	b002      	add	sp, #8
    176c:	bd80      	pop	{r7, pc}
    176e:	46c0      	nop			; (mov r8, r8)
    1770:	40037000 	.word	0x40037000

00001774 <TU1_Disable>:
TU1_Disable():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:244
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU1_Disable(LDD_TDeviceData *DeviceDataPtr)
{
    1774:	b580      	push	{r7, lr}
    1776:	b082      	sub	sp, #8
    1778:	af00      	add	r7, sp, #0
    177a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:246
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PIT_PDD_EnableDevice(PIT_BASE_PTR, PIT_PDD_CHANNEL_0, PDD_DISABLE);
    177c:	4a08      	ldr	r2, [pc, #32]	; (17a0 <TU1_Disable+0x2c>)
    177e:	4908      	ldr	r1, [pc, #32]	; (17a0 <TU1_Disable+0x2c>)
    1780:	2384      	movs	r3, #132	; 0x84
    1782:	005b      	lsls	r3, r3, #1
    1784:	58cb      	ldr	r3, [r1, r3]
    1786:	2101      	movs	r1, #1
    1788:	1c18      	adds	r0, r3, #0
    178a:	4388      	bics	r0, r1
    178c:	1c01      	adds	r1, r0, #0
    178e:	2384      	movs	r3, #132	; 0x84
    1790:	005b      	lsls	r3, r3, #1
    1792:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:247
  return ERR_OK;
    1794:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:248
}
    1796:	1c18      	adds	r0, r3, #0
    1798:	46bd      	mov	sp, r7
    179a:	b002      	add	sp, #8
    179c:	bd80      	pop	{r7, pc}
    179e:	46c0      	nop			; (mov r8, r8)
    17a0:	40037000 	.word	0x40037000

000017a4 <TU1_Interrupt>:
TU1_Interrupt():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:305
**         and eventually invokes event(s) of the component.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(TU1_Interrupt)
{
    17a4:	b580      	push	{r7, lr}
    17a6:	b082      	sub	sp, #8
    17a8:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:307
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  TU1_TDeviceDataPtr DeviceDataPrv = INT_PIT__DEFAULT_RTOS_ISRPARAM;
    17aa:	4b0a      	ldr	r3, [pc, #40]	; (17d4 <TU1_Interrupt+0x30>)
    17ac:	681b      	ldr	r3, [r3, #0]
    17ae:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:309

  PIT_PDD_ClearInterruptFlag(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* Clear interrupt flag */
    17b0:	4a09      	ldr	r2, [pc, #36]	; (17d8 <TU1_Interrupt+0x34>)
    17b2:	2386      	movs	r3, #134	; 0x86
    17b4:	005b      	lsls	r3, r3, #1
    17b6:	2101      	movs	r1, #1
    17b8:	50d1      	str	r1, [r2, r3]
    17ba:	4a07      	ldr	r2, [pc, #28]	; (17d8 <TU1_Interrupt+0x34>)
    17bc:	2380      	movs	r3, #128	; 0x80
    17be:	005b      	lsls	r3, r3, #1
    17c0:	58d3      	ldr	r3, [r2, r3]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:310
  TU1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
    17c2:	687b      	ldr	r3, [r7, #4]
    17c4:	685b      	ldr	r3, [r3, #4]
    17c6:	1c18      	adds	r0, r3, #0
    17c8:	f000 f860 	bl	188c <TU1_OnCounterRestart>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TU1.c:311
}
    17cc:	46bd      	mov	sp, r7
    17ce:	b002      	add	sp, #8
    17d0:	bd80      	pop	{r7, pc}
    17d2:	46c0      	nop			; (mov r8, r8)
    17d4:	1ffff0e8 	.word	0x1ffff0e8
    17d8:	40037000 	.word	0x40037000

000017dc <TimerIntLdd1_Init>:
TimerIntLdd1_Init():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:145
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TimerIntLdd1_Init(LDD_TUserData *UserDataPtr)
{
    17dc:	b580      	push	{r7, lr}
    17de:	b084      	sub	sp, #16
    17e0:	af00      	add	r7, sp, #0
    17e2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:149
  /* Allocate device structure */
  TimerIntLdd1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    17e4:	4b0f      	ldr	r3, [pc, #60]	; (1824 <TimerIntLdd1_Init+0x48>)
    17e6:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:150
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    17e8:	68fb      	ldr	r3, [r7, #12]
    17ea:	687a      	ldr	r2, [r7, #4]
    17ec:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:151
  DeviceDataPrv->EnUser = FALSE;       /* Set the flag "device disabled" */
    17ee:	68fb      	ldr	r3, [r7, #12]
    17f0:	2200      	movs	r2, #0
    17f2:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:153
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID,DeviceDataPrv);
    17f4:	4b0c      	ldr	r3, [pc, #48]	; (1828 <TimerIntLdd1_Init+0x4c>)
    17f6:	68fa      	ldr	r2, [r7, #12]
    17f8:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:154
  DeviceDataPrv->LinkedDeviceDataPtr = TU1_Init((LDD_TUserData *)NULL);
    17fa:	2000      	movs	r0, #0
    17fc:	f7ff ff3a 	bl	1674 <TU1_Init>
    1800:	1c02      	adds	r2, r0, #0
    1802:	68fb      	ldr	r3, [r7, #12]
    1804:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:155
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    1806:	68fb      	ldr	r3, [r7, #12]
    1808:	681b      	ldr	r3, [r3, #0]
    180a:	2b00      	cmp	r3, #0
    180c:	d104      	bne.n	1818 <TimerIntLdd1_Init+0x3c>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:157
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID);
    180e:	4b06      	ldr	r3, [pc, #24]	; (1828 <TimerIntLdd1_Init+0x4c>)
    1810:	2200      	movs	r2, #0
    1812:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:160
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the TimerInt initialization is also unsuccessful */
    1814:	2300      	movs	r3, #0
    1816:	e000      	b.n	181a <TimerIntLdd1_Init+0x3e>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:162
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    1818:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:163
}
    181a:	1c18      	adds	r0, r3, #0
    181c:	46bd      	mov	sp, r7
    181e:	b004      	add	sp, #16
    1820:	bd80      	pop	{r7, pc}
    1822:	46c0      	nop			; (mov r8, r8)
    1824:	1ffff0ec 	.word	0x1ffff0ec
    1828:	1ffff0a8 	.word	0x1ffff0a8

0000182c <TimerIntLdd1_Enable>:
TimerIntLdd1_Enable():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:184
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TimerIntLdd1_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    182c:	b580      	push	{r7, lr}
    182e:	b084      	sub	sp, #16
    1830:	af00      	add	r7, sp, #0
    1832:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:185
  TimerIntLdd1_TDeviceData *DeviceDataPrv = (TimerIntLdd1_TDeviceData *)DeviceDataPtr;
    1834:	687b      	ldr	r3, [r7, #4]
    1836:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:187

  if (!DeviceDataPrv->EnUser) {        /* Is the device disabled by user? */
    1838:	68fb      	ldr	r3, [r7, #12]
    183a:	791b      	ldrb	r3, [r3, #4]
    183c:	2b00      	cmp	r3, #0
    183e:	d107      	bne.n	1850 <TimerIntLdd1_Enable+0x24>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:188
    DeviceDataPrv->EnUser = TRUE;      /* If yes then set the flag "device enabled" */
    1840:	68fb      	ldr	r3, [r7, #12]
    1842:	2201      	movs	r2, #1
    1844:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:189
    (void)TU1_Enable(DeviceDataPrv->LinkedDeviceDataPtr); /* Enable TimerUnit */
    1846:	68fb      	ldr	r3, [r7, #12]
    1848:	681b      	ldr	r3, [r3, #0]
    184a:	1c18      	adds	r0, r3, #0
    184c:	f7ff ff7c 	bl	1748 <TU1_Enable>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:191
  }
  return ERR_OK;
    1850:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:192
}
    1852:	1c18      	adds	r0, r3, #0
    1854:	46bd      	mov	sp, r7
    1856:	b004      	add	sp, #16
    1858:	bd80      	pop	{r7, pc}
    185a:	46c0      	nop			; (mov r8, r8)

0000185c <TimerIntLdd1_Disable>:
TimerIntLdd1_Disable():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:213
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TimerIntLdd1_Disable(LDD_TDeviceData *DeviceDataPtr)
{
    185c:	b580      	push	{r7, lr}
    185e:	b084      	sub	sp, #16
    1860:	af00      	add	r7, sp, #0
    1862:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:214
  TimerIntLdd1_TDeviceData *DeviceDataPrv = (TimerIntLdd1_TDeviceData *)DeviceDataPtr;
    1864:	687b      	ldr	r3, [r7, #4]
    1866:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:216

  if (DeviceDataPrv->EnUser) {         /* Is the device enabled by user? */
    1868:	68fb      	ldr	r3, [r7, #12]
    186a:	791b      	ldrb	r3, [r3, #4]
    186c:	2b00      	cmp	r3, #0
    186e:	d007      	beq.n	1880 <TimerIntLdd1_Disable+0x24>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:217
    DeviceDataPrv->EnUser = FALSE;     /* If yes then set the flag "device enabled" */
    1870:	68fb      	ldr	r3, [r7, #12]
    1872:	2200      	movs	r2, #0
    1874:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:218
   (void)TU1_Disable(DeviceDataPrv->LinkedDeviceDataPtr); /* Disable TimerUnit component */
    1876:	68fb      	ldr	r3, [r7, #12]
    1878:	681b      	ldr	r3, [r3, #0]
    187a:	1c18      	adds	r0, r3, #0
    187c:	f7ff ff7a 	bl	1774 <TU1_Disable>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:220
  }
  return ERR_OK;
    1880:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:221
}
    1882:	1c18      	adds	r0, r3, #0
    1884:	46bd      	mov	sp, r7
    1886:	b004      	add	sp, #16
    1888:	bd80      	pop	{r7, pc}
    188a:	46c0      	nop			; (mov r8, r8)

0000188c <TU1_OnCounterRestart>:
TU1_OnCounterRestart():
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:272
**         eventually invokes event TimerIntLdd1_OnInterrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TU1_OnCounterRestart(LDD_TUserData *UserDataPtr)
{
    188c:	b580      	push	{r7, lr}
    188e:	b084      	sub	sp, #16
    1890:	af00      	add	r7, sp, #0
    1892:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:273
  TimerIntLdd1_TDeviceData *DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TimerIntLdd1_ID];
    1894:	4b05      	ldr	r3, [pc, #20]	; (18ac <TU1_OnCounterRestart+0x20>)
    1896:	68db      	ldr	r3, [r3, #12]
    1898:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:276

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  TimerIntLdd1_OnInterrupt(DeviceDataPrv->UserDataPtr); /* Invoke OnInterrupt event */
    189a:	68fb      	ldr	r3, [r7, #12]
    189c:	689b      	ldr	r3, [r3, #8]
    189e:	1c18      	adds	r0, r3, #0
    18a0:	f7ff fb5a 	bl	f58 <TimerIntLdd1_OnInterrupt>
/home/marcelo/Documentos/GER/SDP/Projeto/versão antiga/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:277
}
    18a4:	46bd      	mov	sp, r7
    18a6:	b004      	add	sp, #16
    18a8:	bd80      	pop	{r7, pc}
    18aa:	46c0      	nop			; (mov r8, r8)
    18ac:	1ffff0a8 	.word	0x1ffff0a8

000018b0 <exit>:
exit():
    18b0:	4b08      	ldr	r3, [pc, #32]	; (18d4 <exit+0x24>)
    18b2:	b510      	push	{r4, lr}
    18b4:	1c04      	adds	r4, r0, #0
    18b6:	2b00      	cmp	r3, #0
    18b8:	d002      	beq.n	18c0 <exit+0x10>
    18ba:	2100      	movs	r1, #0
    18bc:	e000      	b.n	18c0 <exit+0x10>
    18be:	bf00      	nop
    18c0:	4b05      	ldr	r3, [pc, #20]	; (18d8 <exit+0x28>)
    18c2:	6818      	ldr	r0, [r3, #0]
    18c4:	6a83      	ldr	r3, [r0, #40]	; 0x28
    18c6:	2b00      	cmp	r3, #0
    18c8:	d000      	beq.n	18cc <exit+0x1c>
    18ca:	4798      	blx	r3
    18cc:	1c20      	adds	r0, r4, #0
    18ce:	f000 f833 	bl	1938 <_exit>
    18d2:	46c0      	nop			; (mov r8, r8)
    18d4:	00000000 	.word	0x00000000
    18d8:	00001954 	.word	0x00001954

000018dc <__libc_init_array>:
__libc_init_array():
    18dc:	b570      	push	{r4, r5, r6, lr}
    18de:	4b0e      	ldr	r3, [pc, #56]	; (1918 <__libc_init_array+0x3c>)
    18e0:	4d0e      	ldr	r5, [pc, #56]	; (191c <__libc_init_array+0x40>)
    18e2:	2400      	movs	r4, #0
    18e4:	1aed      	subs	r5, r5, r3
    18e6:	10ad      	asrs	r5, r5, #2
    18e8:	1c1e      	adds	r6, r3, #0
    18ea:	42ac      	cmp	r4, r5
    18ec:	d004      	beq.n	18f8 <__libc_init_array+0x1c>
    18ee:	00a3      	lsls	r3, r4, #2
    18f0:	58f3      	ldr	r3, [r6, r3]
    18f2:	4798      	blx	r3
    18f4:	3401      	adds	r4, #1
    18f6:	e7f8      	b.n	18ea <__libc_init_array+0xe>
    18f8:	f000 f82e 	bl	1958 <_init>
    18fc:	4b08      	ldr	r3, [pc, #32]	; (1920 <__libc_init_array+0x44>)
    18fe:	4d09      	ldr	r5, [pc, #36]	; (1924 <__libc_init_array+0x48>)
    1900:	2400      	movs	r4, #0
    1902:	1aed      	subs	r5, r5, r3
    1904:	10ad      	asrs	r5, r5, #2
    1906:	1c1e      	adds	r6, r3, #0
    1908:	42ac      	cmp	r4, r5
    190a:	d004      	beq.n	1916 <__libc_init_array+0x3a>
    190c:	00a3      	lsls	r3, r4, #2
    190e:	58f3      	ldr	r3, [r6, r3]
    1910:	4798      	blx	r3
    1912:	3401      	adds	r4, #1
    1914:	e7f8      	b.n	1908 <__libc_init_array+0x2c>
    1916:	bd70      	pop	{r4, r5, r6, pc}
    1918:	00001978 	.word	0x00001978
    191c:	00001978 	.word	0x00001978
    1920:	00001978 	.word	0x00001978
    1924:	0000197c 	.word	0x0000197c

00001928 <memset>:
memset():
    1928:	1c03      	adds	r3, r0, #0
    192a:	1882      	adds	r2, r0, r2
    192c:	4293      	cmp	r3, r2
    192e:	d002      	beq.n	1936 <memset+0xe>
    1930:	7019      	strb	r1, [r3, #0]
    1932:	3301      	adds	r3, #1
    1934:	e7fa      	b.n	192c <memset+0x4>
    1936:	4770      	bx	lr

00001938 <_exit>:
_exit():
    1938:	e7fe      	b.n	1938 <_exit>
    193a:	46c0      	nop			; (mov r8, r8)
$d():
    193c:	000006b4 	.word	0x000006b4
    1940:	000006d0 	.word	0x000006d0
    1944:	00000702 	.word	0x00000702
    1948:	00000666 	.word	0x00000666
    194c:	00000714 	.word	0x00000714
    1950:	00000043 	.word	0x00000043

00001954 <_global_impure_ptr>:
    1954:	1ffff000                                ....

00001958 <_init>:
$t():
    1958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    195a:	46c0      	nop			; (mov r8, r8)
    195c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    195e:	bc08      	pop	{r3}
    1960:	469e      	mov	lr, r3
    1962:	4770      	bx	lr

00001964 <_fini>:
    1964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1966:	46c0      	nop			; (mov r8, r8)
    1968:	bcf8      	pop	{r3, r4, r5, r6, r7}
    196a:	bc08      	pop	{r3}
    196c:	469e      	mov	lr, r3
    196e:	4770      	bx	lr
