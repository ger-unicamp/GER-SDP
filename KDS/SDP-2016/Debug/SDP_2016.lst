
SDP_2016.elf:     file format elf32-littlearm
SDP_2016.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000392d

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x000000c0 memsz 0x000000c0 flags r--
    LOAD off    0x00008400 vaddr 0x00000400 paddr 0x00000400 align 2**15
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00008410 vaddr 0x00000410 paddr 0x00000410 align 2**15
         filesz 0x00005440 memsz 0x00005440 flags rwx
    LOAD off    0x0000f000 vaddr 0x1ffff000 paddr 0x00005850 align 2**15
         filesz 0x00000060 memsz 0x00000350 flags rw-
    LOAD off    0x0000f350 vaddr 0x1ffff350 paddr 0x000058b0 align 2**15
         filesz 0x00000018 memsz 0x00000418 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts   000000c0  00000000  00000000  00008000  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .cfmprotect   00000010  00000400  00000400  00008400  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00005430  00000410  00000410  00008410  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM          00000008  00005840  00005840  0000d840  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  00005848  00005848  0000d848  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0000584c  0000584c  0000d84c  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000060  1ffff000  00005850  0000f000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000002f0  1ffff060  000058b0  0000f060  2**2  ALLOC
  8 .romp         00000018  1ffff350  000058b0  0000f350  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 ._user_heap_stack 00000400  1ffff368  000058c8  0000f368  2**0  ALLOC
 10 .ARM.attributes 00000028  00000000  00000000  0000f368  2**0  CONTENTS, READONLY
 11 .debug_info   000081e6  00000000  00000000  0000f390  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00002ade  00000000  00000000  00017576  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 000008a8  00000000  00000000  0001a054  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000630  00000000  00000000  0001a8fc  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro  00015a0f  00000000  00000000  0001af2c  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   00009569  00000000  00000000  0003093b  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    0004584c  00000000  00000000  00039ea4  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment      00000070  00000000  00000000  0007f6f0  2**0  CONTENTS, READONLY
 19 .debug_frame  00001b00  00000000  00000000  0007f760  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .interrupts	00000000 .interrupts
00000400 l    d  .cfmprotect	00000000 .cfmprotect
00000410 l    d  .text	00000000 .text
00005840 l    d  .ARM	00000000 .ARM
00005848 l    d  .init_array	00000000 .init_array
0000584c l    d  .fini_array	00000000 .fini_array
1ffff000 l    d  .data	00000000 .data
1ffff060 l    d  .bss	00000000 .bss
1ffff350 l    d  .romp	00000000 .romp
1ffff368 l    d  ._user_heap_stack	00000000 ._user_heap_stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 Vectors.c
00000000 l    df *ABS*	00000000 Cpu.c
00000000 l    df *ABS*	00000000 crtstuff.c
00005828 l     O .text	00000000 __EH_FRAME_BEGIN__
00000410 l     F .text	00000000 __do_global_dtors_aux
1ffff060 l       .bss	00000000 completed.7863
0000584c l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00000438 l     F .text	00000000 frame_dummy
1ffff064 l       .bss	00000000 object.7868
00005848 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/../../../../arm-none-eabi/lib/armv6-m/crt0.o
00000000 l    df *ABS*	00000000 _udivsi3.o
000004ec l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
00000588 l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 _clzsi2.o
00000000 l    df *ABS*	00000000 BatteryController.c
00000000 l    df *ABS*	00000000 CameraController.c
00000000 l    df *ABS*	00000000 Error_management.c
00000000 l    df *ABS*	00000000 Events.c
00000000 l    df *ABS*	00000000 ImageProcessing.c
00000000 l    df *ABS*	00000000 MotorController.c
00000000 l    df *ABS*	00000000 PID.c
00000000 l    df *ABS*	00000000 SerialCommunication.c
1ffff07c l     O .bss	00000008 deviceData
00003488 l     F .text	00000020 init_Serial
000034a8 l     F .text	00000044 sendAChar
00000000 l    df *ABS*	00000000 ServoController.c
00000000 l    df *ABS*	00000000 SystemController.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 startup.c
00003940 l       .text	00000000 skip_sp
00000000 l    df *ABS*	00000000 AD_Converter.c
1ffff084 l     O .bss	00000001 SumChan
1ffff085 l     O .bss	00000001 ModeFlg
1ffff088 l     O .bss	00000002 SampleGroup
00005810 l     O .text	00000002 Table
1ffff08c l     O .bss	00000001 OutFlg
0000395c l     F .text	00000018 ClrSumV
00000000 l    df *ABS*	00000000 AdcLdd1.c
00005814 l     O .text	00000002 ChannelToPin
1ffff090 l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff098 l     O .bss	00000004 INT_ADC0__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 BitIoLdd1.c
1ffff09c l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd10.c
1ffff0a0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd11.c
1ffff0a4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd2.c
1ffff0a8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd3.c
1ffff0ac l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd4.c
1ffff0b0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd5.c
1ffff0b4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd6.c
1ffff0b8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd7.c
1ffff0bc l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd8.c
1ffff0c0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd9.c
1ffff0c4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 Camera_CLK_Interruption.c
00000000 l    df *ABS*	00000000 PwmLdd1.c
1ffff124 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00004830 l     F .text	00000066 SetRatio
00000000 l    df *ABS*	00000000 PwmLdd2.c
1ffff130 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00004924 l     F .text	00000066 SetRatio
00000000 l    df *ABS*	00000000 PwmLdd3.c
1ffff13c l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00004a18 l     F .text	00000066 SetRatio
00000000 l    df *ABS*	00000000 PwmLdd4.c
1ffff148 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00004b0c l     F .text	00000066 SetRatio
00000000 l    df *ABS*	00000000 PwmLdd5.c
1ffff154 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00004c78 l     F .text	00000066 SetRatio
00000000 l    df *ABS*	00000000 SerialCom.c
1ffff160 l     O .bss	00000018 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff178 l     O .bss	00000004 INT_UART0__DEFAULT_RTOS_ISRPARAM
00004f54 l     F .text	00000050 InterruptRx
00004fa4 l     F .text	00000080 InterruptTx
00000000 l    df *ABS*	00000000 TU1.c
1ffff17c l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
1ffff184 l     O .bss	00000004 INT_PIT__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 TU2.c
00005818 l     O .text	00000004 ChannelDevice
0000581c l     O .text	00000004 ChannelMode
1ffff188 l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 TU3.c
1ffff190 l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 TimerIntLdd1.c
1ffff19c l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 impure.c
1ffff000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /opt/Freescale/KDS_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 PE_LDD.c
00000000 l    df *ABS*	00000000 
00000400 l       *ABS*	00000000 __stack_size
00020000 l       *ABS*	00000000 text_end
1ffff000 l       .data	00000000 _sdata
000058c8 l       .fini_array	00000000 data_init_end
00005850 l       .fini_array	00000000 ___ROM_AT
00000000 l       *ABS*	00000000 __heap_size
0000584c l       .init_array	00000000 __init_array_end
00005848 l       .init_array	00000000 __preinit_array_end
20003000 l       *ABS*	00000000 _estack
1ffff060 l       .data	00000000 _edata
00005848 l       .init_array	00000000 __init_array_start
00005848 l       .init_array	00000000 __preinit_array_start
00003e98 g     F .text	00000030 AdcLdd1_MeasurementCompleteInterrupt
00002bf4 g     F .text	00000028 updateBatteryLevel
00005368 g     F .text	0000003c TU2_GetPeriodTicks
1ffff1b4 g     O .bss	00000004 clockCounter
1ffff368 g       ._user_heap_stack	00000000 __HeapBase
00000688 g     F .text	00000012 .hidden __aeabi_dcmple
00004280 g     F .text	0000001c BitIoLdd5_NegVal
00004ce0 g     F .text	000001b0 SerialCom_Init
0000216c g     F .text	00000094 .hidden __eqdf2
0000515c g     F .text	0000002c TU1_Enable
00003a74 g     F .text	00000058 AD_Converter_GetChanValue
00002fe0 g     F .text	00000120 Camera_CLK_Interruption_OnInterrupt
1ffff368 g       ._user_heap_stack	00000000 __heap_addr
1ffff0c8 g     O .bss	00000001 SR_lock
1ffff1b8 g     O .bss	00000004 samplesNumber
1ffff1a8 g     O .bss	00000001 handlingPowerUpdate
00005534 g     F .text	00000044 TU3_SetOffsetTicks
00003620 g     F .text	00000050 advancedControl
000043c0 g     F .text	0000001c BitIoLdd7_ClrVal
00004a80 g     F .text	00000058 PwmLdd4_Init
00004ad8 g     F .text	00000032 PwmLdd4_SetRatio8
00005848 g       .ARM	00000000 __exidx_end
000054f8 g     F .text	0000003c TU3_GetPeriodTicks
00004178 g     F .text	00000068 BitIoLdd4_Init
00002200 g     F .text	000000fc .hidden __gtdf2
1ffff1bc g     O .bss	00000004 transferTime
00003188 g     F .text	00000090 binarization
000040e0 g     F .text	00000018 BitIoLdd2_SetVal
00003ec8 g     F .text	00000060 BitIoLdd1_Init
00005840 g       .text	00000000 _etext
00000658 g     F .text	00000010 .hidden __aeabi_cdcmple
1ffff1c0 g     O .bss	00000004 currentSample
00000768 g     F .text	000002d8 .hidden __aeabi_fadd
00000000 g     O .interrupts	000000c0 __vect_table
00002c20 g     F .text	0000022c updatePowerState
00004304 g     F .text	0000001c BitIoLdd6_ClrVal
00003a10 g     F .text	00000064 AD_Converter_MeasureChan
00003cd0 g     F .text	00000044 AdcLdd1_StartSingleMeasurement
000044b4 g     F .text	0000001c BitIoLdd8_NegVal
00005188 g     F .text	00000074 TU1_SetEventMask
00000648 g     F .text	00000020 .hidden __aeabi_cdrcmple
00003400 g     F .text	00000088 update_pid
00000710 g     F .text	00000012 .hidden __aeabi_fcmpgt
000022fc g     F .text	000000fc .hidden __ltdf2
00005848 g       .init_array	00000000 __DTOR_END__
000004e8 g     F .text	00000088 .hidden __udivsi3
1ffff060 g       .bss	00000000 __START_BSS
00001388 g     F .text	000000b8 .hidden __aeabi_i2f
00004bcc g     F .text	0000002e PwmLdd5_Enable
00000d70 g     F .text	00000096 .hidden __lesf2
1ffff368 g       ._user_heap_stack	00000000 __HeapLimit
1ffff060 g       .bss	00000000 __bss_start__
00003134 g     F .text	00000018 SerialCom_OnBlockSent
00003de0 g     F .text	000000b8 AdcLdd1_GetCalibrationResultStatus
00002f5c g     F .text	0000007c get_error
00003f80 g     F .text	00000060 BitIoLdd10_Init
00002e50 g     F .text	00000028 initializeCamera
000049e4 g     F .text	00000032 PwmLdd3_SetRatio8
00002eec g     F .text	00000070 verifySample
00000674 g     F .text	00000012 .hidden __aeabi_dcmplt
00001b24 g     F .text	00000648 .hidden __aeabi_ddiv
0000392c g     F .text	00000030 __thumb_startup
00000c8c g     F .text	00000054 .hidden __nesf2
000034ec g     F .text	0000009a itoa_8_bit
00003bc4 g     F .text	0000002c AD_Converter_Init
00005840 g       .ARM	00000000 __exidx_start
000023f8 g     F .text	00000520 .hidden __aeabi_dmul
000047fc g     F .text	00000032 PwmLdd1_SetRatio8
00005824 g     O .text	00000004 _global_impure_ptr
00005688 g     F .text	0000004c __libc_init_array
00003924  w    F .text	00000008 __init_user
00000470 g     F .text	00000000 _mainCRTStartup
1ffff2c8 g     O .bss	00000080 referenceImage
1ffff1a9 g     O .bss	00000001 serialTest
00002e78 g     F .text	00000074 getRawImageMean
00005828 g     F .text	00000000 _init
1ffff1c4 g     O .bss	00000004 state
000055c8 g     F .text	0000002e TimerIntLdd1_Enable
00002aa0 g     F .text	00000118 .hidden __aeabi_d2f
0000105c g     F .text	000002ec .hidden __aeabi_fsub
00000000  w      *UND*	00000000 __libc_fini_array
00004898 g     F .text	00000058 PwmLdd2_Init
00004560 g     F .text	00000110 __init_hardware
00004040 g     F .text	00000060 BitIoLdd2_Init
000041e0 g     F .text	0000001c BitIoLdd4_SetVal
00000724 g     F .text	00000012 .hidden __aeabi_fcmpge
1ffff1c8 g     O .bss	00000080 rawImage
00005024 g     F .text	00000064 SerialCom_Interrupt
00005638 g     F .text	00000024 TU1_OnCounterRestart
00000ce0 g     F .text	0000008e .hidden __gtsf2
00003974 g     F .text	0000009c AD_Converter_HWEnDi
1ffff348 g     O .bss	00000004 AdcLdd1_DeviceDataPtr
000014e0 g     F .text	00000644 .hidden __aeabi_dadd
000022fc g     F .text	000000fc .hidden __ledf2
00003f50 g     F .text	00000018 BitIoLdd1_ClrVal
000006fc g     F .text	00000012 .hidden __aeabi_fcmple
00000000  w      *UND*	00000000 __sf_fake_stderr
00000000  w      *UND*	00000000 __deregister_frame_info
00000584 g     F .text	00000000 .hidden __aeabi_idiv
000037ac g     F .text	000000d6 __copy_rom_section
00002fd8 g     F .text	00000008 Cpu_OnNMIINT
000035d8 g     F .text	00000044 setServoDirection
00005848 g       .init_array	00000000 __CTOR_LIST__
000032d8 g     F .text	000000c4 setMotorsSpeed
0000069c g     F .text	00000012 .hidden __aeabi_dcmpgt
00002bb8 g     F .text	0000003c .hidden __clzsi2
000043f8 g     F .text	0000001c BitIoLdd7_NegVal
1ffff350 g       .bss	00000000 __bss_end__
000006b0 g     F .text	00000012 .hidden __aeabi_dcmpge
00000000  w      *UND*	00000000 __call_exitprocs
000040c8 g     F .text	00000018 BitIoLdd2_ClrVal
00000470 g     F .text	00000000 _start
00003bf0 g     F .text	000000e0 AdcLdd1_Init
00003f68 g     F .text	00000018 BitIoLdd1_SetVal
00000400 g     O .cfmprotect	00000010 _cfm
00000000 g       .interrupts	00000000 __vector_table
000048f0 g     F .text	00000032 PwmLdd2_SetRatio8
00001348 g     F .text	00000040 .hidden __aeabi_f2iz
00000c8c g     F .text	00000054 .hidden __eqsf2
20003000 g       *ABS*	00000000 __SP_INIT
00000000  w      *UND*	00000000 software_init_hook
0000433c g     F .text	0000001c BitIoLdd6_NegVal
00004bfc g     F .text	0000007c PwmLdd5_SetDutyUS
00000a40 g     F .text	0000024c .hidden __aeabi_fdiv
00002980 g     F .text	0000007c .hidden __aeabi_i2d
00003d14 g     F .text	0000006c AdcLdd1_CreateSampleGroup
00004150 g     F .text	00000028 BitIoLdd3_GetVal
00004670 g     F .text	00000134 PE_low_level_init
00000644  w    F .text	00000002 .hidden __aeabi_ldiv0
00003d80 g     F .text	00000060 AdcLdd1_GetMeasuredValues
00001440 g     F .text	000000a0 .hidden __aeabi_ui2f
1ffff1ac g     O .bss	00000004 batteryLevel
00003884 g     F .text	00000098 __copy_rom_sections_to_ram
000041fc g     F .text	00000068 BitIoLdd5_Init
0000314c g     F .text	00000038 calibration
00000000  w      *UND*	00000000 __sf_fake_stdin
1ffff34e g     O .bss	00000001 SR_reg
00004358 g     F .text	00000068 BitIoLdd7_Init
000056d4 g     F .text	00000010 memset
00003670 g     F .text	0000013c main
00000d70 g     F .text	00000096 .hidden __ltsf2
00003acc g     F .text	000000f8 AdcLdd1_OnMeasurementComplete
000004e8 g     F .text	00000000 .hidden __aeabi_uidiv
00004554 g     F .text	0000000a Cpu_Interrupt
0000429c g     F .text	00000068 BitIoLdd6_Init
000044d0 g     F .text	00000064 BitIoLdd9_Init
1ffff0cc g     O .bss	00000058 PE_LDD_DeviceDataList
00000000  w      *UND*	00000000 hardware_init_hook
000047a4 g     F .text	00000058 PwmLdd1_Init
00004534 g     F .text	00000012 TimerIntLdd1_OnInterrupt
0000498c g     F .text	00000058 PwmLdd3_Init
000006cc g     F .text	00000010 .hidden __aeabi_cfcmple
00000584 g     F .text	000000ac .hidden __divsi3
000055f8 g     F .text	00000040 TimerIntLdd1_SetEventMask
00005848 g       .init_array	00000000 __CTOR_END__
0000447c g     F .text	0000001c BitIoLdd8_ClrVal
00005848 g       .init_array	00000000 __DTOR_LIST__
1ffff350 g       .bss	00000000 __END_BSS
0000216c g     F .text	00000094 .hidden __nedf2
00005834 g     F .text	00000000 _fini
000058b0 g       .fini_array	00000000 _romp_at
00005234 g     F .text	00000134 TU2_Init
00000000  w      *UND*	00000000 atexit
00000ce0 g     F .text	0000008e .hidden __gesf2
1ffff1b0 g     O .bss	00000001 serialFinished
1ffff1b1 g     O .bss	00000001 serialTestStart
000006dc g     F .text	0000000c .hidden __aeabi_fcmpeq
00000e08 g     F .text	00000254 .hidden __aeabi_fmul
1ffff000 g       .data	00000000 _mtb_end
00003588 g     F .text	00000050 sendArrayOfPixels
000051fc g     F .text	00000038 TU1_Interrupt
000006c4 g     F .text	00000018 .hidden __aeabi_cfrcmple
000040f8 g     F .text	00000058 BitIoLdd3_Init
00004414 g     F .text	00000068 BitIoLdd8_Init
00004264 g     F .text	0000001c BitIoLdd5_SetVal
000043dc g     F .text	0000001c BitIoLdd7_SetVal
000006e8 g     F .text	00000012 .hidden __aeabi_fcmplt
000058b0 g       .fini_array	00000000 __S_romp
20003000 g       *ABS*	00000000 __stack
00000570 g     F .text	00000012 .hidden __aeabi_uidivmod
00000668 g     F .text	0000000c .hidden __aeabi_dcmpeq
00003f28 g     F .text	00000028 BitIoLdd1_GetVal
000053a4 g     F .text	00000058 TU2_SetOffsetTicks
000040a0 g     F .text	00000028 BitIoLdd2_GetVal
00004498 g     F .text	0000001c BitIoLdd8_SetVal
00000738 g     F .text	0000002e .hidden __aeabi_f2uiz
00003fe0 g     F .text	00000060 BitIoLdd11_Init
0000565c g     F .text	0000002c exit
1ffff34c g     O .bss	00000002 AD_Converter_OutV
00002918 g     F .text	00000068 .hidden __aeabi_d2iz
000053fc g     F .text	000000cc TU3_Init
0000391c  w    F .text	00000008 __init_registers
000006cc g     F .text	00000010 .hidden __aeabi_cfcmpeq
1ffff000 g       .data	00000000 _mtb_start
00000000  w      *UND*	00000000 __sf_fake_stdout
00005578 g     F .text	00000050 TimerIntLdd1_Init
00005088 g     F .text	000000d4 TU1_Init
00000644  w    F .text	00000002 .hidden __aeabi_idiv0
00000738 g     F .text	0000002e .hidden __fixunssfsi
00004b74 g     F .text	00000058 PwmLdd5_Init
000056e4 g     F .text	00000002 _exit
00004e90 g     F .text	000000c4 SerialCom_SendBlock
000054c8 g     F .text	00000030 TU3_Enable
1ffff248 g     O .bss	00000080 rawImageBuffer
00000658 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00002200 g     F .text	000000fc .hidden __gedf2
00003100 g     F .text	00000034 AD_Converter_OnEnd
000029fc g     F .text	000000a4 .hidden __aeabi_f2d
00000000  w      *UND*	00000000 _Jv_RegisterClasses
00000630 g     F .text	00000012 .hidden __aeabi_idivmod
00000060 g       *ABS*	00000000 ___data_size
00004548 g     F .text	0000000c Cpu_INT_NMIInterrupt
00000000  w      *UND*	00000000 __register_frame_info
000033a0 g     F .text	00000060 resetPID
00003218 g     F .text	000000c0 setBorders
00004320 g     F .text	0000001c BitIoLdd6_SetVal



Disassembly of section .text:

00000410 <__do_global_dtors_aux>:
$t():
     410:	b510      	push	{r4, lr}
     412:	4c06      	ldr	r4, [pc, #24]	; (42c <__do_global_dtors_aux+0x1c>)
     414:	7823      	ldrb	r3, [r4, #0]
     416:	2b00      	cmp	r3, #0
     418:	d107      	bne.n	42a <__do_global_dtors_aux+0x1a>
     41a:	4b05      	ldr	r3, [pc, #20]	; (430 <__do_global_dtors_aux+0x20>)
     41c:	2b00      	cmp	r3, #0
     41e:	d002      	beq.n	426 <__do_global_dtors_aux+0x16>
     420:	4804      	ldr	r0, [pc, #16]	; (434 <__do_global_dtors_aux+0x24>)
     422:	e000      	b.n	426 <__do_global_dtors_aux+0x16>
     424:	bf00      	nop
     426:	2301      	movs	r3, #1
     428:	7023      	strb	r3, [r4, #0]
     42a:	bd10      	pop	{r4, pc}
$d():
     42c:	1ffff060 	.word	0x1ffff060
     430:	00000000 	.word	0x00000000
     434:	00005828 	.word	0x00005828

00000438 <frame_dummy>:
$t():
     438:	b508      	push	{r3, lr}
     43a:	4b08      	ldr	r3, [pc, #32]	; (45c <frame_dummy+0x24>)
     43c:	2b00      	cmp	r3, #0
     43e:	d003      	beq.n	448 <frame_dummy+0x10>
     440:	4807      	ldr	r0, [pc, #28]	; (460 <frame_dummy+0x28>)
     442:	4908      	ldr	r1, [pc, #32]	; (464 <frame_dummy+0x2c>)
     444:	e000      	b.n	448 <frame_dummy+0x10>
     446:	bf00      	nop
     448:	4807      	ldr	r0, [pc, #28]	; (468 <frame_dummy+0x30>)
     44a:	6803      	ldr	r3, [r0, #0]
     44c:	2b00      	cmp	r3, #0
     44e:	d003      	beq.n	458 <frame_dummy+0x20>
     450:	4b06      	ldr	r3, [pc, #24]	; (46c <frame_dummy+0x34>)
     452:	2b00      	cmp	r3, #0
     454:	d000      	beq.n	458 <frame_dummy+0x20>
     456:	4798      	blx	r3
     458:	bd08      	pop	{r3, pc}
     45a:	46c0      	nop			; (mov r8, r8)
$d():
     45c:	00000000 	.word	0x00000000
     460:	00005828 	.word	0x00005828
     464:	1ffff064 	.word	0x1ffff064
     468:	1ffff060 	.word	0x1ffff060
     46c:	00000000 	.word	0x00000000

00000470 <_mainCRTStartup>:
$t():
     470:	4b16      	ldr	r3, [pc, #88]	; (4cc <_mainCRTStartup+0x5c>)
     472:	2b00      	cmp	r3, #0
     474:	d100      	bne.n	478 <_mainCRTStartup+0x8>
     476:	4b14      	ldr	r3, [pc, #80]	; (4c8 <_mainCRTStartup+0x58>)
     478:	469d      	mov	sp, r3
     47a:	2240      	movs	r2, #64	; 0x40
     47c:	0292      	lsls	r2, r2, #10
     47e:	1a9a      	subs	r2, r3, r2
     480:	4692      	mov	sl, r2
     482:	2100      	movs	r1, #0
     484:	468b      	mov	fp, r1
     486:	460f      	mov	r7, r1
     488:	4813      	ldr	r0, [pc, #76]	; (4d8 <_mainCRTStartup+0x68>)
     48a:	4a14      	ldr	r2, [pc, #80]	; (4dc <_mainCRTStartup+0x6c>)
     48c:	1a12      	subs	r2, r2, r0
     48e:	f005 f921 	bl	56d4 <memset>
     492:	4b0f      	ldr	r3, [pc, #60]	; (4d0 <_mainCRTStartup+0x60>)
     494:	2b00      	cmp	r3, #0
     496:	d000      	beq.n	49a <_mainCRTStartup+0x2a>
     498:	4798      	blx	r3
     49a:	4b0e      	ldr	r3, [pc, #56]	; (4d4 <_mainCRTStartup+0x64>)
     49c:	2b00      	cmp	r3, #0
     49e:	d000      	beq.n	4a2 <_mainCRTStartup+0x32>
     4a0:	4798      	blx	r3
     4a2:	2000      	movs	r0, #0
     4a4:	2100      	movs	r1, #0
     4a6:	0004      	movs	r4, r0
     4a8:	000d      	movs	r5, r1
     4aa:	480d      	ldr	r0, [pc, #52]	; (4e0 <_mainCRTStartup+0x70>)
     4ac:	2800      	cmp	r0, #0
     4ae:	d002      	beq.n	4b6 <_mainCRTStartup+0x46>
     4b0:	480c      	ldr	r0, [pc, #48]	; (4e4 <_mainCRTStartup+0x74>)
     4b2:	e000      	b.n	4b6 <_mainCRTStartup+0x46>
     4b4:	bf00      	nop
     4b6:	f005 f8e7 	bl	5688 <__libc_init_array>
     4ba:	0020      	movs	r0, r4
     4bc:	0029      	movs	r1, r5
     4be:	f003 f8d7 	bl	3670 <main>
     4c2:	f005 f8cb 	bl	565c <exit>
     4c6:	46c0      	nop			; (mov r8, r8)
$d():
     4c8:	00080000 	.word	0x00080000
     4cc:	20003000 	.word	0x20003000
	...
     4d8:	1ffff060 	.word	0x1ffff060
     4dc:	1ffff350 	.word	0x1ffff350
	...

000004e8 <__aeabi_uidiv>:
__udivsi3():
     4e8:	2900      	cmp	r1, #0
     4ea:	d034      	beq.n	556 <.udivsi3_skip_div0_test+0x6a>

000004ec <.udivsi3_skip_div0_test>:
     4ec:	2301      	movs	r3, #1
     4ee:	2200      	movs	r2, #0
     4f0:	b410      	push	{r4}
     4f2:	4288      	cmp	r0, r1
     4f4:	d32c      	bcc.n	550 <.udivsi3_skip_div0_test+0x64>
     4f6:	2401      	movs	r4, #1
     4f8:	0724      	lsls	r4, r4, #28
     4fa:	42a1      	cmp	r1, r4
     4fc:	d204      	bcs.n	508 <.udivsi3_skip_div0_test+0x1c>
     4fe:	4281      	cmp	r1, r0
     500:	d202      	bcs.n	508 <.udivsi3_skip_div0_test+0x1c>
     502:	0109      	lsls	r1, r1, #4
     504:	011b      	lsls	r3, r3, #4
     506:	e7f8      	b.n	4fa <.udivsi3_skip_div0_test+0xe>
     508:	00e4      	lsls	r4, r4, #3
     50a:	42a1      	cmp	r1, r4
     50c:	d204      	bcs.n	518 <.udivsi3_skip_div0_test+0x2c>
     50e:	4281      	cmp	r1, r0
     510:	d202      	bcs.n	518 <.udivsi3_skip_div0_test+0x2c>
     512:	0049      	lsls	r1, r1, #1
     514:	005b      	lsls	r3, r3, #1
     516:	e7f8      	b.n	50a <.udivsi3_skip_div0_test+0x1e>
     518:	4288      	cmp	r0, r1
     51a:	d301      	bcc.n	520 <.udivsi3_skip_div0_test+0x34>
     51c:	1a40      	subs	r0, r0, r1
     51e:	431a      	orrs	r2, r3
     520:	084c      	lsrs	r4, r1, #1
     522:	42a0      	cmp	r0, r4
     524:	d302      	bcc.n	52c <.udivsi3_skip_div0_test+0x40>
     526:	1b00      	subs	r0, r0, r4
     528:	085c      	lsrs	r4, r3, #1
     52a:	4322      	orrs	r2, r4
     52c:	088c      	lsrs	r4, r1, #2
     52e:	42a0      	cmp	r0, r4
     530:	d302      	bcc.n	538 <.udivsi3_skip_div0_test+0x4c>
     532:	1b00      	subs	r0, r0, r4
     534:	089c      	lsrs	r4, r3, #2
     536:	4322      	orrs	r2, r4
     538:	08cc      	lsrs	r4, r1, #3
     53a:	42a0      	cmp	r0, r4
     53c:	d302      	bcc.n	544 <.udivsi3_skip_div0_test+0x58>
     53e:	1b00      	subs	r0, r0, r4
     540:	08dc      	lsrs	r4, r3, #3
     542:	4322      	orrs	r2, r4
     544:	2800      	cmp	r0, #0
     546:	d003      	beq.n	550 <.udivsi3_skip_div0_test+0x64>
     548:	091b      	lsrs	r3, r3, #4
     54a:	d001      	beq.n	550 <.udivsi3_skip_div0_test+0x64>
     54c:	0909      	lsrs	r1, r1, #4
     54e:	e7e3      	b.n	518 <.udivsi3_skip_div0_test+0x2c>
     550:	1c10      	adds	r0, r2, #0
     552:	bc10      	pop	{r4}
     554:	4770      	bx	lr
     556:	2800      	cmp	r0, #0
     558:	d001      	beq.n	55e <.udivsi3_skip_div0_test+0x72>
     55a:	2000      	movs	r0, #0
     55c:	43c0      	mvns	r0, r0
     55e:	b407      	push	{r0, r1, r2}
     560:	4802      	ldr	r0, [pc, #8]	; (56c <.udivsi3_skip_div0_test+0x80>)
     562:	a102      	add	r1, pc, #8	; (adr r1, 56c <.udivsi3_skip_div0_test+0x80>)
     564:	1840      	adds	r0, r0, r1
     566:	9002      	str	r0, [sp, #8]
     568:	bd03      	pop	{r0, r1, pc}
     56a:	46c0      	nop			; (mov r8, r8)
     56c:	000000d9 	.word	0x000000d9

00000570 <__aeabi_uidivmod>:
__aeabi_uidivmod():
     570:	2900      	cmp	r1, #0
     572:	d0f0      	beq.n	556 <.udivsi3_skip_div0_test+0x6a>
     574:	b503      	push	{r0, r1, lr}
     576:	f7ff ffb9 	bl	4ec <.udivsi3_skip_div0_test>
     57a:	bc0e      	pop	{r1, r2, r3}
     57c:	4342      	muls	r2, r0
     57e:	1a89      	subs	r1, r1, r2
     580:	4718      	bx	r3
     582:	46c0      	nop			; (mov r8, r8)

00000584 <__aeabi_idiv>:
__divsi3():
     584:	2900      	cmp	r1, #0
     586:	d041      	beq.n	60c <.divsi3_skip_div0_test+0x84>

00000588 <.divsi3_skip_div0_test>:
     588:	b410      	push	{r4}
     58a:	1c04      	adds	r4, r0, #0
     58c:	404c      	eors	r4, r1
     58e:	46a4      	mov	ip, r4
     590:	2301      	movs	r3, #1
     592:	2200      	movs	r2, #0
     594:	2900      	cmp	r1, #0
     596:	d500      	bpl.n	59a <.divsi3_skip_div0_test+0x12>
     598:	4249      	negs	r1, r1
     59a:	2800      	cmp	r0, #0
     59c:	d500      	bpl.n	5a0 <.divsi3_skip_div0_test+0x18>
     59e:	4240      	negs	r0, r0
     5a0:	4288      	cmp	r0, r1
     5a2:	d32c      	bcc.n	5fe <.divsi3_skip_div0_test+0x76>
     5a4:	2401      	movs	r4, #1
     5a6:	0724      	lsls	r4, r4, #28
     5a8:	42a1      	cmp	r1, r4
     5aa:	d204      	bcs.n	5b6 <.divsi3_skip_div0_test+0x2e>
     5ac:	4281      	cmp	r1, r0
     5ae:	d202      	bcs.n	5b6 <.divsi3_skip_div0_test+0x2e>
     5b0:	0109      	lsls	r1, r1, #4
     5b2:	011b      	lsls	r3, r3, #4
     5b4:	e7f8      	b.n	5a8 <.divsi3_skip_div0_test+0x20>
     5b6:	00e4      	lsls	r4, r4, #3
     5b8:	42a1      	cmp	r1, r4
     5ba:	d204      	bcs.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5bc:	4281      	cmp	r1, r0
     5be:	d202      	bcs.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5c0:	0049      	lsls	r1, r1, #1
     5c2:	005b      	lsls	r3, r3, #1
     5c4:	e7f8      	b.n	5b8 <.divsi3_skip_div0_test+0x30>
     5c6:	4288      	cmp	r0, r1
     5c8:	d301      	bcc.n	5ce <.divsi3_skip_div0_test+0x46>
     5ca:	1a40      	subs	r0, r0, r1
     5cc:	431a      	orrs	r2, r3
     5ce:	084c      	lsrs	r4, r1, #1
     5d0:	42a0      	cmp	r0, r4
     5d2:	d302      	bcc.n	5da <.divsi3_skip_div0_test+0x52>
     5d4:	1b00      	subs	r0, r0, r4
     5d6:	085c      	lsrs	r4, r3, #1
     5d8:	4322      	orrs	r2, r4
     5da:	088c      	lsrs	r4, r1, #2
     5dc:	42a0      	cmp	r0, r4
     5de:	d302      	bcc.n	5e6 <.divsi3_skip_div0_test+0x5e>
     5e0:	1b00      	subs	r0, r0, r4
     5e2:	089c      	lsrs	r4, r3, #2
     5e4:	4322      	orrs	r2, r4
     5e6:	08cc      	lsrs	r4, r1, #3
     5e8:	42a0      	cmp	r0, r4
     5ea:	d302      	bcc.n	5f2 <.divsi3_skip_div0_test+0x6a>
     5ec:	1b00      	subs	r0, r0, r4
     5ee:	08dc      	lsrs	r4, r3, #3
     5f0:	4322      	orrs	r2, r4
     5f2:	2800      	cmp	r0, #0
     5f4:	d003      	beq.n	5fe <.divsi3_skip_div0_test+0x76>
     5f6:	091b      	lsrs	r3, r3, #4
     5f8:	d001      	beq.n	5fe <.divsi3_skip_div0_test+0x76>
     5fa:	0909      	lsrs	r1, r1, #4
     5fc:	e7e3      	b.n	5c6 <.divsi3_skip_div0_test+0x3e>
     5fe:	1c10      	adds	r0, r2, #0
     600:	4664      	mov	r4, ip
     602:	2c00      	cmp	r4, #0
     604:	d500      	bpl.n	608 <.divsi3_skip_div0_test+0x80>
     606:	4240      	negs	r0, r0
     608:	bc10      	pop	{r4}
     60a:	4770      	bx	lr
     60c:	2800      	cmp	r0, #0
     60e:	d006      	beq.n	61e <.divsi3_skip_div0_test+0x96>
     610:	db03      	blt.n	61a <.divsi3_skip_div0_test+0x92>
     612:	2000      	movs	r0, #0
     614:	43c0      	mvns	r0, r0
     616:	0840      	lsrs	r0, r0, #1
     618:	e001      	b.n	61e <.divsi3_skip_div0_test+0x96>
     61a:	2080      	movs	r0, #128	; 0x80
     61c:	0600      	lsls	r0, r0, #24
     61e:	b407      	push	{r0, r1, r2}
     620:	4802      	ldr	r0, [pc, #8]	; (62c <.divsi3_skip_div0_test+0xa4>)
     622:	a102      	add	r1, pc, #8	; (adr r1, 62c <.divsi3_skip_div0_test+0xa4>)
     624:	1840      	adds	r0, r0, r1
     626:	9002      	str	r0, [sp, #8]
     628:	bd03      	pop	{r0, r1, pc}
     62a:	46c0      	nop			; (mov r8, r8)
     62c:	00000019 	.word	0x00000019

00000630 <__aeabi_idivmod>:
__aeabi_idivmod():
     630:	2900      	cmp	r1, #0
     632:	d0eb      	beq.n	60c <.divsi3_skip_div0_test+0x84>
     634:	b503      	push	{r0, r1, lr}
     636:	f7ff ffa7 	bl	588 <.divsi3_skip_div0_test>
     63a:	bc0e      	pop	{r1, r2, r3}
     63c:	4342      	muls	r2, r0
     63e:	1a89      	subs	r1, r1, r2
     640:	4718      	bx	r3
     642:	46c0      	nop			; (mov r8, r8)

00000644 <__aeabi_idiv0>:
__aeabi_ldiv0():
     644:	4770      	bx	lr
     646:	46c0      	nop			; (mov r8, r8)

00000648 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
     648:	4684      	mov	ip, r0
     64a:	1c10      	adds	r0, r2, #0
     64c:	4662      	mov	r2, ip
     64e:	468c      	mov	ip, r1
     650:	1c19      	adds	r1, r3, #0
     652:	4663      	mov	r3, ip
     654:	e000      	b.n	658 <__aeabi_cdcmpeq>
     656:	46c0      	nop			; (mov r8, r8)

00000658 <__aeabi_cdcmpeq>:
     658:	b51f      	push	{r0, r1, r2, r3, r4, lr}
     65a:	f001 fe4f 	bl	22fc <__ledf2>
     65e:	2800      	cmp	r0, #0
     660:	d401      	bmi.n	666 <__aeabi_cdcmpeq+0xe>
     662:	2100      	movs	r1, #0
     664:	42c8      	cmn	r0, r1
     666:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00000668 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
     668:	b510      	push	{r4, lr}
     66a:	f001 fd7f 	bl	216c <__eqdf2>
     66e:	4240      	negs	r0, r0
     670:	3001      	adds	r0, #1
     672:	bd10      	pop	{r4, pc}

00000674 <__aeabi_dcmplt>:
__aeabi_dcmplt():
     674:	b510      	push	{r4, lr}
     676:	f001 fe41 	bl	22fc <__ledf2>
     67a:	2800      	cmp	r0, #0
     67c:	db01      	blt.n	682 <__aeabi_dcmplt+0xe>
     67e:	2000      	movs	r0, #0
     680:	bd10      	pop	{r4, pc}
     682:	2001      	movs	r0, #1
     684:	bd10      	pop	{r4, pc}
     686:	46c0      	nop			; (mov r8, r8)

00000688 <__aeabi_dcmple>:
__aeabi_dcmple():
     688:	b510      	push	{r4, lr}
     68a:	f001 fe37 	bl	22fc <__ledf2>
     68e:	2800      	cmp	r0, #0
     690:	dd01      	ble.n	696 <__aeabi_dcmple+0xe>
     692:	2000      	movs	r0, #0
     694:	bd10      	pop	{r4, pc}
     696:	2001      	movs	r0, #1
     698:	bd10      	pop	{r4, pc}
     69a:	46c0      	nop			; (mov r8, r8)

0000069c <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
     69c:	b510      	push	{r4, lr}
     69e:	f001 fdaf 	bl	2200 <__gedf2>
     6a2:	2800      	cmp	r0, #0
     6a4:	dc01      	bgt.n	6aa <__aeabi_dcmpgt+0xe>
     6a6:	2000      	movs	r0, #0
     6a8:	bd10      	pop	{r4, pc}
     6aa:	2001      	movs	r0, #1
     6ac:	bd10      	pop	{r4, pc}
     6ae:	46c0      	nop			; (mov r8, r8)

000006b0 <__aeabi_dcmpge>:
__aeabi_dcmpge():
     6b0:	b510      	push	{r4, lr}
     6b2:	f001 fda5 	bl	2200 <__gedf2>
     6b6:	2800      	cmp	r0, #0
     6b8:	da01      	bge.n	6be <__aeabi_dcmpge+0xe>
     6ba:	2000      	movs	r0, #0
     6bc:	bd10      	pop	{r4, pc}
     6be:	2001      	movs	r0, #1
     6c0:	bd10      	pop	{r4, pc}
     6c2:	46c0      	nop			; (mov r8, r8)

000006c4 <__aeabi_cfrcmple>:
__aeabi_cfrcmple():
     6c4:	4684      	mov	ip, r0
     6c6:	1c08      	adds	r0, r1, #0
     6c8:	4661      	mov	r1, ip
     6ca:	e7ff      	b.n	6cc <__aeabi_cfcmpeq>

000006cc <__aeabi_cfcmpeq>:
     6cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
     6ce:	f000 fb4f 	bl	d70 <__lesf2>
     6d2:	2800      	cmp	r0, #0
     6d4:	d401      	bmi.n	6da <__aeabi_cfcmpeq+0xe>
     6d6:	2100      	movs	r1, #0
     6d8:	42c8      	cmn	r0, r1
     6da:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000006dc <__aeabi_fcmpeq>:
__aeabi_fcmpeq():
     6dc:	b510      	push	{r4, lr}
     6de:	f000 fad5 	bl	c8c <__eqsf2>
     6e2:	4240      	negs	r0, r0
     6e4:	3001      	adds	r0, #1
     6e6:	bd10      	pop	{r4, pc}

000006e8 <__aeabi_fcmplt>:
__aeabi_fcmplt():
     6e8:	b510      	push	{r4, lr}
     6ea:	f000 fb41 	bl	d70 <__lesf2>
     6ee:	2800      	cmp	r0, #0
     6f0:	db01      	blt.n	6f6 <__aeabi_fcmplt+0xe>
     6f2:	2000      	movs	r0, #0
     6f4:	bd10      	pop	{r4, pc}
     6f6:	2001      	movs	r0, #1
     6f8:	bd10      	pop	{r4, pc}
     6fa:	46c0      	nop			; (mov r8, r8)

000006fc <__aeabi_fcmple>:
__aeabi_fcmple():
     6fc:	b510      	push	{r4, lr}
     6fe:	f000 fb37 	bl	d70 <__lesf2>
     702:	2800      	cmp	r0, #0
     704:	dd01      	ble.n	70a <__aeabi_fcmple+0xe>
     706:	2000      	movs	r0, #0
     708:	bd10      	pop	{r4, pc}
     70a:	2001      	movs	r0, #1
     70c:	bd10      	pop	{r4, pc}
     70e:	46c0      	nop			; (mov r8, r8)

00000710 <__aeabi_fcmpgt>:
__aeabi_fcmpgt():
     710:	b510      	push	{r4, lr}
     712:	f000 fae5 	bl	ce0 <__gesf2>
     716:	2800      	cmp	r0, #0
     718:	dc01      	bgt.n	71e <__aeabi_fcmpgt+0xe>
     71a:	2000      	movs	r0, #0
     71c:	bd10      	pop	{r4, pc}
     71e:	2001      	movs	r0, #1
     720:	bd10      	pop	{r4, pc}
     722:	46c0      	nop			; (mov r8, r8)

00000724 <__aeabi_fcmpge>:
__aeabi_fcmpge():
     724:	b510      	push	{r4, lr}
     726:	f000 fadb 	bl	ce0 <__gesf2>
     72a:	2800      	cmp	r0, #0
     72c:	da01      	bge.n	732 <__aeabi_fcmpge+0xe>
     72e:	2000      	movs	r0, #0
     730:	bd10      	pop	{r4, pc}
     732:	2001      	movs	r0, #1
     734:	bd10      	pop	{r4, pc}
     736:	46c0      	nop			; (mov r8, r8)

00000738 <__aeabi_f2uiz>:
__aeabi_f2uiz():
     738:	219e      	movs	r1, #158	; 0x9e
     73a:	b510      	push	{r4, lr}
     73c:	05c9      	lsls	r1, r1, #23
     73e:	1c04      	adds	r4, r0, #0
     740:	f7ff fff0 	bl	724 <__aeabi_fcmpge>
     744:	2800      	cmp	r0, #0
     746:	d103      	bne.n	750 <__aeabi_f2uiz+0x18>
     748:	1c20      	adds	r0, r4, #0
     74a:	f000 fdfd 	bl	1348 <__aeabi_f2iz>
     74e:	bd10      	pop	{r4, pc}
     750:	219e      	movs	r1, #158	; 0x9e
     752:	05c9      	lsls	r1, r1, #23
     754:	1c20      	adds	r0, r4, #0
     756:	f000 fc81 	bl	105c <__aeabi_fsub>
     75a:	f000 fdf5 	bl	1348 <__aeabi_f2iz>
     75e:	2380      	movs	r3, #128	; 0x80
     760:	061b      	lsls	r3, r3, #24
     762:	18c0      	adds	r0, r0, r3
     764:	e7f3      	b.n	74e <__aeabi_f2uiz+0x16>
     766:	46c0      	nop			; (mov r8, r8)

00000768 <__aeabi_fadd>:
__aeabi_fadd():
     768:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     76a:	0243      	lsls	r3, r0, #9
     76c:	0044      	lsls	r4, r0, #1
     76e:	0fc5      	lsrs	r5, r0, #31
     770:	024e      	lsls	r6, r1, #9
     772:	0048      	lsls	r0, r1, #1
     774:	0e24      	lsrs	r4, r4, #24
     776:	1c2a      	adds	r2, r5, #0
     778:	099b      	lsrs	r3, r3, #6
     77a:	0e00      	lsrs	r0, r0, #24
     77c:	0fc9      	lsrs	r1, r1, #31
     77e:	09b6      	lsrs	r6, r6, #6
     780:	428d      	cmp	r5, r1
     782:	d05b      	beq.n	83c <__aeabi_fadd+0xd4>
     784:	1a22      	subs	r2, r4, r0
     786:	2a00      	cmp	r2, #0
     788:	dc00      	bgt.n	78c <__aeabi_fadd+0x24>
     78a:	e089      	b.n	8a0 <__aeabi_fadd+0x138>
     78c:	2800      	cmp	r0, #0
     78e:	d11d      	bne.n	7cc <__aeabi_fadd+0x64>
     790:	2e00      	cmp	r6, #0
     792:	d000      	beq.n	796 <__aeabi_fadd+0x2e>
     794:	e075      	b.n	882 <__aeabi_fadd+0x11a>
     796:	0758      	lsls	r0, r3, #29
     798:	d004      	beq.n	7a4 <__aeabi_fadd+0x3c>
     79a:	220f      	movs	r2, #15
     79c:	401a      	ands	r2, r3
     79e:	2a04      	cmp	r2, #4
     7a0:	d000      	beq.n	7a4 <__aeabi_fadd+0x3c>
     7a2:	3304      	adds	r3, #4
     7a4:	2180      	movs	r1, #128	; 0x80
     7a6:	04c9      	lsls	r1, r1, #19
     7a8:	4019      	ands	r1, r3
     7aa:	1c2a      	adds	r2, r5, #0
     7ac:	2900      	cmp	r1, #0
     7ae:	d03a      	beq.n	826 <__aeabi_fadd+0xbe>
     7b0:	3401      	adds	r4, #1
     7b2:	2cff      	cmp	r4, #255	; 0xff
     7b4:	d100      	bne.n	7b8 <__aeabi_fadd+0x50>
     7b6:	e07f      	b.n	8b8 <__aeabi_fadd+0x150>
     7b8:	019b      	lsls	r3, r3, #6
     7ba:	0a5b      	lsrs	r3, r3, #9
     7bc:	025b      	lsls	r3, r3, #9
     7be:	b2e4      	uxtb	r4, r4
     7c0:	05e4      	lsls	r4, r4, #23
     7c2:	0a58      	lsrs	r0, r3, #9
     7c4:	07d2      	lsls	r2, r2, #31
     7c6:	4320      	orrs	r0, r4
     7c8:	4310      	orrs	r0, r2
     7ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     7cc:	2cff      	cmp	r4, #255	; 0xff
     7ce:	d0e2      	beq.n	796 <__aeabi_fadd+0x2e>
     7d0:	2180      	movs	r1, #128	; 0x80
     7d2:	04c9      	lsls	r1, r1, #19
     7d4:	430e      	orrs	r6, r1
     7d6:	2a1b      	cmp	r2, #27
     7d8:	dd00      	ble.n	7dc <__aeabi_fadd+0x74>
     7da:	e12d      	b.n	a38 <__aeabi_fadd+0x2d0>
     7dc:	1c31      	adds	r1, r6, #0
     7de:	2020      	movs	r0, #32
     7e0:	40d1      	lsrs	r1, r2
     7e2:	1a82      	subs	r2, r0, r2
     7e4:	4096      	lsls	r6, r2
     7e6:	1e72      	subs	r2, r6, #1
     7e8:	4196      	sbcs	r6, r2
     7ea:	430e      	orrs	r6, r1
     7ec:	1b9b      	subs	r3, r3, r6
     7ee:	0158      	lsls	r0, r3, #5
     7f0:	d5d1      	bpl.n	796 <__aeabi_fadd+0x2e>
     7f2:	019b      	lsls	r3, r3, #6
     7f4:	099f      	lsrs	r7, r3, #6
     7f6:	1c38      	adds	r0, r7, #0
     7f8:	f002 f9de 	bl	2bb8 <__clzsi2>
     7fc:	1f42      	subs	r2, r0, #5
     7fe:	4097      	lsls	r7, r2
     800:	4294      	cmp	r4, r2
     802:	dc5b      	bgt.n	8bc <__aeabi_fadd+0x154>
     804:	1b14      	subs	r4, r2, r4
     806:	231f      	movs	r3, #31
     808:	1b1b      	subs	r3, r3, r4
     80a:	1c3a      	adds	r2, r7, #0
     80c:	409f      	lsls	r7, r3
     80e:	1c61      	adds	r1, r4, #1
     810:	1c3b      	adds	r3, r7, #0
     812:	40ca      	lsrs	r2, r1
     814:	1e5f      	subs	r7, r3, #1
     816:	41bb      	sbcs	r3, r7
     818:	4313      	orrs	r3, r2
     81a:	2400      	movs	r4, #0
     81c:	e7bb      	b.n	796 <__aeabi_fadd+0x2e>
     81e:	1e13      	subs	r3, r2, #0
     820:	d1b9      	bne.n	796 <__aeabi_fadd+0x2e>
     822:	2300      	movs	r3, #0
     824:	2200      	movs	r2, #0
     826:	08db      	lsrs	r3, r3, #3
     828:	2cff      	cmp	r4, #255	; 0xff
     82a:	d104      	bne.n	836 <__aeabi_fadd+0xce>
     82c:	2b00      	cmp	r3, #0
     82e:	d043      	beq.n	8b8 <__aeabi_fadd+0x150>
     830:	2080      	movs	r0, #128	; 0x80
     832:	03c0      	lsls	r0, r0, #15
     834:	4303      	orrs	r3, r0
     836:	025b      	lsls	r3, r3, #9
     838:	0a5b      	lsrs	r3, r3, #9
     83a:	e7bf      	b.n	7bc <__aeabi_fadd+0x54>
     83c:	1a21      	subs	r1, r4, r0
     83e:	2900      	cmp	r1, #0
     840:	dd40      	ble.n	8c4 <__aeabi_fadd+0x15c>
     842:	2800      	cmp	r0, #0
     844:	d023      	beq.n	88e <__aeabi_fadd+0x126>
     846:	2cff      	cmp	r4, #255	; 0xff
     848:	d0a5      	beq.n	796 <__aeabi_fadd+0x2e>
     84a:	2080      	movs	r0, #128	; 0x80
     84c:	04c0      	lsls	r0, r0, #19
     84e:	4306      	orrs	r6, r0
     850:	291b      	cmp	r1, #27
     852:	dd00      	ble.n	856 <__aeabi_fadd+0xee>
     854:	e0ee      	b.n	a34 <__aeabi_fadd+0x2cc>
     856:	1c30      	adds	r0, r6, #0
     858:	2720      	movs	r7, #32
     85a:	40c8      	lsrs	r0, r1
     85c:	1a79      	subs	r1, r7, r1
     85e:	408e      	lsls	r6, r1
     860:	1e71      	subs	r1, r6, #1
     862:	418e      	sbcs	r6, r1
     864:	4306      	orrs	r6, r0
     866:	199b      	adds	r3, r3, r6
     868:	0159      	lsls	r1, r3, #5
     86a:	d400      	bmi.n	86e <__aeabi_fadd+0x106>
     86c:	e793      	b.n	796 <__aeabi_fadd+0x2e>
     86e:	3401      	adds	r4, #1
     870:	2cff      	cmp	r4, #255	; 0xff
     872:	d055      	beq.n	920 <__aeabi_fadd+0x1b8>
     874:	4971      	ldr	r1, [pc, #452]	; (a3c <__aeabi_fadd+0x2d4>)
     876:	2201      	movs	r2, #1
     878:	401a      	ands	r2, r3
     87a:	400b      	ands	r3, r1
     87c:	085b      	lsrs	r3, r3, #1
     87e:	4313      	orrs	r3, r2
     880:	e789      	b.n	796 <__aeabi_fadd+0x2e>
     882:	3a01      	subs	r2, #1
     884:	2a00      	cmp	r2, #0
     886:	d0b1      	beq.n	7ec <__aeabi_fadd+0x84>
     888:	2cff      	cmp	r4, #255	; 0xff
     88a:	d1a4      	bne.n	7d6 <__aeabi_fadd+0x6e>
     88c:	e783      	b.n	796 <__aeabi_fadd+0x2e>
     88e:	2e00      	cmp	r6, #0
     890:	d100      	bne.n	894 <__aeabi_fadd+0x12c>
     892:	e780      	b.n	796 <__aeabi_fadd+0x2e>
     894:	3901      	subs	r1, #1
     896:	2900      	cmp	r1, #0
     898:	d0e5      	beq.n	866 <__aeabi_fadd+0xfe>
     89a:	2cff      	cmp	r4, #255	; 0xff
     89c:	d1d8      	bne.n	850 <__aeabi_fadd+0xe8>
     89e:	e77a      	b.n	796 <__aeabi_fadd+0x2e>
     8a0:	2a00      	cmp	r2, #0
     8a2:	d11b      	bne.n	8dc <__aeabi_fadd+0x174>
     8a4:	1c62      	adds	r2, r4, #1
     8a6:	b2d2      	uxtb	r2, r2
     8a8:	2a01      	cmp	r2, #1
     8aa:	dd4b      	ble.n	944 <__aeabi_fadd+0x1dc>
     8ac:	1b9f      	subs	r7, r3, r6
     8ae:	017a      	lsls	r2, r7, #5
     8b0:	d523      	bpl.n	8fa <__aeabi_fadd+0x192>
     8b2:	1af7      	subs	r7, r6, r3
     8b4:	1c0d      	adds	r5, r1, #0
     8b6:	e79e      	b.n	7f6 <__aeabi_fadd+0x8e>
     8b8:	2300      	movs	r3, #0
     8ba:	e77f      	b.n	7bc <__aeabi_fadd+0x54>
     8bc:	4b5f      	ldr	r3, [pc, #380]	; (a3c <__aeabi_fadd+0x2d4>)
     8be:	1aa4      	subs	r4, r4, r2
     8c0:	403b      	ands	r3, r7
     8c2:	e768      	b.n	796 <__aeabi_fadd+0x2e>
     8c4:	2900      	cmp	r1, #0
     8c6:	d146      	bne.n	956 <__aeabi_fadd+0x1ee>
     8c8:	1c61      	adds	r1, r4, #1
     8ca:	b2c8      	uxtb	r0, r1
     8cc:	2801      	cmp	r0, #1
     8ce:	dd29      	ble.n	924 <__aeabi_fadd+0x1bc>
     8d0:	29ff      	cmp	r1, #255	; 0xff
     8d2:	d024      	beq.n	91e <__aeabi_fadd+0x1b6>
     8d4:	18f3      	adds	r3, r6, r3
     8d6:	085b      	lsrs	r3, r3, #1
     8d8:	1c0c      	adds	r4, r1, #0
     8da:	e75c      	b.n	796 <__aeabi_fadd+0x2e>
     8dc:	2c00      	cmp	r4, #0
     8de:	d013      	beq.n	908 <__aeabi_fadd+0x1a0>
     8e0:	28ff      	cmp	r0, #255	; 0xff
     8e2:	d018      	beq.n	916 <__aeabi_fadd+0x1ae>
     8e4:	2480      	movs	r4, #128	; 0x80
     8e6:	04e4      	lsls	r4, r4, #19
     8e8:	4252      	negs	r2, r2
     8ea:	4323      	orrs	r3, r4
     8ec:	2a1b      	cmp	r2, #27
     8ee:	dd4d      	ble.n	98c <__aeabi_fadd+0x224>
     8f0:	2301      	movs	r3, #1
     8f2:	1af3      	subs	r3, r6, r3
     8f4:	1c04      	adds	r4, r0, #0
     8f6:	1c0d      	adds	r5, r1, #0
     8f8:	e779      	b.n	7ee <__aeabi_fadd+0x86>
     8fa:	2f00      	cmp	r7, #0
     8fc:	d000      	beq.n	900 <__aeabi_fadd+0x198>
     8fe:	e77a      	b.n	7f6 <__aeabi_fadd+0x8e>
     900:	2300      	movs	r3, #0
     902:	2200      	movs	r2, #0
     904:	2400      	movs	r4, #0
     906:	e78e      	b.n	826 <__aeabi_fadd+0xbe>
     908:	2b00      	cmp	r3, #0
     90a:	d03b      	beq.n	984 <__aeabi_fadd+0x21c>
     90c:	43d2      	mvns	r2, r2
     90e:	2a00      	cmp	r2, #0
     910:	d0ef      	beq.n	8f2 <__aeabi_fadd+0x18a>
     912:	28ff      	cmp	r0, #255	; 0xff
     914:	d1ea      	bne.n	8ec <__aeabi_fadd+0x184>
     916:	1c33      	adds	r3, r6, #0
     918:	24ff      	movs	r4, #255	; 0xff
     91a:	1c0d      	adds	r5, r1, #0
     91c:	e73b      	b.n	796 <__aeabi_fadd+0x2e>
     91e:	24ff      	movs	r4, #255	; 0xff
     920:	2300      	movs	r3, #0
     922:	e780      	b.n	826 <__aeabi_fadd+0xbe>
     924:	2c00      	cmp	r4, #0
     926:	d15c      	bne.n	9e2 <__aeabi_fadd+0x27a>
     928:	2b00      	cmp	r3, #0
     92a:	d100      	bne.n	92e <__aeabi_fadd+0x1c6>
     92c:	e080      	b.n	a30 <__aeabi_fadd+0x2c8>
     92e:	2e00      	cmp	r6, #0
     930:	d100      	bne.n	934 <__aeabi_fadd+0x1cc>
     932:	e730      	b.n	796 <__aeabi_fadd+0x2e>
     934:	199b      	adds	r3, r3, r6
     936:	0158      	lsls	r0, r3, #5
     938:	d400      	bmi.n	93c <__aeabi_fadd+0x1d4>
     93a:	e72c      	b.n	796 <__aeabi_fadd+0x2e>
     93c:	4a3f      	ldr	r2, [pc, #252]	; (a3c <__aeabi_fadd+0x2d4>)
     93e:	2401      	movs	r4, #1
     940:	4013      	ands	r3, r2
     942:	e728      	b.n	796 <__aeabi_fadd+0x2e>
     944:	2c00      	cmp	r4, #0
     946:	d115      	bne.n	974 <__aeabi_fadd+0x20c>
     948:	2b00      	cmp	r3, #0
     94a:	d140      	bne.n	9ce <__aeabi_fadd+0x266>
     94c:	2e00      	cmp	r6, #0
     94e:	d063      	beq.n	a18 <__aeabi_fadd+0x2b0>
     950:	1c33      	adds	r3, r6, #0
     952:	1c0d      	adds	r5, r1, #0
     954:	e71f      	b.n	796 <__aeabi_fadd+0x2e>
     956:	2c00      	cmp	r4, #0
     958:	d121      	bne.n	99e <__aeabi_fadd+0x236>
     95a:	2b00      	cmp	r3, #0
     95c:	d054      	beq.n	a08 <__aeabi_fadd+0x2a0>
     95e:	43c9      	mvns	r1, r1
     960:	2900      	cmp	r1, #0
     962:	d004      	beq.n	96e <__aeabi_fadd+0x206>
     964:	28ff      	cmp	r0, #255	; 0xff
     966:	d04c      	beq.n	a02 <__aeabi_fadd+0x29a>
     968:	291b      	cmp	r1, #27
     96a:	dd58      	ble.n	a1e <__aeabi_fadd+0x2b6>
     96c:	2301      	movs	r3, #1
     96e:	199b      	adds	r3, r3, r6
     970:	1c04      	adds	r4, r0, #0
     972:	e779      	b.n	868 <__aeabi_fadd+0x100>
     974:	2b00      	cmp	r3, #0
     976:	d119      	bne.n	9ac <__aeabi_fadd+0x244>
     978:	2e00      	cmp	r6, #0
     97a:	d048      	beq.n	a0e <__aeabi_fadd+0x2a6>
     97c:	1c33      	adds	r3, r6, #0
     97e:	1c0d      	adds	r5, r1, #0
     980:	24ff      	movs	r4, #255	; 0xff
     982:	e708      	b.n	796 <__aeabi_fadd+0x2e>
     984:	1c33      	adds	r3, r6, #0
     986:	1c04      	adds	r4, r0, #0
     988:	1c0d      	adds	r5, r1, #0
     98a:	e704      	b.n	796 <__aeabi_fadd+0x2e>
     98c:	1c1c      	adds	r4, r3, #0
     98e:	2520      	movs	r5, #32
     990:	40d4      	lsrs	r4, r2
     992:	1aaa      	subs	r2, r5, r2
     994:	4093      	lsls	r3, r2
     996:	1e5a      	subs	r2, r3, #1
     998:	4193      	sbcs	r3, r2
     99a:	4323      	orrs	r3, r4
     99c:	e7a9      	b.n	8f2 <__aeabi_fadd+0x18a>
     99e:	28ff      	cmp	r0, #255	; 0xff
     9a0:	d02f      	beq.n	a02 <__aeabi_fadd+0x29a>
     9a2:	2480      	movs	r4, #128	; 0x80
     9a4:	04e4      	lsls	r4, r4, #19
     9a6:	4249      	negs	r1, r1
     9a8:	4323      	orrs	r3, r4
     9aa:	e7dd      	b.n	968 <__aeabi_fadd+0x200>
     9ac:	24ff      	movs	r4, #255	; 0xff
     9ae:	2e00      	cmp	r6, #0
     9b0:	d100      	bne.n	9b4 <__aeabi_fadd+0x24c>
     9b2:	e6f0      	b.n	796 <__aeabi_fadd+0x2e>
     9b4:	2280      	movs	r2, #128	; 0x80
     9b6:	08db      	lsrs	r3, r3, #3
     9b8:	03d2      	lsls	r2, r2, #15
     9ba:	4213      	tst	r3, r2
     9bc:	d004      	beq.n	9c8 <__aeabi_fadd+0x260>
     9be:	08f6      	lsrs	r6, r6, #3
     9c0:	4216      	tst	r6, r2
     9c2:	d101      	bne.n	9c8 <__aeabi_fadd+0x260>
     9c4:	1c33      	adds	r3, r6, #0
     9c6:	1c0d      	adds	r5, r1, #0
     9c8:	00db      	lsls	r3, r3, #3
     9ca:	24ff      	movs	r4, #255	; 0xff
     9cc:	e6e3      	b.n	796 <__aeabi_fadd+0x2e>
     9ce:	2e00      	cmp	r6, #0
     9d0:	d100      	bne.n	9d4 <__aeabi_fadd+0x26c>
     9d2:	e6e0      	b.n	796 <__aeabi_fadd+0x2e>
     9d4:	1b9a      	subs	r2, r3, r6
     9d6:	0150      	lsls	r0, r2, #5
     9d8:	d400      	bmi.n	9dc <__aeabi_fadd+0x274>
     9da:	e720      	b.n	81e <__aeabi_fadd+0xb6>
     9dc:	1af3      	subs	r3, r6, r3
     9de:	1c0d      	adds	r5, r1, #0
     9e0:	e6d9      	b.n	796 <__aeabi_fadd+0x2e>
     9e2:	2b00      	cmp	r3, #0
     9e4:	d00d      	beq.n	a02 <__aeabi_fadd+0x29a>
     9e6:	24ff      	movs	r4, #255	; 0xff
     9e8:	2e00      	cmp	r6, #0
     9ea:	d100      	bne.n	9ee <__aeabi_fadd+0x286>
     9ec:	e6d3      	b.n	796 <__aeabi_fadd+0x2e>
     9ee:	2280      	movs	r2, #128	; 0x80
     9f0:	08db      	lsrs	r3, r3, #3
     9f2:	03d2      	lsls	r2, r2, #15
     9f4:	4213      	tst	r3, r2
     9f6:	d0e7      	beq.n	9c8 <__aeabi_fadd+0x260>
     9f8:	08f6      	lsrs	r6, r6, #3
     9fa:	4216      	tst	r6, r2
     9fc:	d1e4      	bne.n	9c8 <__aeabi_fadd+0x260>
     9fe:	1c33      	adds	r3, r6, #0
     a00:	e7e2      	b.n	9c8 <__aeabi_fadd+0x260>
     a02:	1c33      	adds	r3, r6, #0
     a04:	24ff      	movs	r4, #255	; 0xff
     a06:	e6c6      	b.n	796 <__aeabi_fadd+0x2e>
     a08:	1c33      	adds	r3, r6, #0
     a0a:	1c04      	adds	r4, r0, #0
     a0c:	e6c3      	b.n	796 <__aeabi_fadd+0x2e>
     a0e:	2380      	movs	r3, #128	; 0x80
     a10:	2200      	movs	r2, #0
     a12:	049b      	lsls	r3, r3, #18
     a14:	24ff      	movs	r4, #255	; 0xff
     a16:	e706      	b.n	826 <__aeabi_fadd+0xbe>
     a18:	1c23      	adds	r3, r4, #0
     a1a:	2200      	movs	r2, #0
     a1c:	e703      	b.n	826 <__aeabi_fadd+0xbe>
     a1e:	1c1c      	adds	r4, r3, #0
     a20:	2720      	movs	r7, #32
     a22:	40cc      	lsrs	r4, r1
     a24:	1a79      	subs	r1, r7, r1
     a26:	408b      	lsls	r3, r1
     a28:	1e59      	subs	r1, r3, #1
     a2a:	418b      	sbcs	r3, r1
     a2c:	4323      	orrs	r3, r4
     a2e:	e79e      	b.n	96e <__aeabi_fadd+0x206>
     a30:	1c33      	adds	r3, r6, #0
     a32:	e6b0      	b.n	796 <__aeabi_fadd+0x2e>
     a34:	2601      	movs	r6, #1
     a36:	e716      	b.n	866 <__aeabi_fadd+0xfe>
     a38:	2601      	movs	r6, #1
     a3a:	e6d7      	b.n	7ec <__aeabi_fadd+0x84>
     a3c:	fbffffff 	.word	0xfbffffff

00000a40 <__aeabi_fdiv>:
__aeabi_fdiv():
     a40:	b5f0      	push	{r4, r5, r6, r7, lr}
     a42:	465f      	mov	r7, fp
     a44:	4656      	mov	r6, sl
     a46:	464d      	mov	r5, r9
     a48:	4644      	mov	r4, r8
     a4a:	b4f0      	push	{r4, r5, r6, r7}
     a4c:	0246      	lsls	r6, r0, #9
     a4e:	0045      	lsls	r5, r0, #1
     a50:	0fc0      	lsrs	r0, r0, #31
     a52:	b085      	sub	sp, #20
     a54:	1c0f      	adds	r7, r1, #0
     a56:	0a76      	lsrs	r6, r6, #9
     a58:	0e2d      	lsrs	r5, r5, #24
     a5a:	4680      	mov	r8, r0
     a5c:	d041      	beq.n	ae2 <__aeabi_fdiv+0xa2>
     a5e:	2dff      	cmp	r5, #255	; 0xff
     a60:	d026      	beq.n	ab0 <__aeabi_fdiv+0x70>
     a62:	2480      	movs	r4, #128	; 0x80
     a64:	0424      	lsls	r4, r4, #16
     a66:	2100      	movs	r1, #0
     a68:	4326      	orrs	r6, r4
     a6a:	00f6      	lsls	r6, r6, #3
     a6c:	3d7f      	subs	r5, #127	; 0x7f
     a6e:	4689      	mov	r9, r1
     a70:	468b      	mov	fp, r1
     a72:	0ff9      	lsrs	r1, r7, #31
     a74:	027c      	lsls	r4, r7, #9
     a76:	0078      	lsls	r0, r7, #1
     a78:	0a64      	lsrs	r4, r4, #9
     a7a:	0e00      	lsrs	r0, r0, #24
     a7c:	9100      	str	r1, [sp, #0]
     a7e:	468a      	mov	sl, r1
     a80:	d03c      	beq.n	afc <__aeabi_fdiv+0xbc>
     a82:	28ff      	cmp	r0, #255	; 0xff
     a84:	d034      	beq.n	af0 <__aeabi_fdiv+0xb0>
     a86:	2380      	movs	r3, #128	; 0x80
     a88:	041b      	lsls	r3, r3, #16
     a8a:	431c      	orrs	r4, r3
     a8c:	2300      	movs	r3, #0
     a8e:	00e4      	lsls	r4, r4, #3
     a90:	387f      	subs	r0, #127	; 0x7f
     a92:	9301      	str	r3, [sp, #4]
     a94:	9f00      	ldr	r7, [sp, #0]
     a96:	4643      	mov	r3, r8
     a98:	9a01      	ldr	r2, [sp, #4]
     a9a:	407b      	eors	r3, r7
     a9c:	4649      	mov	r1, r9
     a9e:	469c      	mov	ip, r3
     aa0:	4311      	orrs	r1, r2
     aa2:	290f      	cmp	r1, #15
     aa4:	d900      	bls.n	aa8 <__aeabi_fdiv+0x68>
     aa6:	e071      	b.n	b8c <__aeabi_fdiv+0x14c>
     aa8:	4f76      	ldr	r7, [pc, #472]	; (c84 <__aeabi_fdiv+0x244>)
     aaa:	0089      	lsls	r1, r1, #2
     aac:	587f      	ldr	r7, [r7, r1]
     aae:	46bf      	mov	pc, r7
     ab0:	2e00      	cmp	r6, #0
     ab2:	d13e      	bne.n	b32 <__aeabi_fdiv+0xf2>
     ab4:	2208      	movs	r2, #8
     ab6:	2302      	movs	r3, #2
     ab8:	4691      	mov	r9, r2
     aba:	469b      	mov	fp, r3
     abc:	e7d9      	b.n	a72 <__aeabi_fdiv+0x32>
     abe:	465a      	mov	r2, fp
     ac0:	1c34      	adds	r4, r6, #0
     ac2:	46c2      	mov	sl, r8
     ac4:	9201      	str	r2, [sp, #4]
     ac6:	9901      	ldr	r1, [sp, #4]
     ac8:	2902      	cmp	r1, #2
     aca:	d037      	beq.n	b3c <__aeabi_fdiv+0xfc>
     acc:	2903      	cmp	r1, #3
     ace:	d100      	bne.n	ad2 <__aeabi_fdiv+0x92>
     ad0:	e0cf      	b.n	c72 <__aeabi_fdiv+0x232>
     ad2:	2901      	cmp	r1, #1
     ad4:	d000      	beq.n	ad8 <__aeabi_fdiv+0x98>
     ad6:	e0ab      	b.n	c30 <__aeabi_fdiv+0x1f0>
     ad8:	4653      	mov	r3, sl
     ada:	400b      	ands	r3, r1
     adc:	2200      	movs	r2, #0
     ade:	2600      	movs	r6, #0
     ae0:	e032      	b.n	b48 <__aeabi_fdiv+0x108>
     ae2:	2e00      	cmp	r6, #0
     ae4:	d119      	bne.n	b1a <__aeabi_fdiv+0xda>
     ae6:	2104      	movs	r1, #4
     ae8:	2201      	movs	r2, #1
     aea:	4689      	mov	r9, r1
     aec:	4693      	mov	fp, r2
     aee:	e7c0      	b.n	a72 <__aeabi_fdiv+0x32>
     af0:	1c22      	adds	r2, r4, #0
     af2:	1e53      	subs	r3, r2, #1
     af4:	419a      	sbcs	r2, r3
     af6:	3202      	adds	r2, #2
     af8:	9201      	str	r2, [sp, #4]
     afa:	e7cb      	b.n	a94 <__aeabi_fdiv+0x54>
     afc:	2701      	movs	r7, #1
     afe:	9701      	str	r7, [sp, #4]
     b00:	2c00      	cmp	r4, #0
     b02:	d0c7      	beq.n	a94 <__aeabi_fdiv+0x54>
     b04:	1c20      	adds	r0, r4, #0
     b06:	f002 f857 	bl	2bb8 <__clzsi2>
     b0a:	1f43      	subs	r3, r0, #5
     b0c:	409c      	lsls	r4, r3
     b0e:	2376      	movs	r3, #118	; 0x76
     b10:	425b      	negs	r3, r3
     b12:	2100      	movs	r1, #0
     b14:	1a18      	subs	r0, r3, r0
     b16:	9101      	str	r1, [sp, #4]
     b18:	e7bc      	b.n	a94 <__aeabi_fdiv+0x54>
     b1a:	1c30      	adds	r0, r6, #0
     b1c:	f002 f84c 	bl	2bb8 <__clzsi2>
     b20:	2576      	movs	r5, #118	; 0x76
     b22:	1f43      	subs	r3, r0, #5
     b24:	409e      	lsls	r6, r3
     b26:	426d      	negs	r5, r5
     b28:	2300      	movs	r3, #0
     b2a:	1a2d      	subs	r5, r5, r0
     b2c:	4699      	mov	r9, r3
     b2e:	469b      	mov	fp, r3
     b30:	e79f      	b.n	a72 <__aeabi_fdiv+0x32>
     b32:	230c      	movs	r3, #12
     b34:	2103      	movs	r1, #3
     b36:	4699      	mov	r9, r3
     b38:	468b      	mov	fp, r1
     b3a:	e79a      	b.n	a72 <__aeabi_fdiv+0x32>
     b3c:	46d4      	mov	ip, sl
     b3e:	2301      	movs	r3, #1
     b40:	4667      	mov	r7, ip
     b42:	403b      	ands	r3, r7
     b44:	22ff      	movs	r2, #255	; 0xff
     b46:	2600      	movs	r6, #0
     b48:	0276      	lsls	r6, r6, #9
     b4a:	05d2      	lsls	r2, r2, #23
     b4c:	0a70      	lsrs	r0, r6, #9
     b4e:	07db      	lsls	r3, r3, #31
     b50:	4310      	orrs	r0, r2
     b52:	4318      	orrs	r0, r3
     b54:	b005      	add	sp, #20
     b56:	bc3c      	pop	{r2, r3, r4, r5}
     b58:	4690      	mov	r8, r2
     b5a:	4699      	mov	r9, r3
     b5c:	46a2      	mov	sl, r4
     b5e:	46ab      	mov	fp, r5
     b60:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b62:	2680      	movs	r6, #128	; 0x80
     b64:	2300      	movs	r3, #0
     b66:	03f6      	lsls	r6, r6, #15
     b68:	22ff      	movs	r2, #255	; 0xff
     b6a:	e7ed      	b.n	b48 <__aeabi_fdiv+0x108>
     b6c:	2200      	movs	r2, #0
     b6e:	2600      	movs	r6, #0
     b70:	e7ea      	b.n	b48 <__aeabi_fdiv+0x108>
     b72:	2080      	movs	r0, #128	; 0x80
     b74:	03c0      	lsls	r0, r0, #15
     b76:	4206      	tst	r6, r0
     b78:	d03b      	beq.n	bf2 <__aeabi_fdiv+0x1b2>
     b7a:	4204      	tst	r4, r0
     b7c:	d139      	bne.n	bf2 <__aeabi_fdiv+0x1b2>
     b7e:	1c06      	adds	r6, r0, #0
     b80:	4326      	orrs	r6, r4
     b82:	0276      	lsls	r6, r6, #9
     b84:	0a76      	lsrs	r6, r6, #9
     b86:	9b00      	ldr	r3, [sp, #0]
     b88:	22ff      	movs	r2, #255	; 0xff
     b8a:	e7dd      	b.n	b48 <__aeabi_fdiv+0x108>
     b8c:	1a28      	subs	r0, r5, r0
     b8e:	9003      	str	r0, [sp, #12]
     b90:	0176      	lsls	r6, r6, #5
     b92:	0164      	lsls	r4, r4, #5
     b94:	42a6      	cmp	r6, r4
     b96:	d339      	bcc.n	c0c <__aeabi_fdiv+0x1cc>
     b98:	1b36      	subs	r6, r6, r4
     b9a:	221a      	movs	r2, #26
     b9c:	2301      	movs	r3, #1
     b9e:	2001      	movs	r0, #1
     ba0:	1c31      	adds	r1, r6, #0
     ba2:	005b      	lsls	r3, r3, #1
     ba4:	0076      	lsls	r6, r6, #1
     ba6:	2900      	cmp	r1, #0
     ba8:	db01      	blt.n	bae <__aeabi_fdiv+0x16e>
     baa:	42b4      	cmp	r4, r6
     bac:	d801      	bhi.n	bb2 <__aeabi_fdiv+0x172>
     bae:	1b36      	subs	r6, r6, r4
     bb0:	4303      	orrs	r3, r0
     bb2:	3a01      	subs	r2, #1
     bb4:	2a00      	cmp	r2, #0
     bb6:	dcf3      	bgt.n	ba0 <__aeabi_fdiv+0x160>
     bb8:	1e74      	subs	r4, r6, #1
     bba:	41a6      	sbcs	r6, r4
     bbc:	1c34      	adds	r4, r6, #0
     bbe:	431c      	orrs	r4, r3
     bc0:	9a03      	ldr	r2, [sp, #12]
     bc2:	327f      	adds	r2, #127	; 0x7f
     bc4:	2a00      	cmp	r2, #0
     bc6:	dd27      	ble.n	c18 <__aeabi_fdiv+0x1d8>
     bc8:	0763      	lsls	r3, r4, #29
     bca:	d004      	beq.n	bd6 <__aeabi_fdiv+0x196>
     bcc:	230f      	movs	r3, #15
     bce:	4023      	ands	r3, r4
     bd0:	2b04      	cmp	r3, #4
     bd2:	d000      	beq.n	bd6 <__aeabi_fdiv+0x196>
     bd4:	3404      	adds	r4, #4
     bd6:	0127      	lsls	r7, r4, #4
     bd8:	d503      	bpl.n	be2 <__aeabi_fdiv+0x1a2>
     bda:	4b2b      	ldr	r3, [pc, #172]	; (c88 <__aeabi_fdiv+0x248>)
     bdc:	9a03      	ldr	r2, [sp, #12]
     bde:	401c      	ands	r4, r3
     be0:	3280      	adds	r2, #128	; 0x80
     be2:	2afe      	cmp	r2, #254	; 0xfe
     be4:	dd0b      	ble.n	bfe <__aeabi_fdiv+0x1be>
     be6:	2301      	movs	r3, #1
     be8:	4661      	mov	r1, ip
     bea:	400b      	ands	r3, r1
     bec:	22ff      	movs	r2, #255	; 0xff
     bee:	2600      	movs	r6, #0
     bf0:	e7aa      	b.n	b48 <__aeabi_fdiv+0x108>
     bf2:	4306      	orrs	r6, r0
     bf4:	0276      	lsls	r6, r6, #9
     bf6:	0a76      	lsrs	r6, r6, #9
     bf8:	4643      	mov	r3, r8
     bfa:	22ff      	movs	r2, #255	; 0xff
     bfc:	e7a4      	b.n	b48 <__aeabi_fdiv+0x108>
     bfe:	01a4      	lsls	r4, r4, #6
     c00:	2301      	movs	r3, #1
     c02:	4667      	mov	r7, ip
     c04:	0a66      	lsrs	r6, r4, #9
     c06:	b2d2      	uxtb	r2, r2
     c08:	403b      	ands	r3, r7
     c0a:	e79d      	b.n	b48 <__aeabi_fdiv+0x108>
     c0c:	9f03      	ldr	r7, [sp, #12]
     c0e:	221b      	movs	r2, #27
     c10:	3f01      	subs	r7, #1
     c12:	9703      	str	r7, [sp, #12]
     c14:	2300      	movs	r3, #0
     c16:	e7c2      	b.n	b9e <__aeabi_fdiv+0x15e>
     c18:	237e      	movs	r3, #126	; 0x7e
     c1a:	9f03      	ldr	r7, [sp, #12]
     c1c:	425b      	negs	r3, r3
     c1e:	1bdb      	subs	r3, r3, r7
     c20:	2b1b      	cmp	r3, #27
     c22:	dd07      	ble.n	c34 <__aeabi_fdiv+0x1f4>
     c24:	2301      	movs	r3, #1
     c26:	4661      	mov	r1, ip
     c28:	400b      	ands	r3, r1
     c2a:	2200      	movs	r2, #0
     c2c:	2600      	movs	r6, #0
     c2e:	e78b      	b.n	b48 <__aeabi_fdiv+0x108>
     c30:	46d4      	mov	ip, sl
     c32:	e7c5      	b.n	bc0 <__aeabi_fdiv+0x180>
     c34:	1c22      	adds	r2, r4, #0
     c36:	40da      	lsrs	r2, r3
     c38:	9b03      	ldr	r3, [sp, #12]
     c3a:	339e      	adds	r3, #158	; 0x9e
     c3c:	409c      	lsls	r4, r3
     c3e:	1c23      	adds	r3, r4, #0
     c40:	1e5c      	subs	r4, r3, #1
     c42:	41a3      	sbcs	r3, r4
     c44:	4313      	orrs	r3, r2
     c46:	075a      	lsls	r2, r3, #29
     c48:	d004      	beq.n	c54 <__aeabi_fdiv+0x214>
     c4a:	220f      	movs	r2, #15
     c4c:	401a      	ands	r2, r3
     c4e:	2a04      	cmp	r2, #4
     c50:	d000      	beq.n	c54 <__aeabi_fdiv+0x214>
     c52:	3304      	adds	r3, #4
     c54:	015f      	lsls	r7, r3, #5
     c56:	d505      	bpl.n	c64 <__aeabi_fdiv+0x224>
     c58:	2301      	movs	r3, #1
     c5a:	4661      	mov	r1, ip
     c5c:	400b      	ands	r3, r1
     c5e:	2201      	movs	r2, #1
     c60:	2600      	movs	r6, #0
     c62:	e771      	b.n	b48 <__aeabi_fdiv+0x108>
     c64:	019e      	lsls	r6, r3, #6
     c66:	4662      	mov	r2, ip
     c68:	2301      	movs	r3, #1
     c6a:	4013      	ands	r3, r2
     c6c:	0a76      	lsrs	r6, r6, #9
     c6e:	2200      	movs	r2, #0
     c70:	e76a      	b.n	b48 <__aeabi_fdiv+0x108>
     c72:	2680      	movs	r6, #128	; 0x80
     c74:	03f6      	lsls	r6, r6, #15
     c76:	4326      	orrs	r6, r4
     c78:	0276      	lsls	r6, r6, #9
     c7a:	0a76      	lsrs	r6, r6, #9
     c7c:	4653      	mov	r3, sl
     c7e:	22ff      	movs	r2, #255	; 0xff
     c80:	e762      	b.n	b48 <__aeabi_fdiv+0x108>
     c82:	46c0      	nop			; (mov r8, r8)
     c84:	000056fc 	.word	0x000056fc
     c88:	f7ffffff 	.word	0xf7ffffff

00000c8c <__eqsf2>:
__nesf2():
     c8c:	024a      	lsls	r2, r1, #9
     c8e:	0243      	lsls	r3, r0, #9
     c90:	b570      	push	{r4, r5, r6, lr}
     c92:	0a5c      	lsrs	r4, r3, #9
     c94:	0a55      	lsrs	r5, r2, #9
     c96:	0043      	lsls	r3, r0, #1
     c98:	004a      	lsls	r2, r1, #1
     c9a:	0e1b      	lsrs	r3, r3, #24
     c9c:	0fc6      	lsrs	r6, r0, #31
     c9e:	0e12      	lsrs	r2, r2, #24
     ca0:	0fc9      	lsrs	r1, r1, #31
     ca2:	2bff      	cmp	r3, #255	; 0xff
     ca4:	d005      	beq.n	cb2 <__eqsf2+0x26>
     ca6:	2aff      	cmp	r2, #255	; 0xff
     ca8:	d008      	beq.n	cbc <__eqsf2+0x30>
     caa:	2001      	movs	r0, #1
     cac:	4293      	cmp	r3, r2
     cae:	d00b      	beq.n	cc8 <__eqsf2+0x3c>
     cb0:	bd70      	pop	{r4, r5, r6, pc}
     cb2:	2001      	movs	r0, #1
     cb4:	2c00      	cmp	r4, #0
     cb6:	d1fb      	bne.n	cb0 <__eqsf2+0x24>
     cb8:	2aff      	cmp	r2, #255	; 0xff
     cba:	d1f6      	bne.n	caa <__eqsf2+0x1e>
     cbc:	2001      	movs	r0, #1
     cbe:	2d00      	cmp	r5, #0
     cc0:	d1f6      	bne.n	cb0 <__eqsf2+0x24>
     cc2:	2001      	movs	r0, #1
     cc4:	4293      	cmp	r3, r2
     cc6:	d1f3      	bne.n	cb0 <__eqsf2+0x24>
     cc8:	42ac      	cmp	r4, r5
     cca:	d1f1      	bne.n	cb0 <__eqsf2+0x24>
     ccc:	428e      	cmp	r6, r1
     cce:	d005      	beq.n	cdc <__eqsf2+0x50>
     cd0:	2b00      	cmp	r3, #0
     cd2:	d1ed      	bne.n	cb0 <__eqsf2+0x24>
     cd4:	1c20      	adds	r0, r4, #0
     cd6:	1e44      	subs	r4, r0, #1
     cd8:	41a0      	sbcs	r0, r4
     cda:	e7e9      	b.n	cb0 <__eqsf2+0x24>
     cdc:	2000      	movs	r0, #0
     cde:	e7e7      	b.n	cb0 <__eqsf2+0x24>

00000ce0 <__gesf2>:
__gtsf2():
     ce0:	024a      	lsls	r2, r1, #9
     ce2:	0243      	lsls	r3, r0, #9
     ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
     ce6:	0a5c      	lsrs	r4, r3, #9
     ce8:	0a55      	lsrs	r5, r2, #9
     cea:	0043      	lsls	r3, r0, #1
     cec:	004a      	lsls	r2, r1, #1
     cee:	0e1b      	lsrs	r3, r3, #24
     cf0:	0fc6      	lsrs	r6, r0, #31
     cf2:	0e12      	lsrs	r2, r2, #24
     cf4:	0fc9      	lsrs	r1, r1, #31
     cf6:	2bff      	cmp	r3, #255	; 0xff
     cf8:	d031      	beq.n	d5e <__gesf2+0x7e>
     cfa:	2aff      	cmp	r2, #255	; 0xff
     cfc:	d034      	beq.n	d68 <__gesf2+0x88>
     cfe:	2b00      	cmp	r3, #0
     d00:	d116      	bne.n	d30 <__gesf2+0x50>
     d02:	4260      	negs	r0, r4
     d04:	4160      	adcs	r0, r4
     d06:	4684      	mov	ip, r0
     d08:	2a00      	cmp	r2, #0
     d0a:	d014      	beq.n	d36 <__gesf2+0x56>
     d0c:	2800      	cmp	r0, #0
     d0e:	d120      	bne.n	d52 <__gesf2+0x72>
     d10:	428e      	cmp	r6, r1
     d12:	d117      	bne.n	d44 <__gesf2+0x64>
     d14:	4293      	cmp	r3, r2
     d16:	dc15      	bgt.n	d44 <__gesf2+0x64>
     d18:	db04      	blt.n	d24 <__gesf2+0x44>
     d1a:	42ac      	cmp	r4, r5
     d1c:	d812      	bhi.n	d44 <__gesf2+0x64>
     d1e:	2000      	movs	r0, #0
     d20:	42ac      	cmp	r4, r5
     d22:	d212      	bcs.n	d4a <__gesf2+0x6a>
     d24:	4270      	negs	r0, r6
     d26:	4170      	adcs	r0, r6
     d28:	4240      	negs	r0, r0
     d2a:	2301      	movs	r3, #1
     d2c:	4318      	orrs	r0, r3
     d2e:	e00c      	b.n	d4a <__gesf2+0x6a>
     d30:	2a00      	cmp	r2, #0
     d32:	d1ed      	bne.n	d10 <__gesf2+0x30>
     d34:	4694      	mov	ip, r2
     d36:	426f      	negs	r7, r5
     d38:	416f      	adcs	r7, r5
     d3a:	4660      	mov	r0, ip
     d3c:	2800      	cmp	r0, #0
     d3e:	d105      	bne.n	d4c <__gesf2+0x6c>
     d40:	2f00      	cmp	r7, #0
     d42:	d0e5      	beq.n	d10 <__gesf2+0x30>
     d44:	4270      	negs	r0, r6
     d46:	2301      	movs	r3, #1
     d48:	4318      	orrs	r0, r3
     d4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     d4c:	2000      	movs	r0, #0
     d4e:	2f00      	cmp	r7, #0
     d50:	d1fb      	bne.n	d4a <__gesf2+0x6a>
     d52:	4248      	negs	r0, r1
     d54:	4148      	adcs	r0, r1
     d56:	4240      	negs	r0, r0
     d58:	2301      	movs	r3, #1
     d5a:	4318      	orrs	r0, r3
     d5c:	e7f5      	b.n	d4a <__gesf2+0x6a>
     d5e:	2c00      	cmp	r4, #0
     d60:	d0cb      	beq.n	cfa <__gesf2+0x1a>
     d62:	2002      	movs	r0, #2
     d64:	4240      	negs	r0, r0
     d66:	e7f0      	b.n	d4a <__gesf2+0x6a>
     d68:	2d00      	cmp	r5, #0
     d6a:	d0c8      	beq.n	cfe <__gesf2+0x1e>
     d6c:	e7f9      	b.n	d62 <__gesf2+0x82>
     d6e:	46c0      	nop			; (mov r8, r8)

00000d70 <__lesf2>:
__lesf2():
     d70:	024a      	lsls	r2, r1, #9
     d72:	0243      	lsls	r3, r0, #9
     d74:	b5f0      	push	{r4, r5, r6, r7, lr}
     d76:	0a5c      	lsrs	r4, r3, #9
     d78:	0a55      	lsrs	r5, r2, #9
     d7a:	0043      	lsls	r3, r0, #1
     d7c:	004a      	lsls	r2, r1, #1
     d7e:	0e1b      	lsrs	r3, r3, #24
     d80:	0fc6      	lsrs	r6, r0, #31
     d82:	0e12      	lsrs	r2, r2, #24
     d84:	0fc9      	lsrs	r1, r1, #31
     d86:	2bff      	cmp	r3, #255	; 0xff
     d88:	d027      	beq.n	dda <__lesf2+0x6a>
     d8a:	2aff      	cmp	r2, #255	; 0xff
     d8c:	d029      	beq.n	de2 <__lesf2+0x72>
     d8e:	2b00      	cmp	r3, #0
     d90:	d010      	beq.n	db4 <__lesf2+0x44>
     d92:	2a00      	cmp	r2, #0
     d94:	d115      	bne.n	dc2 <__lesf2+0x52>
     d96:	4694      	mov	ip, r2
     d98:	426f      	negs	r7, r5
     d9a:	416f      	adcs	r7, r5
     d9c:	4660      	mov	r0, ip
     d9e:	2800      	cmp	r0, #0
     da0:	d015      	beq.n	dce <__lesf2+0x5e>
     da2:	2000      	movs	r0, #0
     da4:	2f00      	cmp	r7, #0
     da6:	d104      	bne.n	db2 <__lesf2+0x42>
     da8:	4248      	negs	r0, r1
     daa:	4148      	adcs	r0, r1
     dac:	4240      	negs	r0, r0
     dae:	2301      	movs	r3, #1
     db0:	4318      	orrs	r0, r3
     db2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     db4:	4260      	negs	r0, r4
     db6:	4160      	adcs	r0, r4
     db8:	4684      	mov	ip, r0
     dba:	2a00      	cmp	r2, #0
     dbc:	d0ec      	beq.n	d98 <__lesf2+0x28>
     dbe:	2800      	cmp	r0, #0
     dc0:	d1f2      	bne.n	da8 <__lesf2+0x38>
     dc2:	428e      	cmp	r6, r1
     dc4:	d011      	beq.n	dea <__lesf2+0x7a>
     dc6:	4270      	negs	r0, r6
     dc8:	2301      	movs	r3, #1
     dca:	4318      	orrs	r0, r3
     dcc:	e7f1      	b.n	db2 <__lesf2+0x42>
     dce:	2f00      	cmp	r7, #0
     dd0:	d0f7      	beq.n	dc2 <__lesf2+0x52>
     dd2:	4270      	negs	r0, r6
     dd4:	2301      	movs	r3, #1
     dd6:	4318      	orrs	r0, r3
     dd8:	e7eb      	b.n	db2 <__lesf2+0x42>
     dda:	2002      	movs	r0, #2
     ddc:	2c00      	cmp	r4, #0
     dde:	d1e8      	bne.n	db2 <__lesf2+0x42>
     de0:	e7d3      	b.n	d8a <__lesf2+0x1a>
     de2:	2002      	movs	r0, #2
     de4:	2d00      	cmp	r5, #0
     de6:	d1e4      	bne.n	db2 <__lesf2+0x42>
     de8:	e7d1      	b.n	d8e <__lesf2+0x1e>
     dea:	4293      	cmp	r3, r2
     dec:	dceb      	bgt.n	dc6 <__lesf2+0x56>
     dee:	db04      	blt.n	dfa <__lesf2+0x8a>
     df0:	42ac      	cmp	r4, r5
     df2:	d8e8      	bhi.n	dc6 <__lesf2+0x56>
     df4:	2000      	movs	r0, #0
     df6:	42ac      	cmp	r4, r5
     df8:	d2db      	bcs.n	db2 <__lesf2+0x42>
     dfa:	4270      	negs	r0, r6
     dfc:	4170      	adcs	r0, r6
     dfe:	4240      	negs	r0, r0
     e00:	2301      	movs	r3, #1
     e02:	4318      	orrs	r0, r3
     e04:	e7d5      	b.n	db2 <__lesf2+0x42>
     e06:	46c0      	nop			; (mov r8, r8)

00000e08 <__aeabi_fmul>:
__aeabi_fmul():
     e08:	b5f0      	push	{r4, r5, r6, r7, lr}
     e0a:	465f      	mov	r7, fp
     e0c:	4656      	mov	r6, sl
     e0e:	464d      	mov	r5, r9
     e10:	4644      	mov	r4, r8
     e12:	b4f0      	push	{r4, r5, r6, r7}
     e14:	0244      	lsls	r4, r0, #9
     e16:	0046      	lsls	r6, r0, #1
     e18:	b083      	sub	sp, #12
     e1a:	1c0f      	adds	r7, r1, #0
     e1c:	0a64      	lsrs	r4, r4, #9
     e1e:	0e36      	lsrs	r6, r6, #24
     e20:	0fc5      	lsrs	r5, r0, #31
     e22:	2e00      	cmp	r6, #0
     e24:	d041      	beq.n	eaa <__aeabi_fmul+0xa2>
     e26:	2eff      	cmp	r6, #255	; 0xff
     e28:	d022      	beq.n	e70 <__aeabi_fmul+0x68>
     e2a:	2380      	movs	r3, #128	; 0x80
     e2c:	041b      	lsls	r3, r3, #16
     e2e:	2000      	movs	r0, #0
     e30:	431c      	orrs	r4, r3
     e32:	00e4      	lsls	r4, r4, #3
     e34:	3e7f      	subs	r6, #127	; 0x7f
     e36:	4682      	mov	sl, r0
     e38:	4680      	mov	r8, r0
     e3a:	1c39      	adds	r1, r7, #0
     e3c:	004b      	lsls	r3, r1, #1
     e3e:	027f      	lsls	r7, r7, #9
     e40:	0fc9      	lsrs	r1, r1, #31
     e42:	0a7f      	lsrs	r7, r7, #9
     e44:	0e1b      	lsrs	r3, r3, #24
     e46:	468b      	mov	fp, r1
     e48:	d03b      	beq.n	ec2 <__aeabi_fmul+0xba>
     e4a:	2bff      	cmp	r3, #255	; 0xff
     e4c:	d034      	beq.n	eb8 <__aeabi_fmul+0xb0>
     e4e:	2280      	movs	r2, #128	; 0x80
     e50:	0412      	lsls	r2, r2, #16
     e52:	4317      	orrs	r7, r2
     e54:	00ff      	lsls	r7, r7, #3
     e56:	3b7f      	subs	r3, #127	; 0x7f
     e58:	2100      	movs	r1, #0
     e5a:	465a      	mov	r2, fp
     e5c:	406a      	eors	r2, r5
     e5e:	9201      	str	r2, [sp, #4]
     e60:	4652      	mov	r2, sl
     e62:	430a      	orrs	r2, r1
     e64:	2a0f      	cmp	r2, #15
     e66:	d863      	bhi.n	f30 <__aeabi_fmul+0x128>
     e68:	487a      	ldr	r0, [pc, #488]	; (1054 <__aeabi_fmul+0x24c>)
     e6a:	0092      	lsls	r2, r2, #2
     e6c:	5882      	ldr	r2, [r0, r2]
     e6e:	4697      	mov	pc, r2
     e70:	2c00      	cmp	r4, #0
     e72:	d13f      	bne.n	ef4 <__aeabi_fmul+0xec>
     e74:	2208      	movs	r2, #8
     e76:	2302      	movs	r3, #2
     e78:	4692      	mov	sl, r2
     e7a:	4698      	mov	r8, r3
     e7c:	e7dd      	b.n	e3a <__aeabi_fmul+0x32>
     e7e:	9501      	str	r5, [sp, #4]
     e80:	4640      	mov	r0, r8
     e82:	2802      	cmp	r0, #2
     e84:	d12a      	bne.n	edc <__aeabi_fmul+0xd4>
     e86:	9a01      	ldr	r2, [sp, #4]
     e88:	2501      	movs	r5, #1
     e8a:	4015      	ands	r5, r2
     e8c:	23ff      	movs	r3, #255	; 0xff
     e8e:	2400      	movs	r4, #0
     e90:	0264      	lsls	r4, r4, #9
     e92:	05db      	lsls	r3, r3, #23
     e94:	0a60      	lsrs	r0, r4, #9
     e96:	07ed      	lsls	r5, r5, #31
     e98:	4318      	orrs	r0, r3
     e9a:	4328      	orrs	r0, r5
     e9c:	b003      	add	sp, #12
     e9e:	bc3c      	pop	{r2, r3, r4, r5}
     ea0:	4690      	mov	r8, r2
     ea2:	4699      	mov	r9, r3
     ea4:	46a2      	mov	sl, r4
     ea6:	46ab      	mov	fp, r5
     ea8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     eaa:	2c00      	cmp	r4, #0
     eac:	d127      	bne.n	efe <__aeabi_fmul+0xf6>
     eae:	2004      	movs	r0, #4
     eb0:	2201      	movs	r2, #1
     eb2:	4682      	mov	sl, r0
     eb4:	4690      	mov	r8, r2
     eb6:	e7c0      	b.n	e3a <__aeabi_fmul+0x32>
     eb8:	1c39      	adds	r1, r7, #0
     eba:	1e4a      	subs	r2, r1, #1
     ebc:	4191      	sbcs	r1, r2
     ebe:	3102      	adds	r1, #2
     ec0:	e7cb      	b.n	e5a <__aeabi_fmul+0x52>
     ec2:	2101      	movs	r1, #1
     ec4:	2f00      	cmp	r7, #0
     ec6:	d0c8      	beq.n	e5a <__aeabi_fmul+0x52>
     ec8:	1c38      	adds	r0, r7, #0
     eca:	f001 fe75 	bl	2bb8 <__clzsi2>
     ece:	1f43      	subs	r3, r0, #5
     ed0:	409f      	lsls	r7, r3
     ed2:	2376      	movs	r3, #118	; 0x76
     ed4:	425b      	negs	r3, r3
     ed6:	1a1b      	subs	r3, r3, r0
     ed8:	2100      	movs	r1, #0
     eda:	e7be      	b.n	e5a <__aeabi_fmul+0x52>
     edc:	2803      	cmp	r0, #3
     ede:	d100      	bne.n	ee2 <__aeabi_fmul+0xda>
     ee0:	e0ae      	b.n	1040 <__aeabi_fmul+0x238>
     ee2:	2801      	cmp	r0, #1
     ee4:	d14f      	bne.n	f86 <__aeabi_fmul+0x17e>
     ee6:	9801      	ldr	r0, [sp, #4]
     ee8:	4642      	mov	r2, r8
     eea:	4010      	ands	r0, r2
     eec:	b2c5      	uxtb	r5, r0
     eee:	2300      	movs	r3, #0
     ef0:	2400      	movs	r4, #0
     ef2:	e7cd      	b.n	e90 <__aeabi_fmul+0x88>
     ef4:	230c      	movs	r3, #12
     ef6:	2003      	movs	r0, #3
     ef8:	469a      	mov	sl, r3
     efa:	4680      	mov	r8, r0
     efc:	e79d      	b.n	e3a <__aeabi_fmul+0x32>
     efe:	1c20      	adds	r0, r4, #0
     f00:	f001 fe5a 	bl	2bb8 <__clzsi2>
     f04:	2676      	movs	r6, #118	; 0x76
     f06:	1f43      	subs	r3, r0, #5
     f08:	409c      	lsls	r4, r3
     f0a:	4276      	negs	r6, r6
     f0c:	2300      	movs	r3, #0
     f0e:	1a36      	subs	r6, r6, r0
     f10:	469a      	mov	sl, r3
     f12:	4698      	mov	r8, r3
     f14:	e791      	b.n	e3a <__aeabi_fmul+0x32>
     f16:	2480      	movs	r4, #128	; 0x80
     f18:	2500      	movs	r5, #0
     f1a:	03e4      	lsls	r4, r4, #15
     f1c:	23ff      	movs	r3, #255	; 0xff
     f1e:	e7b7      	b.n	e90 <__aeabi_fmul+0x88>
     f20:	465b      	mov	r3, fp
     f22:	1c3c      	adds	r4, r7, #0
     f24:	9301      	str	r3, [sp, #4]
     f26:	4688      	mov	r8, r1
     f28:	e7aa      	b.n	e80 <__aeabi_fmul+0x78>
     f2a:	1c3c      	adds	r4, r7, #0
     f2c:	4688      	mov	r8, r1
     f2e:	e7a7      	b.n	e80 <__aeabi_fmul+0x78>
     f30:	0c25      	lsrs	r5, r4, #16
     f32:	0424      	lsls	r4, r4, #16
     f34:	0c3a      	lsrs	r2, r7, #16
     f36:	0c24      	lsrs	r4, r4, #16
     f38:	043f      	lsls	r7, r7, #16
     f3a:	18f6      	adds	r6, r6, r3
     f3c:	0c3f      	lsrs	r7, r7, #16
     f3e:	1c21      	adds	r1, r4, #0
     f40:	1c23      	adds	r3, r4, #0
     f42:	4379      	muls	r1, r7
     f44:	4353      	muls	r3, r2
     f46:	436f      	muls	r7, r5
     f48:	4355      	muls	r5, r2
     f4a:	18fb      	adds	r3, r7, r3
     f4c:	0c0a      	lsrs	r2, r1, #16
     f4e:	189b      	adds	r3, r3, r2
     f50:	46b1      	mov	r9, r6
     f52:	429f      	cmp	r7, r3
     f54:	d902      	bls.n	f5c <__aeabi_fmul+0x154>
     f56:	2280      	movs	r2, #128	; 0x80
     f58:	0252      	lsls	r2, r2, #9
     f5a:	18ad      	adds	r5, r5, r2
     f5c:	0409      	lsls	r1, r1, #16
     f5e:	041a      	lsls	r2, r3, #16
     f60:	0c09      	lsrs	r1, r1, #16
     f62:	1852      	adds	r2, r2, r1
     f64:	0194      	lsls	r4, r2, #6
     f66:	0c1b      	lsrs	r3, r3, #16
     f68:	1e61      	subs	r1, r4, #1
     f6a:	418c      	sbcs	r4, r1
     f6c:	0e92      	lsrs	r2, r2, #26
     f6e:	18ed      	adds	r5, r5, r3
     f70:	4314      	orrs	r4, r2
     f72:	01ad      	lsls	r5, r5, #6
     f74:	432c      	orrs	r4, r5
     f76:	0123      	lsls	r3, r4, #4
     f78:	d505      	bpl.n	f86 <__aeabi_fmul+0x17e>
     f7a:	2201      	movs	r2, #1
     f7c:	0863      	lsrs	r3, r4, #1
     f7e:	2001      	movs	r0, #1
     f80:	4014      	ands	r4, r2
     f82:	4481      	add	r9, r0
     f84:	431c      	orrs	r4, r3
     f86:	464b      	mov	r3, r9
     f88:	337f      	adds	r3, #127	; 0x7f
     f8a:	2b00      	cmp	r3, #0
     f8c:	dd2d      	ble.n	fea <__aeabi_fmul+0x1e2>
     f8e:	0760      	lsls	r0, r4, #29
     f90:	d004      	beq.n	f9c <__aeabi_fmul+0x194>
     f92:	220f      	movs	r2, #15
     f94:	4022      	ands	r2, r4
     f96:	2a04      	cmp	r2, #4
     f98:	d000      	beq.n	f9c <__aeabi_fmul+0x194>
     f9a:	3404      	adds	r4, #4
     f9c:	0122      	lsls	r2, r4, #4
     f9e:	d503      	bpl.n	fa8 <__aeabi_fmul+0x1a0>
     fa0:	4b2d      	ldr	r3, [pc, #180]	; (1058 <__aeabi_fmul+0x250>)
     fa2:	401c      	ands	r4, r3
     fa4:	464b      	mov	r3, r9
     fa6:	3380      	adds	r3, #128	; 0x80
     fa8:	2bfe      	cmp	r3, #254	; 0xfe
     faa:	dd17      	ble.n	fdc <__aeabi_fmul+0x1d4>
     fac:	9b01      	ldr	r3, [sp, #4]
     fae:	2501      	movs	r5, #1
     fb0:	401d      	ands	r5, r3
     fb2:	2400      	movs	r4, #0
     fb4:	23ff      	movs	r3, #255	; 0xff
     fb6:	e76b      	b.n	e90 <__aeabi_fmul+0x88>
     fb8:	2080      	movs	r0, #128	; 0x80
     fba:	03c0      	lsls	r0, r0, #15
     fbc:	4204      	tst	r4, r0
     fbe:	d008      	beq.n	fd2 <__aeabi_fmul+0x1ca>
     fc0:	4207      	tst	r7, r0
     fc2:	d106      	bne.n	fd2 <__aeabi_fmul+0x1ca>
     fc4:	1c04      	adds	r4, r0, #0
     fc6:	433c      	orrs	r4, r7
     fc8:	0264      	lsls	r4, r4, #9
     fca:	0a64      	lsrs	r4, r4, #9
     fcc:	465d      	mov	r5, fp
     fce:	23ff      	movs	r3, #255	; 0xff
     fd0:	e75e      	b.n	e90 <__aeabi_fmul+0x88>
     fd2:	4304      	orrs	r4, r0
     fd4:	0264      	lsls	r4, r4, #9
     fd6:	0a64      	lsrs	r4, r4, #9
     fd8:	23ff      	movs	r3, #255	; 0xff
     fda:	e759      	b.n	e90 <__aeabi_fmul+0x88>
     fdc:	9801      	ldr	r0, [sp, #4]
     fde:	01a4      	lsls	r4, r4, #6
     fe0:	2501      	movs	r5, #1
     fe2:	0a64      	lsrs	r4, r4, #9
     fe4:	b2db      	uxtb	r3, r3
     fe6:	4005      	ands	r5, r0
     fe8:	e752      	b.n	e90 <__aeabi_fmul+0x88>
     fea:	237e      	movs	r3, #126	; 0x7e
     fec:	425b      	negs	r3, r3
     fee:	464a      	mov	r2, r9
     ff0:	1a9b      	subs	r3, r3, r2
     ff2:	2b1b      	cmp	r3, #27
     ff4:	dd05      	ble.n	1002 <__aeabi_fmul+0x1fa>
     ff6:	9b01      	ldr	r3, [sp, #4]
     ff8:	2501      	movs	r5, #1
     ffa:	401d      	ands	r5, r3
     ffc:	2400      	movs	r4, #0
     ffe:	2300      	movs	r3, #0
    1000:	e746      	b.n	e90 <__aeabi_fmul+0x88>
    1002:	1c22      	adds	r2, r4, #0
    1004:	40da      	lsrs	r2, r3
    1006:	464b      	mov	r3, r9
    1008:	339e      	adds	r3, #158	; 0x9e
    100a:	409c      	lsls	r4, r3
    100c:	1c23      	adds	r3, r4, #0
    100e:	1e5c      	subs	r4, r3, #1
    1010:	41a3      	sbcs	r3, r4
    1012:	4313      	orrs	r3, r2
    1014:	0758      	lsls	r0, r3, #29
    1016:	d004      	beq.n	1022 <__aeabi_fmul+0x21a>
    1018:	220f      	movs	r2, #15
    101a:	401a      	ands	r2, r3
    101c:	2a04      	cmp	r2, #4
    101e:	d000      	beq.n	1022 <__aeabi_fmul+0x21a>
    1020:	3304      	adds	r3, #4
    1022:	015a      	lsls	r2, r3, #5
    1024:	d505      	bpl.n	1032 <__aeabi_fmul+0x22a>
    1026:	9b01      	ldr	r3, [sp, #4]
    1028:	2501      	movs	r5, #1
    102a:	401d      	ands	r5, r3
    102c:	2400      	movs	r4, #0
    102e:	2301      	movs	r3, #1
    1030:	e72e      	b.n	e90 <__aeabi_fmul+0x88>
    1032:	9801      	ldr	r0, [sp, #4]
    1034:	019c      	lsls	r4, r3, #6
    1036:	2501      	movs	r5, #1
    1038:	0a64      	lsrs	r4, r4, #9
    103a:	4005      	ands	r5, r0
    103c:	2300      	movs	r3, #0
    103e:	e727      	b.n	e90 <__aeabi_fmul+0x88>
    1040:	2780      	movs	r7, #128	; 0x80
    1042:	03ff      	lsls	r7, r7, #15
    1044:	9b01      	ldr	r3, [sp, #4]
    1046:	433c      	orrs	r4, r7
    1048:	0264      	lsls	r4, r4, #9
    104a:	2501      	movs	r5, #1
    104c:	401d      	ands	r5, r3
    104e:	0a64      	lsrs	r4, r4, #9
    1050:	23ff      	movs	r3, #255	; 0xff
    1052:	e71d      	b.n	e90 <__aeabi_fmul+0x88>
    1054:	0000573c 	.word	0x0000573c
    1058:	f7ffffff 	.word	0xf7ffffff

0000105c <__aeabi_fsub>:
__aeabi_fsub():
    105c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    105e:	0fc2      	lsrs	r2, r0, #31
    1060:	0243      	lsls	r3, r0, #9
    1062:	0044      	lsls	r4, r0, #1
    1064:	024d      	lsls	r5, r1, #9
    1066:	0048      	lsls	r0, r1, #1
    1068:	0e24      	lsrs	r4, r4, #24
    106a:	1c16      	adds	r6, r2, #0
    106c:	099b      	lsrs	r3, r3, #6
    106e:	0e00      	lsrs	r0, r0, #24
    1070:	0fc9      	lsrs	r1, r1, #31
    1072:	09ad      	lsrs	r5, r5, #6
    1074:	28ff      	cmp	r0, #255	; 0xff
    1076:	d100      	bne.n	107a <__aeabi_fsub+0x1e>
    1078:	e083      	b.n	1182 <__aeabi_fsub+0x126>
    107a:	2701      	movs	r7, #1
    107c:	4079      	eors	r1, r7
    107e:	428a      	cmp	r2, r1
    1080:	d05c      	beq.n	113c <__aeabi_fsub+0xe0>
    1082:	1a22      	subs	r2, r4, r0
    1084:	2a00      	cmp	r2, #0
    1086:	dc00      	bgt.n	108a <__aeabi_fsub+0x2e>
    1088:	e08e      	b.n	11a8 <__aeabi_fsub+0x14c>
    108a:	2800      	cmp	r0, #0
    108c:	d11e      	bne.n	10cc <__aeabi_fsub+0x70>
    108e:	2d00      	cmp	r5, #0
    1090:	d000      	beq.n	1094 <__aeabi_fsub+0x38>
    1092:	e07a      	b.n	118a <__aeabi_fsub+0x12e>
    1094:	0758      	lsls	r0, r3, #29
    1096:	d004      	beq.n	10a2 <__aeabi_fsub+0x46>
    1098:	220f      	movs	r2, #15
    109a:	401a      	ands	r2, r3
    109c:	2a04      	cmp	r2, #4
    109e:	d000      	beq.n	10a2 <__aeabi_fsub+0x46>
    10a0:	3304      	adds	r3, #4
    10a2:	2180      	movs	r1, #128	; 0x80
    10a4:	04c9      	lsls	r1, r1, #19
    10a6:	2201      	movs	r2, #1
    10a8:	4019      	ands	r1, r3
    10aa:	4032      	ands	r2, r6
    10ac:	2900      	cmp	r1, #0
    10ae:	d03a      	beq.n	1126 <__aeabi_fsub+0xca>
    10b0:	3401      	adds	r4, #1
    10b2:	2cff      	cmp	r4, #255	; 0xff
    10b4:	d100      	bne.n	10b8 <__aeabi_fsub+0x5c>
    10b6:	e083      	b.n	11c0 <__aeabi_fsub+0x164>
    10b8:	019b      	lsls	r3, r3, #6
    10ba:	0a5b      	lsrs	r3, r3, #9
    10bc:	025b      	lsls	r3, r3, #9
    10be:	b2e4      	uxtb	r4, r4
    10c0:	05e4      	lsls	r4, r4, #23
    10c2:	0a58      	lsrs	r0, r3, #9
    10c4:	07d2      	lsls	r2, r2, #31
    10c6:	4320      	orrs	r0, r4
    10c8:	4310      	orrs	r0, r2
    10ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    10cc:	2cff      	cmp	r4, #255	; 0xff
    10ce:	d0e1      	beq.n	1094 <__aeabi_fsub+0x38>
    10d0:	2180      	movs	r1, #128	; 0x80
    10d2:	04c9      	lsls	r1, r1, #19
    10d4:	430d      	orrs	r5, r1
    10d6:	2a1b      	cmp	r2, #27
    10d8:	dd00      	ble.n	10dc <__aeabi_fsub+0x80>
    10da:	e131      	b.n	1340 <__aeabi_fsub+0x2e4>
    10dc:	1c29      	adds	r1, r5, #0
    10de:	2020      	movs	r0, #32
    10e0:	40d1      	lsrs	r1, r2
    10e2:	1a82      	subs	r2, r0, r2
    10e4:	4095      	lsls	r5, r2
    10e6:	1e6a      	subs	r2, r5, #1
    10e8:	4195      	sbcs	r5, r2
    10ea:	430d      	orrs	r5, r1
    10ec:	1b5b      	subs	r3, r3, r5
    10ee:	0158      	lsls	r0, r3, #5
    10f0:	d5d0      	bpl.n	1094 <__aeabi_fsub+0x38>
    10f2:	019b      	lsls	r3, r3, #6
    10f4:	099f      	lsrs	r7, r3, #6
    10f6:	1c38      	adds	r0, r7, #0
    10f8:	f001 fd5e 	bl	2bb8 <__clzsi2>
    10fc:	1f42      	subs	r2, r0, #5
    10fe:	4097      	lsls	r7, r2
    1100:	4294      	cmp	r4, r2
    1102:	dc5f      	bgt.n	11c4 <__aeabi_fsub+0x168>
    1104:	1b14      	subs	r4, r2, r4
    1106:	231f      	movs	r3, #31
    1108:	1b1b      	subs	r3, r3, r4
    110a:	1c3a      	adds	r2, r7, #0
    110c:	409f      	lsls	r7, r3
    110e:	1c61      	adds	r1, r4, #1
    1110:	1c3b      	adds	r3, r7, #0
    1112:	40ca      	lsrs	r2, r1
    1114:	1e5f      	subs	r7, r3, #1
    1116:	41bb      	sbcs	r3, r7
    1118:	4313      	orrs	r3, r2
    111a:	2400      	movs	r4, #0
    111c:	e7ba      	b.n	1094 <__aeabi_fsub+0x38>
    111e:	1e13      	subs	r3, r2, #0
    1120:	d1b8      	bne.n	1094 <__aeabi_fsub+0x38>
    1122:	2300      	movs	r3, #0
    1124:	2200      	movs	r2, #0
    1126:	08db      	lsrs	r3, r3, #3
    1128:	2cff      	cmp	r4, #255	; 0xff
    112a:	d104      	bne.n	1136 <__aeabi_fsub+0xda>
    112c:	2b00      	cmp	r3, #0
    112e:	d047      	beq.n	11c0 <__aeabi_fsub+0x164>
    1130:	2080      	movs	r0, #128	; 0x80
    1132:	03c0      	lsls	r0, r0, #15
    1134:	4303      	orrs	r3, r0
    1136:	025b      	lsls	r3, r3, #9
    1138:	0a5b      	lsrs	r3, r3, #9
    113a:	e7bf      	b.n	10bc <__aeabi_fsub+0x60>
    113c:	1a21      	subs	r1, r4, r0
    113e:	2900      	cmp	r1, #0
    1140:	dd44      	ble.n	11cc <__aeabi_fsub+0x170>
    1142:	2800      	cmp	r0, #0
    1144:	d027      	beq.n	1196 <__aeabi_fsub+0x13a>
    1146:	2cff      	cmp	r4, #255	; 0xff
    1148:	d0a4      	beq.n	1094 <__aeabi_fsub+0x38>
    114a:	2080      	movs	r0, #128	; 0x80
    114c:	04c0      	lsls	r0, r0, #19
    114e:	4305      	orrs	r5, r0
    1150:	291b      	cmp	r1, #27
    1152:	dd00      	ble.n	1156 <__aeabi_fsub+0xfa>
    1154:	e0f2      	b.n	133c <__aeabi_fsub+0x2e0>
    1156:	1c28      	adds	r0, r5, #0
    1158:	2720      	movs	r7, #32
    115a:	40c8      	lsrs	r0, r1
    115c:	1a79      	subs	r1, r7, r1
    115e:	408d      	lsls	r5, r1
    1160:	1e69      	subs	r1, r5, #1
    1162:	418d      	sbcs	r5, r1
    1164:	4305      	orrs	r5, r0
    1166:	195b      	adds	r3, r3, r5
    1168:	0159      	lsls	r1, r3, #5
    116a:	d400      	bmi.n	116e <__aeabi_fsub+0x112>
    116c:	e792      	b.n	1094 <__aeabi_fsub+0x38>
    116e:	3401      	adds	r4, #1
    1170:	2cff      	cmp	r4, #255	; 0xff
    1172:	d059      	beq.n	1228 <__aeabi_fsub+0x1cc>
    1174:	4973      	ldr	r1, [pc, #460]	; (1344 <__aeabi_fsub+0x2e8>)
    1176:	2201      	movs	r2, #1
    1178:	401a      	ands	r2, r3
    117a:	400b      	ands	r3, r1
    117c:	085b      	lsrs	r3, r3, #1
    117e:	4313      	orrs	r3, r2
    1180:	e788      	b.n	1094 <__aeabi_fsub+0x38>
    1182:	2d00      	cmp	r5, #0
    1184:	d000      	beq.n	1188 <__aeabi_fsub+0x12c>
    1186:	e77a      	b.n	107e <__aeabi_fsub+0x22>
    1188:	e777      	b.n	107a <__aeabi_fsub+0x1e>
    118a:	3a01      	subs	r2, #1
    118c:	2a00      	cmp	r2, #0
    118e:	d0ad      	beq.n	10ec <__aeabi_fsub+0x90>
    1190:	2cff      	cmp	r4, #255	; 0xff
    1192:	d1a0      	bne.n	10d6 <__aeabi_fsub+0x7a>
    1194:	e77e      	b.n	1094 <__aeabi_fsub+0x38>
    1196:	2d00      	cmp	r5, #0
    1198:	d100      	bne.n	119c <__aeabi_fsub+0x140>
    119a:	e77b      	b.n	1094 <__aeabi_fsub+0x38>
    119c:	3901      	subs	r1, #1
    119e:	2900      	cmp	r1, #0
    11a0:	d0e1      	beq.n	1166 <__aeabi_fsub+0x10a>
    11a2:	2cff      	cmp	r4, #255	; 0xff
    11a4:	d1d4      	bne.n	1150 <__aeabi_fsub+0xf4>
    11a6:	e775      	b.n	1094 <__aeabi_fsub+0x38>
    11a8:	2a00      	cmp	r2, #0
    11aa:	d11b      	bne.n	11e4 <__aeabi_fsub+0x188>
    11ac:	1c62      	adds	r2, r4, #1
    11ae:	b2d2      	uxtb	r2, r2
    11b0:	2a01      	cmp	r2, #1
    11b2:	dd4b      	ble.n	124c <__aeabi_fsub+0x1f0>
    11b4:	1b5f      	subs	r7, r3, r5
    11b6:	017a      	lsls	r2, r7, #5
    11b8:	d523      	bpl.n	1202 <__aeabi_fsub+0x1a6>
    11ba:	1aef      	subs	r7, r5, r3
    11bc:	1c0e      	adds	r6, r1, #0
    11be:	e79a      	b.n	10f6 <__aeabi_fsub+0x9a>
    11c0:	2300      	movs	r3, #0
    11c2:	e77b      	b.n	10bc <__aeabi_fsub+0x60>
    11c4:	4b5f      	ldr	r3, [pc, #380]	; (1344 <__aeabi_fsub+0x2e8>)
    11c6:	1aa4      	subs	r4, r4, r2
    11c8:	403b      	ands	r3, r7
    11ca:	e763      	b.n	1094 <__aeabi_fsub+0x38>
    11cc:	2900      	cmp	r1, #0
    11ce:	d146      	bne.n	125e <__aeabi_fsub+0x202>
    11d0:	1c61      	adds	r1, r4, #1
    11d2:	b2c8      	uxtb	r0, r1
    11d4:	2801      	cmp	r0, #1
    11d6:	dd29      	ble.n	122c <__aeabi_fsub+0x1d0>
    11d8:	29ff      	cmp	r1, #255	; 0xff
    11da:	d024      	beq.n	1226 <__aeabi_fsub+0x1ca>
    11dc:	18eb      	adds	r3, r5, r3
    11de:	085b      	lsrs	r3, r3, #1
    11e0:	1c0c      	adds	r4, r1, #0
    11e2:	e757      	b.n	1094 <__aeabi_fsub+0x38>
    11e4:	2c00      	cmp	r4, #0
    11e6:	d013      	beq.n	1210 <__aeabi_fsub+0x1b4>
    11e8:	28ff      	cmp	r0, #255	; 0xff
    11ea:	d018      	beq.n	121e <__aeabi_fsub+0x1c2>
    11ec:	2480      	movs	r4, #128	; 0x80
    11ee:	04e4      	lsls	r4, r4, #19
    11f0:	4252      	negs	r2, r2
    11f2:	4323      	orrs	r3, r4
    11f4:	2a1b      	cmp	r2, #27
    11f6:	dd4d      	ble.n	1294 <__aeabi_fsub+0x238>
    11f8:	2301      	movs	r3, #1
    11fa:	1aeb      	subs	r3, r5, r3
    11fc:	1c04      	adds	r4, r0, #0
    11fe:	1c0e      	adds	r6, r1, #0
    1200:	e775      	b.n	10ee <__aeabi_fsub+0x92>
    1202:	2f00      	cmp	r7, #0
    1204:	d000      	beq.n	1208 <__aeabi_fsub+0x1ac>
    1206:	e776      	b.n	10f6 <__aeabi_fsub+0x9a>
    1208:	2300      	movs	r3, #0
    120a:	2200      	movs	r2, #0
    120c:	2400      	movs	r4, #0
    120e:	e78a      	b.n	1126 <__aeabi_fsub+0xca>
    1210:	2b00      	cmp	r3, #0
    1212:	d03b      	beq.n	128c <__aeabi_fsub+0x230>
    1214:	43d2      	mvns	r2, r2
    1216:	2a00      	cmp	r2, #0
    1218:	d0ef      	beq.n	11fa <__aeabi_fsub+0x19e>
    121a:	28ff      	cmp	r0, #255	; 0xff
    121c:	d1ea      	bne.n	11f4 <__aeabi_fsub+0x198>
    121e:	1c2b      	adds	r3, r5, #0
    1220:	24ff      	movs	r4, #255	; 0xff
    1222:	1c0e      	adds	r6, r1, #0
    1224:	e736      	b.n	1094 <__aeabi_fsub+0x38>
    1226:	24ff      	movs	r4, #255	; 0xff
    1228:	2300      	movs	r3, #0
    122a:	e77c      	b.n	1126 <__aeabi_fsub+0xca>
    122c:	2c00      	cmp	r4, #0
    122e:	d15c      	bne.n	12ea <__aeabi_fsub+0x28e>
    1230:	2b00      	cmp	r3, #0
    1232:	d100      	bne.n	1236 <__aeabi_fsub+0x1da>
    1234:	e080      	b.n	1338 <__aeabi_fsub+0x2dc>
    1236:	2d00      	cmp	r5, #0
    1238:	d100      	bne.n	123c <__aeabi_fsub+0x1e0>
    123a:	e72b      	b.n	1094 <__aeabi_fsub+0x38>
    123c:	195b      	adds	r3, r3, r5
    123e:	0158      	lsls	r0, r3, #5
    1240:	d400      	bmi.n	1244 <__aeabi_fsub+0x1e8>
    1242:	e727      	b.n	1094 <__aeabi_fsub+0x38>
    1244:	4a3f      	ldr	r2, [pc, #252]	; (1344 <__aeabi_fsub+0x2e8>)
    1246:	2401      	movs	r4, #1
    1248:	4013      	ands	r3, r2
    124a:	e723      	b.n	1094 <__aeabi_fsub+0x38>
    124c:	2c00      	cmp	r4, #0
    124e:	d115      	bne.n	127c <__aeabi_fsub+0x220>
    1250:	2b00      	cmp	r3, #0
    1252:	d140      	bne.n	12d6 <__aeabi_fsub+0x27a>
    1254:	2d00      	cmp	r5, #0
    1256:	d063      	beq.n	1320 <__aeabi_fsub+0x2c4>
    1258:	1c2b      	adds	r3, r5, #0
    125a:	1c0e      	adds	r6, r1, #0
    125c:	e71a      	b.n	1094 <__aeabi_fsub+0x38>
    125e:	2c00      	cmp	r4, #0
    1260:	d121      	bne.n	12a6 <__aeabi_fsub+0x24a>
    1262:	2b00      	cmp	r3, #0
    1264:	d054      	beq.n	1310 <__aeabi_fsub+0x2b4>
    1266:	43c9      	mvns	r1, r1
    1268:	2900      	cmp	r1, #0
    126a:	d004      	beq.n	1276 <__aeabi_fsub+0x21a>
    126c:	28ff      	cmp	r0, #255	; 0xff
    126e:	d04c      	beq.n	130a <__aeabi_fsub+0x2ae>
    1270:	291b      	cmp	r1, #27
    1272:	dd58      	ble.n	1326 <__aeabi_fsub+0x2ca>
    1274:	2301      	movs	r3, #1
    1276:	195b      	adds	r3, r3, r5
    1278:	1c04      	adds	r4, r0, #0
    127a:	e775      	b.n	1168 <__aeabi_fsub+0x10c>
    127c:	2b00      	cmp	r3, #0
    127e:	d119      	bne.n	12b4 <__aeabi_fsub+0x258>
    1280:	2d00      	cmp	r5, #0
    1282:	d048      	beq.n	1316 <__aeabi_fsub+0x2ba>
    1284:	1c2b      	adds	r3, r5, #0
    1286:	1c0e      	adds	r6, r1, #0
    1288:	24ff      	movs	r4, #255	; 0xff
    128a:	e703      	b.n	1094 <__aeabi_fsub+0x38>
    128c:	1c2b      	adds	r3, r5, #0
    128e:	1c04      	adds	r4, r0, #0
    1290:	1c0e      	adds	r6, r1, #0
    1292:	e6ff      	b.n	1094 <__aeabi_fsub+0x38>
    1294:	1c1c      	adds	r4, r3, #0
    1296:	2620      	movs	r6, #32
    1298:	40d4      	lsrs	r4, r2
    129a:	1ab2      	subs	r2, r6, r2
    129c:	4093      	lsls	r3, r2
    129e:	1e5a      	subs	r2, r3, #1
    12a0:	4193      	sbcs	r3, r2
    12a2:	4323      	orrs	r3, r4
    12a4:	e7a9      	b.n	11fa <__aeabi_fsub+0x19e>
    12a6:	28ff      	cmp	r0, #255	; 0xff
    12a8:	d02f      	beq.n	130a <__aeabi_fsub+0x2ae>
    12aa:	2480      	movs	r4, #128	; 0x80
    12ac:	04e4      	lsls	r4, r4, #19
    12ae:	4249      	negs	r1, r1
    12b0:	4323      	orrs	r3, r4
    12b2:	e7dd      	b.n	1270 <__aeabi_fsub+0x214>
    12b4:	24ff      	movs	r4, #255	; 0xff
    12b6:	2d00      	cmp	r5, #0
    12b8:	d100      	bne.n	12bc <__aeabi_fsub+0x260>
    12ba:	e6eb      	b.n	1094 <__aeabi_fsub+0x38>
    12bc:	2280      	movs	r2, #128	; 0x80
    12be:	08db      	lsrs	r3, r3, #3
    12c0:	03d2      	lsls	r2, r2, #15
    12c2:	4213      	tst	r3, r2
    12c4:	d004      	beq.n	12d0 <__aeabi_fsub+0x274>
    12c6:	08ed      	lsrs	r5, r5, #3
    12c8:	4215      	tst	r5, r2
    12ca:	d101      	bne.n	12d0 <__aeabi_fsub+0x274>
    12cc:	1c2b      	adds	r3, r5, #0
    12ce:	1c0e      	adds	r6, r1, #0
    12d0:	00db      	lsls	r3, r3, #3
    12d2:	24ff      	movs	r4, #255	; 0xff
    12d4:	e6de      	b.n	1094 <__aeabi_fsub+0x38>
    12d6:	2d00      	cmp	r5, #0
    12d8:	d100      	bne.n	12dc <__aeabi_fsub+0x280>
    12da:	e6db      	b.n	1094 <__aeabi_fsub+0x38>
    12dc:	1b5a      	subs	r2, r3, r5
    12de:	0150      	lsls	r0, r2, #5
    12e0:	d400      	bmi.n	12e4 <__aeabi_fsub+0x288>
    12e2:	e71c      	b.n	111e <__aeabi_fsub+0xc2>
    12e4:	1aeb      	subs	r3, r5, r3
    12e6:	1c0e      	adds	r6, r1, #0
    12e8:	e6d4      	b.n	1094 <__aeabi_fsub+0x38>
    12ea:	2b00      	cmp	r3, #0
    12ec:	d00d      	beq.n	130a <__aeabi_fsub+0x2ae>
    12ee:	24ff      	movs	r4, #255	; 0xff
    12f0:	2d00      	cmp	r5, #0
    12f2:	d100      	bne.n	12f6 <__aeabi_fsub+0x29a>
    12f4:	e6ce      	b.n	1094 <__aeabi_fsub+0x38>
    12f6:	2280      	movs	r2, #128	; 0x80
    12f8:	08db      	lsrs	r3, r3, #3
    12fa:	03d2      	lsls	r2, r2, #15
    12fc:	4213      	tst	r3, r2
    12fe:	d0e7      	beq.n	12d0 <__aeabi_fsub+0x274>
    1300:	08ed      	lsrs	r5, r5, #3
    1302:	4215      	tst	r5, r2
    1304:	d1e4      	bne.n	12d0 <__aeabi_fsub+0x274>
    1306:	1c2b      	adds	r3, r5, #0
    1308:	e7e2      	b.n	12d0 <__aeabi_fsub+0x274>
    130a:	1c2b      	adds	r3, r5, #0
    130c:	24ff      	movs	r4, #255	; 0xff
    130e:	e6c1      	b.n	1094 <__aeabi_fsub+0x38>
    1310:	1c2b      	adds	r3, r5, #0
    1312:	1c04      	adds	r4, r0, #0
    1314:	e6be      	b.n	1094 <__aeabi_fsub+0x38>
    1316:	2380      	movs	r3, #128	; 0x80
    1318:	2200      	movs	r2, #0
    131a:	049b      	lsls	r3, r3, #18
    131c:	24ff      	movs	r4, #255	; 0xff
    131e:	e702      	b.n	1126 <__aeabi_fsub+0xca>
    1320:	1c23      	adds	r3, r4, #0
    1322:	2200      	movs	r2, #0
    1324:	e6ff      	b.n	1126 <__aeabi_fsub+0xca>
    1326:	1c1c      	adds	r4, r3, #0
    1328:	2720      	movs	r7, #32
    132a:	40cc      	lsrs	r4, r1
    132c:	1a79      	subs	r1, r7, r1
    132e:	408b      	lsls	r3, r1
    1330:	1e59      	subs	r1, r3, #1
    1332:	418b      	sbcs	r3, r1
    1334:	4323      	orrs	r3, r4
    1336:	e79e      	b.n	1276 <__aeabi_fsub+0x21a>
    1338:	1c2b      	adds	r3, r5, #0
    133a:	e6ab      	b.n	1094 <__aeabi_fsub+0x38>
    133c:	2501      	movs	r5, #1
    133e:	e712      	b.n	1166 <__aeabi_fsub+0x10a>
    1340:	2501      	movs	r5, #1
    1342:	e6d3      	b.n	10ec <__aeabi_fsub+0x90>
    1344:	fbffffff 	.word	0xfbffffff

00001348 <__aeabi_f2iz>:
__aeabi_f2iz():
    1348:	0243      	lsls	r3, r0, #9
    134a:	0a59      	lsrs	r1, r3, #9
    134c:	0043      	lsls	r3, r0, #1
    134e:	0fc2      	lsrs	r2, r0, #31
    1350:	0e1b      	lsrs	r3, r3, #24
    1352:	2000      	movs	r0, #0
    1354:	2b7e      	cmp	r3, #126	; 0x7e
    1356:	dd0d      	ble.n	1374 <__aeabi_f2iz+0x2c>
    1358:	2b9d      	cmp	r3, #157	; 0x9d
    135a:	dc0c      	bgt.n	1376 <__aeabi_f2iz+0x2e>
    135c:	2080      	movs	r0, #128	; 0x80
    135e:	0400      	lsls	r0, r0, #16
    1360:	4301      	orrs	r1, r0
    1362:	2b95      	cmp	r3, #149	; 0x95
    1364:	dc0a      	bgt.n	137c <__aeabi_f2iz+0x34>
    1366:	2096      	movs	r0, #150	; 0x96
    1368:	1ac3      	subs	r3, r0, r3
    136a:	40d9      	lsrs	r1, r3
    136c:	4248      	negs	r0, r1
    136e:	2a00      	cmp	r2, #0
    1370:	d100      	bne.n	1374 <__aeabi_f2iz+0x2c>
    1372:	1c08      	adds	r0, r1, #0
    1374:	4770      	bx	lr
    1376:	4b03      	ldr	r3, [pc, #12]	; (1384 <__aeabi_f2iz+0x3c>)
    1378:	18d0      	adds	r0, r2, r3
    137a:	e7fb      	b.n	1374 <__aeabi_f2iz+0x2c>
    137c:	3b96      	subs	r3, #150	; 0x96
    137e:	4099      	lsls	r1, r3
    1380:	e7f4      	b.n	136c <__aeabi_f2iz+0x24>
    1382:	46c0      	nop			; (mov r8, r8)
    1384:	7fffffff 	.word	0x7fffffff

00001388 <__aeabi_i2f>:
__aeabi_i2f():
    1388:	b570      	push	{r4, r5, r6, lr}
    138a:	1e04      	subs	r4, r0, #0
    138c:	d03c      	beq.n	1408 <__aeabi_i2f+0x80>
    138e:	0fc6      	lsrs	r6, r0, #31
    1390:	d000      	beq.n	1394 <__aeabi_i2f+0xc>
    1392:	4244      	negs	r4, r0
    1394:	1c20      	adds	r0, r4, #0
    1396:	f001 fc0f 	bl	2bb8 <__clzsi2>
    139a:	239e      	movs	r3, #158	; 0x9e
    139c:	1c25      	adds	r5, r4, #0
    139e:	1a1b      	subs	r3, r3, r0
    13a0:	2b96      	cmp	r3, #150	; 0x96
    13a2:	dc0c      	bgt.n	13be <__aeabi_i2f+0x36>
    13a4:	3808      	subs	r0, #8
    13a6:	4084      	lsls	r4, r0
    13a8:	0264      	lsls	r4, r4, #9
    13aa:	0a64      	lsrs	r4, r4, #9
    13ac:	b2db      	uxtb	r3, r3
    13ae:	1c32      	adds	r2, r6, #0
    13b0:	0264      	lsls	r4, r4, #9
    13b2:	05db      	lsls	r3, r3, #23
    13b4:	0a60      	lsrs	r0, r4, #9
    13b6:	07d2      	lsls	r2, r2, #31
    13b8:	4318      	orrs	r0, r3
    13ba:	4310      	orrs	r0, r2
    13bc:	bd70      	pop	{r4, r5, r6, pc}
    13be:	2b99      	cmp	r3, #153	; 0x99
    13c0:	dd0a      	ble.n	13d8 <__aeabi_i2f+0x50>
    13c2:	2205      	movs	r2, #5
    13c4:	1a12      	subs	r2, r2, r0
    13c6:	1c21      	adds	r1, r4, #0
    13c8:	40d1      	lsrs	r1, r2
    13ca:	1c0a      	adds	r2, r1, #0
    13cc:	1c01      	adds	r1, r0, #0
    13ce:	311b      	adds	r1, #27
    13d0:	408d      	lsls	r5, r1
    13d2:	1e69      	subs	r1, r5, #1
    13d4:	418d      	sbcs	r5, r1
    13d6:	4315      	orrs	r5, r2
    13d8:	2805      	cmp	r0, #5
    13da:	dd01      	ble.n	13e0 <__aeabi_i2f+0x58>
    13dc:	1f42      	subs	r2, r0, #5
    13de:	4095      	lsls	r5, r2
    13e0:	4c16      	ldr	r4, [pc, #88]	; (143c <__aeabi_i2f+0xb4>)
    13e2:	402c      	ands	r4, r5
    13e4:	076a      	lsls	r2, r5, #29
    13e6:	d004      	beq.n	13f2 <__aeabi_i2f+0x6a>
    13e8:	220f      	movs	r2, #15
    13ea:	4015      	ands	r5, r2
    13ec:	2d04      	cmp	r5, #4
    13ee:	d000      	beq.n	13f2 <__aeabi_i2f+0x6a>
    13f0:	3404      	adds	r4, #4
    13f2:	0161      	lsls	r1, r4, #5
    13f4:	d50c      	bpl.n	1410 <__aeabi_i2f+0x88>
    13f6:	239f      	movs	r3, #159	; 0x9f
    13f8:	1a18      	subs	r0, r3, r0
    13fa:	28ff      	cmp	r0, #255	; 0xff
    13fc:	d01a      	beq.n	1434 <__aeabi_i2f+0xac>
    13fe:	01a4      	lsls	r4, r4, #6
    1400:	0a64      	lsrs	r4, r4, #9
    1402:	b2c3      	uxtb	r3, r0
    1404:	1c32      	adds	r2, r6, #0
    1406:	e7d3      	b.n	13b0 <__aeabi_i2f+0x28>
    1408:	2200      	movs	r2, #0
    140a:	2300      	movs	r3, #0
    140c:	2400      	movs	r4, #0
    140e:	e7cf      	b.n	13b0 <__aeabi_i2f+0x28>
    1410:	08e4      	lsrs	r4, r4, #3
    1412:	2bff      	cmp	r3, #255	; 0xff
    1414:	d004      	beq.n	1420 <__aeabi_i2f+0x98>
    1416:	0264      	lsls	r4, r4, #9
    1418:	0a64      	lsrs	r4, r4, #9
    141a:	b2db      	uxtb	r3, r3
    141c:	1c32      	adds	r2, r6, #0
    141e:	e7c7      	b.n	13b0 <__aeabi_i2f+0x28>
    1420:	2c00      	cmp	r4, #0
    1422:	d004      	beq.n	142e <__aeabi_i2f+0xa6>
    1424:	2080      	movs	r0, #128	; 0x80
    1426:	03c0      	lsls	r0, r0, #15
    1428:	4304      	orrs	r4, r0
    142a:	0264      	lsls	r4, r4, #9
    142c:	0a64      	lsrs	r4, r4, #9
    142e:	1c32      	adds	r2, r6, #0
    1430:	23ff      	movs	r3, #255	; 0xff
    1432:	e7bd      	b.n	13b0 <__aeabi_i2f+0x28>
    1434:	1c32      	adds	r2, r6, #0
    1436:	23ff      	movs	r3, #255	; 0xff
    1438:	2400      	movs	r4, #0
    143a:	e7b9      	b.n	13b0 <__aeabi_i2f+0x28>
    143c:	fbffffff 	.word	0xfbffffff

00001440 <__aeabi_ui2f>:
__aeabi_ui2f():
    1440:	b510      	push	{r4, lr}
    1442:	1e04      	subs	r4, r0, #0
    1444:	d033      	beq.n	14ae <__aeabi_ui2f+0x6e>
    1446:	f001 fbb7 	bl	2bb8 <__clzsi2>
    144a:	239e      	movs	r3, #158	; 0x9e
    144c:	1a1b      	subs	r3, r3, r0
    144e:	2b96      	cmp	r3, #150	; 0x96
    1450:	dc09      	bgt.n	1466 <__aeabi_ui2f+0x26>
    1452:	3808      	subs	r0, #8
    1454:	4084      	lsls	r4, r0
    1456:	0264      	lsls	r4, r4, #9
    1458:	0a64      	lsrs	r4, r4, #9
    145a:	b2db      	uxtb	r3, r3
    145c:	0264      	lsls	r4, r4, #9
    145e:	05db      	lsls	r3, r3, #23
    1460:	0a60      	lsrs	r0, r4, #9
    1462:	4318      	orrs	r0, r3
    1464:	bd10      	pop	{r4, pc}
    1466:	2b99      	cmp	r3, #153	; 0x99
    1468:	dd0a      	ble.n	1480 <__aeabi_ui2f+0x40>
    146a:	2205      	movs	r2, #5
    146c:	1a12      	subs	r2, r2, r0
    146e:	1c21      	adds	r1, r4, #0
    1470:	40d1      	lsrs	r1, r2
    1472:	1c0a      	adds	r2, r1, #0
    1474:	1c01      	adds	r1, r0, #0
    1476:	311b      	adds	r1, #27
    1478:	408c      	lsls	r4, r1
    147a:	1e61      	subs	r1, r4, #1
    147c:	418c      	sbcs	r4, r1
    147e:	4314      	orrs	r4, r2
    1480:	2805      	cmp	r0, #5
    1482:	dd01      	ble.n	1488 <__aeabi_ui2f+0x48>
    1484:	1f42      	subs	r2, r0, #5
    1486:	4094      	lsls	r4, r2
    1488:	4a14      	ldr	r2, [pc, #80]	; (14dc <__aeabi_ui2f+0x9c>)
    148a:	4022      	ands	r2, r4
    148c:	0761      	lsls	r1, r4, #29
    148e:	d004      	beq.n	149a <__aeabi_ui2f+0x5a>
    1490:	210f      	movs	r1, #15
    1492:	400c      	ands	r4, r1
    1494:	2c04      	cmp	r4, #4
    1496:	d000      	beq.n	149a <__aeabi_ui2f+0x5a>
    1498:	3204      	adds	r2, #4
    149a:	0151      	lsls	r1, r2, #5
    149c:	d50a      	bpl.n	14b4 <__aeabi_ui2f+0x74>
    149e:	239f      	movs	r3, #159	; 0x9f
    14a0:	1a18      	subs	r0, r3, r0
    14a2:	28ff      	cmp	r0, #255	; 0xff
    14a4:	d016      	beq.n	14d4 <__aeabi_ui2f+0x94>
    14a6:	0194      	lsls	r4, r2, #6
    14a8:	0a64      	lsrs	r4, r4, #9
    14aa:	b2c3      	uxtb	r3, r0
    14ac:	e7d6      	b.n	145c <__aeabi_ui2f+0x1c>
    14ae:	2300      	movs	r3, #0
    14b0:	2400      	movs	r4, #0
    14b2:	e7d3      	b.n	145c <__aeabi_ui2f+0x1c>
    14b4:	08d2      	lsrs	r2, r2, #3
    14b6:	2bff      	cmp	r3, #255	; 0xff
    14b8:	d003      	beq.n	14c2 <__aeabi_ui2f+0x82>
    14ba:	0254      	lsls	r4, r2, #9
    14bc:	0a64      	lsrs	r4, r4, #9
    14be:	b2db      	uxtb	r3, r3
    14c0:	e7cc      	b.n	145c <__aeabi_ui2f+0x1c>
    14c2:	2a00      	cmp	r2, #0
    14c4:	d006      	beq.n	14d4 <__aeabi_ui2f+0x94>
    14c6:	2480      	movs	r4, #128	; 0x80
    14c8:	03e4      	lsls	r4, r4, #15
    14ca:	4314      	orrs	r4, r2
    14cc:	0264      	lsls	r4, r4, #9
    14ce:	0a64      	lsrs	r4, r4, #9
    14d0:	23ff      	movs	r3, #255	; 0xff
    14d2:	e7c3      	b.n	145c <__aeabi_ui2f+0x1c>
    14d4:	23ff      	movs	r3, #255	; 0xff
    14d6:	2400      	movs	r4, #0
    14d8:	e7c0      	b.n	145c <__aeabi_ui2f+0x1c>
    14da:	46c0      	nop			; (mov r8, r8)
    14dc:	fbffffff 	.word	0xfbffffff

000014e0 <__aeabi_dadd>:
__aeabi_dadd():
    14e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    14e2:	465f      	mov	r7, fp
    14e4:	4656      	mov	r6, sl
    14e6:	4644      	mov	r4, r8
    14e8:	464d      	mov	r5, r9
    14ea:	b4f0      	push	{r4, r5, r6, r7}
    14ec:	030c      	lsls	r4, r1, #12
    14ee:	004d      	lsls	r5, r1, #1
    14f0:	0fce      	lsrs	r6, r1, #31
    14f2:	0a61      	lsrs	r1, r4, #9
    14f4:	0f44      	lsrs	r4, r0, #29
    14f6:	4321      	orrs	r1, r4
    14f8:	00c4      	lsls	r4, r0, #3
    14fa:	0318      	lsls	r0, r3, #12
    14fc:	4680      	mov	r8, r0
    14fe:	0058      	lsls	r0, r3, #1
    1500:	0d40      	lsrs	r0, r0, #21
    1502:	4682      	mov	sl, r0
    1504:	0fd8      	lsrs	r0, r3, #31
    1506:	4684      	mov	ip, r0
    1508:	4640      	mov	r0, r8
    150a:	0a40      	lsrs	r0, r0, #9
    150c:	0f53      	lsrs	r3, r2, #29
    150e:	4303      	orrs	r3, r0
    1510:	00d0      	lsls	r0, r2, #3
    1512:	0d6d      	lsrs	r5, r5, #21
    1514:	1c37      	adds	r7, r6, #0
    1516:	4683      	mov	fp, r0
    1518:	4652      	mov	r2, sl
    151a:	4566      	cmp	r6, ip
    151c:	d100      	bne.n	1520 <__aeabi_dadd+0x40>
    151e:	e0a4      	b.n	166a <__aeabi_dadd+0x18a>
    1520:	1aaf      	subs	r7, r5, r2
    1522:	2f00      	cmp	r7, #0
    1524:	dc00      	bgt.n	1528 <__aeabi_dadd+0x48>
    1526:	e109      	b.n	173c <__aeabi_dadd+0x25c>
    1528:	2a00      	cmp	r2, #0
    152a:	d13b      	bne.n	15a4 <__aeabi_dadd+0xc4>
    152c:	4318      	orrs	r0, r3
    152e:	d000      	beq.n	1532 <__aeabi_dadd+0x52>
    1530:	e0ea      	b.n	1708 <__aeabi_dadd+0x228>
    1532:	0763      	lsls	r3, r4, #29
    1534:	d100      	bne.n	1538 <__aeabi_dadd+0x58>
    1536:	e087      	b.n	1648 <__aeabi_dadd+0x168>
    1538:	230f      	movs	r3, #15
    153a:	4023      	ands	r3, r4
    153c:	2b04      	cmp	r3, #4
    153e:	d100      	bne.n	1542 <__aeabi_dadd+0x62>
    1540:	e082      	b.n	1648 <__aeabi_dadd+0x168>
    1542:	1d22      	adds	r2, r4, #4
    1544:	42a2      	cmp	r2, r4
    1546:	41a4      	sbcs	r4, r4
    1548:	4264      	negs	r4, r4
    154a:	2380      	movs	r3, #128	; 0x80
    154c:	1909      	adds	r1, r1, r4
    154e:	041b      	lsls	r3, r3, #16
    1550:	400b      	ands	r3, r1
    1552:	1c37      	adds	r7, r6, #0
    1554:	1c14      	adds	r4, r2, #0
    1556:	2b00      	cmp	r3, #0
    1558:	d100      	bne.n	155c <__aeabi_dadd+0x7c>
    155a:	e07c      	b.n	1656 <__aeabi_dadd+0x176>
    155c:	4bce      	ldr	r3, [pc, #824]	; (1898 <__aeabi_dadd+0x3b8>)
    155e:	3501      	adds	r5, #1
    1560:	429d      	cmp	r5, r3
    1562:	d100      	bne.n	1566 <__aeabi_dadd+0x86>
    1564:	e105      	b.n	1772 <__aeabi_dadd+0x292>
    1566:	4bcd      	ldr	r3, [pc, #820]	; (189c <__aeabi_dadd+0x3bc>)
    1568:	08e4      	lsrs	r4, r4, #3
    156a:	4019      	ands	r1, r3
    156c:	0748      	lsls	r0, r1, #29
    156e:	0249      	lsls	r1, r1, #9
    1570:	4304      	orrs	r4, r0
    1572:	0b0b      	lsrs	r3, r1, #12
    1574:	2000      	movs	r0, #0
    1576:	2100      	movs	r1, #0
    1578:	031b      	lsls	r3, r3, #12
    157a:	0b1a      	lsrs	r2, r3, #12
    157c:	0d0b      	lsrs	r3, r1, #20
    157e:	056d      	lsls	r5, r5, #21
    1580:	051b      	lsls	r3, r3, #20
    1582:	4313      	orrs	r3, r2
    1584:	086a      	lsrs	r2, r5, #1
    1586:	4dc6      	ldr	r5, [pc, #792]	; (18a0 <__aeabi_dadd+0x3c0>)
    1588:	07ff      	lsls	r7, r7, #31
    158a:	401d      	ands	r5, r3
    158c:	4315      	orrs	r5, r2
    158e:	006d      	lsls	r5, r5, #1
    1590:	086d      	lsrs	r5, r5, #1
    1592:	1c29      	adds	r1, r5, #0
    1594:	4339      	orrs	r1, r7
    1596:	1c20      	adds	r0, r4, #0
    1598:	bc3c      	pop	{r2, r3, r4, r5}
    159a:	4690      	mov	r8, r2
    159c:	4699      	mov	r9, r3
    159e:	46a2      	mov	sl, r4
    15a0:	46ab      	mov	fp, r5
    15a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    15a4:	48bc      	ldr	r0, [pc, #752]	; (1898 <__aeabi_dadd+0x3b8>)
    15a6:	4285      	cmp	r5, r0
    15a8:	d0c3      	beq.n	1532 <__aeabi_dadd+0x52>
    15aa:	2080      	movs	r0, #128	; 0x80
    15ac:	0400      	lsls	r0, r0, #16
    15ae:	4303      	orrs	r3, r0
    15b0:	2f38      	cmp	r7, #56	; 0x38
    15b2:	dd00      	ble.n	15b6 <__aeabi_dadd+0xd6>
    15b4:	e0f0      	b.n	1798 <__aeabi_dadd+0x2b8>
    15b6:	2f1f      	cmp	r7, #31
    15b8:	dd00      	ble.n	15bc <__aeabi_dadd+0xdc>
    15ba:	e124      	b.n	1806 <__aeabi_dadd+0x326>
    15bc:	2020      	movs	r0, #32
    15be:	1bc0      	subs	r0, r0, r7
    15c0:	1c1a      	adds	r2, r3, #0
    15c2:	4681      	mov	r9, r0
    15c4:	4082      	lsls	r2, r0
    15c6:	4658      	mov	r0, fp
    15c8:	40f8      	lsrs	r0, r7
    15ca:	4302      	orrs	r2, r0
    15cc:	4694      	mov	ip, r2
    15ce:	4658      	mov	r0, fp
    15d0:	464a      	mov	r2, r9
    15d2:	4090      	lsls	r0, r2
    15d4:	1e42      	subs	r2, r0, #1
    15d6:	4190      	sbcs	r0, r2
    15d8:	40fb      	lsrs	r3, r7
    15da:	4662      	mov	r2, ip
    15dc:	4302      	orrs	r2, r0
    15de:	1c1f      	adds	r7, r3, #0
    15e0:	1aa2      	subs	r2, r4, r2
    15e2:	4294      	cmp	r4, r2
    15e4:	41a4      	sbcs	r4, r4
    15e6:	4264      	negs	r4, r4
    15e8:	1bc9      	subs	r1, r1, r7
    15ea:	1b09      	subs	r1, r1, r4
    15ec:	1c14      	adds	r4, r2, #0
    15ee:	020b      	lsls	r3, r1, #8
    15f0:	d59f      	bpl.n	1532 <__aeabi_dadd+0x52>
    15f2:	0249      	lsls	r1, r1, #9
    15f4:	0a4f      	lsrs	r7, r1, #9
    15f6:	2f00      	cmp	r7, #0
    15f8:	d100      	bne.n	15fc <__aeabi_dadd+0x11c>
    15fa:	e0c8      	b.n	178e <__aeabi_dadd+0x2ae>
    15fc:	1c38      	adds	r0, r7, #0
    15fe:	f001 fadb 	bl	2bb8 <__clzsi2>
    1602:	1c02      	adds	r2, r0, #0
    1604:	3a08      	subs	r2, #8
    1606:	2a1f      	cmp	r2, #31
    1608:	dd00      	ble.n	160c <__aeabi_dadd+0x12c>
    160a:	e0b5      	b.n	1778 <__aeabi_dadd+0x298>
    160c:	2128      	movs	r1, #40	; 0x28
    160e:	1a09      	subs	r1, r1, r0
    1610:	1c20      	adds	r0, r4, #0
    1612:	4097      	lsls	r7, r2
    1614:	40c8      	lsrs	r0, r1
    1616:	4307      	orrs	r7, r0
    1618:	4094      	lsls	r4, r2
    161a:	4295      	cmp	r5, r2
    161c:	dd00      	ble.n	1620 <__aeabi_dadd+0x140>
    161e:	e0b2      	b.n	1786 <__aeabi_dadd+0x2a6>
    1620:	1b55      	subs	r5, r2, r5
    1622:	1c69      	adds	r1, r5, #1
    1624:	291f      	cmp	r1, #31
    1626:	dd00      	ble.n	162a <__aeabi_dadd+0x14a>
    1628:	e0dc      	b.n	17e4 <__aeabi_dadd+0x304>
    162a:	221f      	movs	r2, #31
    162c:	1b55      	subs	r5, r2, r5
    162e:	1c3b      	adds	r3, r7, #0
    1630:	1c22      	adds	r2, r4, #0
    1632:	40ab      	lsls	r3, r5
    1634:	40ca      	lsrs	r2, r1
    1636:	40ac      	lsls	r4, r5
    1638:	1e65      	subs	r5, r4, #1
    163a:	41ac      	sbcs	r4, r5
    163c:	4313      	orrs	r3, r2
    163e:	40cf      	lsrs	r7, r1
    1640:	431c      	orrs	r4, r3
    1642:	1c39      	adds	r1, r7, #0
    1644:	2500      	movs	r5, #0
    1646:	e774      	b.n	1532 <__aeabi_dadd+0x52>
    1648:	2380      	movs	r3, #128	; 0x80
    164a:	041b      	lsls	r3, r3, #16
    164c:	400b      	ands	r3, r1
    164e:	1c37      	adds	r7, r6, #0
    1650:	2b00      	cmp	r3, #0
    1652:	d000      	beq.n	1656 <__aeabi_dadd+0x176>
    1654:	e782      	b.n	155c <__aeabi_dadd+0x7c>
    1656:	4b90      	ldr	r3, [pc, #576]	; (1898 <__aeabi_dadd+0x3b8>)
    1658:	0748      	lsls	r0, r1, #29
    165a:	08e4      	lsrs	r4, r4, #3
    165c:	4304      	orrs	r4, r0
    165e:	08c9      	lsrs	r1, r1, #3
    1660:	429d      	cmp	r5, r3
    1662:	d048      	beq.n	16f6 <__aeabi_dadd+0x216>
    1664:	0309      	lsls	r1, r1, #12
    1666:	0b0b      	lsrs	r3, r1, #12
    1668:	e784      	b.n	1574 <__aeabi_dadd+0x94>
    166a:	1aaa      	subs	r2, r5, r2
    166c:	4694      	mov	ip, r2
    166e:	2a00      	cmp	r2, #0
    1670:	dc00      	bgt.n	1674 <__aeabi_dadd+0x194>
    1672:	e098      	b.n	17a6 <__aeabi_dadd+0x2c6>
    1674:	4650      	mov	r0, sl
    1676:	2800      	cmp	r0, #0
    1678:	d052      	beq.n	1720 <__aeabi_dadd+0x240>
    167a:	4887      	ldr	r0, [pc, #540]	; (1898 <__aeabi_dadd+0x3b8>)
    167c:	4285      	cmp	r5, r0
    167e:	d100      	bne.n	1682 <__aeabi_dadd+0x1a2>
    1680:	e757      	b.n	1532 <__aeabi_dadd+0x52>
    1682:	2080      	movs	r0, #128	; 0x80
    1684:	0400      	lsls	r0, r0, #16
    1686:	4303      	orrs	r3, r0
    1688:	4662      	mov	r2, ip
    168a:	2a38      	cmp	r2, #56	; 0x38
    168c:	dd00      	ble.n	1690 <__aeabi_dadd+0x1b0>
    168e:	e0fc      	b.n	188a <__aeabi_dadd+0x3aa>
    1690:	2a1f      	cmp	r2, #31
    1692:	dd00      	ble.n	1696 <__aeabi_dadd+0x1b6>
    1694:	e14a      	b.n	192c <__aeabi_dadd+0x44c>
    1696:	2220      	movs	r2, #32
    1698:	4660      	mov	r0, ip
    169a:	1a10      	subs	r0, r2, r0
    169c:	1c1a      	adds	r2, r3, #0
    169e:	4082      	lsls	r2, r0
    16a0:	4682      	mov	sl, r0
    16a2:	4691      	mov	r9, r2
    16a4:	4658      	mov	r0, fp
    16a6:	4662      	mov	r2, ip
    16a8:	40d0      	lsrs	r0, r2
    16aa:	464a      	mov	r2, r9
    16ac:	4302      	orrs	r2, r0
    16ae:	4690      	mov	r8, r2
    16b0:	4658      	mov	r0, fp
    16b2:	4652      	mov	r2, sl
    16b4:	4090      	lsls	r0, r2
    16b6:	1e42      	subs	r2, r0, #1
    16b8:	4190      	sbcs	r0, r2
    16ba:	4642      	mov	r2, r8
    16bc:	4302      	orrs	r2, r0
    16be:	4660      	mov	r0, ip
    16c0:	40c3      	lsrs	r3, r0
    16c2:	1912      	adds	r2, r2, r4
    16c4:	42a2      	cmp	r2, r4
    16c6:	41a4      	sbcs	r4, r4
    16c8:	4264      	negs	r4, r4
    16ca:	1859      	adds	r1, r3, r1
    16cc:	1909      	adds	r1, r1, r4
    16ce:	1c14      	adds	r4, r2, #0
    16d0:	0208      	lsls	r0, r1, #8
    16d2:	d400      	bmi.n	16d6 <__aeabi_dadd+0x1f6>
    16d4:	e72d      	b.n	1532 <__aeabi_dadd+0x52>
    16d6:	4b70      	ldr	r3, [pc, #448]	; (1898 <__aeabi_dadd+0x3b8>)
    16d8:	3501      	adds	r5, #1
    16da:	429d      	cmp	r5, r3
    16dc:	d100      	bne.n	16e0 <__aeabi_dadd+0x200>
    16de:	e122      	b.n	1926 <__aeabi_dadd+0x446>
    16e0:	4b6e      	ldr	r3, [pc, #440]	; (189c <__aeabi_dadd+0x3bc>)
    16e2:	0860      	lsrs	r0, r4, #1
    16e4:	4019      	ands	r1, r3
    16e6:	2301      	movs	r3, #1
    16e8:	4023      	ands	r3, r4
    16ea:	1c1c      	adds	r4, r3, #0
    16ec:	4304      	orrs	r4, r0
    16ee:	07cb      	lsls	r3, r1, #31
    16f0:	431c      	orrs	r4, r3
    16f2:	0849      	lsrs	r1, r1, #1
    16f4:	e71d      	b.n	1532 <__aeabi_dadd+0x52>
    16f6:	1c23      	adds	r3, r4, #0
    16f8:	430b      	orrs	r3, r1
    16fa:	d03a      	beq.n	1772 <__aeabi_dadd+0x292>
    16fc:	2380      	movs	r3, #128	; 0x80
    16fe:	031b      	lsls	r3, r3, #12
    1700:	430b      	orrs	r3, r1
    1702:	031b      	lsls	r3, r3, #12
    1704:	0b1b      	lsrs	r3, r3, #12
    1706:	e735      	b.n	1574 <__aeabi_dadd+0x94>
    1708:	3f01      	subs	r7, #1
    170a:	2f00      	cmp	r7, #0
    170c:	d165      	bne.n	17da <__aeabi_dadd+0x2fa>
    170e:	4658      	mov	r0, fp
    1710:	1a22      	subs	r2, r4, r0
    1712:	4294      	cmp	r4, r2
    1714:	41a4      	sbcs	r4, r4
    1716:	4264      	negs	r4, r4
    1718:	1ac9      	subs	r1, r1, r3
    171a:	1b09      	subs	r1, r1, r4
    171c:	1c14      	adds	r4, r2, #0
    171e:	e766      	b.n	15ee <__aeabi_dadd+0x10e>
    1720:	4658      	mov	r0, fp
    1722:	4318      	orrs	r0, r3
    1724:	d100      	bne.n	1728 <__aeabi_dadd+0x248>
    1726:	e704      	b.n	1532 <__aeabi_dadd+0x52>
    1728:	2201      	movs	r2, #1
    172a:	4252      	negs	r2, r2
    172c:	4494      	add	ip, r2
    172e:	4660      	mov	r0, ip
    1730:	2800      	cmp	r0, #0
    1732:	d000      	beq.n	1736 <__aeabi_dadd+0x256>
    1734:	e0c5      	b.n	18c2 <__aeabi_dadd+0x3e2>
    1736:	4658      	mov	r0, fp
    1738:	1902      	adds	r2, r0, r4
    173a:	e7c3      	b.n	16c4 <__aeabi_dadd+0x1e4>
    173c:	2f00      	cmp	r7, #0
    173e:	d173      	bne.n	1828 <__aeabi_dadd+0x348>
    1740:	1c68      	adds	r0, r5, #1
    1742:	0540      	lsls	r0, r0, #21
    1744:	0d40      	lsrs	r0, r0, #21
    1746:	2801      	cmp	r0, #1
    1748:	dc00      	bgt.n	174c <__aeabi_dadd+0x26c>
    174a:	e0de      	b.n	190a <__aeabi_dadd+0x42a>
    174c:	465a      	mov	r2, fp
    174e:	1aa2      	subs	r2, r4, r2
    1750:	4294      	cmp	r4, r2
    1752:	41bf      	sbcs	r7, r7
    1754:	1ac8      	subs	r0, r1, r3
    1756:	427f      	negs	r7, r7
    1758:	1bc7      	subs	r7, r0, r7
    175a:	0238      	lsls	r0, r7, #8
    175c:	d400      	bmi.n	1760 <__aeabi_dadd+0x280>
    175e:	e089      	b.n	1874 <__aeabi_dadd+0x394>
    1760:	465a      	mov	r2, fp
    1762:	1b14      	subs	r4, r2, r4
    1764:	45a3      	cmp	fp, r4
    1766:	4192      	sbcs	r2, r2
    1768:	1a59      	subs	r1, r3, r1
    176a:	4252      	negs	r2, r2
    176c:	1a8f      	subs	r7, r1, r2
    176e:	4666      	mov	r6, ip
    1770:	e741      	b.n	15f6 <__aeabi_dadd+0x116>
    1772:	2300      	movs	r3, #0
    1774:	2400      	movs	r4, #0
    1776:	e6fd      	b.n	1574 <__aeabi_dadd+0x94>
    1778:	1c27      	adds	r7, r4, #0
    177a:	3828      	subs	r0, #40	; 0x28
    177c:	4087      	lsls	r7, r0
    177e:	2400      	movs	r4, #0
    1780:	4295      	cmp	r5, r2
    1782:	dc00      	bgt.n	1786 <__aeabi_dadd+0x2a6>
    1784:	e74c      	b.n	1620 <__aeabi_dadd+0x140>
    1786:	4945      	ldr	r1, [pc, #276]	; (189c <__aeabi_dadd+0x3bc>)
    1788:	1aad      	subs	r5, r5, r2
    178a:	4039      	ands	r1, r7
    178c:	e6d1      	b.n	1532 <__aeabi_dadd+0x52>
    178e:	1c20      	adds	r0, r4, #0
    1790:	f001 fa12 	bl	2bb8 <__clzsi2>
    1794:	3020      	adds	r0, #32
    1796:	e734      	b.n	1602 <__aeabi_dadd+0x122>
    1798:	465a      	mov	r2, fp
    179a:	431a      	orrs	r2, r3
    179c:	1e53      	subs	r3, r2, #1
    179e:	419a      	sbcs	r2, r3
    17a0:	b2d2      	uxtb	r2, r2
    17a2:	2700      	movs	r7, #0
    17a4:	e71c      	b.n	15e0 <__aeabi_dadd+0x100>
    17a6:	2a00      	cmp	r2, #0
    17a8:	d000      	beq.n	17ac <__aeabi_dadd+0x2cc>
    17aa:	e0dc      	b.n	1966 <__aeabi_dadd+0x486>
    17ac:	1c68      	adds	r0, r5, #1
    17ae:	0542      	lsls	r2, r0, #21
    17b0:	0d52      	lsrs	r2, r2, #21
    17b2:	2a01      	cmp	r2, #1
    17b4:	dc00      	bgt.n	17b8 <__aeabi_dadd+0x2d8>
    17b6:	e08d      	b.n	18d4 <__aeabi_dadd+0x3f4>
    17b8:	4d37      	ldr	r5, [pc, #220]	; (1898 <__aeabi_dadd+0x3b8>)
    17ba:	42a8      	cmp	r0, r5
    17bc:	d100      	bne.n	17c0 <__aeabi_dadd+0x2e0>
    17be:	e0f3      	b.n	19a8 <__aeabi_dadd+0x4c8>
    17c0:	465d      	mov	r5, fp
    17c2:	192a      	adds	r2, r5, r4
    17c4:	42a2      	cmp	r2, r4
    17c6:	41a4      	sbcs	r4, r4
    17c8:	4264      	negs	r4, r4
    17ca:	1859      	adds	r1, r3, r1
    17cc:	1909      	adds	r1, r1, r4
    17ce:	07cc      	lsls	r4, r1, #31
    17d0:	0852      	lsrs	r2, r2, #1
    17d2:	4314      	orrs	r4, r2
    17d4:	0849      	lsrs	r1, r1, #1
    17d6:	1c05      	adds	r5, r0, #0
    17d8:	e6ab      	b.n	1532 <__aeabi_dadd+0x52>
    17da:	482f      	ldr	r0, [pc, #188]	; (1898 <__aeabi_dadd+0x3b8>)
    17dc:	4285      	cmp	r5, r0
    17de:	d000      	beq.n	17e2 <__aeabi_dadd+0x302>
    17e0:	e6e6      	b.n	15b0 <__aeabi_dadd+0xd0>
    17e2:	e6a6      	b.n	1532 <__aeabi_dadd+0x52>
    17e4:	1c2b      	adds	r3, r5, #0
    17e6:	3b1f      	subs	r3, #31
    17e8:	1c3a      	adds	r2, r7, #0
    17ea:	40da      	lsrs	r2, r3
    17ec:	1c13      	adds	r3, r2, #0
    17ee:	2920      	cmp	r1, #32
    17f0:	d06c      	beq.n	18cc <__aeabi_dadd+0x3ec>
    17f2:	223f      	movs	r2, #63	; 0x3f
    17f4:	1b55      	subs	r5, r2, r5
    17f6:	40af      	lsls	r7, r5
    17f8:	433c      	orrs	r4, r7
    17fa:	1e60      	subs	r0, r4, #1
    17fc:	4184      	sbcs	r4, r0
    17fe:	431c      	orrs	r4, r3
    1800:	2100      	movs	r1, #0
    1802:	2500      	movs	r5, #0
    1804:	e695      	b.n	1532 <__aeabi_dadd+0x52>
    1806:	1c38      	adds	r0, r7, #0
    1808:	3820      	subs	r0, #32
    180a:	1c1a      	adds	r2, r3, #0
    180c:	40c2      	lsrs	r2, r0
    180e:	1c10      	adds	r0, r2, #0
    1810:	2f20      	cmp	r7, #32
    1812:	d05d      	beq.n	18d0 <__aeabi_dadd+0x3f0>
    1814:	2240      	movs	r2, #64	; 0x40
    1816:	1bd7      	subs	r7, r2, r7
    1818:	40bb      	lsls	r3, r7
    181a:	465a      	mov	r2, fp
    181c:	431a      	orrs	r2, r3
    181e:	1e53      	subs	r3, r2, #1
    1820:	419a      	sbcs	r2, r3
    1822:	4302      	orrs	r2, r0
    1824:	2700      	movs	r7, #0
    1826:	e6db      	b.n	15e0 <__aeabi_dadd+0x100>
    1828:	2d00      	cmp	r5, #0
    182a:	d03b      	beq.n	18a4 <__aeabi_dadd+0x3c4>
    182c:	4d1a      	ldr	r5, [pc, #104]	; (1898 <__aeabi_dadd+0x3b8>)
    182e:	45aa      	cmp	sl, r5
    1830:	d100      	bne.n	1834 <__aeabi_dadd+0x354>
    1832:	e093      	b.n	195c <__aeabi_dadd+0x47c>
    1834:	2580      	movs	r5, #128	; 0x80
    1836:	042d      	lsls	r5, r5, #16
    1838:	427f      	negs	r7, r7
    183a:	4329      	orrs	r1, r5
    183c:	2f38      	cmp	r7, #56	; 0x38
    183e:	dd00      	ble.n	1842 <__aeabi_dadd+0x362>
    1840:	e0ac      	b.n	199c <__aeabi_dadd+0x4bc>
    1842:	2f1f      	cmp	r7, #31
    1844:	dd00      	ble.n	1848 <__aeabi_dadd+0x368>
    1846:	e129      	b.n	1a9c <__aeabi_dadd+0x5bc>
    1848:	2520      	movs	r5, #32
    184a:	1bed      	subs	r5, r5, r7
    184c:	1c08      	adds	r0, r1, #0
    184e:	1c26      	adds	r6, r4, #0
    1850:	40a8      	lsls	r0, r5
    1852:	40fe      	lsrs	r6, r7
    1854:	40ac      	lsls	r4, r5
    1856:	4306      	orrs	r6, r0
    1858:	1e65      	subs	r5, r4, #1
    185a:	41ac      	sbcs	r4, r5
    185c:	4334      	orrs	r4, r6
    185e:	40f9      	lsrs	r1, r7
    1860:	465d      	mov	r5, fp
    1862:	1b2c      	subs	r4, r5, r4
    1864:	45a3      	cmp	fp, r4
    1866:	4192      	sbcs	r2, r2
    1868:	1a5b      	subs	r3, r3, r1
    186a:	4252      	negs	r2, r2
    186c:	1a99      	subs	r1, r3, r2
    186e:	4655      	mov	r5, sl
    1870:	4666      	mov	r6, ip
    1872:	e6bc      	b.n	15ee <__aeabi_dadd+0x10e>
    1874:	1c13      	adds	r3, r2, #0
    1876:	433b      	orrs	r3, r7
    1878:	1c14      	adds	r4, r2, #0
    187a:	2b00      	cmp	r3, #0
    187c:	d000      	beq.n	1880 <__aeabi_dadd+0x3a0>
    187e:	e6ba      	b.n	15f6 <__aeabi_dadd+0x116>
    1880:	2700      	movs	r7, #0
    1882:	2100      	movs	r1, #0
    1884:	2500      	movs	r5, #0
    1886:	2400      	movs	r4, #0
    1888:	e6e5      	b.n	1656 <__aeabi_dadd+0x176>
    188a:	465a      	mov	r2, fp
    188c:	431a      	orrs	r2, r3
    188e:	1e53      	subs	r3, r2, #1
    1890:	419a      	sbcs	r2, r3
    1892:	b2d2      	uxtb	r2, r2
    1894:	2300      	movs	r3, #0
    1896:	e714      	b.n	16c2 <__aeabi_dadd+0x1e2>
    1898:	000007ff 	.word	0x000007ff
    189c:	ff7fffff 	.word	0xff7fffff
    18a0:	800fffff 	.word	0x800fffff
    18a4:	1c0d      	adds	r5, r1, #0
    18a6:	4325      	orrs	r5, r4
    18a8:	d058      	beq.n	195c <__aeabi_dadd+0x47c>
    18aa:	43ff      	mvns	r7, r7
    18ac:	2f00      	cmp	r7, #0
    18ae:	d151      	bne.n	1954 <__aeabi_dadd+0x474>
    18b0:	1b04      	subs	r4, r0, r4
    18b2:	45a3      	cmp	fp, r4
    18b4:	4192      	sbcs	r2, r2
    18b6:	1a59      	subs	r1, r3, r1
    18b8:	4252      	negs	r2, r2
    18ba:	1a89      	subs	r1, r1, r2
    18bc:	4655      	mov	r5, sl
    18be:	4666      	mov	r6, ip
    18c0:	e695      	b.n	15ee <__aeabi_dadd+0x10e>
    18c2:	4896      	ldr	r0, [pc, #600]	; (1b1c <__aeabi_dadd+0x63c>)
    18c4:	4285      	cmp	r5, r0
    18c6:	d000      	beq.n	18ca <__aeabi_dadd+0x3ea>
    18c8:	e6de      	b.n	1688 <__aeabi_dadd+0x1a8>
    18ca:	e632      	b.n	1532 <__aeabi_dadd+0x52>
    18cc:	2700      	movs	r7, #0
    18ce:	e793      	b.n	17f8 <__aeabi_dadd+0x318>
    18d0:	2300      	movs	r3, #0
    18d2:	e7a2      	b.n	181a <__aeabi_dadd+0x33a>
    18d4:	1c08      	adds	r0, r1, #0
    18d6:	4320      	orrs	r0, r4
    18d8:	2d00      	cmp	r5, #0
    18da:	d000      	beq.n	18de <__aeabi_dadd+0x3fe>
    18dc:	e0c4      	b.n	1a68 <__aeabi_dadd+0x588>
    18de:	2800      	cmp	r0, #0
    18e0:	d100      	bne.n	18e4 <__aeabi_dadd+0x404>
    18e2:	e0f7      	b.n	1ad4 <__aeabi_dadd+0x5f4>
    18e4:	4658      	mov	r0, fp
    18e6:	4318      	orrs	r0, r3
    18e8:	d100      	bne.n	18ec <__aeabi_dadd+0x40c>
    18ea:	e622      	b.n	1532 <__aeabi_dadd+0x52>
    18ec:	4658      	mov	r0, fp
    18ee:	1902      	adds	r2, r0, r4
    18f0:	42a2      	cmp	r2, r4
    18f2:	41a4      	sbcs	r4, r4
    18f4:	4264      	negs	r4, r4
    18f6:	1859      	adds	r1, r3, r1
    18f8:	1909      	adds	r1, r1, r4
    18fa:	1c14      	adds	r4, r2, #0
    18fc:	020a      	lsls	r2, r1, #8
    18fe:	d400      	bmi.n	1902 <__aeabi_dadd+0x422>
    1900:	e617      	b.n	1532 <__aeabi_dadd+0x52>
    1902:	4b87      	ldr	r3, [pc, #540]	; (1b20 <__aeabi_dadd+0x640>)
    1904:	2501      	movs	r5, #1
    1906:	4019      	ands	r1, r3
    1908:	e613      	b.n	1532 <__aeabi_dadd+0x52>
    190a:	1c08      	adds	r0, r1, #0
    190c:	4320      	orrs	r0, r4
    190e:	2d00      	cmp	r5, #0
    1910:	d139      	bne.n	1986 <__aeabi_dadd+0x4a6>
    1912:	2800      	cmp	r0, #0
    1914:	d171      	bne.n	19fa <__aeabi_dadd+0x51a>
    1916:	4659      	mov	r1, fp
    1918:	4319      	orrs	r1, r3
    191a:	d003      	beq.n	1924 <__aeabi_dadd+0x444>
    191c:	1c19      	adds	r1, r3, #0
    191e:	465c      	mov	r4, fp
    1920:	4666      	mov	r6, ip
    1922:	e606      	b.n	1532 <__aeabi_dadd+0x52>
    1924:	2700      	movs	r7, #0
    1926:	2100      	movs	r1, #0
    1928:	2400      	movs	r4, #0
    192a:	e694      	b.n	1656 <__aeabi_dadd+0x176>
    192c:	4660      	mov	r0, ip
    192e:	3820      	subs	r0, #32
    1930:	1c1a      	adds	r2, r3, #0
    1932:	40c2      	lsrs	r2, r0
    1934:	4660      	mov	r0, ip
    1936:	4691      	mov	r9, r2
    1938:	2820      	cmp	r0, #32
    193a:	d100      	bne.n	193e <__aeabi_dadd+0x45e>
    193c:	e0ac      	b.n	1a98 <__aeabi_dadd+0x5b8>
    193e:	2240      	movs	r2, #64	; 0x40
    1940:	1a12      	subs	r2, r2, r0
    1942:	4093      	lsls	r3, r2
    1944:	465a      	mov	r2, fp
    1946:	431a      	orrs	r2, r3
    1948:	1e53      	subs	r3, r2, #1
    194a:	419a      	sbcs	r2, r3
    194c:	464b      	mov	r3, r9
    194e:	431a      	orrs	r2, r3
    1950:	2300      	movs	r3, #0
    1952:	e6b6      	b.n	16c2 <__aeabi_dadd+0x1e2>
    1954:	4d71      	ldr	r5, [pc, #452]	; (1b1c <__aeabi_dadd+0x63c>)
    1956:	45aa      	cmp	sl, r5
    1958:	d000      	beq.n	195c <__aeabi_dadd+0x47c>
    195a:	e76f      	b.n	183c <__aeabi_dadd+0x35c>
    195c:	1c19      	adds	r1, r3, #0
    195e:	465c      	mov	r4, fp
    1960:	4655      	mov	r5, sl
    1962:	4666      	mov	r6, ip
    1964:	e5e5      	b.n	1532 <__aeabi_dadd+0x52>
    1966:	2d00      	cmp	r5, #0
    1968:	d122      	bne.n	19b0 <__aeabi_dadd+0x4d0>
    196a:	1c0d      	adds	r5, r1, #0
    196c:	4325      	orrs	r5, r4
    196e:	d077      	beq.n	1a60 <__aeabi_dadd+0x580>
    1970:	43d5      	mvns	r5, r2
    1972:	2d00      	cmp	r5, #0
    1974:	d171      	bne.n	1a5a <__aeabi_dadd+0x57a>
    1976:	445c      	add	r4, fp
    1978:	455c      	cmp	r4, fp
    197a:	4192      	sbcs	r2, r2
    197c:	1859      	adds	r1, r3, r1
    197e:	4252      	negs	r2, r2
    1980:	1889      	adds	r1, r1, r2
    1982:	4655      	mov	r5, sl
    1984:	e6a4      	b.n	16d0 <__aeabi_dadd+0x1f0>
    1986:	2800      	cmp	r0, #0
    1988:	d14d      	bne.n	1a26 <__aeabi_dadd+0x546>
    198a:	4659      	mov	r1, fp
    198c:	4319      	orrs	r1, r3
    198e:	d100      	bne.n	1992 <__aeabi_dadd+0x4b2>
    1990:	e094      	b.n	1abc <__aeabi_dadd+0x5dc>
    1992:	1c19      	adds	r1, r3, #0
    1994:	465c      	mov	r4, fp
    1996:	4666      	mov	r6, ip
    1998:	4d60      	ldr	r5, [pc, #384]	; (1b1c <__aeabi_dadd+0x63c>)
    199a:	e5ca      	b.n	1532 <__aeabi_dadd+0x52>
    199c:	430c      	orrs	r4, r1
    199e:	1e61      	subs	r1, r4, #1
    19a0:	418c      	sbcs	r4, r1
    19a2:	b2e4      	uxtb	r4, r4
    19a4:	2100      	movs	r1, #0
    19a6:	e75b      	b.n	1860 <__aeabi_dadd+0x380>
    19a8:	1c05      	adds	r5, r0, #0
    19aa:	2100      	movs	r1, #0
    19ac:	2400      	movs	r4, #0
    19ae:	e652      	b.n	1656 <__aeabi_dadd+0x176>
    19b0:	4d5a      	ldr	r5, [pc, #360]	; (1b1c <__aeabi_dadd+0x63c>)
    19b2:	45aa      	cmp	sl, r5
    19b4:	d054      	beq.n	1a60 <__aeabi_dadd+0x580>
    19b6:	4255      	negs	r5, r2
    19b8:	2280      	movs	r2, #128	; 0x80
    19ba:	0410      	lsls	r0, r2, #16
    19bc:	4301      	orrs	r1, r0
    19be:	2d38      	cmp	r5, #56	; 0x38
    19c0:	dd00      	ble.n	19c4 <__aeabi_dadd+0x4e4>
    19c2:	e081      	b.n	1ac8 <__aeabi_dadd+0x5e8>
    19c4:	2d1f      	cmp	r5, #31
    19c6:	dd00      	ble.n	19ca <__aeabi_dadd+0x4ea>
    19c8:	e092      	b.n	1af0 <__aeabi_dadd+0x610>
    19ca:	2220      	movs	r2, #32
    19cc:	1b50      	subs	r0, r2, r5
    19ce:	1c0a      	adds	r2, r1, #0
    19d0:	4684      	mov	ip, r0
    19d2:	4082      	lsls	r2, r0
    19d4:	1c20      	adds	r0, r4, #0
    19d6:	40e8      	lsrs	r0, r5
    19d8:	4302      	orrs	r2, r0
    19da:	4690      	mov	r8, r2
    19dc:	4662      	mov	r2, ip
    19de:	4094      	lsls	r4, r2
    19e0:	1e60      	subs	r0, r4, #1
    19e2:	4184      	sbcs	r4, r0
    19e4:	4642      	mov	r2, r8
    19e6:	4314      	orrs	r4, r2
    19e8:	40e9      	lsrs	r1, r5
    19ea:	445c      	add	r4, fp
    19ec:	455c      	cmp	r4, fp
    19ee:	4192      	sbcs	r2, r2
    19f0:	18cb      	adds	r3, r1, r3
    19f2:	4252      	negs	r2, r2
    19f4:	1899      	adds	r1, r3, r2
    19f6:	4655      	mov	r5, sl
    19f8:	e66a      	b.n	16d0 <__aeabi_dadd+0x1f0>
    19fa:	4658      	mov	r0, fp
    19fc:	4318      	orrs	r0, r3
    19fe:	d100      	bne.n	1a02 <__aeabi_dadd+0x522>
    1a00:	e597      	b.n	1532 <__aeabi_dadd+0x52>
    1a02:	4658      	mov	r0, fp
    1a04:	1a27      	subs	r7, r4, r0
    1a06:	42bc      	cmp	r4, r7
    1a08:	4192      	sbcs	r2, r2
    1a0a:	1ac8      	subs	r0, r1, r3
    1a0c:	4252      	negs	r2, r2
    1a0e:	1a80      	subs	r0, r0, r2
    1a10:	0202      	lsls	r2, r0, #8
    1a12:	d566      	bpl.n	1ae2 <__aeabi_dadd+0x602>
    1a14:	4658      	mov	r0, fp
    1a16:	1b04      	subs	r4, r0, r4
    1a18:	45a3      	cmp	fp, r4
    1a1a:	4192      	sbcs	r2, r2
    1a1c:	1a59      	subs	r1, r3, r1
    1a1e:	4252      	negs	r2, r2
    1a20:	1a89      	subs	r1, r1, r2
    1a22:	4666      	mov	r6, ip
    1a24:	e585      	b.n	1532 <__aeabi_dadd+0x52>
    1a26:	4658      	mov	r0, fp
    1a28:	4318      	orrs	r0, r3
    1a2a:	d033      	beq.n	1a94 <__aeabi_dadd+0x5b4>
    1a2c:	0748      	lsls	r0, r1, #29
    1a2e:	08e4      	lsrs	r4, r4, #3
    1a30:	4304      	orrs	r4, r0
    1a32:	2080      	movs	r0, #128	; 0x80
    1a34:	08c9      	lsrs	r1, r1, #3
    1a36:	0300      	lsls	r0, r0, #12
    1a38:	4201      	tst	r1, r0
    1a3a:	d008      	beq.n	1a4e <__aeabi_dadd+0x56e>
    1a3c:	08dd      	lsrs	r5, r3, #3
    1a3e:	4205      	tst	r5, r0
    1a40:	d105      	bne.n	1a4e <__aeabi_dadd+0x56e>
    1a42:	4659      	mov	r1, fp
    1a44:	08ca      	lsrs	r2, r1, #3
    1a46:	075c      	lsls	r4, r3, #29
    1a48:	4314      	orrs	r4, r2
    1a4a:	1c29      	adds	r1, r5, #0
    1a4c:	4666      	mov	r6, ip
    1a4e:	0f63      	lsrs	r3, r4, #29
    1a50:	00c9      	lsls	r1, r1, #3
    1a52:	4319      	orrs	r1, r3
    1a54:	00e4      	lsls	r4, r4, #3
    1a56:	4d31      	ldr	r5, [pc, #196]	; (1b1c <__aeabi_dadd+0x63c>)
    1a58:	e56b      	b.n	1532 <__aeabi_dadd+0x52>
    1a5a:	4a30      	ldr	r2, [pc, #192]	; (1b1c <__aeabi_dadd+0x63c>)
    1a5c:	4592      	cmp	sl, r2
    1a5e:	d1ae      	bne.n	19be <__aeabi_dadd+0x4de>
    1a60:	1c19      	adds	r1, r3, #0
    1a62:	465c      	mov	r4, fp
    1a64:	4655      	mov	r5, sl
    1a66:	e564      	b.n	1532 <__aeabi_dadd+0x52>
    1a68:	2800      	cmp	r0, #0
    1a6a:	d036      	beq.n	1ada <__aeabi_dadd+0x5fa>
    1a6c:	4658      	mov	r0, fp
    1a6e:	4318      	orrs	r0, r3
    1a70:	d010      	beq.n	1a94 <__aeabi_dadd+0x5b4>
    1a72:	2580      	movs	r5, #128	; 0x80
    1a74:	0748      	lsls	r0, r1, #29
    1a76:	08e4      	lsrs	r4, r4, #3
    1a78:	08c9      	lsrs	r1, r1, #3
    1a7a:	032d      	lsls	r5, r5, #12
    1a7c:	4304      	orrs	r4, r0
    1a7e:	4229      	tst	r1, r5
    1a80:	d0e5      	beq.n	1a4e <__aeabi_dadd+0x56e>
    1a82:	08d8      	lsrs	r0, r3, #3
    1a84:	4228      	tst	r0, r5
    1a86:	d1e2      	bne.n	1a4e <__aeabi_dadd+0x56e>
    1a88:	465d      	mov	r5, fp
    1a8a:	08ea      	lsrs	r2, r5, #3
    1a8c:	075c      	lsls	r4, r3, #29
    1a8e:	4314      	orrs	r4, r2
    1a90:	1c01      	adds	r1, r0, #0
    1a92:	e7dc      	b.n	1a4e <__aeabi_dadd+0x56e>
    1a94:	4d21      	ldr	r5, [pc, #132]	; (1b1c <__aeabi_dadd+0x63c>)
    1a96:	e54c      	b.n	1532 <__aeabi_dadd+0x52>
    1a98:	2300      	movs	r3, #0
    1a9a:	e753      	b.n	1944 <__aeabi_dadd+0x464>
    1a9c:	1c3d      	adds	r5, r7, #0
    1a9e:	3d20      	subs	r5, #32
    1aa0:	1c0a      	adds	r2, r1, #0
    1aa2:	40ea      	lsrs	r2, r5
    1aa4:	1c15      	adds	r5, r2, #0
    1aa6:	2f20      	cmp	r7, #32
    1aa8:	d034      	beq.n	1b14 <__aeabi_dadd+0x634>
    1aaa:	2640      	movs	r6, #64	; 0x40
    1aac:	1bf7      	subs	r7, r6, r7
    1aae:	40b9      	lsls	r1, r7
    1ab0:	430c      	orrs	r4, r1
    1ab2:	1e61      	subs	r1, r4, #1
    1ab4:	418c      	sbcs	r4, r1
    1ab6:	432c      	orrs	r4, r5
    1ab8:	2100      	movs	r1, #0
    1aba:	e6d1      	b.n	1860 <__aeabi_dadd+0x380>
    1abc:	2180      	movs	r1, #128	; 0x80
    1abe:	2700      	movs	r7, #0
    1ac0:	03c9      	lsls	r1, r1, #15
    1ac2:	4d16      	ldr	r5, [pc, #88]	; (1b1c <__aeabi_dadd+0x63c>)
    1ac4:	2400      	movs	r4, #0
    1ac6:	e5c6      	b.n	1656 <__aeabi_dadd+0x176>
    1ac8:	430c      	orrs	r4, r1
    1aca:	1e61      	subs	r1, r4, #1
    1acc:	418c      	sbcs	r4, r1
    1ace:	b2e4      	uxtb	r4, r4
    1ad0:	2100      	movs	r1, #0
    1ad2:	e78a      	b.n	19ea <__aeabi_dadd+0x50a>
    1ad4:	1c19      	adds	r1, r3, #0
    1ad6:	465c      	mov	r4, fp
    1ad8:	e52b      	b.n	1532 <__aeabi_dadd+0x52>
    1ada:	1c19      	adds	r1, r3, #0
    1adc:	465c      	mov	r4, fp
    1ade:	4d0f      	ldr	r5, [pc, #60]	; (1b1c <__aeabi_dadd+0x63c>)
    1ae0:	e527      	b.n	1532 <__aeabi_dadd+0x52>
    1ae2:	1c03      	adds	r3, r0, #0
    1ae4:	433b      	orrs	r3, r7
    1ae6:	d100      	bne.n	1aea <__aeabi_dadd+0x60a>
    1ae8:	e71c      	b.n	1924 <__aeabi_dadd+0x444>
    1aea:	1c01      	adds	r1, r0, #0
    1aec:	1c3c      	adds	r4, r7, #0
    1aee:	e520      	b.n	1532 <__aeabi_dadd+0x52>
    1af0:	2020      	movs	r0, #32
    1af2:	4240      	negs	r0, r0
    1af4:	1940      	adds	r0, r0, r5
    1af6:	1c0a      	adds	r2, r1, #0
    1af8:	40c2      	lsrs	r2, r0
    1afa:	4690      	mov	r8, r2
    1afc:	2d20      	cmp	r5, #32
    1afe:	d00b      	beq.n	1b18 <__aeabi_dadd+0x638>
    1b00:	2040      	movs	r0, #64	; 0x40
    1b02:	1b45      	subs	r5, r0, r5
    1b04:	40a9      	lsls	r1, r5
    1b06:	430c      	orrs	r4, r1
    1b08:	1e61      	subs	r1, r4, #1
    1b0a:	418c      	sbcs	r4, r1
    1b0c:	4645      	mov	r5, r8
    1b0e:	432c      	orrs	r4, r5
    1b10:	2100      	movs	r1, #0
    1b12:	e76a      	b.n	19ea <__aeabi_dadd+0x50a>
    1b14:	2100      	movs	r1, #0
    1b16:	e7cb      	b.n	1ab0 <__aeabi_dadd+0x5d0>
    1b18:	2100      	movs	r1, #0
    1b1a:	e7f4      	b.n	1b06 <__aeabi_dadd+0x626>
    1b1c:	000007ff 	.word	0x000007ff
    1b20:	ff7fffff 	.word	0xff7fffff

00001b24 <__aeabi_ddiv>:
__aeabi_ddiv():
    1b24:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b26:	4656      	mov	r6, sl
    1b28:	4644      	mov	r4, r8
    1b2a:	465f      	mov	r7, fp
    1b2c:	464d      	mov	r5, r9
    1b2e:	b4f0      	push	{r4, r5, r6, r7}
    1b30:	1c1f      	adds	r7, r3, #0
    1b32:	030b      	lsls	r3, r1, #12
    1b34:	0b1b      	lsrs	r3, r3, #12
    1b36:	4698      	mov	r8, r3
    1b38:	004b      	lsls	r3, r1, #1
    1b3a:	b087      	sub	sp, #28
    1b3c:	1c04      	adds	r4, r0, #0
    1b3e:	4681      	mov	r9, r0
    1b40:	0d5b      	lsrs	r3, r3, #21
    1b42:	0fc8      	lsrs	r0, r1, #31
    1b44:	1c16      	adds	r6, r2, #0
    1b46:	469a      	mov	sl, r3
    1b48:	9000      	str	r0, [sp, #0]
    1b4a:	2b00      	cmp	r3, #0
    1b4c:	d051      	beq.n	1bf2 <__aeabi_ddiv+0xce>
    1b4e:	4b6a      	ldr	r3, [pc, #424]	; (1cf8 <__aeabi_ddiv+0x1d4>)
    1b50:	459a      	cmp	sl, r3
    1b52:	d031      	beq.n	1bb8 <__aeabi_ddiv+0x94>
    1b54:	2280      	movs	r2, #128	; 0x80
    1b56:	4641      	mov	r1, r8
    1b58:	0352      	lsls	r2, r2, #13
    1b5a:	430a      	orrs	r2, r1
    1b5c:	0f63      	lsrs	r3, r4, #29
    1b5e:	00d2      	lsls	r2, r2, #3
    1b60:	431a      	orrs	r2, r3
    1b62:	4b66      	ldr	r3, [pc, #408]	; (1cfc <__aeabi_ddiv+0x1d8>)
    1b64:	4690      	mov	r8, r2
    1b66:	2500      	movs	r5, #0
    1b68:	00e2      	lsls	r2, r4, #3
    1b6a:	4691      	mov	r9, r2
    1b6c:	449a      	add	sl, r3
    1b6e:	2400      	movs	r4, #0
    1b70:	9502      	str	r5, [sp, #8]
    1b72:	033b      	lsls	r3, r7, #12
    1b74:	0b1b      	lsrs	r3, r3, #12
    1b76:	469b      	mov	fp, r3
    1b78:	0ffd      	lsrs	r5, r7, #31
    1b7a:	007b      	lsls	r3, r7, #1
    1b7c:	1c31      	adds	r1, r6, #0
    1b7e:	0d5b      	lsrs	r3, r3, #21
    1b80:	9501      	str	r5, [sp, #4]
    1b82:	d060      	beq.n	1c46 <__aeabi_ddiv+0x122>
    1b84:	4a5c      	ldr	r2, [pc, #368]	; (1cf8 <__aeabi_ddiv+0x1d4>)
    1b86:	4293      	cmp	r3, r2
    1b88:	d054      	beq.n	1c34 <__aeabi_ddiv+0x110>
    1b8a:	2180      	movs	r1, #128	; 0x80
    1b8c:	4658      	mov	r0, fp
    1b8e:	0349      	lsls	r1, r1, #13
    1b90:	4301      	orrs	r1, r0
    1b92:	0f72      	lsrs	r2, r6, #29
    1b94:	00c9      	lsls	r1, r1, #3
    1b96:	4311      	orrs	r1, r2
    1b98:	4a58      	ldr	r2, [pc, #352]	; (1cfc <__aeabi_ddiv+0x1d8>)
    1b9a:	468b      	mov	fp, r1
    1b9c:	189b      	adds	r3, r3, r2
    1b9e:	00f1      	lsls	r1, r6, #3
    1ba0:	2000      	movs	r0, #0
    1ba2:	9a00      	ldr	r2, [sp, #0]
    1ba4:	4304      	orrs	r4, r0
    1ba6:	406a      	eors	r2, r5
    1ba8:	9203      	str	r2, [sp, #12]
    1baa:	2c0f      	cmp	r4, #15
    1bac:	d900      	bls.n	1bb0 <__aeabi_ddiv+0x8c>
    1bae:	e0ad      	b.n	1d0c <__aeabi_ddiv+0x1e8>
    1bb0:	4e53      	ldr	r6, [pc, #332]	; (1d00 <__aeabi_ddiv+0x1dc>)
    1bb2:	00a4      	lsls	r4, r4, #2
    1bb4:	5934      	ldr	r4, [r6, r4]
    1bb6:	46a7      	mov	pc, r4
    1bb8:	4640      	mov	r0, r8
    1bba:	4304      	orrs	r4, r0
    1bbc:	d16e      	bne.n	1c9c <__aeabi_ddiv+0x178>
    1bbe:	2100      	movs	r1, #0
    1bc0:	2502      	movs	r5, #2
    1bc2:	2408      	movs	r4, #8
    1bc4:	4688      	mov	r8, r1
    1bc6:	4689      	mov	r9, r1
    1bc8:	9502      	str	r5, [sp, #8]
    1bca:	e7d2      	b.n	1b72 <__aeabi_ddiv+0x4e>
    1bcc:	9c00      	ldr	r4, [sp, #0]
    1bce:	9802      	ldr	r0, [sp, #8]
    1bd0:	46c3      	mov	fp, r8
    1bd2:	4649      	mov	r1, r9
    1bd4:	9401      	str	r4, [sp, #4]
    1bd6:	2802      	cmp	r0, #2
    1bd8:	d064      	beq.n	1ca4 <__aeabi_ddiv+0x180>
    1bda:	2803      	cmp	r0, #3
    1bdc:	d100      	bne.n	1be0 <__aeabi_ddiv+0xbc>
    1bde:	e2ab      	b.n	2138 <__aeabi_ddiv+0x614>
    1be0:	2801      	cmp	r0, #1
    1be2:	d000      	beq.n	1be6 <__aeabi_ddiv+0xc2>
    1be4:	e238      	b.n	2058 <__aeabi_ddiv+0x534>
    1be6:	9a01      	ldr	r2, [sp, #4]
    1be8:	2400      	movs	r4, #0
    1bea:	4002      	ands	r2, r0
    1bec:	2500      	movs	r5, #0
    1bee:	46a1      	mov	r9, r4
    1bf0:	e060      	b.n	1cb4 <__aeabi_ddiv+0x190>
    1bf2:	4643      	mov	r3, r8
    1bf4:	4323      	orrs	r3, r4
    1bf6:	d04a      	beq.n	1c8e <__aeabi_ddiv+0x16a>
    1bf8:	4640      	mov	r0, r8
    1bfa:	2800      	cmp	r0, #0
    1bfc:	d100      	bne.n	1c00 <__aeabi_ddiv+0xdc>
    1bfe:	e1c0      	b.n	1f82 <__aeabi_ddiv+0x45e>
    1c00:	f000 ffda 	bl	2bb8 <__clzsi2>
    1c04:	1e03      	subs	r3, r0, #0
    1c06:	2b27      	cmp	r3, #39	; 0x27
    1c08:	dd00      	ble.n	1c0c <__aeabi_ddiv+0xe8>
    1c0a:	e1b3      	b.n	1f74 <__aeabi_ddiv+0x450>
    1c0c:	2128      	movs	r1, #40	; 0x28
    1c0e:	1a0d      	subs	r5, r1, r0
    1c10:	1c21      	adds	r1, r4, #0
    1c12:	3b08      	subs	r3, #8
    1c14:	4642      	mov	r2, r8
    1c16:	40e9      	lsrs	r1, r5
    1c18:	409a      	lsls	r2, r3
    1c1a:	1c0d      	adds	r5, r1, #0
    1c1c:	4315      	orrs	r5, r2
    1c1e:	1c22      	adds	r2, r4, #0
    1c20:	409a      	lsls	r2, r3
    1c22:	46a8      	mov	r8, r5
    1c24:	4691      	mov	r9, r2
    1c26:	4b37      	ldr	r3, [pc, #220]	; (1d04 <__aeabi_ddiv+0x1e0>)
    1c28:	2500      	movs	r5, #0
    1c2a:	1a1b      	subs	r3, r3, r0
    1c2c:	469a      	mov	sl, r3
    1c2e:	2400      	movs	r4, #0
    1c30:	9502      	str	r5, [sp, #8]
    1c32:	e79e      	b.n	1b72 <__aeabi_ddiv+0x4e>
    1c34:	465a      	mov	r2, fp
    1c36:	4316      	orrs	r6, r2
    1c38:	2003      	movs	r0, #3
    1c3a:	2e00      	cmp	r6, #0
    1c3c:	d1b1      	bne.n	1ba2 <__aeabi_ddiv+0x7e>
    1c3e:	46b3      	mov	fp, r6
    1c40:	2100      	movs	r1, #0
    1c42:	2002      	movs	r0, #2
    1c44:	e7ad      	b.n	1ba2 <__aeabi_ddiv+0x7e>
    1c46:	465a      	mov	r2, fp
    1c48:	4332      	orrs	r2, r6
    1c4a:	d01b      	beq.n	1c84 <__aeabi_ddiv+0x160>
    1c4c:	465b      	mov	r3, fp
    1c4e:	2b00      	cmp	r3, #0
    1c50:	d100      	bne.n	1c54 <__aeabi_ddiv+0x130>
    1c52:	e18a      	b.n	1f6a <__aeabi_ddiv+0x446>
    1c54:	4658      	mov	r0, fp
    1c56:	f000 ffaf 	bl	2bb8 <__clzsi2>
    1c5a:	2827      	cmp	r0, #39	; 0x27
    1c5c:	dd00      	ble.n	1c60 <__aeabi_ddiv+0x13c>
    1c5e:	e17d      	b.n	1f5c <__aeabi_ddiv+0x438>
    1c60:	2228      	movs	r2, #40	; 0x28
    1c62:	1a17      	subs	r7, r2, r0
    1c64:	1c01      	adds	r1, r0, #0
    1c66:	1c32      	adds	r2, r6, #0
    1c68:	3908      	subs	r1, #8
    1c6a:	465b      	mov	r3, fp
    1c6c:	40fa      	lsrs	r2, r7
    1c6e:	408b      	lsls	r3, r1
    1c70:	1c17      	adds	r7, r2, #0
    1c72:	431f      	orrs	r7, r3
    1c74:	1c33      	adds	r3, r6, #0
    1c76:	408b      	lsls	r3, r1
    1c78:	46bb      	mov	fp, r7
    1c7a:	1c19      	adds	r1, r3, #0
    1c7c:	4b21      	ldr	r3, [pc, #132]	; (1d04 <__aeabi_ddiv+0x1e0>)
    1c7e:	1a1b      	subs	r3, r3, r0
    1c80:	2000      	movs	r0, #0
    1c82:	e78e      	b.n	1ba2 <__aeabi_ddiv+0x7e>
    1c84:	2700      	movs	r7, #0
    1c86:	46bb      	mov	fp, r7
    1c88:	2100      	movs	r1, #0
    1c8a:	2001      	movs	r0, #1
    1c8c:	e789      	b.n	1ba2 <__aeabi_ddiv+0x7e>
    1c8e:	2000      	movs	r0, #0
    1c90:	2501      	movs	r5, #1
    1c92:	2404      	movs	r4, #4
    1c94:	4680      	mov	r8, r0
    1c96:	4681      	mov	r9, r0
    1c98:	9502      	str	r5, [sp, #8]
    1c9a:	e76a      	b.n	1b72 <__aeabi_ddiv+0x4e>
    1c9c:	2503      	movs	r5, #3
    1c9e:	240c      	movs	r4, #12
    1ca0:	9502      	str	r5, [sp, #8]
    1ca2:	e766      	b.n	1b72 <__aeabi_ddiv+0x4e>
    1ca4:	9c01      	ldr	r4, [sp, #4]
    1ca6:	9403      	str	r4, [sp, #12]
    1ca8:	9d03      	ldr	r5, [sp, #12]
    1caa:	2201      	movs	r2, #1
    1cac:	402a      	ands	r2, r5
    1cae:	2400      	movs	r4, #0
    1cb0:	4d11      	ldr	r5, [pc, #68]	; (1cf8 <__aeabi_ddiv+0x1d4>)
    1cb2:	46a1      	mov	r9, r4
    1cb4:	2000      	movs	r0, #0
    1cb6:	2100      	movs	r1, #0
    1cb8:	0324      	lsls	r4, r4, #12
    1cba:	0b26      	lsrs	r6, r4, #12
    1cbc:	0d0c      	lsrs	r4, r1, #20
    1cbe:	0524      	lsls	r4, r4, #20
    1cc0:	4b11      	ldr	r3, [pc, #68]	; (1d08 <__aeabi_ddiv+0x1e4>)
    1cc2:	4334      	orrs	r4, r6
    1cc4:	052d      	lsls	r5, r5, #20
    1cc6:	4023      	ands	r3, r4
    1cc8:	432b      	orrs	r3, r5
    1cca:	005b      	lsls	r3, r3, #1
    1ccc:	085b      	lsrs	r3, r3, #1
    1cce:	07d2      	lsls	r2, r2, #31
    1cd0:	1c19      	adds	r1, r3, #0
    1cd2:	4648      	mov	r0, r9
    1cd4:	4311      	orrs	r1, r2
    1cd6:	b007      	add	sp, #28
    1cd8:	bc3c      	pop	{r2, r3, r4, r5}
    1cda:	4690      	mov	r8, r2
    1cdc:	4699      	mov	r9, r3
    1cde:	46a2      	mov	sl, r4
    1ce0:	46ab      	mov	fp, r5
    1ce2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ce4:	2200      	movs	r2, #0
    1ce6:	2480      	movs	r4, #128	; 0x80
    1ce8:	0324      	lsls	r4, r4, #12
    1cea:	4691      	mov	r9, r2
    1cec:	4d02      	ldr	r5, [pc, #8]	; (1cf8 <__aeabi_ddiv+0x1d4>)
    1cee:	e7e1      	b.n	1cb4 <__aeabi_ddiv+0x190>
    1cf0:	2400      	movs	r4, #0
    1cf2:	2500      	movs	r5, #0
    1cf4:	46a1      	mov	r9, r4
    1cf6:	e7dd      	b.n	1cb4 <__aeabi_ddiv+0x190>
    1cf8:	000007ff 	.word	0x000007ff
    1cfc:	fffffc01 	.word	0xfffffc01
    1d00:	0000577c 	.word	0x0000577c
    1d04:	fffffc0d 	.word	0xfffffc0d
    1d08:	800fffff 	.word	0x800fffff
    1d0c:	4655      	mov	r5, sl
    1d0e:	1aed      	subs	r5, r5, r3
    1d10:	9504      	str	r5, [sp, #16]
    1d12:	45d8      	cmp	r8, fp
    1d14:	d900      	bls.n	1d18 <__aeabi_ddiv+0x1f4>
    1d16:	e153      	b.n	1fc0 <__aeabi_ddiv+0x49c>
    1d18:	d100      	bne.n	1d1c <__aeabi_ddiv+0x1f8>
    1d1a:	e14e      	b.n	1fba <__aeabi_ddiv+0x496>
    1d1c:	9c04      	ldr	r4, [sp, #16]
    1d1e:	2500      	movs	r5, #0
    1d20:	3c01      	subs	r4, #1
    1d22:	464e      	mov	r6, r9
    1d24:	9404      	str	r4, [sp, #16]
    1d26:	4647      	mov	r7, r8
    1d28:	46a9      	mov	r9, r5
    1d2a:	4658      	mov	r0, fp
    1d2c:	0203      	lsls	r3, r0, #8
    1d2e:	0e0c      	lsrs	r4, r1, #24
    1d30:	431c      	orrs	r4, r3
    1d32:	0209      	lsls	r1, r1, #8
    1d34:	0c25      	lsrs	r5, r4, #16
    1d36:	0423      	lsls	r3, r4, #16
    1d38:	0c1b      	lsrs	r3, r3, #16
    1d3a:	9100      	str	r1, [sp, #0]
    1d3c:	1c38      	adds	r0, r7, #0
    1d3e:	1c29      	adds	r1, r5, #0
    1d40:	9301      	str	r3, [sp, #4]
    1d42:	f7fe fbd1 	bl	4e8 <__aeabi_uidiv>
    1d46:	9901      	ldr	r1, [sp, #4]
    1d48:	4683      	mov	fp, r0
    1d4a:	4341      	muls	r1, r0
    1d4c:	1c38      	adds	r0, r7, #0
    1d4e:	468a      	mov	sl, r1
    1d50:	1c29      	adds	r1, r5, #0
    1d52:	f7fe fc0d 	bl	570 <__aeabi_uidivmod>
    1d56:	0c33      	lsrs	r3, r6, #16
    1d58:	0409      	lsls	r1, r1, #16
    1d5a:	4319      	orrs	r1, r3
    1d5c:	458a      	cmp	sl, r1
    1d5e:	d90c      	bls.n	1d7a <__aeabi_ddiv+0x256>
    1d60:	465b      	mov	r3, fp
    1d62:	1909      	adds	r1, r1, r4
    1d64:	3b01      	subs	r3, #1
    1d66:	428c      	cmp	r4, r1
    1d68:	d900      	bls.n	1d6c <__aeabi_ddiv+0x248>
    1d6a:	e147      	b.n	1ffc <__aeabi_ddiv+0x4d8>
    1d6c:	458a      	cmp	sl, r1
    1d6e:	d800      	bhi.n	1d72 <__aeabi_ddiv+0x24e>
    1d70:	e144      	b.n	1ffc <__aeabi_ddiv+0x4d8>
    1d72:	2202      	movs	r2, #2
    1d74:	4252      	negs	r2, r2
    1d76:	4493      	add	fp, r2
    1d78:	1909      	adds	r1, r1, r4
    1d7a:	4653      	mov	r3, sl
    1d7c:	1acb      	subs	r3, r1, r3
    1d7e:	1c18      	adds	r0, r3, #0
    1d80:	1c29      	adds	r1, r5, #0
    1d82:	4698      	mov	r8, r3
    1d84:	f7fe fbb0 	bl	4e8 <__aeabi_uidiv>
    1d88:	1c07      	adds	r7, r0, #0
    1d8a:	9801      	ldr	r0, [sp, #4]
    1d8c:	1c29      	adds	r1, r5, #0
    1d8e:	4378      	muls	r0, r7
    1d90:	4682      	mov	sl, r0
    1d92:	4640      	mov	r0, r8
    1d94:	f7fe fbec 	bl	570 <__aeabi_uidivmod>
    1d98:	0436      	lsls	r6, r6, #16
    1d9a:	040b      	lsls	r3, r1, #16
    1d9c:	0c36      	lsrs	r6, r6, #16
    1d9e:	4333      	orrs	r3, r6
    1da0:	459a      	cmp	sl, r3
    1da2:	d909      	bls.n	1db8 <__aeabi_ddiv+0x294>
    1da4:	191b      	adds	r3, r3, r4
    1da6:	1e7a      	subs	r2, r7, #1
    1da8:	429c      	cmp	r4, r3
    1daa:	d900      	bls.n	1dae <__aeabi_ddiv+0x28a>
    1dac:	e124      	b.n	1ff8 <__aeabi_ddiv+0x4d4>
    1dae:	459a      	cmp	sl, r3
    1db0:	d800      	bhi.n	1db4 <__aeabi_ddiv+0x290>
    1db2:	e121      	b.n	1ff8 <__aeabi_ddiv+0x4d4>
    1db4:	3f02      	subs	r7, #2
    1db6:	191b      	adds	r3, r3, r4
    1db8:	465e      	mov	r6, fp
    1dba:	0432      	lsls	r2, r6, #16
    1dbc:	4317      	orrs	r7, r2
    1dbe:	0c38      	lsrs	r0, r7, #16
    1dc0:	46bb      	mov	fp, r7
    1dc2:	9e00      	ldr	r6, [sp, #0]
    1dc4:	9f00      	ldr	r7, [sp, #0]
    1dc6:	4651      	mov	r1, sl
    1dc8:	0c3f      	lsrs	r7, r7, #16
    1dca:	0432      	lsls	r2, r6, #16
    1dcc:	1a5b      	subs	r3, r3, r1
    1dce:	4659      	mov	r1, fp
    1dd0:	46ba      	mov	sl, r7
    1dd2:	0c12      	lsrs	r2, r2, #16
    1dd4:	040f      	lsls	r7, r1, #16
    1dd6:	0c3f      	lsrs	r7, r7, #16
    1dd8:	4690      	mov	r8, r2
    1dda:	4651      	mov	r1, sl
    1ddc:	437a      	muls	r2, r7
    1dde:	434f      	muls	r7, r1
    1de0:	4641      	mov	r1, r8
    1de2:	4341      	muls	r1, r0
    1de4:	4656      	mov	r6, sl
    1de6:	4370      	muls	r0, r6
    1de8:	19cf      	adds	r7, r1, r7
    1dea:	0c16      	lsrs	r6, r2, #16
    1dec:	19be      	adds	r6, r7, r6
    1dee:	42b1      	cmp	r1, r6
    1df0:	d902      	bls.n	1df8 <__aeabi_ddiv+0x2d4>
    1df2:	2780      	movs	r7, #128	; 0x80
    1df4:	027f      	lsls	r7, r7, #9
    1df6:	19c0      	adds	r0, r0, r7
    1df8:	0c31      	lsrs	r1, r6, #16
    1dfa:	0412      	lsls	r2, r2, #16
    1dfc:	0436      	lsls	r6, r6, #16
    1dfe:	0c12      	lsrs	r2, r2, #16
    1e00:	1840      	adds	r0, r0, r1
    1e02:	18b6      	adds	r6, r6, r2
    1e04:	4283      	cmp	r3, r0
    1e06:	d200      	bcs.n	1e0a <__aeabi_ddiv+0x2e6>
    1e08:	e0c4      	b.n	1f94 <__aeabi_ddiv+0x470>
    1e0a:	d100      	bne.n	1e0e <__aeabi_ddiv+0x2ea>
    1e0c:	e0be      	b.n	1f8c <__aeabi_ddiv+0x468>
    1e0e:	1a19      	subs	r1, r3, r0
    1e10:	4648      	mov	r0, r9
    1e12:	1b86      	subs	r6, r0, r6
    1e14:	45b1      	cmp	r9, r6
    1e16:	41bf      	sbcs	r7, r7
    1e18:	427f      	negs	r7, r7
    1e1a:	1bcf      	subs	r7, r1, r7
    1e1c:	42a7      	cmp	r7, r4
    1e1e:	d100      	bne.n	1e22 <__aeabi_ddiv+0x2fe>
    1e20:	e113      	b.n	204a <__aeabi_ddiv+0x526>
    1e22:	1c29      	adds	r1, r5, #0
    1e24:	1c38      	adds	r0, r7, #0
    1e26:	f7fe fb5f 	bl	4e8 <__aeabi_uidiv>
    1e2a:	9901      	ldr	r1, [sp, #4]
    1e2c:	9002      	str	r0, [sp, #8]
    1e2e:	4341      	muls	r1, r0
    1e30:	1c38      	adds	r0, r7, #0
    1e32:	4689      	mov	r9, r1
    1e34:	1c29      	adds	r1, r5, #0
    1e36:	f7fe fb9b 	bl	570 <__aeabi_uidivmod>
    1e3a:	0c33      	lsrs	r3, r6, #16
    1e3c:	0409      	lsls	r1, r1, #16
    1e3e:	4319      	orrs	r1, r3
    1e40:	4589      	cmp	r9, r1
    1e42:	d90c      	bls.n	1e5e <__aeabi_ddiv+0x33a>
    1e44:	9b02      	ldr	r3, [sp, #8]
    1e46:	1909      	adds	r1, r1, r4
    1e48:	3b01      	subs	r3, #1
    1e4a:	428c      	cmp	r4, r1
    1e4c:	d900      	bls.n	1e50 <__aeabi_ddiv+0x32c>
    1e4e:	e0ff      	b.n	2050 <__aeabi_ddiv+0x52c>
    1e50:	4589      	cmp	r9, r1
    1e52:	d800      	bhi.n	1e56 <__aeabi_ddiv+0x332>
    1e54:	e0fc      	b.n	2050 <__aeabi_ddiv+0x52c>
    1e56:	9f02      	ldr	r7, [sp, #8]
    1e58:	1909      	adds	r1, r1, r4
    1e5a:	3f02      	subs	r7, #2
    1e5c:	9702      	str	r7, [sp, #8]
    1e5e:	464f      	mov	r7, r9
    1e60:	1bcf      	subs	r7, r1, r7
    1e62:	1c38      	adds	r0, r7, #0
    1e64:	1c29      	adds	r1, r5, #0
    1e66:	9705      	str	r7, [sp, #20]
    1e68:	f7fe fb3e 	bl	4e8 <__aeabi_uidiv>
    1e6c:	1c07      	adds	r7, r0, #0
    1e6e:	9801      	ldr	r0, [sp, #4]
    1e70:	1c29      	adds	r1, r5, #0
    1e72:	4378      	muls	r0, r7
    1e74:	4681      	mov	r9, r0
    1e76:	9805      	ldr	r0, [sp, #20]
    1e78:	f7fe fb7a 	bl	570 <__aeabi_uidivmod>
    1e7c:	0436      	lsls	r6, r6, #16
    1e7e:	0409      	lsls	r1, r1, #16
    1e80:	0c36      	lsrs	r6, r6, #16
    1e82:	430e      	orrs	r6, r1
    1e84:	45b1      	cmp	r9, r6
    1e86:	d909      	bls.n	1e9c <__aeabi_ddiv+0x378>
    1e88:	1936      	adds	r6, r6, r4
    1e8a:	1e7b      	subs	r3, r7, #1
    1e8c:	42b4      	cmp	r4, r6
    1e8e:	d900      	bls.n	1e92 <__aeabi_ddiv+0x36e>
    1e90:	e0e0      	b.n	2054 <__aeabi_ddiv+0x530>
    1e92:	45b1      	cmp	r9, r6
    1e94:	d800      	bhi.n	1e98 <__aeabi_ddiv+0x374>
    1e96:	e0dd      	b.n	2054 <__aeabi_ddiv+0x530>
    1e98:	3f02      	subs	r7, #2
    1e9a:	1936      	adds	r6, r6, r4
    1e9c:	9d02      	ldr	r5, [sp, #8]
    1e9e:	4649      	mov	r1, r9
    1ea0:	1a76      	subs	r6, r6, r1
    1ea2:	0429      	lsls	r1, r5, #16
    1ea4:	4339      	orrs	r1, r7
    1ea6:	040b      	lsls	r3, r1, #16
    1ea8:	4657      	mov	r7, sl
    1eaa:	0c0a      	lsrs	r2, r1, #16
    1eac:	0c1b      	lsrs	r3, r3, #16
    1eae:	4640      	mov	r0, r8
    1eb0:	4645      	mov	r5, r8
    1eb2:	4358      	muls	r0, r3
    1eb4:	4355      	muls	r5, r2
    1eb6:	437b      	muls	r3, r7
    1eb8:	437a      	muls	r2, r7
    1eba:	18eb      	adds	r3, r5, r3
    1ebc:	0c07      	lsrs	r7, r0, #16
    1ebe:	19db      	adds	r3, r3, r7
    1ec0:	429d      	cmp	r5, r3
    1ec2:	d902      	bls.n	1eca <__aeabi_ddiv+0x3a6>
    1ec4:	2580      	movs	r5, #128	; 0x80
    1ec6:	026d      	lsls	r5, r5, #9
    1ec8:	1952      	adds	r2, r2, r5
    1eca:	0c1d      	lsrs	r5, r3, #16
    1ecc:	0400      	lsls	r0, r0, #16
    1ece:	041b      	lsls	r3, r3, #16
    1ed0:	0c00      	lsrs	r0, r0, #16
    1ed2:	1952      	adds	r2, r2, r5
    1ed4:	181b      	adds	r3, r3, r0
    1ed6:	4296      	cmp	r6, r2
    1ed8:	d335      	bcc.n	1f46 <__aeabi_ddiv+0x422>
    1eda:	d100      	bne.n	1ede <__aeabi_ddiv+0x3ba>
    1edc:	e0fc      	b.n	20d8 <__aeabi_ddiv+0x5b4>
    1ede:	2301      	movs	r3, #1
    1ee0:	4319      	orrs	r1, r3
    1ee2:	9e04      	ldr	r6, [sp, #16]
    1ee4:	4f99      	ldr	r7, [pc, #612]	; (214c <__aeabi_ddiv+0x628>)
    1ee6:	19f5      	adds	r5, r6, r7
    1ee8:	2d00      	cmp	r5, #0
    1eea:	dc00      	bgt.n	1eee <__aeabi_ddiv+0x3ca>
    1eec:	e0a1      	b.n	2032 <__aeabi_ddiv+0x50e>
    1eee:	0748      	lsls	r0, r1, #29
    1ef0:	d009      	beq.n	1f06 <__aeabi_ddiv+0x3e2>
    1ef2:	230f      	movs	r3, #15
    1ef4:	400b      	ands	r3, r1
    1ef6:	2b04      	cmp	r3, #4
    1ef8:	d005      	beq.n	1f06 <__aeabi_ddiv+0x3e2>
    1efa:	1d0b      	adds	r3, r1, #4
    1efc:	428b      	cmp	r3, r1
    1efe:	4189      	sbcs	r1, r1
    1f00:	4249      	negs	r1, r1
    1f02:	448b      	add	fp, r1
    1f04:	1c19      	adds	r1, r3, #0
    1f06:	465a      	mov	r2, fp
    1f08:	01d2      	lsls	r2, r2, #7
    1f0a:	d507      	bpl.n	1f1c <__aeabi_ddiv+0x3f8>
    1f0c:	4b90      	ldr	r3, [pc, #576]	; (2150 <__aeabi_ddiv+0x62c>)
    1f0e:	465c      	mov	r4, fp
    1f10:	9e04      	ldr	r6, [sp, #16]
    1f12:	2780      	movs	r7, #128	; 0x80
    1f14:	401c      	ands	r4, r3
    1f16:	00ff      	lsls	r7, r7, #3
    1f18:	46a3      	mov	fp, r4
    1f1a:	19f5      	adds	r5, r6, r7
    1f1c:	4b8d      	ldr	r3, [pc, #564]	; (2154 <__aeabi_ddiv+0x630>)
    1f1e:	429d      	cmp	r5, r3
    1f20:	dd7a      	ble.n	2018 <__aeabi_ddiv+0x4f4>
    1f22:	9c03      	ldr	r4, [sp, #12]
    1f24:	2201      	movs	r2, #1
    1f26:	4022      	ands	r2, r4
    1f28:	2400      	movs	r4, #0
    1f2a:	4d8b      	ldr	r5, [pc, #556]	; (2158 <__aeabi_ddiv+0x634>)
    1f2c:	46a1      	mov	r9, r4
    1f2e:	e6c1      	b.n	1cb4 <__aeabi_ddiv+0x190>
    1f30:	2480      	movs	r4, #128	; 0x80
    1f32:	0324      	lsls	r4, r4, #12
    1f34:	4647      	mov	r7, r8
    1f36:	4227      	tst	r7, r4
    1f38:	d14c      	bne.n	1fd4 <__aeabi_ddiv+0x4b0>
    1f3a:	433c      	orrs	r4, r7
    1f3c:	0324      	lsls	r4, r4, #12
    1f3e:	0b24      	lsrs	r4, r4, #12
    1f40:	9a00      	ldr	r2, [sp, #0]
    1f42:	4d85      	ldr	r5, [pc, #532]	; (2158 <__aeabi_ddiv+0x634>)
    1f44:	e6b6      	b.n	1cb4 <__aeabi_ddiv+0x190>
    1f46:	1936      	adds	r6, r6, r4
    1f48:	1e48      	subs	r0, r1, #1
    1f4a:	42b4      	cmp	r4, r6
    1f4c:	d95e      	bls.n	200c <__aeabi_ddiv+0x4e8>
    1f4e:	1c01      	adds	r1, r0, #0
    1f50:	4296      	cmp	r6, r2
    1f52:	d1c4      	bne.n	1ede <__aeabi_ddiv+0x3ba>
    1f54:	9e00      	ldr	r6, [sp, #0]
    1f56:	429e      	cmp	r6, r3
    1f58:	d1c1      	bne.n	1ede <__aeabi_ddiv+0x3ba>
    1f5a:	e7c2      	b.n	1ee2 <__aeabi_ddiv+0x3be>
    1f5c:	1c03      	adds	r3, r0, #0
    1f5e:	3b28      	subs	r3, #40	; 0x28
    1f60:	1c31      	adds	r1, r6, #0
    1f62:	4099      	lsls	r1, r3
    1f64:	468b      	mov	fp, r1
    1f66:	2100      	movs	r1, #0
    1f68:	e688      	b.n	1c7c <__aeabi_ddiv+0x158>
    1f6a:	1c30      	adds	r0, r6, #0
    1f6c:	f000 fe24 	bl	2bb8 <__clzsi2>
    1f70:	3020      	adds	r0, #32
    1f72:	e672      	b.n	1c5a <__aeabi_ddiv+0x136>
    1f74:	3b28      	subs	r3, #40	; 0x28
    1f76:	1c21      	adds	r1, r4, #0
    1f78:	4099      	lsls	r1, r3
    1f7a:	2200      	movs	r2, #0
    1f7c:	4688      	mov	r8, r1
    1f7e:	4691      	mov	r9, r2
    1f80:	e651      	b.n	1c26 <__aeabi_ddiv+0x102>
    1f82:	1c20      	adds	r0, r4, #0
    1f84:	f000 fe18 	bl	2bb8 <__clzsi2>
    1f88:	3020      	adds	r0, #32
    1f8a:	e63b      	b.n	1c04 <__aeabi_ddiv+0xe0>
    1f8c:	2100      	movs	r1, #0
    1f8e:	45b1      	cmp	r9, r6
    1f90:	d300      	bcc.n	1f94 <__aeabi_ddiv+0x470>
    1f92:	e73d      	b.n	1e10 <__aeabi_ddiv+0x2ec>
    1f94:	9f00      	ldr	r7, [sp, #0]
    1f96:	465a      	mov	r2, fp
    1f98:	44b9      	add	r9, r7
    1f9a:	45b9      	cmp	r9, r7
    1f9c:	41bf      	sbcs	r7, r7
    1f9e:	427f      	negs	r7, r7
    1fa0:	193f      	adds	r7, r7, r4
    1fa2:	18fb      	adds	r3, r7, r3
    1fa4:	3a01      	subs	r2, #1
    1fa6:	429c      	cmp	r4, r3
    1fa8:	d21e      	bcs.n	1fe8 <__aeabi_ddiv+0x4c4>
    1faa:	4298      	cmp	r0, r3
    1fac:	d900      	bls.n	1fb0 <__aeabi_ddiv+0x48c>
    1fae:	e07e      	b.n	20ae <__aeabi_ddiv+0x58a>
    1fb0:	d100      	bne.n	1fb4 <__aeabi_ddiv+0x490>
    1fb2:	e0b5      	b.n	2120 <__aeabi_ddiv+0x5fc>
    1fb4:	1a19      	subs	r1, r3, r0
    1fb6:	4693      	mov	fp, r2
    1fb8:	e72a      	b.n	1e10 <__aeabi_ddiv+0x2ec>
    1fba:	4589      	cmp	r9, r1
    1fbc:	d800      	bhi.n	1fc0 <__aeabi_ddiv+0x49c>
    1fbe:	e6ad      	b.n	1d1c <__aeabi_ddiv+0x1f8>
    1fc0:	4648      	mov	r0, r9
    1fc2:	4646      	mov	r6, r8
    1fc4:	4642      	mov	r2, r8
    1fc6:	0877      	lsrs	r7, r6, #1
    1fc8:	07d3      	lsls	r3, r2, #31
    1fca:	0846      	lsrs	r6, r0, #1
    1fcc:	07c0      	lsls	r0, r0, #31
    1fce:	431e      	orrs	r6, r3
    1fd0:	4681      	mov	r9, r0
    1fd2:	e6aa      	b.n	1d2a <__aeabi_ddiv+0x206>
    1fd4:	4658      	mov	r0, fp
    1fd6:	4220      	tst	r0, r4
    1fd8:	d112      	bne.n	2000 <__aeabi_ddiv+0x4dc>
    1fda:	4304      	orrs	r4, r0
    1fdc:	0324      	lsls	r4, r4, #12
    1fde:	1c2a      	adds	r2, r5, #0
    1fe0:	0b24      	lsrs	r4, r4, #12
    1fe2:	4689      	mov	r9, r1
    1fe4:	4d5c      	ldr	r5, [pc, #368]	; (2158 <__aeabi_ddiv+0x634>)
    1fe6:	e665      	b.n	1cb4 <__aeabi_ddiv+0x190>
    1fe8:	42a3      	cmp	r3, r4
    1fea:	d1e3      	bne.n	1fb4 <__aeabi_ddiv+0x490>
    1fec:	9f00      	ldr	r7, [sp, #0]
    1fee:	454f      	cmp	r7, r9
    1ff0:	d9db      	bls.n	1faa <__aeabi_ddiv+0x486>
    1ff2:	1a21      	subs	r1, r4, r0
    1ff4:	4693      	mov	fp, r2
    1ff6:	e70b      	b.n	1e10 <__aeabi_ddiv+0x2ec>
    1ff8:	1c17      	adds	r7, r2, #0
    1ffa:	e6dd      	b.n	1db8 <__aeabi_ddiv+0x294>
    1ffc:	469b      	mov	fp, r3
    1ffe:	e6bc      	b.n	1d7a <__aeabi_ddiv+0x256>
    2000:	433c      	orrs	r4, r7
    2002:	0324      	lsls	r4, r4, #12
    2004:	0b24      	lsrs	r4, r4, #12
    2006:	9a00      	ldr	r2, [sp, #0]
    2008:	4d53      	ldr	r5, [pc, #332]	; (2158 <__aeabi_ddiv+0x634>)
    200a:	e653      	b.n	1cb4 <__aeabi_ddiv+0x190>
    200c:	42b2      	cmp	r2, r6
    200e:	d859      	bhi.n	20c4 <__aeabi_ddiv+0x5a0>
    2010:	d100      	bne.n	2014 <__aeabi_ddiv+0x4f0>
    2012:	e08a      	b.n	212a <__aeabi_ddiv+0x606>
    2014:	1c01      	adds	r1, r0, #0
    2016:	e762      	b.n	1ede <__aeabi_ddiv+0x3ba>
    2018:	465f      	mov	r7, fp
    201a:	08c9      	lsrs	r1, r1, #3
    201c:	077b      	lsls	r3, r7, #29
    201e:	9e03      	ldr	r6, [sp, #12]
    2020:	430b      	orrs	r3, r1
    2022:	027c      	lsls	r4, r7, #9
    2024:	056d      	lsls	r5, r5, #21
    2026:	2201      	movs	r2, #1
    2028:	4699      	mov	r9, r3
    202a:	0b24      	lsrs	r4, r4, #12
    202c:	0d6d      	lsrs	r5, r5, #21
    202e:	4032      	ands	r2, r6
    2030:	e640      	b.n	1cb4 <__aeabi_ddiv+0x190>
    2032:	4b4a      	ldr	r3, [pc, #296]	; (215c <__aeabi_ddiv+0x638>)
    2034:	9f04      	ldr	r7, [sp, #16]
    2036:	1bdb      	subs	r3, r3, r7
    2038:	2b38      	cmp	r3, #56	; 0x38
    203a:	dd10      	ble.n	205e <__aeabi_ddiv+0x53a>
    203c:	9c03      	ldr	r4, [sp, #12]
    203e:	2201      	movs	r2, #1
    2040:	4022      	ands	r2, r4
    2042:	2400      	movs	r4, #0
    2044:	2500      	movs	r5, #0
    2046:	46a1      	mov	r9, r4
    2048:	e634      	b.n	1cb4 <__aeabi_ddiv+0x190>
    204a:	2101      	movs	r1, #1
    204c:	4249      	negs	r1, r1
    204e:	e748      	b.n	1ee2 <__aeabi_ddiv+0x3be>
    2050:	9302      	str	r3, [sp, #8]
    2052:	e704      	b.n	1e5e <__aeabi_ddiv+0x33a>
    2054:	1c1f      	adds	r7, r3, #0
    2056:	e721      	b.n	1e9c <__aeabi_ddiv+0x378>
    2058:	9c01      	ldr	r4, [sp, #4]
    205a:	9403      	str	r4, [sp, #12]
    205c:	e741      	b.n	1ee2 <__aeabi_ddiv+0x3be>
    205e:	2b1f      	cmp	r3, #31
    2060:	dc40      	bgt.n	20e4 <__aeabi_ddiv+0x5c0>
    2062:	483f      	ldr	r0, [pc, #252]	; (2160 <__aeabi_ddiv+0x63c>)
    2064:	9f04      	ldr	r7, [sp, #16]
    2066:	1c0c      	adds	r4, r1, #0
    2068:	183a      	adds	r2, r7, r0
    206a:	4658      	mov	r0, fp
    206c:	4091      	lsls	r1, r2
    206e:	40dc      	lsrs	r4, r3
    2070:	4090      	lsls	r0, r2
    2072:	4320      	orrs	r0, r4
    2074:	1c0a      	adds	r2, r1, #0
    2076:	1e51      	subs	r1, r2, #1
    2078:	418a      	sbcs	r2, r1
    207a:	1c01      	adds	r1, r0, #0
    207c:	4311      	orrs	r1, r2
    207e:	465a      	mov	r2, fp
    2080:	40da      	lsrs	r2, r3
    2082:	1c13      	adds	r3, r2, #0
    2084:	0748      	lsls	r0, r1, #29
    2086:	d009      	beq.n	209c <__aeabi_ddiv+0x578>
    2088:	220f      	movs	r2, #15
    208a:	400a      	ands	r2, r1
    208c:	2a04      	cmp	r2, #4
    208e:	d005      	beq.n	209c <__aeabi_ddiv+0x578>
    2090:	1d0a      	adds	r2, r1, #4
    2092:	428a      	cmp	r2, r1
    2094:	4189      	sbcs	r1, r1
    2096:	4249      	negs	r1, r1
    2098:	185b      	adds	r3, r3, r1
    209a:	1c11      	adds	r1, r2, #0
    209c:	021a      	lsls	r2, r3, #8
    209e:	d534      	bpl.n	210a <__aeabi_ddiv+0x5e6>
    20a0:	9c03      	ldr	r4, [sp, #12]
    20a2:	2201      	movs	r2, #1
    20a4:	4022      	ands	r2, r4
    20a6:	2400      	movs	r4, #0
    20a8:	2501      	movs	r5, #1
    20aa:	46a1      	mov	r9, r4
    20ac:	e602      	b.n	1cb4 <__aeabi_ddiv+0x190>
    20ae:	9f00      	ldr	r7, [sp, #0]
    20b0:	2102      	movs	r1, #2
    20b2:	4249      	negs	r1, r1
    20b4:	44b9      	add	r9, r7
    20b6:	448b      	add	fp, r1
    20b8:	45b9      	cmp	r9, r7
    20ba:	4189      	sbcs	r1, r1
    20bc:	4249      	negs	r1, r1
    20be:	1909      	adds	r1, r1, r4
    20c0:	18cb      	adds	r3, r1, r3
    20c2:	e6a4      	b.n	1e0e <__aeabi_ddiv+0x2ea>
    20c4:	9d00      	ldr	r5, [sp, #0]
    20c6:	1e88      	subs	r0, r1, #2
    20c8:	0069      	lsls	r1, r5, #1
    20ca:	42a9      	cmp	r1, r5
    20cc:	41ad      	sbcs	r5, r5
    20ce:	426d      	negs	r5, r5
    20d0:	192c      	adds	r4, r5, r4
    20d2:	1936      	adds	r6, r6, r4
    20d4:	9100      	str	r1, [sp, #0]
    20d6:	e73a      	b.n	1f4e <__aeabi_ddiv+0x42a>
    20d8:	2b00      	cmp	r3, #0
    20da:	d000      	beq.n	20de <__aeabi_ddiv+0x5ba>
    20dc:	e733      	b.n	1f46 <__aeabi_ddiv+0x422>
    20de:	2400      	movs	r4, #0
    20e0:	9400      	str	r4, [sp, #0]
    20e2:	e737      	b.n	1f54 <__aeabi_ddiv+0x430>
    20e4:	4a1f      	ldr	r2, [pc, #124]	; (2164 <__aeabi_ddiv+0x640>)
    20e6:	9c04      	ldr	r4, [sp, #16]
    20e8:	465d      	mov	r5, fp
    20ea:	1b12      	subs	r2, r2, r4
    20ec:	40d5      	lsrs	r5, r2
    20ee:	1c2a      	adds	r2, r5, #0
    20f0:	2b20      	cmp	r3, #32
    20f2:	d01f      	beq.n	2134 <__aeabi_ddiv+0x610>
    20f4:	4e1c      	ldr	r6, [pc, #112]	; (2168 <__aeabi_ddiv+0x644>)
    20f6:	465f      	mov	r7, fp
    20f8:	19a3      	adds	r3, r4, r6
    20fa:	409f      	lsls	r7, r3
    20fc:	1c3b      	adds	r3, r7, #0
    20fe:	4319      	orrs	r1, r3
    2100:	1e4b      	subs	r3, r1, #1
    2102:	4199      	sbcs	r1, r3
    2104:	4311      	orrs	r1, r2
    2106:	2300      	movs	r3, #0
    2108:	e7bc      	b.n	2084 <__aeabi_ddiv+0x560>
    210a:	075a      	lsls	r2, r3, #29
    210c:	08c9      	lsrs	r1, r1, #3
    210e:	430a      	orrs	r2, r1
    2110:	9f03      	ldr	r7, [sp, #12]
    2112:	4691      	mov	r9, r2
    2114:	025b      	lsls	r3, r3, #9
    2116:	2201      	movs	r2, #1
    2118:	0b1c      	lsrs	r4, r3, #12
    211a:	403a      	ands	r2, r7
    211c:	2500      	movs	r5, #0
    211e:	e5c9      	b.n	1cb4 <__aeabi_ddiv+0x190>
    2120:	454e      	cmp	r6, r9
    2122:	d8c4      	bhi.n	20ae <__aeabi_ddiv+0x58a>
    2124:	4693      	mov	fp, r2
    2126:	2100      	movs	r1, #0
    2128:	e672      	b.n	1e10 <__aeabi_ddiv+0x2ec>
    212a:	9f00      	ldr	r7, [sp, #0]
    212c:	429f      	cmp	r7, r3
    212e:	d3c9      	bcc.n	20c4 <__aeabi_ddiv+0x5a0>
    2130:	1c01      	adds	r1, r0, #0
    2132:	e70f      	b.n	1f54 <__aeabi_ddiv+0x430>
    2134:	2300      	movs	r3, #0
    2136:	e7e2      	b.n	20fe <__aeabi_ddiv+0x5da>
    2138:	2480      	movs	r4, #128	; 0x80
    213a:	0324      	lsls	r4, r4, #12
    213c:	465f      	mov	r7, fp
    213e:	433c      	orrs	r4, r7
    2140:	0324      	lsls	r4, r4, #12
    2142:	0b24      	lsrs	r4, r4, #12
    2144:	9a01      	ldr	r2, [sp, #4]
    2146:	4689      	mov	r9, r1
    2148:	4d03      	ldr	r5, [pc, #12]	; (2158 <__aeabi_ddiv+0x634>)
    214a:	e5b3      	b.n	1cb4 <__aeabi_ddiv+0x190>
    214c:	000003ff 	.word	0x000003ff
    2150:	feffffff 	.word	0xfeffffff
    2154:	000007fe 	.word	0x000007fe
    2158:	000007ff 	.word	0x000007ff
    215c:	fffffc02 	.word	0xfffffc02
    2160:	0000041e 	.word	0x0000041e
    2164:	fffffbe2 	.word	0xfffffbe2
    2168:	0000043e 	.word	0x0000043e

0000216c <__eqdf2>:
__eqdf2():
    216c:	b5f0      	push	{r4, r5, r6, r7, lr}
    216e:	465f      	mov	r7, fp
    2170:	4656      	mov	r6, sl
    2172:	464d      	mov	r5, r9
    2174:	4644      	mov	r4, r8
    2176:	b4f0      	push	{r4, r5, r6, r7}
    2178:	1c0d      	adds	r5, r1, #0
    217a:	1c04      	adds	r4, r0, #0
    217c:	4680      	mov	r8, r0
    217e:	0fe8      	lsrs	r0, r5, #31
    2180:	4681      	mov	r9, r0
    2182:	0318      	lsls	r0, r3, #12
    2184:	030f      	lsls	r7, r1, #12
    2186:	0b00      	lsrs	r0, r0, #12
    2188:	0b3f      	lsrs	r7, r7, #12
    218a:	b083      	sub	sp, #12
    218c:	4684      	mov	ip, r0
    218e:	481b      	ldr	r0, [pc, #108]	; (21fc <__eqdf2+0x90>)
    2190:	9700      	str	r7, [sp, #0]
    2192:	0049      	lsls	r1, r1, #1
    2194:	005e      	lsls	r6, r3, #1
    2196:	0fdf      	lsrs	r7, r3, #31
    2198:	0d49      	lsrs	r1, r1, #21
    219a:	4692      	mov	sl, r2
    219c:	0d76      	lsrs	r6, r6, #21
    219e:	46bb      	mov	fp, r7
    21a0:	4281      	cmp	r1, r0
    21a2:	d00c      	beq.n	21be <__eqdf2+0x52>
    21a4:	4815      	ldr	r0, [pc, #84]	; (21fc <__eqdf2+0x90>)
    21a6:	4286      	cmp	r6, r0
    21a8:	d010      	beq.n	21cc <__eqdf2+0x60>
    21aa:	2001      	movs	r0, #1
    21ac:	42b1      	cmp	r1, r6
    21ae:	d015      	beq.n	21dc <__eqdf2+0x70>
    21b0:	b003      	add	sp, #12
    21b2:	bc3c      	pop	{r2, r3, r4, r5}
    21b4:	4690      	mov	r8, r2
    21b6:	4699      	mov	r9, r3
    21b8:	46a2      	mov	sl, r4
    21ba:	46ab      	mov	fp, r5
    21bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    21be:	9f00      	ldr	r7, [sp, #0]
    21c0:	2001      	movs	r0, #1
    21c2:	4327      	orrs	r7, r4
    21c4:	d1f4      	bne.n	21b0 <__eqdf2+0x44>
    21c6:	480d      	ldr	r0, [pc, #52]	; (21fc <__eqdf2+0x90>)
    21c8:	4286      	cmp	r6, r0
    21ca:	d1ee      	bne.n	21aa <__eqdf2+0x3e>
    21cc:	4660      	mov	r0, ip
    21ce:	4302      	orrs	r2, r0
    21d0:	2001      	movs	r0, #1
    21d2:	2a00      	cmp	r2, #0
    21d4:	d1ec      	bne.n	21b0 <__eqdf2+0x44>
    21d6:	2001      	movs	r0, #1
    21d8:	42b1      	cmp	r1, r6
    21da:	d1e9      	bne.n	21b0 <__eqdf2+0x44>
    21dc:	9b00      	ldr	r3, [sp, #0]
    21de:	4563      	cmp	r3, ip
    21e0:	d1e6      	bne.n	21b0 <__eqdf2+0x44>
    21e2:	45d0      	cmp	r8, sl
    21e4:	d1e4      	bne.n	21b0 <__eqdf2+0x44>
    21e6:	45d9      	cmp	r9, fp
    21e8:	d006      	beq.n	21f8 <__eqdf2+0x8c>
    21ea:	2900      	cmp	r1, #0
    21ec:	d1e0      	bne.n	21b0 <__eqdf2+0x44>
    21ee:	431c      	orrs	r4, r3
    21f0:	1c20      	adds	r0, r4, #0
    21f2:	1e44      	subs	r4, r0, #1
    21f4:	41a0      	sbcs	r0, r4
    21f6:	e7db      	b.n	21b0 <__eqdf2+0x44>
    21f8:	2000      	movs	r0, #0
    21fa:	e7d9      	b.n	21b0 <__eqdf2+0x44>
    21fc:	000007ff 	.word	0x000007ff

00002200 <__gedf2>:
__gtdf2():
    2200:	b5f0      	push	{r4, r5, r6, r7, lr}
    2202:	465f      	mov	r7, fp
    2204:	4656      	mov	r6, sl
    2206:	464d      	mov	r5, r9
    2208:	4644      	mov	r4, r8
    220a:	b4f0      	push	{r4, r5, r6, r7}
    220c:	0fcd      	lsrs	r5, r1, #31
    220e:	0fde      	lsrs	r6, r3, #31
    2210:	46ac      	mov	ip, r5
    2212:	031d      	lsls	r5, r3, #12
    2214:	0b2d      	lsrs	r5, r5, #12
    2216:	46b1      	mov	r9, r6
    2218:	4e37      	ldr	r6, [pc, #220]	; (22f8 <__gedf2+0xf8>)
    221a:	030f      	lsls	r7, r1, #12
    221c:	004c      	lsls	r4, r1, #1
    221e:	46ab      	mov	fp, r5
    2220:	005d      	lsls	r5, r3, #1
    2222:	4680      	mov	r8, r0
    2224:	0b3f      	lsrs	r7, r7, #12
    2226:	0d64      	lsrs	r4, r4, #21
    2228:	4692      	mov	sl, r2
    222a:	0d6d      	lsrs	r5, r5, #21
    222c:	42b4      	cmp	r4, r6
    222e:	d032      	beq.n	2296 <__gedf2+0x96>
    2230:	4e31      	ldr	r6, [pc, #196]	; (22f8 <__gedf2+0xf8>)
    2232:	42b5      	cmp	r5, r6
    2234:	d035      	beq.n	22a2 <__gedf2+0xa2>
    2236:	2c00      	cmp	r4, #0
    2238:	d10e      	bne.n	2258 <__gedf2+0x58>
    223a:	4338      	orrs	r0, r7
    223c:	4241      	negs	r1, r0
    223e:	4141      	adcs	r1, r0
    2240:	1c08      	adds	r0, r1, #0
    2242:	2d00      	cmp	r5, #0
    2244:	d00b      	beq.n	225e <__gedf2+0x5e>
    2246:	2900      	cmp	r1, #0
    2248:	d119      	bne.n	227e <__gedf2+0x7e>
    224a:	45cc      	cmp	ip, r9
    224c:	d02d      	beq.n	22aa <__gedf2+0xaa>
    224e:	4665      	mov	r5, ip
    2250:	4268      	negs	r0, r5
    2252:	2301      	movs	r3, #1
    2254:	4318      	orrs	r0, r3
    2256:	e018      	b.n	228a <__gedf2+0x8a>
    2258:	2d00      	cmp	r5, #0
    225a:	d1f6      	bne.n	224a <__gedf2+0x4a>
    225c:	1c28      	adds	r0, r5, #0
    225e:	4659      	mov	r1, fp
    2260:	430a      	orrs	r2, r1
    2262:	4253      	negs	r3, r2
    2264:	4153      	adcs	r3, r2
    2266:	2800      	cmp	r0, #0
    2268:	d106      	bne.n	2278 <__gedf2+0x78>
    226a:	2b00      	cmp	r3, #0
    226c:	d0ed      	beq.n	224a <__gedf2+0x4a>
    226e:	4663      	mov	r3, ip
    2270:	4258      	negs	r0, r3
    2272:	2301      	movs	r3, #1
    2274:	4318      	orrs	r0, r3
    2276:	e008      	b.n	228a <__gedf2+0x8a>
    2278:	2000      	movs	r0, #0
    227a:	2b00      	cmp	r3, #0
    227c:	d105      	bne.n	228a <__gedf2+0x8a>
    227e:	464a      	mov	r2, r9
    2280:	4250      	negs	r0, r2
    2282:	4150      	adcs	r0, r2
    2284:	4240      	negs	r0, r0
    2286:	2301      	movs	r3, #1
    2288:	4318      	orrs	r0, r3
    228a:	bc3c      	pop	{r2, r3, r4, r5}
    228c:	4690      	mov	r8, r2
    228e:	4699      	mov	r9, r3
    2290:	46a2      	mov	sl, r4
    2292:	46ab      	mov	fp, r5
    2294:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2296:	1c3e      	adds	r6, r7, #0
    2298:	4306      	orrs	r6, r0
    229a:	d0c9      	beq.n	2230 <__gedf2+0x30>
    229c:	2002      	movs	r0, #2
    229e:	4240      	negs	r0, r0
    22a0:	e7f3      	b.n	228a <__gedf2+0x8a>
    22a2:	465e      	mov	r6, fp
    22a4:	4316      	orrs	r6, r2
    22a6:	d0c6      	beq.n	2236 <__gedf2+0x36>
    22a8:	e7f8      	b.n	229c <__gedf2+0x9c>
    22aa:	42ac      	cmp	r4, r5
    22ac:	dc07      	bgt.n	22be <__gedf2+0xbe>
    22ae:	da0b      	bge.n	22c8 <__gedf2+0xc8>
    22b0:	4661      	mov	r1, ip
    22b2:	4248      	negs	r0, r1
    22b4:	4148      	adcs	r0, r1
    22b6:	4240      	negs	r0, r0
    22b8:	2301      	movs	r3, #1
    22ba:	4318      	orrs	r0, r3
    22bc:	e7e5      	b.n	228a <__gedf2+0x8a>
    22be:	4666      	mov	r6, ip
    22c0:	4270      	negs	r0, r6
    22c2:	2301      	movs	r3, #1
    22c4:	4318      	orrs	r0, r3
    22c6:	e7e0      	b.n	228a <__gedf2+0x8a>
    22c8:	455f      	cmp	r7, fp
    22ca:	d80a      	bhi.n	22e2 <__gedf2+0xe2>
    22cc:	d00e      	beq.n	22ec <__gedf2+0xec>
    22ce:	2000      	movs	r0, #0
    22d0:	455f      	cmp	r7, fp
    22d2:	d2da      	bcs.n	228a <__gedf2+0x8a>
    22d4:	4665      	mov	r5, ip
    22d6:	4268      	negs	r0, r5
    22d8:	4168      	adcs	r0, r5
    22da:	4240      	negs	r0, r0
    22dc:	2301      	movs	r3, #1
    22de:	4318      	orrs	r0, r3
    22e0:	e7d3      	b.n	228a <__gedf2+0x8a>
    22e2:	4662      	mov	r2, ip
    22e4:	4250      	negs	r0, r2
    22e6:	2301      	movs	r3, #1
    22e8:	4318      	orrs	r0, r3
    22ea:	e7ce      	b.n	228a <__gedf2+0x8a>
    22ec:	45d0      	cmp	r8, sl
    22ee:	d8f8      	bhi.n	22e2 <__gedf2+0xe2>
    22f0:	2000      	movs	r0, #0
    22f2:	45d0      	cmp	r8, sl
    22f4:	d3ee      	bcc.n	22d4 <__gedf2+0xd4>
    22f6:	e7c8      	b.n	228a <__gedf2+0x8a>
    22f8:	000007ff 	.word	0x000007ff

000022fc <__ledf2>:
__ltdf2():
    22fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    22fe:	4656      	mov	r6, sl
    2300:	464d      	mov	r5, r9
    2302:	4644      	mov	r4, r8
    2304:	465f      	mov	r7, fp
    2306:	b4f0      	push	{r4, r5, r6, r7}
    2308:	1c0d      	adds	r5, r1, #0
    230a:	b083      	sub	sp, #12
    230c:	1c04      	adds	r4, r0, #0
    230e:	9001      	str	r0, [sp, #4]
    2310:	0fe8      	lsrs	r0, r5, #31
    2312:	4681      	mov	r9, r0
    2314:	0318      	lsls	r0, r3, #12
    2316:	030f      	lsls	r7, r1, #12
    2318:	0b00      	lsrs	r0, r0, #12
    231a:	0b3f      	lsrs	r7, r7, #12
    231c:	4684      	mov	ip, r0
    231e:	4835      	ldr	r0, [pc, #212]	; (23f4 <__ledf2+0xf8>)
    2320:	9700      	str	r7, [sp, #0]
    2322:	0049      	lsls	r1, r1, #1
    2324:	005e      	lsls	r6, r3, #1
    2326:	0fdf      	lsrs	r7, r3, #31
    2328:	0d49      	lsrs	r1, r1, #21
    232a:	4692      	mov	sl, r2
    232c:	0d76      	lsrs	r6, r6, #21
    232e:	46b8      	mov	r8, r7
    2330:	4281      	cmp	r1, r0
    2332:	d034      	beq.n	239e <__ledf2+0xa2>
    2334:	482f      	ldr	r0, [pc, #188]	; (23f4 <__ledf2+0xf8>)
    2336:	4286      	cmp	r6, r0
    2338:	d036      	beq.n	23a8 <__ledf2+0xac>
    233a:	2900      	cmp	r1, #0
    233c:	d018      	beq.n	2370 <__ledf2+0x74>
    233e:	2e00      	cmp	r6, #0
    2340:	d11f      	bne.n	2382 <__ledf2+0x86>
    2342:	1c34      	adds	r4, r6, #0
    2344:	4667      	mov	r7, ip
    2346:	433a      	orrs	r2, r7
    2348:	4253      	negs	r3, r2
    234a:	4153      	adcs	r3, r2
    234c:	2c00      	cmp	r4, #0
    234e:	d01f      	beq.n	2390 <__ledf2+0x94>
    2350:	2000      	movs	r0, #0
    2352:	2b00      	cmp	r3, #0
    2354:	d105      	bne.n	2362 <__ledf2+0x66>
    2356:	4642      	mov	r2, r8
    2358:	4250      	negs	r0, r2
    235a:	4150      	adcs	r0, r2
    235c:	4240      	negs	r0, r0
    235e:	2301      	movs	r3, #1
    2360:	4318      	orrs	r0, r3
    2362:	b003      	add	sp, #12
    2364:	bc3c      	pop	{r2, r3, r4, r5}
    2366:	4690      	mov	r8, r2
    2368:	4699      	mov	r9, r3
    236a:	46a2      	mov	sl, r4
    236c:	46ab      	mov	fp, r5
    236e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2370:	9800      	ldr	r0, [sp, #0]
    2372:	4304      	orrs	r4, r0
    2374:	4260      	negs	r0, r4
    2376:	4160      	adcs	r0, r4
    2378:	1c04      	adds	r4, r0, #0
    237a:	2e00      	cmp	r6, #0
    237c:	d0e2      	beq.n	2344 <__ledf2+0x48>
    237e:	2800      	cmp	r0, #0
    2380:	d1e9      	bne.n	2356 <__ledf2+0x5a>
    2382:	45c1      	cmp	r9, r8
    2384:	d015      	beq.n	23b2 <__ledf2+0xb6>
    2386:	464f      	mov	r7, r9
    2388:	4278      	negs	r0, r7
    238a:	2301      	movs	r3, #1
    238c:	4318      	orrs	r0, r3
    238e:	e7e8      	b.n	2362 <__ledf2+0x66>
    2390:	2b00      	cmp	r3, #0
    2392:	d0f6      	beq.n	2382 <__ledf2+0x86>
    2394:	464b      	mov	r3, r9
    2396:	4258      	negs	r0, r3
    2398:	2301      	movs	r3, #1
    239a:	4318      	orrs	r0, r3
    239c:	e7e1      	b.n	2362 <__ledf2+0x66>
    239e:	9f00      	ldr	r7, [sp, #0]
    23a0:	2002      	movs	r0, #2
    23a2:	4327      	orrs	r7, r4
    23a4:	d1dd      	bne.n	2362 <__ledf2+0x66>
    23a6:	e7c5      	b.n	2334 <__ledf2+0x38>
    23a8:	4667      	mov	r7, ip
    23aa:	2002      	movs	r0, #2
    23ac:	4317      	orrs	r7, r2
    23ae:	d1d8      	bne.n	2362 <__ledf2+0x66>
    23b0:	e7c3      	b.n	233a <__ledf2+0x3e>
    23b2:	42b1      	cmp	r1, r6
    23b4:	dd04      	ble.n	23c0 <__ledf2+0xc4>
    23b6:	464a      	mov	r2, r9
    23b8:	4250      	negs	r0, r2
    23ba:	2301      	movs	r3, #1
    23bc:	4318      	orrs	r0, r3
    23be:	e7d0      	b.n	2362 <__ledf2+0x66>
    23c0:	42b1      	cmp	r1, r6
    23c2:	db07      	blt.n	23d4 <__ledf2+0xd8>
    23c4:	9800      	ldr	r0, [sp, #0]
    23c6:	4560      	cmp	r0, ip
    23c8:	d8e4      	bhi.n	2394 <__ledf2+0x98>
    23ca:	d00a      	beq.n	23e2 <__ledf2+0xe6>
    23cc:	9f00      	ldr	r7, [sp, #0]
    23ce:	2000      	movs	r0, #0
    23d0:	4567      	cmp	r7, ip
    23d2:	d2c6      	bcs.n	2362 <__ledf2+0x66>
    23d4:	464f      	mov	r7, r9
    23d6:	4278      	negs	r0, r7
    23d8:	4178      	adcs	r0, r7
    23da:	4240      	negs	r0, r0
    23dc:	2301      	movs	r3, #1
    23de:	4318      	orrs	r0, r3
    23e0:	e7bf      	b.n	2362 <__ledf2+0x66>
    23e2:	9a01      	ldr	r2, [sp, #4]
    23e4:	4552      	cmp	r2, sl
    23e6:	d8d5      	bhi.n	2394 <__ledf2+0x98>
    23e8:	9a01      	ldr	r2, [sp, #4]
    23ea:	2000      	movs	r0, #0
    23ec:	4552      	cmp	r2, sl
    23ee:	d3f1      	bcc.n	23d4 <__ledf2+0xd8>
    23f0:	e7b7      	b.n	2362 <__ledf2+0x66>
    23f2:	46c0      	nop			; (mov r8, r8)
    23f4:	000007ff 	.word	0x000007ff

000023f8 <__aeabi_dmul>:
__aeabi_dmul():
    23f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    23fa:	4656      	mov	r6, sl
    23fc:	4644      	mov	r4, r8
    23fe:	465f      	mov	r7, fp
    2400:	464d      	mov	r5, r9
    2402:	b4f0      	push	{r4, r5, r6, r7}
    2404:	1c1f      	adds	r7, r3, #0
    2406:	030b      	lsls	r3, r1, #12
    2408:	0b1b      	lsrs	r3, r3, #12
    240a:	469a      	mov	sl, r3
    240c:	004b      	lsls	r3, r1, #1
    240e:	b087      	sub	sp, #28
    2410:	1c04      	adds	r4, r0, #0
    2412:	4680      	mov	r8, r0
    2414:	0d5b      	lsrs	r3, r3, #21
    2416:	0fc8      	lsrs	r0, r1, #31
    2418:	1c16      	adds	r6, r2, #0
    241a:	9302      	str	r3, [sp, #8]
    241c:	4681      	mov	r9, r0
    241e:	2b00      	cmp	r3, #0
    2420:	d068      	beq.n	24f4 <__aeabi_dmul+0xfc>
    2422:	4b69      	ldr	r3, [pc, #420]	; (25c8 <__aeabi_dmul+0x1d0>)
    2424:	9902      	ldr	r1, [sp, #8]
    2426:	4299      	cmp	r1, r3
    2428:	d032      	beq.n	2490 <__aeabi_dmul+0x98>
    242a:	2280      	movs	r2, #128	; 0x80
    242c:	4653      	mov	r3, sl
    242e:	0352      	lsls	r2, r2, #13
    2430:	431a      	orrs	r2, r3
    2432:	00d2      	lsls	r2, r2, #3
    2434:	0f63      	lsrs	r3, r4, #29
    2436:	431a      	orrs	r2, r3
    2438:	4692      	mov	sl, r2
    243a:	4a64      	ldr	r2, [pc, #400]	; (25cc <__aeabi_dmul+0x1d4>)
    243c:	00e0      	lsls	r0, r4, #3
    243e:	1889      	adds	r1, r1, r2
    2440:	4680      	mov	r8, r0
    2442:	9102      	str	r1, [sp, #8]
    2444:	2400      	movs	r4, #0
    2446:	2500      	movs	r5, #0
    2448:	033b      	lsls	r3, r7, #12
    244a:	0b1b      	lsrs	r3, r3, #12
    244c:	469b      	mov	fp, r3
    244e:	0078      	lsls	r0, r7, #1
    2450:	0ffb      	lsrs	r3, r7, #31
    2452:	1c32      	adds	r2, r6, #0
    2454:	0d40      	lsrs	r0, r0, #21
    2456:	9303      	str	r3, [sp, #12]
    2458:	d100      	bne.n	245c <__aeabi_dmul+0x64>
    245a:	e075      	b.n	2548 <__aeabi_dmul+0x150>
    245c:	4b5a      	ldr	r3, [pc, #360]	; (25c8 <__aeabi_dmul+0x1d0>)
    245e:	4298      	cmp	r0, r3
    2460:	d069      	beq.n	2536 <__aeabi_dmul+0x13e>
    2462:	2280      	movs	r2, #128	; 0x80
    2464:	4659      	mov	r1, fp
    2466:	0352      	lsls	r2, r2, #13
    2468:	430a      	orrs	r2, r1
    246a:	0f73      	lsrs	r3, r6, #29
    246c:	00d2      	lsls	r2, r2, #3
    246e:	431a      	orrs	r2, r3
    2470:	4b56      	ldr	r3, [pc, #344]	; (25cc <__aeabi_dmul+0x1d4>)
    2472:	4693      	mov	fp, r2
    2474:	18c0      	adds	r0, r0, r3
    2476:	00f2      	lsls	r2, r6, #3
    2478:	2300      	movs	r3, #0
    247a:	9903      	ldr	r1, [sp, #12]
    247c:	464e      	mov	r6, r9
    247e:	4071      	eors	r1, r6
    2480:	431c      	orrs	r4, r3
    2482:	2c0f      	cmp	r4, #15
    2484:	d900      	bls.n	2488 <__aeabi_dmul+0x90>
    2486:	e0a9      	b.n	25dc <__aeabi_dmul+0x1e4>
    2488:	4e51      	ldr	r6, [pc, #324]	; (25d0 <__aeabi_dmul+0x1d8>)
    248a:	00a4      	lsls	r4, r4, #2
    248c:	5934      	ldr	r4, [r6, r4]
    248e:	46a7      	mov	pc, r4
    2490:	4653      	mov	r3, sl
    2492:	431c      	orrs	r4, r3
    2494:	d000      	beq.n	2498 <__aeabi_dmul+0xa0>
    2496:	e087      	b.n	25a8 <__aeabi_dmul+0x1b0>
    2498:	2500      	movs	r5, #0
    249a:	46aa      	mov	sl, r5
    249c:	46a8      	mov	r8, r5
    249e:	2408      	movs	r4, #8
    24a0:	2502      	movs	r5, #2
    24a2:	e7d1      	b.n	2448 <__aeabi_dmul+0x50>
    24a4:	4649      	mov	r1, r9
    24a6:	2d02      	cmp	r5, #2
    24a8:	d06c      	beq.n	2584 <__aeabi_dmul+0x18c>
    24aa:	2d03      	cmp	r5, #3
    24ac:	d100      	bne.n	24b0 <__aeabi_dmul+0xb8>
    24ae:	e217      	b.n	28e0 <__aeabi_dmul+0x4e8>
    24b0:	2d01      	cmp	r5, #1
    24b2:	d000      	beq.n	24b6 <__aeabi_dmul+0xbe>
    24b4:	e158      	b.n	2768 <__aeabi_dmul+0x370>
    24b6:	400d      	ands	r5, r1
    24b8:	b2ed      	uxtb	r5, r5
    24ba:	2400      	movs	r4, #0
    24bc:	46a9      	mov	r9, r5
    24be:	2300      	movs	r3, #0
    24c0:	46a0      	mov	r8, r4
    24c2:	2000      	movs	r0, #0
    24c4:	2100      	movs	r1, #0
    24c6:	0325      	lsls	r5, r4, #12
    24c8:	0d0a      	lsrs	r2, r1, #20
    24ca:	051c      	lsls	r4, r3, #20
    24cc:	0b2d      	lsrs	r5, r5, #12
    24ce:	0512      	lsls	r2, r2, #20
    24d0:	4b40      	ldr	r3, [pc, #256]	; (25d4 <__aeabi_dmul+0x1dc>)
    24d2:	432a      	orrs	r2, r5
    24d4:	4013      	ands	r3, r2
    24d6:	4323      	orrs	r3, r4
    24d8:	005b      	lsls	r3, r3, #1
    24da:	464c      	mov	r4, r9
    24dc:	085b      	lsrs	r3, r3, #1
    24de:	07e2      	lsls	r2, r4, #31
    24e0:	1c19      	adds	r1, r3, #0
    24e2:	4640      	mov	r0, r8
    24e4:	4311      	orrs	r1, r2
    24e6:	b007      	add	sp, #28
    24e8:	bc3c      	pop	{r2, r3, r4, r5}
    24ea:	4690      	mov	r8, r2
    24ec:	4699      	mov	r9, r3
    24ee:	46a2      	mov	sl, r4
    24f0:	46ab      	mov	fp, r5
    24f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24f4:	4653      	mov	r3, sl
    24f6:	4323      	orrs	r3, r4
    24f8:	d050      	beq.n	259c <__aeabi_dmul+0x1a4>
    24fa:	4653      	mov	r3, sl
    24fc:	2b00      	cmp	r3, #0
    24fe:	d100      	bne.n	2502 <__aeabi_dmul+0x10a>
    2500:	e184      	b.n	280c <__aeabi_dmul+0x414>
    2502:	4650      	mov	r0, sl
    2504:	f000 fb58 	bl	2bb8 <__clzsi2>
    2508:	1e03      	subs	r3, r0, #0
    250a:	2b27      	cmp	r3, #39	; 0x27
    250c:	dd00      	ble.n	2510 <__aeabi_dmul+0x118>
    250e:	e176      	b.n	27fe <__aeabi_dmul+0x406>
    2510:	2128      	movs	r1, #40	; 0x28
    2512:	1a0d      	subs	r5, r1, r0
    2514:	1c21      	adds	r1, r4, #0
    2516:	3b08      	subs	r3, #8
    2518:	4652      	mov	r2, sl
    251a:	40e9      	lsrs	r1, r5
    251c:	409a      	lsls	r2, r3
    251e:	1c0d      	adds	r5, r1, #0
    2520:	4315      	orrs	r5, r2
    2522:	1c22      	adds	r2, r4, #0
    2524:	409a      	lsls	r2, r3
    2526:	46aa      	mov	sl, r5
    2528:	4690      	mov	r8, r2
    252a:	4b2b      	ldr	r3, [pc, #172]	; (25d8 <__aeabi_dmul+0x1e0>)
    252c:	2400      	movs	r4, #0
    252e:	1a1b      	subs	r3, r3, r0
    2530:	9302      	str	r3, [sp, #8]
    2532:	2500      	movs	r5, #0
    2534:	e788      	b.n	2448 <__aeabi_dmul+0x50>
    2536:	465b      	mov	r3, fp
    2538:	431e      	orrs	r6, r3
    253a:	2303      	movs	r3, #3
    253c:	2e00      	cmp	r6, #0
    253e:	d19c      	bne.n	247a <__aeabi_dmul+0x82>
    2540:	46b3      	mov	fp, r6
    2542:	2200      	movs	r2, #0
    2544:	2302      	movs	r3, #2
    2546:	e798      	b.n	247a <__aeabi_dmul+0x82>
    2548:	465b      	mov	r3, fp
    254a:	4333      	orrs	r3, r6
    254c:	d021      	beq.n	2592 <__aeabi_dmul+0x19a>
    254e:	4658      	mov	r0, fp
    2550:	2800      	cmp	r0, #0
    2552:	d100      	bne.n	2556 <__aeabi_dmul+0x15e>
    2554:	e14e      	b.n	27f4 <__aeabi_dmul+0x3fc>
    2556:	f000 fb2f 	bl	2bb8 <__clzsi2>
    255a:	2827      	cmp	r0, #39	; 0x27
    255c:	dd00      	ble.n	2560 <__aeabi_dmul+0x168>
    255e:	e142      	b.n	27e6 <__aeabi_dmul+0x3ee>
    2560:	2128      	movs	r1, #40	; 0x28
    2562:	1a0f      	subs	r7, r1, r0
    2564:	1c02      	adds	r2, r0, #0
    2566:	1c31      	adds	r1, r6, #0
    2568:	3a08      	subs	r2, #8
    256a:	465b      	mov	r3, fp
    256c:	40f9      	lsrs	r1, r7
    256e:	4093      	lsls	r3, r2
    2570:	1c0f      	adds	r7, r1, #0
    2572:	431f      	orrs	r7, r3
    2574:	1c33      	adds	r3, r6, #0
    2576:	4093      	lsls	r3, r2
    2578:	46bb      	mov	fp, r7
    257a:	1c1a      	adds	r2, r3, #0
    257c:	4b16      	ldr	r3, [pc, #88]	; (25d8 <__aeabi_dmul+0x1e0>)
    257e:	1a18      	subs	r0, r3, r0
    2580:	2300      	movs	r3, #0
    2582:	e77a      	b.n	247a <__aeabi_dmul+0x82>
    2584:	2301      	movs	r3, #1
    2586:	400b      	ands	r3, r1
    2588:	2400      	movs	r4, #0
    258a:	4699      	mov	r9, r3
    258c:	46a0      	mov	r8, r4
    258e:	4b0e      	ldr	r3, [pc, #56]	; (25c8 <__aeabi_dmul+0x1d0>)
    2590:	e797      	b.n	24c2 <__aeabi_dmul+0xca>
    2592:	2700      	movs	r7, #0
    2594:	46bb      	mov	fp, r7
    2596:	2200      	movs	r2, #0
    2598:	2301      	movs	r3, #1
    259a:	e76e      	b.n	247a <__aeabi_dmul+0x82>
    259c:	2100      	movs	r1, #0
    259e:	2404      	movs	r4, #4
    25a0:	468a      	mov	sl, r1
    25a2:	4688      	mov	r8, r1
    25a4:	2501      	movs	r5, #1
    25a6:	e74f      	b.n	2448 <__aeabi_dmul+0x50>
    25a8:	240c      	movs	r4, #12
    25aa:	2503      	movs	r5, #3
    25ac:	e74c      	b.n	2448 <__aeabi_dmul+0x50>
    25ae:	2500      	movs	r5, #0
    25b0:	2480      	movs	r4, #128	; 0x80
    25b2:	46a9      	mov	r9, r5
    25b4:	0324      	lsls	r4, r4, #12
    25b6:	46a8      	mov	r8, r5
    25b8:	4b03      	ldr	r3, [pc, #12]	; (25c8 <__aeabi_dmul+0x1d0>)
    25ba:	e782      	b.n	24c2 <__aeabi_dmul+0xca>
    25bc:	46da      	mov	sl, fp
    25be:	4690      	mov	r8, r2
    25c0:	9903      	ldr	r1, [sp, #12]
    25c2:	1c1d      	adds	r5, r3, #0
    25c4:	e76f      	b.n	24a6 <__aeabi_dmul+0xae>
    25c6:	46c0      	nop			; (mov r8, r8)
    25c8:	000007ff 	.word	0x000007ff
    25cc:	fffffc01 	.word	0xfffffc01
    25d0:	000057bc 	.word	0x000057bc
    25d4:	800fffff 	.word	0x800fffff
    25d8:	fffffc0d 	.word	0xfffffc0d
    25dc:	9f02      	ldr	r7, [sp, #8]
    25de:	0c16      	lsrs	r6, r2, #16
    25e0:	1838      	adds	r0, r7, r0
    25e2:	9004      	str	r0, [sp, #16]
    25e4:	4640      	mov	r0, r8
    25e6:	0c07      	lsrs	r7, r0, #16
    25e8:	0400      	lsls	r0, r0, #16
    25ea:	0c00      	lsrs	r0, r0, #16
    25ec:	0412      	lsls	r2, r2, #16
    25ee:	0c12      	lsrs	r2, r2, #16
    25f0:	1c03      	adds	r3, r0, #0
    25f2:	4353      	muls	r3, r2
    25f4:	1c04      	adds	r4, r0, #0
    25f6:	1c3d      	adds	r5, r7, #0
    25f8:	4374      	muls	r4, r6
    25fa:	4355      	muls	r5, r2
    25fc:	4698      	mov	r8, r3
    25fe:	1c3b      	adds	r3, r7, #0
    2600:	4373      	muls	r3, r6
    2602:	1964      	adds	r4, r4, r5
    2604:	46a4      	mov	ip, r4
    2606:	4644      	mov	r4, r8
    2608:	9302      	str	r3, [sp, #8]
    260a:	0c23      	lsrs	r3, r4, #16
    260c:	4463      	add	r3, ip
    260e:	429d      	cmp	r5, r3
    2610:	d904      	bls.n	261c <__aeabi_dmul+0x224>
    2612:	9d02      	ldr	r5, [sp, #8]
    2614:	2480      	movs	r4, #128	; 0x80
    2616:	0264      	lsls	r4, r4, #9
    2618:	192d      	adds	r5, r5, r4
    261a:	9502      	str	r5, [sp, #8]
    261c:	0c1d      	lsrs	r5, r3, #16
    261e:	9503      	str	r5, [sp, #12]
    2620:	4645      	mov	r5, r8
    2622:	042c      	lsls	r4, r5, #16
    2624:	041b      	lsls	r3, r3, #16
    2626:	0c24      	lsrs	r4, r4, #16
    2628:	191c      	adds	r4, r3, r4
    262a:	9405      	str	r4, [sp, #20]
    262c:	465c      	mov	r4, fp
    262e:	0c23      	lsrs	r3, r4, #16
    2630:	1c05      	adds	r5, r0, #0
    2632:	4358      	muls	r0, r3
    2634:	0424      	lsls	r4, r4, #16
    2636:	0c24      	lsrs	r4, r4, #16
    2638:	4684      	mov	ip, r0
    263a:	1c38      	adds	r0, r7, #0
    263c:	4360      	muls	r0, r4
    263e:	4365      	muls	r5, r4
    2640:	435f      	muls	r7, r3
    2642:	4681      	mov	r9, r0
    2644:	44cc      	add	ip, r9
    2646:	0c28      	lsrs	r0, r5, #16
    2648:	4460      	add	r0, ip
    264a:	46bb      	mov	fp, r7
    264c:	4581      	cmp	r9, r0
    264e:	d902      	bls.n	2656 <__aeabi_dmul+0x25e>
    2650:	2780      	movs	r7, #128	; 0x80
    2652:	027f      	lsls	r7, r7, #9
    2654:	44bb      	add	fp, r7
    2656:	042d      	lsls	r5, r5, #16
    2658:	0c07      	lsrs	r7, r0, #16
    265a:	0c2d      	lsrs	r5, r5, #16
    265c:	0400      	lsls	r0, r0, #16
    265e:	1940      	adds	r0, r0, r5
    2660:	4655      	mov	r5, sl
    2662:	46bc      	mov	ip, r7
    2664:	042f      	lsls	r7, r5, #16
    2666:	44e3      	add	fp, ip
    2668:	4684      	mov	ip, r0
    266a:	0c28      	lsrs	r0, r5, #16
    266c:	0c3d      	lsrs	r5, r7, #16
    266e:	1c2f      	adds	r7, r5, #0
    2670:	4357      	muls	r7, r2
    2672:	46b8      	mov	r8, r7
    2674:	1c2f      	adds	r7, r5, #0
    2676:	4377      	muls	r7, r6
    2678:	4342      	muls	r2, r0
    267a:	46b9      	mov	r9, r7
    267c:	4647      	mov	r7, r8
    267e:	0c3f      	lsrs	r7, r7, #16
    2680:	4491      	add	r9, r2
    2682:	46ba      	mov	sl, r7
    2684:	44d1      	add	r9, sl
    2686:	4346      	muls	r6, r0
    2688:	454a      	cmp	r2, r9
    268a:	d902      	bls.n	2692 <__aeabi_dmul+0x29a>
    268c:	2280      	movs	r2, #128	; 0x80
    268e:	0252      	lsls	r2, r2, #9
    2690:	18b6      	adds	r6, r6, r2
    2692:	464f      	mov	r7, r9
    2694:	0c3a      	lsrs	r2, r7, #16
    2696:	18b6      	adds	r6, r6, r2
    2698:	043a      	lsls	r2, r7, #16
    269a:	4647      	mov	r7, r8
    269c:	043f      	lsls	r7, r7, #16
    269e:	0c3f      	lsrs	r7, r7, #16
    26a0:	46b8      	mov	r8, r7
    26a2:	1c2f      	adds	r7, r5, #0
    26a4:	4367      	muls	r7, r4
    26a6:	435d      	muls	r5, r3
    26a8:	4344      	muls	r4, r0
    26aa:	4358      	muls	r0, r3
    26ac:	1965      	adds	r5, r4, r5
    26ae:	9001      	str	r0, [sp, #4]
    26b0:	0c38      	lsrs	r0, r7, #16
    26b2:	182d      	adds	r5, r5, r0
    26b4:	4442      	add	r2, r8
    26b6:	46b8      	mov	r8, r7
    26b8:	42ac      	cmp	r4, r5
    26ba:	d904      	bls.n	26c6 <__aeabi_dmul+0x2ce>
    26bc:	9801      	ldr	r0, [sp, #4]
    26be:	2380      	movs	r3, #128	; 0x80
    26c0:	025b      	lsls	r3, r3, #9
    26c2:	18c0      	adds	r0, r0, r3
    26c4:	9001      	str	r0, [sp, #4]
    26c6:	9c03      	ldr	r4, [sp, #12]
    26c8:	9f02      	ldr	r7, [sp, #8]
    26ca:	1c20      	adds	r0, r4, #0
    26cc:	4460      	add	r0, ip
    26ce:	19c0      	adds	r0, r0, r7
    26d0:	4560      	cmp	r0, ip
    26d2:	41a4      	sbcs	r4, r4
    26d4:	4647      	mov	r7, r8
    26d6:	4264      	negs	r4, r4
    26d8:	46a4      	mov	ip, r4
    26da:	042b      	lsls	r3, r5, #16
    26dc:	043c      	lsls	r4, r7, #16
    26de:	4699      	mov	r9, r3
    26e0:	0c24      	lsrs	r4, r4, #16
    26e2:	444c      	add	r4, r9
    26e4:	46a0      	mov	r8, r4
    26e6:	44d8      	add	r8, fp
    26e8:	1880      	adds	r0, r0, r2
    26ea:	46c2      	mov	sl, r8
    26ec:	44e2      	add	sl, ip
    26ee:	4290      	cmp	r0, r2
    26f0:	4192      	sbcs	r2, r2
    26f2:	4657      	mov	r7, sl
    26f4:	4252      	negs	r2, r2
    26f6:	4691      	mov	r9, r2
    26f8:	19f2      	adds	r2, r6, r7
    26fa:	45e2      	cmp	sl, ip
    26fc:	41bf      	sbcs	r7, r7
    26fe:	427f      	negs	r7, r7
    2700:	464b      	mov	r3, r9
    2702:	46bc      	mov	ip, r7
    2704:	45d8      	cmp	r8, fp
    2706:	41bf      	sbcs	r7, r7
    2708:	18d4      	adds	r4, r2, r3
    270a:	427f      	negs	r7, r7
    270c:	4663      	mov	r3, ip
    270e:	431f      	orrs	r7, r3
    2710:	0c2d      	lsrs	r5, r5, #16
    2712:	197f      	adds	r7, r7, r5
    2714:	42b2      	cmp	r2, r6
    2716:	4192      	sbcs	r2, r2
    2718:	454c      	cmp	r4, r9
    271a:	41ad      	sbcs	r5, r5
    271c:	4252      	negs	r2, r2
    271e:	426d      	negs	r5, r5
    2720:	4315      	orrs	r5, r2
    2722:	9e01      	ldr	r6, [sp, #4]
    2724:	197d      	adds	r5, r7, r5
    2726:	19ab      	adds	r3, r5, r6
    2728:	0de2      	lsrs	r2, r4, #23
    272a:	025b      	lsls	r3, r3, #9
    272c:	9f05      	ldr	r7, [sp, #20]
    272e:	4313      	orrs	r3, r2
    2730:	0242      	lsls	r2, r0, #9
    2732:	433a      	orrs	r2, r7
    2734:	469a      	mov	sl, r3
    2736:	1e53      	subs	r3, r2, #1
    2738:	419a      	sbcs	r2, r3
    273a:	0dc3      	lsrs	r3, r0, #23
    273c:	1c10      	adds	r0, r2, #0
    273e:	4318      	orrs	r0, r3
    2740:	0264      	lsls	r4, r4, #9
    2742:	4320      	orrs	r0, r4
    2744:	4680      	mov	r8, r0
    2746:	4650      	mov	r0, sl
    2748:	01c0      	lsls	r0, r0, #7
    274a:	d50d      	bpl.n	2768 <__aeabi_dmul+0x370>
    274c:	4645      	mov	r5, r8
    274e:	2201      	movs	r2, #1
    2750:	4656      	mov	r6, sl
    2752:	9c04      	ldr	r4, [sp, #16]
    2754:	086b      	lsrs	r3, r5, #1
    2756:	402a      	ands	r2, r5
    2758:	431a      	orrs	r2, r3
    275a:	07f3      	lsls	r3, r6, #31
    275c:	3401      	adds	r4, #1
    275e:	431a      	orrs	r2, r3
    2760:	0876      	lsrs	r6, r6, #1
    2762:	9404      	str	r4, [sp, #16]
    2764:	4690      	mov	r8, r2
    2766:	46b2      	mov	sl, r6
    2768:	9e04      	ldr	r6, [sp, #16]
    276a:	4f63      	ldr	r7, [pc, #396]	; (28f8 <__aeabi_dmul+0x500>)
    276c:	19f3      	adds	r3, r6, r7
    276e:	2b00      	cmp	r3, #0
    2770:	dd61      	ble.n	2836 <__aeabi_dmul+0x43e>
    2772:	4640      	mov	r0, r8
    2774:	0740      	lsls	r0, r0, #29
    2776:	d00b      	beq.n	2790 <__aeabi_dmul+0x398>
    2778:	220f      	movs	r2, #15
    277a:	4644      	mov	r4, r8
    277c:	4022      	ands	r2, r4
    277e:	2a04      	cmp	r2, #4
    2780:	d006      	beq.n	2790 <__aeabi_dmul+0x398>
    2782:	4642      	mov	r2, r8
    2784:	3204      	adds	r2, #4
    2786:	4542      	cmp	r2, r8
    2788:	4180      	sbcs	r0, r0
    278a:	4240      	negs	r0, r0
    278c:	4482      	add	sl, r0
    278e:	4690      	mov	r8, r2
    2790:	4655      	mov	r5, sl
    2792:	01ed      	lsls	r5, r5, #7
    2794:	d507      	bpl.n	27a6 <__aeabi_dmul+0x3ae>
    2796:	4b59      	ldr	r3, [pc, #356]	; (28fc <__aeabi_dmul+0x504>)
    2798:	4656      	mov	r6, sl
    279a:	9f04      	ldr	r7, [sp, #16]
    279c:	2080      	movs	r0, #128	; 0x80
    279e:	401e      	ands	r6, r3
    27a0:	00c0      	lsls	r0, r0, #3
    27a2:	46b2      	mov	sl, r6
    27a4:	183b      	adds	r3, r7, r0
    27a6:	4a56      	ldr	r2, [pc, #344]	; (2900 <__aeabi_dmul+0x508>)
    27a8:	4293      	cmp	r3, r2
    27aa:	dd00      	ble.n	27ae <__aeabi_dmul+0x3b6>
    27ac:	e6ea      	b.n	2584 <__aeabi_dmul+0x18c>
    27ae:	4644      	mov	r4, r8
    27b0:	4655      	mov	r5, sl
    27b2:	08e2      	lsrs	r2, r4, #3
    27b4:	0768      	lsls	r0, r5, #29
    27b6:	4310      	orrs	r0, r2
    27b8:	2201      	movs	r2, #1
    27ba:	026c      	lsls	r4, r5, #9
    27bc:	055b      	lsls	r3, r3, #21
    27be:	400a      	ands	r2, r1
    27c0:	4680      	mov	r8, r0
    27c2:	0b24      	lsrs	r4, r4, #12
    27c4:	0d5b      	lsrs	r3, r3, #21
    27c6:	4691      	mov	r9, r2
    27c8:	e67b      	b.n	24c2 <__aeabi_dmul+0xca>
    27ca:	46da      	mov	sl, fp
    27cc:	4690      	mov	r8, r2
    27ce:	1c1d      	adds	r5, r3, #0
    27d0:	e669      	b.n	24a6 <__aeabi_dmul+0xae>
    27d2:	2480      	movs	r4, #128	; 0x80
    27d4:	0324      	lsls	r4, r4, #12
    27d6:	4657      	mov	r7, sl
    27d8:	4227      	tst	r7, r4
    27da:	d11c      	bne.n	2816 <__aeabi_dmul+0x41e>
    27dc:	433c      	orrs	r4, r7
    27de:	0324      	lsls	r4, r4, #12
    27e0:	0b24      	lsrs	r4, r4, #12
    27e2:	4b48      	ldr	r3, [pc, #288]	; (2904 <__aeabi_dmul+0x50c>)
    27e4:	e66d      	b.n	24c2 <__aeabi_dmul+0xca>
    27e6:	1c03      	adds	r3, r0, #0
    27e8:	3b28      	subs	r3, #40	; 0x28
    27ea:	1c31      	adds	r1, r6, #0
    27ec:	4099      	lsls	r1, r3
    27ee:	468b      	mov	fp, r1
    27f0:	2200      	movs	r2, #0
    27f2:	e6c3      	b.n	257c <__aeabi_dmul+0x184>
    27f4:	1c30      	adds	r0, r6, #0
    27f6:	f000 f9df 	bl	2bb8 <__clzsi2>
    27fa:	3020      	adds	r0, #32
    27fc:	e6ad      	b.n	255a <__aeabi_dmul+0x162>
    27fe:	3b28      	subs	r3, #40	; 0x28
    2800:	1c21      	adds	r1, r4, #0
    2802:	4099      	lsls	r1, r3
    2804:	2200      	movs	r2, #0
    2806:	468a      	mov	sl, r1
    2808:	4690      	mov	r8, r2
    280a:	e68e      	b.n	252a <__aeabi_dmul+0x132>
    280c:	1c20      	adds	r0, r4, #0
    280e:	f000 f9d3 	bl	2bb8 <__clzsi2>
    2812:	3020      	adds	r0, #32
    2814:	e678      	b.n	2508 <__aeabi_dmul+0x110>
    2816:	4658      	mov	r0, fp
    2818:	4220      	tst	r0, r4
    281a:	d107      	bne.n	282c <__aeabi_dmul+0x434>
    281c:	4304      	orrs	r4, r0
    281e:	9903      	ldr	r1, [sp, #12]
    2820:	0324      	lsls	r4, r4, #12
    2822:	0b24      	lsrs	r4, r4, #12
    2824:	4689      	mov	r9, r1
    2826:	4690      	mov	r8, r2
    2828:	4b36      	ldr	r3, [pc, #216]	; (2904 <__aeabi_dmul+0x50c>)
    282a:	e64a      	b.n	24c2 <__aeabi_dmul+0xca>
    282c:	433c      	orrs	r4, r7
    282e:	0324      	lsls	r4, r4, #12
    2830:	0b24      	lsrs	r4, r4, #12
    2832:	4b34      	ldr	r3, [pc, #208]	; (2904 <__aeabi_dmul+0x50c>)
    2834:	e645      	b.n	24c2 <__aeabi_dmul+0xca>
    2836:	4b34      	ldr	r3, [pc, #208]	; (2908 <__aeabi_dmul+0x510>)
    2838:	9e04      	ldr	r6, [sp, #16]
    283a:	1b9b      	subs	r3, r3, r6
    283c:	2b38      	cmp	r3, #56	; 0x38
    283e:	dd06      	ble.n	284e <__aeabi_dmul+0x456>
    2840:	2301      	movs	r3, #1
    2842:	400b      	ands	r3, r1
    2844:	2400      	movs	r4, #0
    2846:	4699      	mov	r9, r3
    2848:	46a0      	mov	r8, r4
    284a:	2300      	movs	r3, #0
    284c:	e639      	b.n	24c2 <__aeabi_dmul+0xca>
    284e:	2b1f      	cmp	r3, #31
    2850:	dc25      	bgt.n	289e <__aeabi_dmul+0x4a6>
    2852:	9c04      	ldr	r4, [sp, #16]
    2854:	4d2d      	ldr	r5, [pc, #180]	; (290c <__aeabi_dmul+0x514>)
    2856:	4646      	mov	r6, r8
    2858:	1960      	adds	r0, r4, r5
    285a:	4652      	mov	r2, sl
    285c:	4644      	mov	r4, r8
    285e:	4086      	lsls	r6, r0
    2860:	40dc      	lsrs	r4, r3
    2862:	4082      	lsls	r2, r0
    2864:	4657      	mov	r7, sl
    2866:	1c30      	adds	r0, r6, #0
    2868:	4322      	orrs	r2, r4
    286a:	40df      	lsrs	r7, r3
    286c:	1e44      	subs	r4, r0, #1
    286e:	41a0      	sbcs	r0, r4
    2870:	4302      	orrs	r2, r0
    2872:	1c3b      	adds	r3, r7, #0
    2874:	0754      	lsls	r4, r2, #29
    2876:	d009      	beq.n	288c <__aeabi_dmul+0x494>
    2878:	200f      	movs	r0, #15
    287a:	4010      	ands	r0, r2
    287c:	2804      	cmp	r0, #4
    287e:	d005      	beq.n	288c <__aeabi_dmul+0x494>
    2880:	1d10      	adds	r0, r2, #4
    2882:	4290      	cmp	r0, r2
    2884:	4192      	sbcs	r2, r2
    2886:	4252      	negs	r2, r2
    2888:	189b      	adds	r3, r3, r2
    288a:	1c02      	adds	r2, r0, #0
    288c:	021d      	lsls	r5, r3, #8
    288e:	d51a      	bpl.n	28c6 <__aeabi_dmul+0x4ce>
    2890:	2301      	movs	r3, #1
    2892:	400b      	ands	r3, r1
    2894:	2400      	movs	r4, #0
    2896:	4699      	mov	r9, r3
    2898:	46a0      	mov	r8, r4
    289a:	2301      	movs	r3, #1
    289c:	e611      	b.n	24c2 <__aeabi_dmul+0xca>
    289e:	481c      	ldr	r0, [pc, #112]	; (2910 <__aeabi_dmul+0x518>)
    28a0:	9c04      	ldr	r4, [sp, #16]
    28a2:	4655      	mov	r5, sl
    28a4:	1b00      	subs	r0, r0, r4
    28a6:	40c5      	lsrs	r5, r0
    28a8:	1c28      	adds	r0, r5, #0
    28aa:	2b20      	cmp	r3, #32
    28ac:	d016      	beq.n	28dc <__aeabi_dmul+0x4e4>
    28ae:	4e19      	ldr	r6, [pc, #100]	; (2914 <__aeabi_dmul+0x51c>)
    28b0:	4657      	mov	r7, sl
    28b2:	19a2      	adds	r2, r4, r6
    28b4:	4097      	lsls	r7, r2
    28b6:	1c3a      	adds	r2, r7, #0
    28b8:	4643      	mov	r3, r8
    28ba:	431a      	orrs	r2, r3
    28bc:	1e53      	subs	r3, r2, #1
    28be:	419a      	sbcs	r2, r3
    28c0:	4302      	orrs	r2, r0
    28c2:	2300      	movs	r3, #0
    28c4:	e7d6      	b.n	2874 <__aeabi_dmul+0x47c>
    28c6:	0758      	lsls	r0, r3, #29
    28c8:	025b      	lsls	r3, r3, #9
    28ca:	08d2      	lsrs	r2, r2, #3
    28cc:	0b1c      	lsrs	r4, r3, #12
    28ce:	2301      	movs	r3, #1
    28d0:	400b      	ands	r3, r1
    28d2:	4310      	orrs	r0, r2
    28d4:	4699      	mov	r9, r3
    28d6:	4680      	mov	r8, r0
    28d8:	2300      	movs	r3, #0
    28da:	e5f2      	b.n	24c2 <__aeabi_dmul+0xca>
    28dc:	2200      	movs	r2, #0
    28de:	e7eb      	b.n	28b8 <__aeabi_dmul+0x4c0>
    28e0:	2480      	movs	r4, #128	; 0x80
    28e2:	0324      	lsls	r4, r4, #12
    28e4:	4650      	mov	r0, sl
    28e6:	2301      	movs	r3, #1
    28e8:	4304      	orrs	r4, r0
    28ea:	4019      	ands	r1, r3
    28ec:	0324      	lsls	r4, r4, #12
    28ee:	0b24      	lsrs	r4, r4, #12
    28f0:	4689      	mov	r9, r1
    28f2:	4b04      	ldr	r3, [pc, #16]	; (2904 <__aeabi_dmul+0x50c>)
    28f4:	e5e5      	b.n	24c2 <__aeabi_dmul+0xca>
    28f6:	46c0      	nop			; (mov r8, r8)
    28f8:	000003ff 	.word	0x000003ff
    28fc:	feffffff 	.word	0xfeffffff
    2900:	000007fe 	.word	0x000007fe
    2904:	000007ff 	.word	0x000007ff
    2908:	fffffc02 	.word	0xfffffc02
    290c:	0000041e 	.word	0x0000041e
    2910:	fffffbe2 	.word	0xfffffbe2
    2914:	0000043e 	.word	0x0000043e

00002918 <__aeabi_d2iz>:
__aeabi_d2iz():
    2918:	b570      	push	{r4, r5, r6, lr}
    291a:	1c0b      	adds	r3, r1, #0
    291c:	4c12      	ldr	r4, [pc, #72]	; (2968 <__aeabi_d2iz+0x50>)
    291e:	0309      	lsls	r1, r1, #12
    2920:	0b0e      	lsrs	r6, r1, #12
    2922:	0059      	lsls	r1, r3, #1
    2924:	1c02      	adds	r2, r0, #0
    2926:	0d49      	lsrs	r1, r1, #21
    2928:	0fdd      	lsrs	r5, r3, #31
    292a:	2000      	movs	r0, #0
    292c:	42a1      	cmp	r1, r4
    292e:	dd11      	ble.n	2954 <__aeabi_d2iz+0x3c>
    2930:	480e      	ldr	r0, [pc, #56]	; (296c <__aeabi_d2iz+0x54>)
    2932:	4281      	cmp	r1, r0
    2934:	dc0f      	bgt.n	2956 <__aeabi_d2iz+0x3e>
    2936:	2080      	movs	r0, #128	; 0x80
    2938:	0340      	lsls	r0, r0, #13
    293a:	4306      	orrs	r6, r0
    293c:	480c      	ldr	r0, [pc, #48]	; (2970 <__aeabi_d2iz+0x58>)
    293e:	1a40      	subs	r0, r0, r1
    2940:	281f      	cmp	r0, #31
    2942:	dd0b      	ble.n	295c <__aeabi_d2iz+0x44>
    2944:	4a0b      	ldr	r2, [pc, #44]	; (2974 <__aeabi_d2iz+0x5c>)
    2946:	1a52      	subs	r2, r2, r1
    2948:	40d6      	lsrs	r6, r2
    294a:	1c32      	adds	r2, r6, #0
    294c:	4250      	negs	r0, r2
    294e:	2d00      	cmp	r5, #0
    2950:	d100      	bne.n	2954 <__aeabi_d2iz+0x3c>
    2952:	1c10      	adds	r0, r2, #0
    2954:	bd70      	pop	{r4, r5, r6, pc}
    2956:	4b08      	ldr	r3, [pc, #32]	; (2978 <__aeabi_d2iz+0x60>)
    2958:	18e8      	adds	r0, r5, r3
    295a:	e7fb      	b.n	2954 <__aeabi_d2iz+0x3c>
    295c:	4b07      	ldr	r3, [pc, #28]	; (297c <__aeabi_d2iz+0x64>)
    295e:	40c2      	lsrs	r2, r0
    2960:	18c9      	adds	r1, r1, r3
    2962:	408e      	lsls	r6, r1
    2964:	4332      	orrs	r2, r6
    2966:	e7f1      	b.n	294c <__aeabi_d2iz+0x34>
    2968:	000003fe 	.word	0x000003fe
    296c:	0000041d 	.word	0x0000041d
    2970:	00000433 	.word	0x00000433
    2974:	00000413 	.word	0x00000413
    2978:	7fffffff 	.word	0x7fffffff
    297c:	fffffbed 	.word	0xfffffbed

00002980 <__aeabi_i2d>:
__aeabi_i2d():
    2980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2982:	1e04      	subs	r4, r0, #0
    2984:	d031      	beq.n	29ea <__aeabi_i2d+0x6a>
    2986:	0fc7      	lsrs	r7, r0, #31
    2988:	d000      	beq.n	298c <__aeabi_i2d+0xc>
    298a:	4244      	negs	r4, r0
    298c:	1c20      	adds	r0, r4, #0
    298e:	f000 f913 	bl	2bb8 <__clzsi2>
    2992:	4d18      	ldr	r5, [pc, #96]	; (29f4 <__aeabi_i2d+0x74>)
    2994:	1a2d      	subs	r5, r5, r0
    2996:	280a      	cmp	r0, #10
    2998:	dd19      	ble.n	29ce <__aeabi_i2d+0x4e>
    299a:	380b      	subs	r0, #11
    299c:	4084      	lsls	r4, r0
    299e:	0324      	lsls	r4, r4, #12
    29a0:	056d      	lsls	r5, r5, #21
    29a2:	0b24      	lsrs	r4, r4, #12
    29a4:	0d6d      	lsrs	r5, r5, #21
    29a6:	1c3a      	adds	r2, r7, #0
    29a8:	2600      	movs	r6, #0
    29aa:	2000      	movs	r0, #0
    29ac:	2100      	movs	r1, #0
    29ae:	0d0b      	lsrs	r3, r1, #20
    29b0:	0324      	lsls	r4, r4, #12
    29b2:	0b24      	lsrs	r4, r4, #12
    29b4:	051b      	lsls	r3, r3, #20
    29b6:	4323      	orrs	r3, r4
    29b8:	4c0f      	ldr	r4, [pc, #60]	; (29f8 <__aeabi_i2d+0x78>)
    29ba:	052d      	lsls	r5, r5, #20
    29bc:	401c      	ands	r4, r3
    29be:	432c      	orrs	r4, r5
    29c0:	0064      	lsls	r4, r4, #1
    29c2:	0864      	lsrs	r4, r4, #1
    29c4:	07d3      	lsls	r3, r2, #31
    29c6:	1c21      	adds	r1, r4, #0
    29c8:	1c30      	adds	r0, r6, #0
    29ca:	4319      	orrs	r1, r3
    29cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    29ce:	1c06      	adds	r6, r0, #0
    29d0:	3615      	adds	r6, #21
    29d2:	1c23      	adds	r3, r4, #0
    29d4:	40b3      	lsls	r3, r6
    29d6:	1c1e      	adds	r6, r3, #0
    29d8:	230b      	movs	r3, #11
    29da:	1a18      	subs	r0, r3, r0
    29dc:	40c4      	lsrs	r4, r0
    29de:	0324      	lsls	r4, r4, #12
    29e0:	056d      	lsls	r5, r5, #21
    29e2:	0b24      	lsrs	r4, r4, #12
    29e4:	0d6d      	lsrs	r5, r5, #21
    29e6:	1c3a      	adds	r2, r7, #0
    29e8:	e7df      	b.n	29aa <__aeabi_i2d+0x2a>
    29ea:	2200      	movs	r2, #0
    29ec:	2500      	movs	r5, #0
    29ee:	2400      	movs	r4, #0
    29f0:	2600      	movs	r6, #0
    29f2:	e7da      	b.n	29aa <__aeabi_i2d+0x2a>
    29f4:	0000041e 	.word	0x0000041e
    29f8:	800fffff 	.word	0x800fffff

000029fc <__aeabi_f2d>:
__aeabi_f2d():
    29fc:	0043      	lsls	r3, r0, #1
    29fe:	0e1b      	lsrs	r3, r3, #24
    2a00:	1c5a      	adds	r2, r3, #1
    2a02:	0241      	lsls	r1, r0, #9
    2a04:	b2d2      	uxtb	r2, r2
    2a06:	b570      	push	{r4, r5, r6, lr}
    2a08:	0a4c      	lsrs	r4, r1, #9
    2a0a:	0fc5      	lsrs	r5, r0, #31
    2a0c:	2a01      	cmp	r2, #1
    2a0e:	dd17      	ble.n	2a40 <__aeabi_f2d+0x44>
    2a10:	22e0      	movs	r2, #224	; 0xe0
    2a12:	0092      	lsls	r2, r2, #2
    2a14:	0764      	lsls	r4, r4, #29
    2a16:	0b09      	lsrs	r1, r1, #12
    2a18:	1898      	adds	r0, r3, r2
    2a1a:	2200      	movs	r2, #0
    2a1c:	2300      	movs	r3, #0
    2a1e:	0d1e      	lsrs	r6, r3, #20
    2a20:	1c22      	adds	r2, r4, #0
    2a22:	0534      	lsls	r4, r6, #20
    2a24:	430c      	orrs	r4, r1
    2a26:	491b      	ldr	r1, [pc, #108]	; (2a94 <__aeabi_f2d+0x98>)
    2a28:	0540      	lsls	r0, r0, #21
    2a2a:	0840      	lsrs	r0, r0, #1
    2a2c:	4021      	ands	r1, r4
    2a2e:	4301      	orrs	r1, r0
    2a30:	0049      	lsls	r1, r1, #1
    2a32:	0849      	lsrs	r1, r1, #1
    2a34:	07ed      	lsls	r5, r5, #31
    2a36:	1c0b      	adds	r3, r1, #0
    2a38:	432b      	orrs	r3, r5
    2a3a:	1c10      	adds	r0, r2, #0
    2a3c:	1c19      	adds	r1, r3, #0
    2a3e:	bd70      	pop	{r4, r5, r6, pc}
    2a40:	2b00      	cmp	r3, #0
    2a42:	d115      	bne.n	2a70 <__aeabi_f2d+0x74>
    2a44:	2c00      	cmp	r4, #0
    2a46:	d01c      	beq.n	2a82 <__aeabi_f2d+0x86>
    2a48:	1c20      	adds	r0, r4, #0
    2a4a:	f000 f8b5 	bl	2bb8 <__clzsi2>
    2a4e:	280a      	cmp	r0, #10
    2a50:	dc1a      	bgt.n	2a88 <__aeabi_f2d+0x8c>
    2a52:	210b      	movs	r1, #11
    2a54:	1a09      	subs	r1, r1, r0
    2a56:	1c23      	adds	r3, r4, #0
    2a58:	40cb      	lsrs	r3, r1
    2a5a:	1c19      	adds	r1, r3, #0
    2a5c:	1c03      	adds	r3, r0, #0
    2a5e:	3315      	adds	r3, #21
    2a60:	409c      	lsls	r4, r3
    2a62:	4b0d      	ldr	r3, [pc, #52]	; (2a98 <__aeabi_f2d+0x9c>)
    2a64:	0309      	lsls	r1, r1, #12
    2a66:	1a18      	subs	r0, r3, r0
    2a68:	0540      	lsls	r0, r0, #21
    2a6a:	0b09      	lsrs	r1, r1, #12
    2a6c:	0d40      	lsrs	r0, r0, #21
    2a6e:	e7d4      	b.n	2a1a <__aeabi_f2d+0x1e>
    2a70:	2c00      	cmp	r4, #0
    2a72:	d003      	beq.n	2a7c <__aeabi_f2d+0x80>
    2a74:	0764      	lsls	r4, r4, #29
    2a76:	0b09      	lsrs	r1, r1, #12
    2a78:	4808      	ldr	r0, [pc, #32]	; (2a9c <__aeabi_f2d+0xa0>)
    2a7a:	e7ce      	b.n	2a1a <__aeabi_f2d+0x1e>
    2a7c:	4807      	ldr	r0, [pc, #28]	; (2a9c <__aeabi_f2d+0xa0>)
    2a7e:	2100      	movs	r1, #0
    2a80:	e7cb      	b.n	2a1a <__aeabi_f2d+0x1e>
    2a82:	2000      	movs	r0, #0
    2a84:	2100      	movs	r1, #0
    2a86:	e7c8      	b.n	2a1a <__aeabi_f2d+0x1e>
    2a88:	1c01      	adds	r1, r0, #0
    2a8a:	390b      	subs	r1, #11
    2a8c:	408c      	lsls	r4, r1
    2a8e:	1c21      	adds	r1, r4, #0
    2a90:	2400      	movs	r4, #0
    2a92:	e7e6      	b.n	2a62 <__aeabi_f2d+0x66>
    2a94:	800fffff 	.word	0x800fffff
    2a98:	00000389 	.word	0x00000389
    2a9c:	000007ff 	.word	0x000007ff

00002aa0 <__aeabi_d2f>:
__aeabi_d2f():
    2aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2aa2:	004b      	lsls	r3, r1, #1
    2aa4:	030d      	lsls	r5, r1, #12
    2aa6:	0f42      	lsrs	r2, r0, #29
    2aa8:	0d5b      	lsrs	r3, r3, #21
    2aaa:	0a6d      	lsrs	r5, r5, #9
    2aac:	4315      	orrs	r5, r2
    2aae:	1c5a      	adds	r2, r3, #1
    2ab0:	0552      	lsls	r2, r2, #21
    2ab2:	0fcc      	lsrs	r4, r1, #31
    2ab4:	00c6      	lsls	r6, r0, #3
    2ab6:	0d52      	lsrs	r2, r2, #21
    2ab8:	2a01      	cmp	r2, #1
    2aba:	dd27      	ble.n	2b0c <__aeabi_d2f+0x6c>
    2abc:	4f39      	ldr	r7, [pc, #228]	; (2ba4 <__aeabi_d2f+0x104>)
    2abe:	19da      	adds	r2, r3, r7
    2ac0:	2afe      	cmp	r2, #254	; 0xfe
    2ac2:	dc1a      	bgt.n	2afa <__aeabi_d2f+0x5a>
    2ac4:	2a00      	cmp	r2, #0
    2ac6:	dd35      	ble.n	2b34 <__aeabi_d2f+0x94>
    2ac8:	0180      	lsls	r0, r0, #6
    2aca:	00ed      	lsls	r5, r5, #3
    2acc:	1e43      	subs	r3, r0, #1
    2ace:	4198      	sbcs	r0, r3
    2ad0:	4328      	orrs	r0, r5
    2ad2:	0f76      	lsrs	r6, r6, #29
    2ad4:	4330      	orrs	r0, r6
    2ad6:	0743      	lsls	r3, r0, #29
    2ad8:	d004      	beq.n	2ae4 <__aeabi_d2f+0x44>
    2ada:	230f      	movs	r3, #15
    2adc:	4003      	ands	r3, r0
    2ade:	2b04      	cmp	r3, #4
    2ae0:	d000      	beq.n	2ae4 <__aeabi_d2f+0x44>
    2ae2:	3004      	adds	r0, #4
    2ae4:	2180      	movs	r1, #128	; 0x80
    2ae6:	04c9      	lsls	r1, r1, #19
    2ae8:	4001      	ands	r1, r0
    2aea:	d027      	beq.n	2b3c <__aeabi_d2f+0x9c>
    2aec:	3201      	adds	r2, #1
    2aee:	2aff      	cmp	r2, #255	; 0xff
    2af0:	d01d      	beq.n	2b2e <__aeabi_d2f+0x8e>
    2af2:	0183      	lsls	r3, r0, #6
    2af4:	0a5b      	lsrs	r3, r3, #9
    2af6:	b2d1      	uxtb	r1, r2
    2af8:	e001      	b.n	2afe <__aeabi_d2f+0x5e>
    2afa:	21ff      	movs	r1, #255	; 0xff
    2afc:	2300      	movs	r3, #0
    2afe:	0258      	lsls	r0, r3, #9
    2b00:	05c9      	lsls	r1, r1, #23
    2b02:	0a40      	lsrs	r0, r0, #9
    2b04:	07e4      	lsls	r4, r4, #31
    2b06:	4308      	orrs	r0, r1
    2b08:	4320      	orrs	r0, r4
    2b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b0c:	2b00      	cmp	r3, #0
    2b0e:	d106      	bne.n	2b1e <__aeabi_d2f+0x7e>
    2b10:	4335      	orrs	r5, r6
    2b12:	d111      	bne.n	2b38 <__aeabi_d2f+0x98>
    2b14:	2100      	movs	r1, #0
    2b16:	2000      	movs	r0, #0
    2b18:	0243      	lsls	r3, r0, #9
    2b1a:	0a5b      	lsrs	r3, r3, #9
    2b1c:	e7ef      	b.n	2afe <__aeabi_d2f+0x5e>
    2b1e:	432e      	orrs	r6, r5
    2b20:	d0eb      	beq.n	2afa <__aeabi_d2f+0x5a>
    2b22:	2080      	movs	r0, #128	; 0x80
    2b24:	00ed      	lsls	r5, r5, #3
    2b26:	0480      	lsls	r0, r0, #18
    2b28:	4328      	orrs	r0, r5
    2b2a:	22ff      	movs	r2, #255	; 0xff
    2b2c:	e7d3      	b.n	2ad6 <__aeabi_d2f+0x36>
    2b2e:	21ff      	movs	r1, #255	; 0xff
    2b30:	2300      	movs	r3, #0
    2b32:	e7e4      	b.n	2afe <__aeabi_d2f+0x5e>
    2b34:	3217      	adds	r2, #23
    2b36:	da0d      	bge.n	2b54 <__aeabi_d2f+0xb4>
    2b38:	2005      	movs	r0, #5
    2b3a:	2200      	movs	r2, #0
    2b3c:	08c0      	lsrs	r0, r0, #3
    2b3e:	b2d1      	uxtb	r1, r2
    2b40:	2aff      	cmp	r2, #255	; 0xff
    2b42:	d1e9      	bne.n	2b18 <__aeabi_d2f+0x78>
    2b44:	2800      	cmp	r0, #0
    2b46:	d0d9      	beq.n	2afc <__aeabi_d2f+0x5c>
    2b48:	2380      	movs	r3, #128	; 0x80
    2b4a:	03db      	lsls	r3, r3, #15
    2b4c:	4303      	orrs	r3, r0
    2b4e:	025b      	lsls	r3, r3, #9
    2b50:	0a5b      	lsrs	r3, r3, #9
    2b52:	e7d4      	b.n	2afe <__aeabi_d2f+0x5e>
    2b54:	2280      	movs	r2, #128	; 0x80
    2b56:	4914      	ldr	r1, [pc, #80]	; (2ba8 <__aeabi_d2f+0x108>)
    2b58:	0412      	lsls	r2, r2, #16
    2b5a:	4315      	orrs	r5, r2
    2b5c:	1ac9      	subs	r1, r1, r3
    2b5e:	291f      	cmp	r1, #31
    2b60:	dc0d      	bgt.n	2b7e <__aeabi_d2f+0xde>
    2b62:	4a12      	ldr	r2, [pc, #72]	; (2bac <__aeabi_d2f+0x10c>)
    2b64:	1c37      	adds	r7, r6, #0
    2b66:	189b      	adds	r3, r3, r2
    2b68:	1c28      	adds	r0, r5, #0
    2b6a:	409f      	lsls	r7, r3
    2b6c:	4098      	lsls	r0, r3
    2b6e:	1c3b      	adds	r3, r7, #0
    2b70:	1e5a      	subs	r2, r3, #1
    2b72:	4193      	sbcs	r3, r2
    2b74:	4318      	orrs	r0, r3
    2b76:	40ce      	lsrs	r6, r1
    2b78:	4330      	orrs	r0, r6
    2b7a:	2200      	movs	r2, #0
    2b7c:	e7ab      	b.n	2ad6 <__aeabi_d2f+0x36>
    2b7e:	4f0c      	ldr	r7, [pc, #48]	; (2bb0 <__aeabi_d2f+0x110>)
    2b80:	1c2a      	adds	r2, r5, #0
    2b82:	1aff      	subs	r7, r7, r3
    2b84:	40fa      	lsrs	r2, r7
    2b86:	1c17      	adds	r7, r2, #0
    2b88:	2920      	cmp	r1, #32
    2b8a:	d009      	beq.n	2ba0 <__aeabi_d2f+0x100>
    2b8c:	4a09      	ldr	r2, [pc, #36]	; (2bb4 <__aeabi_d2f+0x114>)
    2b8e:	1898      	adds	r0, r3, r2
    2b90:	4085      	lsls	r5, r0
    2b92:	1c28      	adds	r0, r5, #0
    2b94:	4330      	orrs	r0, r6
    2b96:	1e46      	subs	r6, r0, #1
    2b98:	41b0      	sbcs	r0, r6
    2b9a:	4338      	orrs	r0, r7
    2b9c:	2200      	movs	r2, #0
    2b9e:	e79a      	b.n	2ad6 <__aeabi_d2f+0x36>
    2ba0:	2000      	movs	r0, #0
    2ba2:	e7f7      	b.n	2b94 <__aeabi_d2f+0xf4>
    2ba4:	fffffc80 	.word	0xfffffc80
    2ba8:	0000039e 	.word	0x0000039e
    2bac:	fffffc82 	.word	0xfffffc82
    2bb0:	0000037e 	.word	0x0000037e
    2bb4:	fffffca2 	.word	0xfffffca2

00002bb8 <__clzsi2>:
__clzsi2():
    2bb8:	211c      	movs	r1, #28
    2bba:	2301      	movs	r3, #1
    2bbc:	041b      	lsls	r3, r3, #16
    2bbe:	4298      	cmp	r0, r3
    2bc0:	d301      	bcc.n	2bc6 <__clzsi2+0xe>
    2bc2:	0c00      	lsrs	r0, r0, #16
    2bc4:	3910      	subs	r1, #16
    2bc6:	0a1b      	lsrs	r3, r3, #8
    2bc8:	4298      	cmp	r0, r3
    2bca:	d301      	bcc.n	2bd0 <__clzsi2+0x18>
    2bcc:	0a00      	lsrs	r0, r0, #8
    2bce:	3908      	subs	r1, #8
    2bd0:	091b      	lsrs	r3, r3, #4
    2bd2:	4298      	cmp	r0, r3
    2bd4:	d301      	bcc.n	2bda <__clzsi2+0x22>
    2bd6:	0900      	lsrs	r0, r0, #4
    2bd8:	3904      	subs	r1, #4
    2bda:	a202      	add	r2, pc, #8	; (adr r2, 2be4 <__clzsi2+0x2c>)
    2bdc:	5c10      	ldrb	r0, [r2, r0]
    2bde:	1840      	adds	r0, r0, r1
    2be0:	4770      	bx	lr
    2be2:	46c0      	nop			; (mov r8, r8)
    2be4:	02020304 	.word	0x02020304
    2be8:	01010101 	.word	0x01010101
	...

00002bf4 <updateBatteryLevel>:
updateBatteryLevel():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:11
 */

#include "BatteryController.h"

void updateBatteryLevel()
{
    2bf4:	b580      	push	{r7, lr}
    2bf6:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:12
	handlingPowerUpdate = TRUE;
    2bf8:	4b07      	ldr	r3, [pc, #28]	; (2c18 <updateBatteryLevel+0x24>)
    2bfa:	2201      	movs	r2, #1
    2bfc:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:15

	// Converts the voltage vOut of PTE29 pin
	AD_Converter_MeasureChan(FALSE, 1);
    2bfe:	2000      	movs	r0, #0
    2c00:	2101      	movs	r1, #1
    2c02:	f000 ff05 	bl	3a10 <AD_Converter_MeasureChan>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:18

	// Waits the end of conversion
	while (handlingPowerUpdate);
    2c06:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:18 (discriminator 1)
    2c08:	4b03      	ldr	r3, [pc, #12]	; (2c18 <updateBatteryLevel+0x24>)
    2c0a:	781b      	ldrb	r3, [r3, #0]
    2c0c:	b2db      	uxtb	r3, r3
    2c0e:	2b00      	cmp	r3, #0
    2c10:	d1fa      	bne.n	2c08 <updateBatteryLevel+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:19
}
    2c12:	46bd      	mov	sp, r7
    2c14:	bd80      	pop	{r7, pc}
    2c16:	46c0      	nop			; (mov r8, r8)
    2c18:	1ffff1a8 	.word	0x1ffff1a8
$d():
    2c1c:	00000000 	.word	0x00000000

00002c20 <updatePowerState>:
updatePowerState():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:22

void updatePowerState()
{
    2c20:	b590      	push	{r4, r7, lr}
    2c22:	b085      	sub	sp, #20
    2c24:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:27
	unsigned char adcValue;
	float vOut;
	float newVoltage;

	AD_Converter_GetChanValue(1, &adcValue);
    2c26:	1cfb      	adds	r3, r7, #3
    2c28:	2001      	movs	r0, #1
    2c2a:	1c19      	adds	r1, r3, #0
    2c2c:	f000 ff22 	bl	3a74 <AD_Converter_GetChanValue>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:30

	// Find the value of vOut
	vOut = (2.87 / 255) * (float) adcValue; // Theoretical value: 3.0
    2c30:	1cfb      	adds	r3, r7, #3
    2c32:	781b      	ldrb	r3, [r3, #0]
    2c34:	1c18      	adds	r0, r3, #0
    2c36:	f7fe fc03 	bl	1440 <__aeabi_ui2f>
    2c3a:	1c03      	adds	r3, r0, #0
    2c3c:	1c18      	adds	r0, r3, #0
    2c3e:	f7ff fedd 	bl	29fc <__aeabi_f2d>
    2c42:	1c03      	adds	r3, r0, #0
    2c44:	1c0c      	adds	r4, r1, #0
    2c46:	1c18      	adds	r0, r3, #0
    2c48:	1c21      	adds	r1, r4, #0
    2c4a:	4b72      	ldr	r3, [pc, #456]	; (2e14 <updatePowerState+0x1f4>)
    2c4c:	4a70      	ldr	r2, [pc, #448]	; (2e10 <updatePowerState+0x1f0>)
    2c4e:	f7ff fbd3 	bl	23f8 <__aeabi_dmul>
    2c52:	1c03      	adds	r3, r0, #0
    2c54:	1c0c      	adds	r4, r1, #0
    2c56:	1c18      	adds	r0, r3, #0
    2c58:	1c21      	adds	r1, r4, #0
    2c5a:	f7ff ff21 	bl	2aa0 <__aeabi_d2f>
    2c5e:	1c03      	adds	r3, r0, #0
    2c60:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:34


	// Find the value of batteryLevel (voltage of battery)
	newVoltage = 5.7 * vOut;			// Theoretical value: 57/10
    2c62:	68b8      	ldr	r0, [r7, #8]
    2c64:	f7ff feca 	bl	29fc <__aeabi_f2d>
    2c68:	1c03      	adds	r3, r0, #0
    2c6a:	1c0c      	adds	r4, r1, #0
    2c6c:	1c18      	adds	r0, r3, #0
    2c6e:	1c21      	adds	r1, r4, #0
    2c70:	4a69      	ldr	r2, [pc, #420]	; (2e18 <updatePowerState+0x1f8>)
    2c72:	4b6a      	ldr	r3, [pc, #424]	; (2e1c <updatePowerState+0x1fc>)
    2c74:	f7ff fbc0 	bl	23f8 <__aeabi_dmul>
    2c78:	1c03      	adds	r3, r0, #0
    2c7a:	1c0c      	adds	r4, r1, #0
    2c7c:	1c18      	adds	r0, r3, #0
    2c7e:	1c21      	adds	r1, r4, #0
    2c80:	f7ff ff0e 	bl	2aa0 <__aeabi_d2f>
    2c84:	1c03      	adds	r3, r0, #0
    2c86:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:36

	batteryLevel = (batteryLevel + newVoltage) / 2;
    2c88:	4b6b      	ldr	r3, [pc, #428]	; (2e38 <updatePowerState+0x218>)
    2c8a:	681b      	ldr	r3, [r3, #0]
    2c8c:	1c18      	adds	r0, r3, #0
    2c8e:	6879      	ldr	r1, [r7, #4]
    2c90:	f7fd fd6a 	bl	768 <__aeabi_fadd>
    2c94:	1c03      	adds	r3, r0, #0
    2c96:	1c18      	adds	r0, r3, #0
    2c98:	2180      	movs	r1, #128	; 0x80
    2c9a:	05c9      	lsls	r1, r1, #23
    2c9c:	f7fd fed0 	bl	a40 <__aeabi_fdiv>
    2ca0:	1c03      	adds	r3, r0, #0
    2ca2:	1c1a      	adds	r2, r3, #0
    2ca4:	4b64      	ldr	r3, [pc, #400]	; (2e38 <updatePowerState+0x218>)
    2ca6:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:38

	if (batteryLevel > 7.5)
    2ca8:	4b63      	ldr	r3, [pc, #396]	; (2e38 <updatePowerState+0x218>)
    2caa:	681b      	ldr	r3, [r3, #0]
    2cac:	1c18      	adds	r0, r3, #0
    2cae:	4963      	ldr	r1, [pc, #396]	; (2e3c <updatePowerState+0x21c>)
    2cb0:	f7fd fd2e 	bl	710 <__aeabi_fcmpgt>
    2cb4:	1c03      	adds	r3, r0, #0
    2cb6:	2b00      	cmp	r3, #0
    2cb8:	d014      	beq.n	2ce4 <updatePowerState+0xc4>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:40
	{
		Power_Level1_SetVal();
    2cba:	4b61      	ldr	r3, [pc, #388]	; (2e40 <updatePowerState+0x220>)
    2cbc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    2cbe:	1c18      	adds	r0, r3, #0
    2cc0:	f001 fad0 	bl	4264 <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:41
		Power_Level2_SetVal();
    2cc4:	4b5e      	ldr	r3, [pc, #376]	; (2e40 <updatePowerState+0x220>)
    2cc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    2cc8:	1c18      	adds	r0, r3, #0
    2cca:	f001 fb29 	bl	4320 <BitIoLdd6_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:42
		Power_Level3_SetVal();
    2cce:	4b5c      	ldr	r3, [pc, #368]	; (2e40 <updatePowerState+0x220>)
    2cd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    2cd2:	1c18      	adds	r0, r3, #0
    2cd4:	f001 fb82 	bl	43dc <BitIoLdd7_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:43
		Power_Level4_SetVal();
    2cd8:	4b59      	ldr	r3, [pc, #356]	; (2e40 <updatePowerState+0x220>)
    2cda:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    2cdc:	1c18      	adds	r0, r3, #0
    2cde:	f001 fbdb 	bl	4498 <BitIoLdd8_SetVal>
    2ce2:	e08c      	b.n	2dfe <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:45
	}
	else if (batteryLevel > 7.2)
    2ce4:	4b54      	ldr	r3, [pc, #336]	; (2e38 <updatePowerState+0x218>)
    2ce6:	681b      	ldr	r3, [r3, #0]
    2ce8:	1c18      	adds	r0, r3, #0
    2cea:	f7ff fe87 	bl	29fc <__aeabi_f2d>
    2cee:	1c03      	adds	r3, r0, #0
    2cf0:	1c0c      	adds	r4, r1, #0
    2cf2:	1c18      	adds	r0, r3, #0
    2cf4:	1c21      	adds	r1, r4, #0
    2cf6:	4a4a      	ldr	r2, [pc, #296]	; (2e20 <updatePowerState+0x200>)
    2cf8:	4b4a      	ldr	r3, [pc, #296]	; (2e24 <updatePowerState+0x204>)
    2cfa:	f7fd fccf 	bl	69c <__aeabi_dcmpgt>
    2cfe:	1c03      	adds	r3, r0, #0
    2d00:	2b00      	cmp	r3, #0
    2d02:	d014      	beq.n	2d2e <updatePowerState+0x10e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:47
	{
		Power_Level1_SetVal();
    2d04:	4b4e      	ldr	r3, [pc, #312]	; (2e40 <updatePowerState+0x220>)
    2d06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    2d08:	1c18      	adds	r0, r3, #0
    2d0a:	f001 faab 	bl	4264 <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:48
		Power_Level2_SetVal();
    2d0e:	4b4c      	ldr	r3, [pc, #304]	; (2e40 <updatePowerState+0x220>)
    2d10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    2d12:	1c18      	adds	r0, r3, #0
    2d14:	f001 fb04 	bl	4320 <BitIoLdd6_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:49
		Power_Level3_SetVal();
    2d18:	4b49      	ldr	r3, [pc, #292]	; (2e40 <updatePowerState+0x220>)
    2d1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    2d1c:	1c18      	adds	r0, r3, #0
    2d1e:	f001 fb5d 	bl	43dc <BitIoLdd7_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:50
		Power_Level4_ClrVal();
    2d22:	4b47      	ldr	r3, [pc, #284]	; (2e40 <updatePowerState+0x220>)
    2d24:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    2d26:	1c18      	adds	r0, r3, #0
    2d28:	f001 fba8 	bl	447c <BitIoLdd8_ClrVal>
    2d2c:	e067      	b.n	2dfe <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:53
	}

	else if (batteryLevel > 6.9)
    2d2e:	4b42      	ldr	r3, [pc, #264]	; (2e38 <updatePowerState+0x218>)
    2d30:	681b      	ldr	r3, [r3, #0]
    2d32:	1c18      	adds	r0, r3, #0
    2d34:	f7ff fe62 	bl	29fc <__aeabi_f2d>
    2d38:	1c03      	adds	r3, r0, #0
    2d3a:	1c0c      	adds	r4, r1, #0
    2d3c:	1c18      	adds	r0, r3, #0
    2d3e:	1c21      	adds	r1, r4, #0
    2d40:	4a39      	ldr	r2, [pc, #228]	; (2e28 <updatePowerState+0x208>)
    2d42:	4b3a      	ldr	r3, [pc, #232]	; (2e2c <updatePowerState+0x20c>)
    2d44:	f7fd fcaa 	bl	69c <__aeabi_dcmpgt>
    2d48:	1c03      	adds	r3, r0, #0
    2d4a:	2b00      	cmp	r3, #0
    2d4c:	d014      	beq.n	2d78 <updatePowerState+0x158>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:55
	{
		Power_Level1_SetVal();
    2d4e:	4b3c      	ldr	r3, [pc, #240]	; (2e40 <updatePowerState+0x220>)
    2d50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    2d52:	1c18      	adds	r0, r3, #0
    2d54:	f001 fa86 	bl	4264 <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:56
		Power_Level2_SetVal();
    2d58:	4b39      	ldr	r3, [pc, #228]	; (2e40 <updatePowerState+0x220>)
    2d5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    2d5c:	1c18      	adds	r0, r3, #0
    2d5e:	f001 fadf 	bl	4320 <BitIoLdd6_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:57
		Power_Level3_ClrVal();
    2d62:	4b37      	ldr	r3, [pc, #220]	; (2e40 <updatePowerState+0x220>)
    2d64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    2d66:	1c18      	adds	r0, r3, #0
    2d68:	f001 fb2a 	bl	43c0 <BitIoLdd7_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:58
		Power_Level4_ClrVal();
    2d6c:	4b34      	ldr	r3, [pc, #208]	; (2e40 <updatePowerState+0x220>)
    2d6e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    2d70:	1c18      	adds	r0, r3, #0
    2d72:	f001 fb83 	bl	447c <BitIoLdd8_ClrVal>
    2d76:	e042      	b.n	2dfe <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:60
	}
	else if (batteryLevel > 6.6)
    2d78:	4b2f      	ldr	r3, [pc, #188]	; (2e38 <updatePowerState+0x218>)
    2d7a:	681b      	ldr	r3, [r3, #0]
    2d7c:	1c18      	adds	r0, r3, #0
    2d7e:	f7ff fe3d 	bl	29fc <__aeabi_f2d>
    2d82:	1c03      	adds	r3, r0, #0
    2d84:	1c0c      	adds	r4, r1, #0
    2d86:	1c18      	adds	r0, r3, #0
    2d88:	1c21      	adds	r1, r4, #0
    2d8a:	4a29      	ldr	r2, [pc, #164]	; (2e30 <updatePowerState+0x210>)
    2d8c:	4b29      	ldr	r3, [pc, #164]	; (2e34 <updatePowerState+0x214>)
    2d8e:	f7fd fc85 	bl	69c <__aeabi_dcmpgt>
    2d92:	1c03      	adds	r3, r0, #0
    2d94:	2b00      	cmp	r3, #0
    2d96:	d014      	beq.n	2dc2 <updatePowerState+0x1a2>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:62
	{
		Power_Level1_SetVal();
    2d98:	4b29      	ldr	r3, [pc, #164]	; (2e40 <updatePowerState+0x220>)
    2d9a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    2d9c:	1c18      	adds	r0, r3, #0
    2d9e:	f001 fa61 	bl	4264 <BitIoLdd5_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:63
		Power_Level2_ClrVal();
    2da2:	4b27      	ldr	r3, [pc, #156]	; (2e40 <updatePowerState+0x220>)
    2da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    2da6:	1c18      	adds	r0, r3, #0
    2da8:	f001 faac 	bl	4304 <BitIoLdd6_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:64
		Power_Level3_ClrVal();
    2dac:	4b24      	ldr	r3, [pc, #144]	; (2e40 <updatePowerState+0x220>)
    2dae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    2db0:	1c18      	adds	r0, r3, #0
    2db2:	f001 fb05 	bl	43c0 <BitIoLdd7_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:65
		Power_Level4_ClrVal();
    2db6:	4b22      	ldr	r3, [pc, #136]	; (2e40 <updatePowerState+0x220>)
    2db8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    2dba:	1c18      	adds	r0, r3, #0
    2dbc:	f001 fb5e 	bl	447c <BitIoLdd8_ClrVal>
    2dc0:	e01d      	b.n	2dfe <updatePowerState+0x1de>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:69
	}
	else
	{
		Power_Level1_NegVal();
    2dc2:	4b1f      	ldr	r3, [pc, #124]	; (2e40 <updatePowerState+0x220>)
    2dc4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    2dc6:	1c18      	adds	r0, r3, #0
    2dc8:	f001 fa5a 	bl	4280 <BitIoLdd5_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:70
		Power_Level2_NegVal();
    2dcc:	4b1c      	ldr	r3, [pc, #112]	; (2e40 <updatePowerState+0x220>)
    2dce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    2dd0:	1c18      	adds	r0, r3, #0
    2dd2:	f001 fab3 	bl	433c <BitIoLdd6_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:71
		Power_Level3_NegVal();
    2dd6:	4b1a      	ldr	r3, [pc, #104]	; (2e40 <updatePowerState+0x220>)
    2dd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    2dda:	1c18      	adds	r0, r3, #0
    2ddc:	f001 fb0c 	bl	43f8 <BitIoLdd7_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:72
		Power_Level4_NegVal();
    2de0:	4b17      	ldr	r3, [pc, #92]	; (2e40 <updatePowerState+0x220>)
    2de2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    2de4:	1c18      	adds	r0, r3, #0
    2de6:	f001 fb65 	bl	44b4 <BitIoLdd8_NegVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:74

		for (int delay = 0; delay < 100000; delay++);
    2dea:	2300      	movs	r3, #0
    2dec:	60fb      	str	r3, [r7, #12]
    2dee:	e002      	b.n	2df6 <updatePowerState+0x1d6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:74 (discriminator 2)
    2df0:	68fb      	ldr	r3, [r7, #12]
    2df2:	3301      	adds	r3, #1
    2df4:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:74 (discriminator 1)
    2df6:	68fa      	ldr	r2, [r7, #12]
    2df8:	4b12      	ldr	r3, [pc, #72]	; (2e44 <updatePowerState+0x224>)
    2dfa:	429a      	cmp	r2, r3
    2dfc:	ddf8      	ble.n	2df0 <updatePowerState+0x1d0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:77
	}

	handlingPowerUpdate = FALSE;
    2dfe:	4b12      	ldr	r3, [pc, #72]	; (2e48 <updatePowerState+0x228>)
    2e00:	2200      	movs	r2, #0
    2e02:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/BatteryController.c:78
}
    2e04:	46bd      	mov	sp, r7
    2e06:	b005      	add	sp, #20
    2e08:	bd90      	pop	{r4, r7, pc}
    2e0a:	46c0      	nop			; (mov r8, r8)
    2e0c:	46c0      	nop			; (mov r8, r8)
    2e0e:	46c0      	nop			; (mov r8, r8)
    2e10:	5ebae3da 	.word	0x5ebae3da
    2e14:	3f870ccf 	.word	0x3f870ccf
    2e18:	cccccccd 	.word	0xcccccccd
    2e1c:	4016cccc 	.word	0x4016cccc
    2e20:	cccccccd 	.word	0xcccccccd
    2e24:	401ccccc 	.word	0x401ccccc
    2e28:	9999999a 	.word	0x9999999a
    2e2c:	401b9999 	.word	0x401b9999
    2e30:	66666666 	.word	0x66666666
    2e34:	401a6666 	.word	0x401a6666
    2e38:	1ffff1ac 	.word	0x1ffff1ac
    2e3c:	40f00000 	.word	0x40f00000
    2e40:	1ffff0cc 	.word	0x1ffff0cc
    2e44:	0001869f 	.word	0x0001869f
    2e48:	1ffff1a8 	.word	0x1ffff1a8
$t():
    2e4c:	46c0      	nop			; (mov r8, r8)
    2e4e:	46c0      	nop			; (mov r8, r8)

00002e50 <initializeCamera>:
initializeCamera():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:45
//	}
//
//}

void initializeCamera()
{
    2e50:	b580      	push	{r7, lr}
    2e52:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:47
	// Inicial state
	state = HALF_LOW_CLK;
    2e54:	4b05      	ldr	r3, [pc, #20]	; (2e6c <initializeCamera+0x1c>)
    2e56:	2203      	movs	r2, #3
    2e58:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:49

	clockCounter = 0;
    2e5a:	4b05      	ldr	r3, [pc, #20]	; (2e70 <initializeCamera+0x20>)
    2e5c:	2200      	movs	r2, #0
    2e5e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:51

	transferTime = 0;
    2e60:	4b04      	ldr	r3, [pc, #16]	; (2e74 <initializeCamera+0x24>)
    2e62:	2200      	movs	r2, #0
    2e64:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:52
}
    2e66:	46bd      	mov	sp, r7
    2e68:	bd80      	pop	{r7, pc}
    2e6a:	46c0      	nop			; (mov r8, r8)
    2e6c:	1ffff1c4 	.word	0x1ffff1c4
    2e70:	1ffff1b4 	.word	0x1ffff1b4
    2e74:	1ffff1bc 	.word	0x1ffff1bc

00002e78 <getRawImageMean>:
getRawImageMean():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:78
//	}
//
//}

int getRawImageMean(int samplesNum)
{
    2e78:	b580      	push	{r7, lr}
    2e7a:	b084      	sub	sp, #16
    2e7c:	af00      	add	r7, sp, #0
    2e7e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:80
	// Standard value
	currentSample = -2;
    2e80:	4b16      	ldr	r3, [pc, #88]	; (2edc <getRawImageMean+0x64>)
    2e82:	2202      	movs	r2, #2
    2e84:	4252      	negs	r2, r2
    2e86:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:81
	samplesNumber = samplesNum;
    2e88:	4b15      	ldr	r3, [pc, #84]	; (2ee0 <getRawImageMean+0x68>)
    2e8a:	687a      	ldr	r2, [r7, #4]
    2e8c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:84

	// Initializes the array for put the image with zeros
	for (int pixel = 0; pixel < 128; pixel++)
    2e8e:	2300      	movs	r3, #0
    2e90:	60fb      	str	r3, [r7, #12]
    2e92:	e007      	b.n	2ea4 <getRawImageMean+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:86 (discriminator 2)
	{
		rawImage[pixel] = 0;
    2e94:	4a13      	ldr	r2, [pc, #76]	; (2ee4 <getRawImageMean+0x6c>)
    2e96:	68fb      	ldr	r3, [r7, #12]
    2e98:	18d3      	adds	r3, r2, r3
    2e9a:	2200      	movs	r2, #0
    2e9c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:84 (discriminator 2)
	// Standard value
	currentSample = -2;
	samplesNumber = samplesNum;

	// Initializes the array for put the image with zeros
	for (int pixel = 0; pixel < 128; pixel++)
    2e9e:	68fb      	ldr	r3, [r7, #12]
    2ea0:	3301      	adds	r3, #1
    2ea2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:84 (discriminator 1)
    2ea4:	68fb      	ldr	r3, [r7, #12]
    2ea6:	2b7f      	cmp	r3, #127	; 0x7f
    2ea8:	ddf4      	ble.n	2e94 <getRawImageMean+0x1c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:90
	{
		rawImage[pixel] = 0;
	}

	// Initializes the camera
	initializeCamera();
    2eaa:	f7ff ffd1 	bl	2e50 <initializeCamera>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:93

	// Camera activation
	Camera_CLK_Interruption_EnableEvent();
    2eae:	4b0e      	ldr	r3, [pc, #56]	; (2ee8 <getRawImageMean+0x70>)
    2eb0:	68db      	ldr	r3, [r3, #12]
    2eb2:	1c18      	adds	r0, r3, #0
    2eb4:	2101      	movs	r1, #1
    2eb6:	f002 fb9f 	bl	55f8 <TimerIntLdd1_SetEventMask>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:95

	while (currentSample < samplesNumber);
    2eba:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:95 (discriminator 1)
    2ebc:	4b07      	ldr	r3, [pc, #28]	; (2edc <getRawImageMean+0x64>)
    2ebe:	681a      	ldr	r2, [r3, #0]
    2ec0:	4b07      	ldr	r3, [pc, #28]	; (2ee0 <getRawImageMean+0x68>)
    2ec2:	681b      	ldr	r3, [r3, #0]
    2ec4:	429a      	cmp	r2, r3
    2ec6:	dbf9      	blt.n	2ebc <getRawImageMean+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:97

	Camera_CLK_Interruption_DisableEvent();
    2ec8:	4b07      	ldr	r3, [pc, #28]	; (2ee8 <getRawImageMean+0x70>)
    2eca:	68db      	ldr	r3, [r3, #12]
    2ecc:	1c18      	adds	r0, r3, #0
    2ece:	2100      	movs	r1, #0
    2ed0:	f002 fb92 	bl	55f8 <TimerIntLdd1_SetEventMask>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:98
}
    2ed4:	1c18      	adds	r0, r3, #0
    2ed6:	46bd      	mov	sp, r7
    2ed8:	b004      	add	sp, #16
    2eda:	bd80      	pop	{r7, pc}
    2edc:	1ffff1c0 	.word	0x1ffff1c0
    2ee0:	1ffff1b8 	.word	0x1ffff1b8
    2ee4:	1ffff1c8 	.word	0x1ffff1c8
    2ee8:	1ffff0cc 	.word	0x1ffff0cc

00002eec <verifySample>:
verifySample():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:105
/*
 * The initial currentSample value must be -1
 * The sampleNumber value must be >= 1
 */
void verifySample()
{
    2eec:	b590      	push	{r4, r7, lr}
    2eee:	b083      	sub	sp, #12
    2ef0:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:107
	// The first sample is Discarded
	if (currentSample >= 0)
    2ef2:	4b16      	ldr	r3, [pc, #88]	; (2f4c <verifySample+0x60>)
    2ef4:	681b      	ldr	r3, [r3, #0]
    2ef6:	2b00      	cmp	r3, #0
    2ef8:	db1f      	blt.n	2f3a <verifySample+0x4e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:109
	{
		for (int pixel = 0; pixel < 128; pixel++)
    2efa:	2300      	movs	r3, #0
    2efc:	607b      	str	r3, [r7, #4]
    2efe:	e019      	b.n	2f34 <verifySample+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:111 (discriminator 2)
		{
			rawImage[pixel] += rawImageBuffer[pixel] / samplesNumber;
    2f00:	4a13      	ldr	r2, [pc, #76]	; (2f50 <verifySample+0x64>)
    2f02:	687b      	ldr	r3, [r7, #4]
    2f04:	18d3      	adds	r3, r2, r3
    2f06:	781c      	ldrb	r4, [r3, #0]
    2f08:	4a12      	ldr	r2, [pc, #72]	; (2f54 <verifySample+0x68>)
    2f0a:	687b      	ldr	r3, [r7, #4]
    2f0c:	18d3      	adds	r3, r2, r3
    2f0e:	781b      	ldrb	r3, [r3, #0]
    2f10:	1c1a      	adds	r2, r3, #0
    2f12:	4b11      	ldr	r3, [pc, #68]	; (2f58 <verifySample+0x6c>)
    2f14:	681b      	ldr	r3, [r3, #0]
    2f16:	1c10      	adds	r0, r2, #0
    2f18:	1c19      	adds	r1, r3, #0
    2f1a:	f7fd fb33 	bl	584 <__aeabi_idiv>
    2f1e:	1c03      	adds	r3, r0, #0
    2f20:	b2db      	uxtb	r3, r3
    2f22:	18e3      	adds	r3, r4, r3
    2f24:	b2da      	uxtb	r2, r3
    2f26:	490a      	ldr	r1, [pc, #40]	; (2f50 <verifySample+0x64>)
    2f28:	687b      	ldr	r3, [r7, #4]
    2f2a:	18cb      	adds	r3, r1, r3
    2f2c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:109 (discriminator 2)
void verifySample()
{
	// The first sample is Discarded
	if (currentSample >= 0)
	{
		for (int pixel = 0; pixel < 128; pixel++)
    2f2e:	687b      	ldr	r3, [r7, #4]
    2f30:	3301      	adds	r3, #1
    2f32:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:109 (discriminator 1)
    2f34:	687b      	ldr	r3, [r7, #4]
    2f36:	2b7f      	cmp	r3, #127	; 0x7f
    2f38:	dde2      	ble.n	2f00 <verifySample+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:114
		{
			rawImage[pixel] += rawImageBuffer[pixel] / samplesNumber;
		}
	}
	currentSample++;
    2f3a:	4b04      	ldr	r3, [pc, #16]	; (2f4c <verifySample+0x60>)
    2f3c:	681b      	ldr	r3, [r3, #0]
    2f3e:	1c5a      	adds	r2, r3, #1
    2f40:	4b02      	ldr	r3, [pc, #8]	; (2f4c <verifySample+0x60>)
    2f42:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/CameraController.c:115
}
    2f44:	46bd      	mov	sp, r7
    2f46:	b003      	add	sp, #12
    2f48:	bd90      	pop	{r4, r7, pc}
    2f4a:	46c0      	nop			; (mov r8, r8)
    2f4c:	1ffff1c0 	.word	0x1ffff1c0
    2f50:	1ffff1c8 	.word	0x1ffff1c8
    2f54:	1ffff248 	.word	0x1ffff248
    2f58:	1ffff1b8 	.word	0x1ffff1b8

00002f5c <get_error>:
get_error():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Error_management.c:10
 *      Author: marcelo
 */
#include "Error_management.h"

double get_error(uint8 image[])
{
    2f5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f5e:	b089      	sub	sp, #36	; 0x24
    2f60:	af00      	add	r7, sp, #0
    2f62:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Error_management.c:15
	uint8 range, left_border, right_border;

	double error;

	setBorders(image, &left_border, &right_border);
    2f64:	6879      	ldr	r1, [r7, #4]
    2f66:	1c3a      	adds	r2, r7, #0
    2f68:	320f      	adds	r2, #15
    2f6a:	1c3b      	adds	r3, r7, #0
    2f6c:	330e      	adds	r3, #14
    2f6e:	1c08      	adds	r0, r1, #0
    2f70:	1c11      	adds	r1, r2, #0
    2f72:	1c1a      	adds	r2, r3, #0
    2f74:	f000 f950 	bl	3218 <setBorders>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Error_management.c:16
	range = left_border + right_border;
    2f78:	1c3b      	adds	r3, r7, #0
    2f7a:	330f      	adds	r3, #15
    2f7c:	7819      	ldrb	r1, [r3, #0]
    2f7e:	1c3b      	adds	r3, r7, #0
    2f80:	330e      	adds	r3, #14
    2f82:	781a      	ldrb	r2, [r3, #0]
    2f84:	1c3b      	adds	r3, r7, #0
    2f86:	331f      	adds	r3, #31
    2f88:	188a      	adds	r2, r1, r2
    2f8a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Error_management.c:18

	error = ((double)(right_border - left_border)) / range;
    2f8c:	1c3b      	adds	r3, r7, #0
    2f8e:	330e      	adds	r3, #14
    2f90:	781b      	ldrb	r3, [r3, #0]
    2f92:	1c1a      	adds	r2, r3, #0
    2f94:	1c3b      	adds	r3, r7, #0
    2f96:	330f      	adds	r3, #15
    2f98:	781b      	ldrb	r3, [r3, #0]
    2f9a:	1ad3      	subs	r3, r2, r3
    2f9c:	1c18      	adds	r0, r3, #0
    2f9e:	f7ff fcef 	bl	2980 <__aeabi_i2d>
    2fa2:	1c05      	adds	r5, r0, #0
    2fa4:	1c0e      	adds	r6, r1, #0
    2fa6:	1c3b      	adds	r3, r7, #0
    2fa8:	331f      	adds	r3, #31
    2faa:	781b      	ldrb	r3, [r3, #0]
    2fac:	1c18      	adds	r0, r3, #0
    2fae:	f7ff fce7 	bl	2980 <__aeabi_i2d>
    2fb2:	1c03      	adds	r3, r0, #0
    2fb4:	1c0c      	adds	r4, r1, #0
    2fb6:	1c28      	adds	r0, r5, #0
    2fb8:	1c31      	adds	r1, r6, #0
    2fba:	1c1a      	adds	r2, r3, #0
    2fbc:	1c23      	adds	r3, r4, #0
    2fbe:	f7fe fdb1 	bl	1b24 <__aeabi_ddiv>
    2fc2:	1c03      	adds	r3, r0, #0
    2fc4:	1c0c      	adds	r4, r1, #0
    2fc6:	613b      	str	r3, [r7, #16]
    2fc8:	617c      	str	r4, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Error_management.c:20

	return error;
    2fca:	693b      	ldr	r3, [r7, #16]
    2fcc:	697c      	ldr	r4, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Error_management.c:22

}
    2fce:	1c18      	adds	r0, r3, #0
    2fd0:	1c21      	adds	r1, r4, #0
    2fd2:	46bd      	mov	sp, r7
    2fd4:	b009      	add	sp, #36	; 0x24
    2fd6:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002fd8 <Cpu_OnNMIINT>:
Cpu_OnNMIINT():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:53
 **         occurred. This event is automatically enabled when the [NMI
 **         interrupt] property is set to 'Enabled'.
 */
/* ===================================================================*/
void Cpu_OnNMIINT(void)
{
    2fd8:	b580      	push	{r7, lr}
    2fda:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:55
	/* Write your code here ... */
}
    2fdc:	46bd      	mov	sp, r7
    2fde:	bd80      	pop	{r7, pc}

00002fe0 <Camera_CLK_Interruption_OnInterrupt>:
Camera_CLK_Interruption_OnInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:72
 **     Parameters  : None
 **     Returns     : Nothing
 ** ===================================================================
 */
void Camera_CLK_Interruption_OnInterrupt(void)
{
    2fe0:	b580      	push	{r7, lr}
    2fe2:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:73
	switch (state)
    2fe4:	4b41      	ldr	r3, [pc, #260]	; (30ec <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    2fe6:	681b      	ldr	r3, [r3, #0]
    2fe8:	2b04      	cmp	r3, #4
    2fea:	d900      	bls.n	2fee <Camera_CLK_Interruption_OnInterrupt+0xe>
    2fec:	e07c      	b.n	30e8 <Camera_CLK_Interruption_OnInterrupt+0x108>
    2fee:	009a      	lsls	r2, r3, #2
    2ff0:	4b3f      	ldr	r3, [pc, #252]	; (30f0 <Camera_CLK_Interruption_OnInterrupt+0x110>)
    2ff2:	18d3      	adds	r3, r2, r3
    2ff4:	681b      	ldr	r3, [r3, #0]
    2ff6:	469f      	mov	pc, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:79
	{
	// First state
	case HALF_LOW_CLK:
	{
		// next state
		state = HIGH_CLK;
    2ff8:	4b3c      	ldr	r3, [pc, #240]	; (30ec <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    2ffa:	2200      	movs	r2, #0
    2ffc:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:81

		if (clockCounter == 0)
    2ffe:	4b3d      	ldr	r3, [pc, #244]	; (30f4 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    3000:	681b      	ldr	r3, [r3, #0]
    3002:	2b00      	cmp	r3, #0
    3004:	d10e      	bne.n	3024 <Camera_CLK_Interruption_OnInterrupt+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:84
		{
			// SI High
			SI_SetVal();
    3006:	4b3c      	ldr	r3, [pc, #240]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    3008:	681b      	ldr	r3, [r3, #0]
    300a:	1c18      	adds	r0, r3, #0
    300c:	f000 ffac 	bl	3f68 <BitIoLdd1_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:85
			while (!SI_GetVal());
    3010:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:85 (discriminator 1)
    3012:	4b39      	ldr	r3, [pc, #228]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    3014:	681b      	ldr	r3, [r3, #0]
    3016:	1c18      	adds	r0, r3, #0
    3018:	f000 ff86 	bl	3f28 <BitIoLdd1_GetVal>
    301c:	1c03      	adds	r3, r0, #0
    301e:	2b00      	cmp	r3, #0
    3020:	d0f7      	beq.n	3012 <Camera_CLK_Interruption_OnInterrupt+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:100
			state = WAIT_TRANSFER_CHARGE;

			// Checks if reading is finished
			verifySample();
		}
		break;
    3022:	e061      	b.n	30e8 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:90
			while (!SI_GetVal());
		}

		// End of the cycle
		// The camera needs an extra clock (129) to send the last pixel
		else if (clockCounter == 129)
    3024:	4b33      	ldr	r3, [pc, #204]	; (30f4 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    3026:	681b      	ldr	r3, [r3, #0]
    3028:	2b81      	cmp	r3, #129	; 0x81
    302a:	d108      	bne.n	303e <Camera_CLK_Interruption_OnInterrupt+0x5e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:92
		{
			clockCounter = 0;
    302c:	4b31      	ldr	r3, [pc, #196]	; (30f4 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    302e:	2200      	movs	r2, #0
    3030:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:95

			// And 20 microseconds to prepare for the next cycle.
			state = WAIT_TRANSFER_CHARGE;
    3032:	4b2e      	ldr	r3, [pc, #184]	; (30ec <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    3034:	2204      	movs	r2, #4
    3036:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:98

			// Checks if reading is finished
			verifySample();
    3038:	f7ff ff58 	bl	2eec <verifySample>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:100
		}
		break;
    303c:	e054      	b.n	30e8 <Camera_CLK_Interruption_OnInterrupt+0x108>
    303e:	e053      	b.n	30e8 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:106
	}

	case HIGH_CLK:
	{
		// Clock High.
		CLK_SetVal();
    3040:	4b2d      	ldr	r3, [pc, #180]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    3042:	685b      	ldr	r3, [r3, #4]
    3044:	1c18      	adds	r0, r3, #0
    3046:	f001 f84b 	bl	40e0 <BitIoLdd2_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:107
		while (!CLK_GetVal());
    304a:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:107 (discriminator 1)
    304c:	4b2a      	ldr	r3, [pc, #168]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    304e:	685b      	ldr	r3, [r3, #4]
    3050:	1c18      	adds	r0, r3, #0
    3052:	f001 f825 	bl	40a0 <BitIoLdd2_GetVal>
    3056:	1c03      	adds	r3, r0, #0
    3058:	2b00      	cmp	r3, #0
    305a:	d0f7      	beq.n	304c <Camera_CLK_Interruption_OnInterrupt+0x6c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:109

		clockCounter++;
    305c:	4b25      	ldr	r3, [pc, #148]	; (30f4 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    305e:	681b      	ldr	r3, [r3, #0]
    3060:	1c5a      	adds	r2, r3, #1
    3062:	4b24      	ldr	r3, [pc, #144]	; (30f4 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    3064:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:111

		state = HALF_HIGH_CLK;
    3066:	4b21      	ldr	r3, [pc, #132]	; (30ec <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    3068:	2201      	movs	r2, #1
    306a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:113

		break;
    306c:	e03c      	b.n	30e8 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:118
	}

	case HALF_HIGH_CLK:
	{
		if (clockCounter == 1)
    306e:	4b21      	ldr	r3, [pc, #132]	; (30f4 <Camera_CLK_Interruption_OnInterrupt+0x114>)
    3070:	681b      	ldr	r3, [r3, #0]
    3072:	2b01      	cmp	r3, #1
    3074:	d10d      	bne.n	3092 <Camera_CLK_Interruption_OnInterrupt+0xb2>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:121
		{
			// SI Low.
			SI_ClrVal();
    3076:	4b20      	ldr	r3, [pc, #128]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    3078:	681b      	ldr	r3, [r3, #0]
    307a:	1c18      	adds	r0, r3, #0
    307c:	f000 ff68 	bl	3f50 <BitIoLdd1_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:122
			while (SI_GetVal());
    3080:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:122 (discriminator 1)
    3082:	4b1d      	ldr	r3, [pc, #116]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    3084:	681b      	ldr	r3, [r3, #0]
    3086:	1c18      	adds	r0, r3, #0
    3088:	f000 ff4e 	bl	3f28 <BitIoLdd1_GetVal>
    308c:	1c03      	adds	r3, r0, #0
    308e:	2b00      	cmp	r3, #0
    3090:	d1f7      	bne.n	3082 <Camera_CLK_Interruption_OnInterrupt+0xa2>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:126
		}

		// Starts the AD convertion
		AD_Converter_MeasureChan(FALSE, 0);
    3092:	2000      	movs	r0, #0
    3094:	2100      	movs	r1, #0
    3096:	f000 fcbb 	bl	3a10 <AD_Converter_MeasureChan>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:127
		state = LOW_CLK;
    309a:	4b14      	ldr	r3, [pc, #80]	; (30ec <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    309c:	2202      	movs	r2, #2
    309e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:128
		break;
    30a0:	e022      	b.n	30e8 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:133
	}
	case LOW_CLK:
	{
		// Clock Low.
		CLK_ClrVal();
    30a2:	4b15      	ldr	r3, [pc, #84]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    30a4:	685b      	ldr	r3, [r3, #4]
    30a6:	1c18      	adds	r0, r3, #0
    30a8:	f001 f80e 	bl	40c8 <BitIoLdd2_ClrVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:134
		while (CLK_GetVal());
    30ac:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:134 (discriminator 1)
    30ae:	4b12      	ldr	r3, [pc, #72]	; (30f8 <Camera_CLK_Interruption_OnInterrupt+0x118>)
    30b0:	685b      	ldr	r3, [r3, #4]
    30b2:	1c18      	adds	r0, r3, #0
    30b4:	f000 fff4 	bl	40a0 <BitIoLdd2_GetVal>
    30b8:	1c03      	adds	r3, r0, #0
    30ba:	2b00      	cmp	r3, #0
    30bc:	d1f7      	bne.n	30ae <Camera_CLK_Interruption_OnInterrupt+0xce>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:136

		state = HALF_LOW_CLK;
    30be:	4b0b      	ldr	r3, [pc, #44]	; (30ec <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    30c0:	2203      	movs	r2, #3
    30c2:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:138

		break;
    30c4:	e010      	b.n	30e8 <Camera_CLK_Interruption_OnInterrupt+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:144
	}

	// Pixel charge transfer time
	case WAIT_TRANSFER_CHARGE:
	{
		if (transferTime)
    30c6:	4b0d      	ldr	r3, [pc, #52]	; (30fc <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    30c8:	681b      	ldr	r3, [r3, #0]
    30ca:	2b00      	cmp	r3, #0
    30cc:	d005      	beq.n	30da <Camera_CLK_Interruption_OnInterrupt+0xfa>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:146
		{
			transferTime++;
    30ce:	4b0b      	ldr	r3, [pc, #44]	; (30fc <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    30d0:	681b      	ldr	r3, [r3, #0]
    30d2:	1c5a      	adds	r2, r3, #1
    30d4:	4b09      	ldr	r3, [pc, #36]	; (30fc <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    30d6:	601a      	str	r2, [r3, #0]
    30d8:	e005      	b.n	30e6 <Camera_CLK_Interruption_OnInterrupt+0x106>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:150
		}
		else
		{
			transferTime = 0;
    30da:	4b08      	ldr	r3, [pc, #32]	; (30fc <Camera_CLK_Interruption_OnInterrupt+0x11c>)
    30dc:	2200      	movs	r2, #0
    30de:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:151
			state = HALF_LOW_CLK;
    30e0:	4b02      	ldr	r3, [pc, #8]	; (30ec <Camera_CLK_Interruption_OnInterrupt+0x10c>)
    30e2:	2203      	movs	r2, #3
    30e4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:154
		}

		break;
    30e6:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:158
	}

	}
}
    30e8:	46bd      	mov	sp, r7
    30ea:	bd80      	pop	{r7, pc}
    30ec:	1ffff1c4 	.word	0x1ffff1c4
    30f0:	000057fc 	.word	0x000057fc
    30f4:	1ffff1b4 	.word	0x1ffff1b4
    30f8:	1ffff0cc 	.word	0x1ffff0cc
    30fc:	1ffff1bc 	.word	0x1ffff1bc

00003100 <AD_Converter_OnEnd>:
AD_Converter_OnEnd():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:175
 **     Parameters  : None
 **     Returns     : Nothing
 ** ===================================================================
 */
void AD_Converter_OnEnd(void)
{
    3100:	b580      	push	{r7, lr}
    3102:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:176
	if (!handlingPowerUpdate)
    3104:	4b08      	ldr	r3, [pc, #32]	; (3128 <AD_Converter_OnEnd+0x28>)
    3106:	781b      	ldrb	r3, [r3, #0]
    3108:	b2db      	uxtb	r3, r3
    310a:	2b00      	cmp	r3, #0
    310c:	d108      	bne.n	3120 <AD_Converter_OnEnd+0x20>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:178
	{
		AD_Converter_GetChanValue(0, &rawImageBuffer[clockCounter]);
    310e:	4b07      	ldr	r3, [pc, #28]	; (312c <AD_Converter_OnEnd+0x2c>)
    3110:	681a      	ldr	r2, [r3, #0]
    3112:	4b07      	ldr	r3, [pc, #28]	; (3130 <AD_Converter_OnEnd+0x30>)
    3114:	18d3      	adds	r3, r2, r3
    3116:	2000      	movs	r0, #0
    3118:	1c19      	adds	r1, r3, #0
    311a:	f000 fcab 	bl	3a74 <AD_Converter_GetChanValue>
    311e:	e001      	b.n	3124 <AD_Converter_OnEnd+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:182
	}
	else
	{
		updatePowerState();
    3120:	f7ff fd7e 	bl	2c20 <updatePowerState>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:184
	}
}
    3124:	46bd      	mov	sp, r7
    3126:	bd80      	pop	{r7, pc}
    3128:	1ffff1a8 	.word	0x1ffff1a8
    312c:	1ffff1b4 	.word	0x1ffff1b4
    3130:	1ffff248 	.word	0x1ffff248

00003134 <SerialCom_OnBlockSent>:
SerialCom_OnBlockSent():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:203
 **                           RTOS specific data. This pointer is passed
 **                           as the parameter of Init method.
 */
/* ===================================================================*/
void SerialCom_OnBlockSent(LDD_TUserData *UserDataPtr)
{
    3134:	b580      	push	{r7, lr}
    3136:	b084      	sub	sp, #16
    3138:	af00      	add	r7, sp, #0
    313a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:204
	Serial_Device *ptr = (Serial_Device*)UserDataPtr;
    313c:	687b      	ldr	r3, [r7, #4]
    313e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:206

	ptr->isSent = TRUE; /* set flag so sender knows we have finished */
    3140:	68fb      	ldr	r3, [r7, #12]
    3142:	2201      	movs	r2, #1
    3144:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/Events.c:207
}
    3146:	46bd      	mov	sp, r7
    3148:	b004      	add	sp, #16
    314a:	bd80      	pop	{r7, pc}

0000314c <calibration>:
calibration():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:12


#include "ImageProcessing.h"

void calibration()
{
    314c:	b580      	push	{r7, lr}
    314e:	b082      	sub	sp, #8
    3150:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:13
	for (int border = 0; border < 128; border++)
    3152:	2300      	movs	r3, #0
    3154:	607b      	str	r3, [r7, #4]
    3156:	e00a      	b.n	316e <calibration+0x22>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:15 (discriminator 2)
	{
		referenceImage[border] = rawImage[border];
    3158:	4a08      	ldr	r2, [pc, #32]	; (317c <calibration+0x30>)
    315a:	687b      	ldr	r3, [r7, #4]
    315c:	18d3      	adds	r3, r2, r3
    315e:	781a      	ldrb	r2, [r3, #0]
    3160:	4907      	ldr	r1, [pc, #28]	; (3180 <calibration+0x34>)
    3162:	687b      	ldr	r3, [r7, #4]
    3164:	18cb      	adds	r3, r1, r3
    3166:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:13 (discriminator 2)

#include "ImageProcessing.h"

void calibration()
{
	for (int border = 0; border < 128; border++)
    3168:	687b      	ldr	r3, [r7, #4]
    316a:	3301      	adds	r3, #1
    316c:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:13 (discriminator 1)
    316e:	687b      	ldr	r3, [r7, #4]
    3170:	2b7f      	cmp	r3, #127	; 0x7f
    3172:	ddf1      	ble.n	3158 <calibration+0xc>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:17
	{
		referenceImage[border] = rawImage[border];
	}
}
    3174:	46bd      	mov	sp, r7
    3176:	b002      	add	sp, #8
    3178:	bd80      	pop	{r7, pc}
    317a:	46c0      	nop			; (mov r8, r8)
    317c:	1ffff1c8 	.word	0x1ffff1c8
    3180:	1ffff2c8 	.word	0x1ffff2c8
$d():
    3184:	00000000 	.word	0x00000000

00003188 <binarization>:
binarization():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:20

void binarization(uint8 binarizedImage[])
{
    3188:	b590      	push	{r4, r7, lr}
    318a:	b085      	sub	sp, #20
    318c:	af00      	add	r7, sp, #0
    318e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:23
	float light;

	for (int border = 0; border < 128; border++)
    3190:	2300      	movs	r3, #0
    3192:	60fb      	str	r3, [r7, #12]
    3194:	e032      	b.n	31fc <binarization+0x74>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:25
	{
		light = (float) rawImage[border] / (float) referenceImage[border];
    3196:	4a1e      	ldr	r2, [pc, #120]	; (3210 <binarization+0x88>)
    3198:	68fb      	ldr	r3, [r7, #12]
    319a:	18d3      	adds	r3, r2, r3
    319c:	781b      	ldrb	r3, [r3, #0]
    319e:	1c18      	adds	r0, r3, #0
    31a0:	f7fe f94e 	bl	1440 <__aeabi_ui2f>
    31a4:	1c04      	adds	r4, r0, #0
    31a6:	4a1b      	ldr	r2, [pc, #108]	; (3214 <binarization+0x8c>)
    31a8:	68fb      	ldr	r3, [r7, #12]
    31aa:	18d3      	adds	r3, r2, r3
    31ac:	781b      	ldrb	r3, [r3, #0]
    31ae:	b2db      	uxtb	r3, r3
    31b0:	1c18      	adds	r0, r3, #0
    31b2:	f7fe f945 	bl	1440 <__aeabi_ui2f>
    31b6:	1c03      	adds	r3, r0, #0
    31b8:	1c20      	adds	r0, r4, #0
    31ba:	1c19      	adds	r1, r3, #0
    31bc:	f7fd fc40 	bl	a40 <__aeabi_fdiv>
    31c0:	1c03      	adds	r3, r0, #0
    31c2:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:26
		if (light < 0.6)
    31c4:	68b8      	ldr	r0, [r7, #8]
    31c6:	f7ff fc19 	bl	29fc <__aeabi_f2d>
    31ca:	1c03      	adds	r3, r0, #0
    31cc:	1c0c      	adds	r4, r1, #0
    31ce:	1c18      	adds	r0, r3, #0
    31d0:	1c21      	adds	r1, r4, #0
    31d2:	4b0e      	ldr	r3, [pc, #56]	; (320c <binarization+0x84>)
    31d4:	4a0c      	ldr	r2, [pc, #48]	; (3208 <binarization+0x80>)
    31d6:	f7fd fa4d 	bl	674 <__aeabi_dcmplt>
    31da:	1c03      	adds	r3, r0, #0
    31dc:	2b00      	cmp	r3, #0
    31de:	d005      	beq.n	31ec <binarization+0x64>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:28
		{
			binarizedImage[border] = 0;
    31e0:	68fb      	ldr	r3, [r7, #12]
    31e2:	687a      	ldr	r2, [r7, #4]
    31e4:	18d3      	adds	r3, r2, r3
    31e6:	2200      	movs	r2, #0
    31e8:	701a      	strb	r2, [r3, #0]
    31ea:	e004      	b.n	31f6 <binarization+0x6e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:32
		}
		else
		{
			binarizedImage[border] = 255;
    31ec:	68fb      	ldr	r3, [r7, #12]
    31ee:	687a      	ldr	r2, [r7, #4]
    31f0:	18d3      	adds	r3, r2, r3
    31f2:	22ff      	movs	r2, #255	; 0xff
    31f4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:23

void binarization(uint8 binarizedImage[])
{
	float light;

	for (int border = 0; border < 128; border++)
    31f6:	68fb      	ldr	r3, [r7, #12]
    31f8:	3301      	adds	r3, #1
    31fa:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:23 (discriminator 1)
    31fc:	68fb      	ldr	r3, [r7, #12]
    31fe:	2b7f      	cmp	r3, #127	; 0x7f
    3200:	ddc9      	ble.n	3196 <binarization+0xe>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:35
		else
		{
			binarizedImage[border] = 255;
		}
	}
}
    3202:	46bd      	mov	sp, r7
    3204:	b005      	add	sp, #20
    3206:	bd90      	pop	{r4, r7, pc}
    3208:	33333333 	.word	0x33333333
    320c:	3fe33333 	.word	0x3fe33333
    3210:	1ffff1c8 	.word	0x1ffff1c8
    3214:	1ffff2c8 	.word	0x1ffff2c8

00003218 <setBorders>:
setBorders():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:38

void setBorders(uint8 image[], uint8 *leftBorder, uint8 *rightBorder)
{
    3218:	b580      	push	{r7, lr}
    321a:	b086      	sub	sp, #24
    321c:	af00      	add	r7, sp, #0
    321e:	60f8      	str	r0, [r7, #12]
    3220:	60b9      	str	r1, [r7, #8]
    3222:	607a      	str	r2, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:40
	int index;
	bool found = FALSE;
    3224:	1c3b      	adds	r3, r7, #0
    3226:	3313      	adds	r3, #19
    3228:	2200      	movs	r2, #0
    322a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:45
	uint8 border;

	// right side
	// default value
	border = 127;
    322c:	1c3b      	adds	r3, r7, #0
    322e:	3312      	adds	r3, #18
    3230:	227f      	movs	r2, #127	; 0x7f
    3232:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:47
	// Percorre do centro ate o limite direito da camera procurando uma borda
	for (index = 64; index < 127 && !found; index++)
    3234:	2340      	movs	r3, #64	; 0x40
    3236:	617b      	str	r3, [r7, #20]
    3238:	e010      	b.n	325c <setBorders+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:49
	{
		if (image[index] == 0)
    323a:	697b      	ldr	r3, [r7, #20]
    323c:	68fa      	ldr	r2, [r7, #12]
    323e:	18d3      	adds	r3, r2, r3
    3240:	781b      	ldrb	r3, [r3, #0]
    3242:	2b00      	cmp	r3, #0
    3244:	d107      	bne.n	3256 <setBorders+0x3e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:51
		{
			border = index;
    3246:	1c3b      	adds	r3, r7, #0
    3248:	3312      	adds	r3, #18
    324a:	697a      	ldr	r2, [r7, #20]
    324c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:52
			found = TRUE;
    324e:	1c3b      	adds	r3, r7, #0
    3250:	3313      	adds	r3, #19
    3252:	2201      	movs	r2, #1
    3254:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:47

	// right side
	// default value
	border = 127;
	// Percorre do centro ate o limite direito da camera procurando uma borda
	for (index = 64; index < 127 && !found; index++)
    3256:	697b      	ldr	r3, [r7, #20]
    3258:	3301      	adds	r3, #1
    325a:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:47 (discriminator 1)
    325c:	697b      	ldr	r3, [r7, #20]
    325e:	2b7e      	cmp	r3, #126	; 0x7e
    3260:	dc04      	bgt.n	326c <setBorders+0x54>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:47 (discriminator 2)
    3262:	1c3b      	adds	r3, r7, #0
    3264:	3313      	adds	r3, #19
    3266:	781b      	ldrb	r3, [r3, #0]
    3268:	2b00      	cmp	r3, #0
    326a:	d0e6      	beq.n	323a <setBorders+0x22>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:55
		{
			border = index;
			found = TRUE;
		}
	}
	*rightBorder = border - 64;
    326c:	1c3b      	adds	r3, r7, #0
    326e:	3312      	adds	r3, #18
    3270:	781b      	ldrb	r3, [r3, #0]
    3272:	3b40      	subs	r3, #64	; 0x40
    3274:	b2da      	uxtb	r2, r3
    3276:	687b      	ldr	r3, [r7, #4]
    3278:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:57

	found = FALSE;
    327a:	1c3b      	adds	r3, r7, #0
    327c:	3313      	adds	r3, #19
    327e:	2200      	movs	r2, #0
    3280:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:61

	// left side
	// default value
	border = 0;
    3282:	1c3b      	adds	r3, r7, #0
    3284:	3312      	adds	r3, #18
    3286:	2200      	movs	r2, #0
    3288:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:63
	// Percorre do centro ate o limite esquerdo da camera procurando uma borda
	for (index = 63; index >= 0 && !found; index--)
    328a:	233f      	movs	r3, #63	; 0x3f
    328c:	617b      	str	r3, [r7, #20]
    328e:	e010      	b.n	32b2 <setBorders+0x9a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:65
	{
		if (image[index] == 0)
    3290:	697b      	ldr	r3, [r7, #20]
    3292:	68fa      	ldr	r2, [r7, #12]
    3294:	18d3      	adds	r3, r2, r3
    3296:	781b      	ldrb	r3, [r3, #0]
    3298:	2b00      	cmp	r3, #0
    329a:	d107      	bne.n	32ac <setBorders+0x94>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:67
		{
			border = index;
    329c:	1c3b      	adds	r3, r7, #0
    329e:	3312      	adds	r3, #18
    32a0:	697a      	ldr	r2, [r7, #20]
    32a2:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:68
			found = TRUE;
    32a4:	1c3b      	adds	r3, r7, #0
    32a6:	3313      	adds	r3, #19
    32a8:	2201      	movs	r2, #1
    32aa:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:63

	// left side
	// default value
	border = 0;
	// Percorre do centro ate o limite esquerdo da camera procurando uma borda
	for (index = 63; index >= 0 && !found; index--)
    32ac:	697b      	ldr	r3, [r7, #20]
    32ae:	3b01      	subs	r3, #1
    32b0:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:63 (discriminator 1)
    32b2:	697b      	ldr	r3, [r7, #20]
    32b4:	2b00      	cmp	r3, #0
    32b6:	db04      	blt.n	32c2 <setBorders+0xaa>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:63 (discriminator 2)
    32b8:	1c3b      	adds	r3, r7, #0
    32ba:	3313      	adds	r3, #19
    32bc:	781b      	ldrb	r3, [r3, #0]
    32be:	2b00      	cmp	r3, #0
    32c0:	d0e6      	beq.n	3290 <setBorders+0x78>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:71
		{
			border = index;
			found = TRUE;
		}
	}
	*leftBorder = 63 - border;
    32c2:	1c3b      	adds	r3, r7, #0
    32c4:	3312      	adds	r3, #18
    32c6:	781b      	ldrb	r3, [r3, #0]
    32c8:	223f      	movs	r2, #63	; 0x3f
    32ca:	1ad3      	subs	r3, r2, r3
    32cc:	b2da      	uxtb	r2, r3
    32ce:	68bb      	ldr	r3, [r7, #8]
    32d0:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ImageProcessing.c:72
}
    32d2:	46bd      	mov	sp, r7
    32d4:	b006      	add	sp, #24
    32d6:	bd80      	pop	{r7, pc}

000032d8 <setMotorsSpeed>:
setMotorsSpeed():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:17
 * Engine A is the left motor and engine B is the right motor
 * Both parameters allow values between -255 and 255.
 * With positive values the motor turns forward and with negative turns backwards
 */
void setMotorsSpeed(int leftMotorSpeed, int rightMotorSpeed)
{
    32d8:	b580      	push	{r7, lr}
    32da:	b082      	sub	sp, #8
    32dc:	af00      	add	r7, sp, #0
    32de:	6078      	str	r0, [r7, #4]
    32e0:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:18
	if (leftMotorSpeed < -255 || leftMotorSpeed > 255)
    32e2:	687b      	ldr	r3, [r7, #4]
    32e4:	1c1a      	adds	r2, r3, #0
    32e6:	32ff      	adds	r2, #255	; 0xff
    32e8:	db02      	blt.n	32f0 <setMotorsSpeed+0x18>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:18 (discriminator 1)
    32ea:	687b      	ldr	r3, [r7, #4]
    32ec:	2bff      	cmp	r3, #255	; 0xff
    32ee:	dd00      	ble.n	32f2 <setMotorsSpeed+0x1a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:20
	{
		return;
    32f0:	e04f      	b.n	3392 <setMotorsSpeed+0xba>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:23
	}

	if (rightMotorSpeed < -255 || rightMotorSpeed > 255)
    32f2:	683b      	ldr	r3, [r7, #0]
    32f4:	1c1a      	adds	r2, r3, #0
    32f6:	32ff      	adds	r2, #255	; 0xff
    32f8:	db02      	blt.n	3300 <setMotorsSpeed+0x28>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:23 (discriminator 1)
    32fa:	683b      	ldr	r3, [r7, #0]
    32fc:	2bff      	cmp	r3, #255	; 0xff
    32fe:	dd00      	ble.n	3302 <setMotorsSpeed+0x2a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:25
	{
		return;
    3300:	e047      	b.n	3392 <setMotorsSpeed+0xba>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:30
	}

	// LeftMotor
	// Forward
	if (leftMotorSpeed >= 0)
    3302:	687b      	ldr	r3, [r7, #4]
    3304:	2b00      	cmp	r3, #0
    3306:	db10      	blt.n	332a <setMotorsSpeed+0x52>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:32
	{
		Motor_A_In1_SetRatio8(255);
    3308:	4b23      	ldr	r3, [pc, #140]	; (3398 <setMotorsSpeed+0xc0>)
    330a:	6a1b      	ldr	r3, [r3, #32]
    330c:	1c18      	adds	r0, r3, #0
    330e:	21ff      	movs	r1, #255	; 0xff
    3310:	f001 fa74 	bl	47fc <PwmLdd1_SetRatio8>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:33
		Motor_A_In2_SetRatio8(255 - leftMotorSpeed);
    3314:	4b20      	ldr	r3, [pc, #128]	; (3398 <setMotorsSpeed+0xc0>)
    3316:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    3318:	687b      	ldr	r3, [r7, #4]
    331a:	b2db      	uxtb	r3, r3
    331c:	43db      	mvns	r3, r3
    331e:	b2db      	uxtb	r3, r3
    3320:	1c10      	adds	r0, r2, #0
    3322:	1c19      	adds	r1, r3, #0
    3324:	f001 fae4 	bl	48f0 <PwmLdd2_SetRatio8>
    3328:	e00f      	b.n	334a <setMotorsSpeed+0x72>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:38
	}
	// Backward
	else
	{
		Motor_A_In1_SetRatio8(255 + leftMotorSpeed);
    332a:	4b1b      	ldr	r3, [pc, #108]	; (3398 <setMotorsSpeed+0xc0>)
    332c:	6a1a      	ldr	r2, [r3, #32]
    332e:	687b      	ldr	r3, [r7, #4]
    3330:	b2db      	uxtb	r3, r3
    3332:	3b01      	subs	r3, #1
    3334:	b2db      	uxtb	r3, r3
    3336:	1c10      	adds	r0, r2, #0
    3338:	1c19      	adds	r1, r3, #0
    333a:	f001 fa5f 	bl	47fc <PwmLdd1_SetRatio8>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:39
		Motor_A_In2_SetRatio8(255);
    333e:	4b16      	ldr	r3, [pc, #88]	; (3398 <setMotorsSpeed+0xc0>)
    3340:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3342:	1c18      	adds	r0, r3, #0
    3344:	21ff      	movs	r1, #255	; 0xff
    3346:	f001 fad3 	bl	48f0 <PwmLdd2_SetRatio8>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:44
	}

	// Right Motor
	// Forward
	if (rightMotorSpeed >= 0)
    334a:	683b      	ldr	r3, [r7, #0]
    334c:	2b00      	cmp	r3, #0
    334e:	db10      	blt.n	3372 <setMotorsSpeed+0x9a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:46
	{
		Motor_B_In1_SetRatio8(255);
    3350:	4b11      	ldr	r3, [pc, #68]	; (3398 <setMotorsSpeed+0xc0>)
    3352:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3354:	1c18      	adds	r0, r3, #0
    3356:	21ff      	movs	r1, #255	; 0xff
    3358:	f001 fb44 	bl	49e4 <PwmLdd3_SetRatio8>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:47
		Motor_B_In2_SetRatio8(255 - rightMotorSpeed);
    335c:	4b0e      	ldr	r3, [pc, #56]	; (3398 <setMotorsSpeed+0xc0>)
    335e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    3360:	683b      	ldr	r3, [r7, #0]
    3362:	b2db      	uxtb	r3, r3
    3364:	43db      	mvns	r3, r3
    3366:	b2db      	uxtb	r3, r3
    3368:	1c10      	adds	r0, r2, #0
    336a:	1c19      	adds	r1, r3, #0
    336c:	f001 fbb4 	bl	4ad8 <PwmLdd4_SetRatio8>
    3370:	e00f      	b.n	3392 <setMotorsSpeed+0xba>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:52
	}
	// Backward
	else
	{
		Motor_B_In1_SetRatio8(255 + rightMotorSpeed);
    3372:	4b09      	ldr	r3, [pc, #36]	; (3398 <setMotorsSpeed+0xc0>)
    3374:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    3376:	683b      	ldr	r3, [r7, #0]
    3378:	b2db      	uxtb	r3, r3
    337a:	3b01      	subs	r3, #1
    337c:	b2db      	uxtb	r3, r3
    337e:	1c10      	adds	r0, r2, #0
    3380:	1c19      	adds	r1, r3, #0
    3382:	f001 fb2f 	bl	49e4 <PwmLdd3_SetRatio8>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:53
		Motor_B_In2_SetRatio8(255);
    3386:	4b04      	ldr	r3, [pc, #16]	; (3398 <setMotorsSpeed+0xc0>)
    3388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    338a:	1c18      	adds	r0, r3, #0
    338c:	21ff      	movs	r1, #255	; 0xff
    338e:	f001 fba3 	bl	4ad8 <PwmLdd4_SetRatio8>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/MotorController.c:57
	}


}
    3392:	46bd      	mov	sp, r7
    3394:	b002      	add	sp, #8
    3396:	bd80      	pop	{r7, pc}
    3398:	1ffff0cc 	.word	0x1ffff0cc
$d():
    339c:	00000000 	.word	0x00000000

000033a0 <resetPID>:
resetPID():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:6
#include "PID.h"

// the setup routine runs once when you press reset:

void resetPID(SPID *pid)
{
    33a0:	b590      	push	{r4, r7, lr}
    33a2:	b083      	sub	sp, #12
    33a4:	af00      	add	r7, sp, #0
    33a6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:7
	pid->p_gain = 1;
    33a8:	687b      	ldr	r3, [r7, #4]
    33aa:	2201      	movs	r2, #1
    33ac:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:8
	pid->d_gain = 0;
    33ae:	687b      	ldr	r3, [r7, #4]
    33b0:	2200      	movs	r2, #0
    33b2:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:9
	pid->i_gain = 0;
    33b4:	687b      	ldr	r3, [r7, #4]
    33b6:	2200      	movs	r2, #0
    33b8:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:11

	pid->i_state = 0;
    33ba:	687a      	ldr	r2, [r7, #4]
    33bc:	4c0d      	ldr	r4, [pc, #52]	; (33f4 <resetPID+0x54>)
    33be:	4b0c      	ldr	r3, [pc, #48]	; (33f0 <resetPID+0x50>)
    33c0:	6113      	str	r3, [r2, #16]
    33c2:	6154      	str	r4, [r2, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:12
	pid->i_max = 1;
    33c4:	687b      	ldr	r3, [r7, #4]
    33c6:	2201      	movs	r2, #1
    33c8:	619a      	str	r2, [r3, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:13
	pid->i_min = 0;
    33ca:	687b      	ldr	r3, [r7, #4]
    33cc:	2200      	movs	r2, #0
    33ce:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:15

	pid->last_error = 0;
    33d0:	687a      	ldr	r2, [r7, #4]
    33d2:	4c08      	ldr	r4, [pc, #32]	; (33f4 <resetPID+0x54>)
    33d4:	4b06      	ldr	r3, [pc, #24]	; (33f0 <resetPID+0x50>)
    33d6:	6213      	str	r3, [r2, #32]
    33d8:	6254      	str	r4, [r2, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:16
	pid->time_const = 1;
    33da:	687a      	ldr	r2, [r7, #4]
    33dc:	4b06      	ldr	r3, [pc, #24]	; (33f8 <resetPID+0x58>)
    33de:	4c07      	ldr	r4, [pc, #28]	; (33fc <resetPID+0x5c>)
    33e0:	6293      	str	r3, [r2, #40]	; 0x28
    33e2:	62d4      	str	r4, [r2, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:17
}
    33e4:	46bd      	mov	sp, r7
    33e6:	b003      	add	sp, #12
    33e8:	bd90      	pop	{r4, r7, pc}
    33ea:	46c0      	nop			; (mov r8, r8)
    33ec:	46c0      	nop			; (mov r8, r8)
    33ee:	46c0      	nop			; (mov r8, r8)
	...
    33fc:	3ff00000 	.word	0x3ff00000

00003400 <update_pid>:
update_pid():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:20

double update_pid (SPID * pid, double error)
{
    3400:	b590      	push	{r4, r7, lr}
    3402:	b08b      	sub	sp, #44	; 0x2c
    3404:	af00      	add	r7, sp, #0
    3406:	60f8      	str	r0, [r7, #12]
    3408:	603a      	str	r2, [r7, #0]
    340a:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:23

	// Termo proporcionao, integrativo e derivativo.
	double p_term = 0, i_term = 0, d_term = 0;
    340c:	4c1d      	ldr	r4, [pc, #116]	; (3484 <update_pid+0x84>)
    340e:	4b1c      	ldr	r3, [pc, #112]	; (3480 <update_pid+0x80>)
    3410:	623b      	str	r3, [r7, #32]
    3412:	627c      	str	r4, [r7, #36]	; 0x24
    3414:	4c1b      	ldr	r4, [pc, #108]	; (3484 <update_pid+0x84>)
    3416:	4b1a      	ldr	r3, [pc, #104]	; (3480 <update_pid+0x80>)
    3418:	61bb      	str	r3, [r7, #24]
    341a:	61fc      	str	r4, [r7, #28]
    341c:	4c19      	ldr	r4, [pc, #100]	; (3484 <update_pid+0x84>)
    341e:	4b18      	ldr	r3, [pc, #96]	; (3480 <update_pid+0x80>)
    3420:	613b      	str	r3, [r7, #16]
    3422:	617c      	str	r4, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:29


	//set_integral_state(pid,  error);

	// Proportional term
	p_term = error * pid->p_gain;
    3424:	68fb      	ldr	r3, [r7, #12]
    3426:	681b      	ldr	r3, [r3, #0]
    3428:	1c18      	adds	r0, r3, #0
    342a:	f7ff faa9 	bl	2980 <__aeabi_i2d>
    342e:	1c03      	adds	r3, r0, #0
    3430:	1c0c      	adds	r4, r1, #0
    3432:	1c18      	adds	r0, r3, #0
    3434:	1c21      	adds	r1, r4, #0
    3436:	683a      	ldr	r2, [r7, #0]
    3438:	687b      	ldr	r3, [r7, #4]
    343a:	f7fe ffdd 	bl	23f8 <__aeabi_dmul>
    343e:	1c03      	adds	r3, r0, #0
    3440:	1c0c      	adds	r4, r1, #0
    3442:	623b      	str	r3, [r7, #32]
    3444:	627c      	str	r4, [r7, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:37
//	i_term = pid->i_gain * pid->i_state;

	// derivative error
//	d_term = get_derivative_state(pid, error) * pid->d_gain;

	pid->last_error = error;
    3446:	68fa      	ldr	r2, [r7, #12]
    3448:	683b      	ldr	r3, [r7, #0]
    344a:	687c      	ldr	r4, [r7, #4]
    344c:	6213      	str	r3, [r2, #32]
    344e:	6254      	str	r4, [r2, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:40


	return p_term + i_term + d_term;
    3450:	6a38      	ldr	r0, [r7, #32]
    3452:	6a79      	ldr	r1, [r7, #36]	; 0x24
    3454:	69ba      	ldr	r2, [r7, #24]
    3456:	69fb      	ldr	r3, [r7, #28]
    3458:	f7fe f842 	bl	14e0 <__aeabi_dadd>
    345c:	1c03      	adds	r3, r0, #0
    345e:	1c0c      	adds	r4, r1, #0
    3460:	1c18      	adds	r0, r3, #0
    3462:	1c21      	adds	r1, r4, #0
    3464:	693a      	ldr	r2, [r7, #16]
    3466:	697b      	ldr	r3, [r7, #20]
    3468:	f7fe f83a 	bl	14e0 <__aeabi_dadd>
    346c:	1c03      	adds	r3, r0, #0
    346e:	1c0c      	adds	r4, r1, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/PID.c:42

}
    3470:	1c18      	adds	r0, r3, #0
    3472:	1c21      	adds	r1, r4, #0
    3474:	46bd      	mov	sp, r7
    3476:	b00b      	add	sp, #44	; 0x2c
    3478:	bd90      	pop	{r4, r7, pc}
    347a:	46c0      	nop			; (mov r8, r8)
    347c:	46c0      	nop			; (mov r8, r8)
    347e:	46c0      	nop			; (mov r8, r8)
	...

00003488 <init_Serial>:
init_Serial():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:13
#include "SerialCommunication.h"

static Serial_Device deviceData;

static void init_Serial()
{
    3488:	b580      	push	{r7, lr}
    348a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:14
	deviceData.handle = SerialCom_Init(&deviceData); /* Initialization of serial component */
    348c:	4b05      	ldr	r3, [pc, #20]	; (34a4 <init_Serial+0x1c>)
    348e:	1c18      	adds	r0, r3, #0
    3490:	f001 fc26 	bl	4ce0 <SerialCom_Init>
    3494:	1c02      	adds	r2, r0, #0
    3496:	4b03      	ldr	r3, [pc, #12]	; (34a4 <init_Serial+0x1c>)
    3498:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:15
	deviceData.isSent = FALSE;
    349a:	4b02      	ldr	r3, [pc, #8]	; (34a4 <init_Serial+0x1c>)
    349c:	2200      	movs	r2, #0
    349e:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:16
}
    34a0:	46bd      	mov	sp, r7
    34a2:	bd80      	pop	{r7, pc}
    34a4:	1ffff07c 	.word	0x1ffff07c

000034a8 <sendAChar>:
sendAChar():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:19

static int sendAChar(unsigned char ch)
{
    34a8:	b580      	push	{r7, lr}
    34aa:	b082      	sub	sp, #8
    34ac:	af00      	add	r7, sp, #0
    34ae:	1c02      	adds	r2, r0, #0
    34b0:	1dfb      	adds	r3, r7, #7
    34b2:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:20
	deviceData.isSent = FALSE;
    34b4:	4b0c      	ldr	r3, [pc, #48]	; (34e8 <sendAChar+0x40>)
    34b6:	2200      	movs	r2, #0
    34b8:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:21
	while(SerialCom_SendBlock(deviceData.handle, (LDD_TData*)&ch, 1)!= ERR_OK) {} /* Send char */
    34ba:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:21 (discriminator 1)
    34bc:	4b0a      	ldr	r3, [pc, #40]	; (34e8 <sendAChar+0x40>)
    34be:	681a      	ldr	r2, [r3, #0]
    34c0:	1dfb      	adds	r3, r7, #7
    34c2:	1c10      	adds	r0, r2, #0
    34c4:	1c19      	adds	r1, r3, #0
    34c6:	2201      	movs	r2, #1
    34c8:	f001 fce2 	bl	4e90 <SerialCom_SendBlock>
    34cc:	1c03      	adds	r3, r0, #0
    34ce:	2b00      	cmp	r3, #0
    34d0:	d1f4      	bne.n	34bc <sendAChar+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:22
	while(!deviceData.isSent) {} /* wait until we get the green flag from the TX interrupt */
    34d2:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:22 (discriminator 1)
    34d4:	4b04      	ldr	r3, [pc, #16]	; (34e8 <sendAChar+0x40>)
    34d6:	791b      	ldrb	r3, [r3, #4]
    34d8:	b2db      	uxtb	r3, r3
    34da:	2b00      	cmp	r3, #0
    34dc:	d0fa      	beq.n	34d4 <sendAChar+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:23
}
    34de:	1c18      	adds	r0, r3, #0
    34e0:	46bd      	mov	sp, r7
    34e2:	b002      	add	sp, #8
    34e4:	bd80      	pop	{r7, pc}
    34e6:	46c0      	nop			; (mov r8, r8)
    34e8:	1ffff07c 	.word	0x1ffff07c

000034ec <itoa_8_bit>:
itoa_8_bit():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:43
		sendAChar(string[index++]);
	}
}

void itoa_8_bit(uint8 sample)
{
    34ec:	b580      	push	{r7, lr}
    34ee:	b088      	sub	sp, #32
    34f0:	af00      	add	r7, sp, #0
    34f2:	1c02      	adds	r2, r0, #0
    34f4:	1dfb      	adds	r3, r7, #7
    34f6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:53
	{
		sendAChar('E');
		return;
	}

	R1 = (unsigned char) (sample % 10) + '0';
    34f8:	1dfb      	adds	r3, r7, #7
    34fa:	781b      	ldrb	r3, [r3, #0]
    34fc:	1c18      	adds	r0, r3, #0
    34fe:	210a      	movs	r1, #10
    3500:	f7fd f836 	bl	570 <__aeabi_uidivmod>
    3504:	1c0b      	adds	r3, r1, #0
    3506:	b2da      	uxtb	r2, r3
    3508:	1c3b      	adds	r3, r7, #0
    350a:	331f      	adds	r3, #31
    350c:	3230      	adds	r2, #48	; 0x30
    350e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:54
	Q1 = sample / 10;
    3510:	1dfb      	adds	r3, r7, #7
    3512:	781b      	ldrb	r3, [r3, #0]
    3514:	1c18      	adds	r0, r3, #0
    3516:	210a      	movs	r1, #10
    3518:	f7fc ffe6 	bl	4e8 <__aeabi_uidiv>
    351c:	1c03      	adds	r3, r0, #0
    351e:	b2db      	uxtb	r3, r3
    3520:	61bb      	str	r3, [r7, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:56

	R2 = (unsigned char) (Q1 % 10) + '0';
    3522:	69bb      	ldr	r3, [r7, #24]
    3524:	1c18      	adds	r0, r3, #0
    3526:	210a      	movs	r1, #10
    3528:	f7fd f882 	bl	630 <__aeabi_idivmod>
    352c:	1c0b      	adds	r3, r1, #0
    352e:	b2da      	uxtb	r2, r3
    3530:	1c3b      	adds	r3, r7, #0
    3532:	3317      	adds	r3, #23
    3534:	3230      	adds	r2, #48	; 0x30
    3536:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:57
	Q2 = Q1 / 10;
    3538:	69bb      	ldr	r3, [r7, #24]
    353a:	1c18      	adds	r0, r3, #0
    353c:	210a      	movs	r1, #10
    353e:	f7fd f821 	bl	584 <__aeabi_idiv>
    3542:	1c03      	adds	r3, r0, #0
    3544:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:59

	R3 = (unsigned char) (Q2 % 10) + '0';
    3546:	693b      	ldr	r3, [r7, #16]
    3548:	1c18      	adds	r0, r3, #0
    354a:	210a      	movs	r1, #10
    354c:	f7fd f870 	bl	630 <__aeabi_idivmod>
    3550:	1c0b      	adds	r3, r1, #0
    3552:	b2da      	uxtb	r2, r3
    3554:	1c3b      	adds	r3, r7, #0
    3556:	330f      	adds	r3, #15
    3558:	3230      	adds	r2, #48	; 0x30
    355a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:61

	sendAChar(R3);
    355c:	1c3b      	adds	r3, r7, #0
    355e:	330f      	adds	r3, #15
    3560:	781b      	ldrb	r3, [r3, #0]
    3562:	1c18      	adds	r0, r3, #0
    3564:	f7ff ffa0 	bl	34a8 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:62
	sendAChar(R2);
    3568:	1c3b      	adds	r3, r7, #0
    356a:	3317      	adds	r3, #23
    356c:	781b      	ldrb	r3, [r3, #0]
    356e:	1c18      	adds	r0, r3, #0
    3570:	f7ff ff9a 	bl	34a8 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:63
	sendAChar(R1);
    3574:	1c3b      	adds	r3, r7, #0
    3576:	331f      	adds	r3, #31
    3578:	781b      	ldrb	r3, [r3, #0]
    357a:	1c18      	adds	r0, r3, #0
    357c:	f7ff ff94 	bl	34a8 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:64
}
    3580:	46bd      	mov	sp, r7
    3582:	b008      	add	sp, #32
    3584:	bd80      	pop	{r7, pc}
    3586:	46c0      	nop			; (mov r8, r8)

00003588 <sendArrayOfPixels>:
sendArrayOfPixels():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:67

void sendArrayOfPixels(uint8 array[])
{
    3588:	b580      	push	{r7, lr}
    358a:	b084      	sub	sp, #16
    358c:	af00      	add	r7, sp, #0
    358e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:68
	init_Serial();
    3590:	f7ff ff7a 	bl	3488 <init_Serial>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:70

	for (int pixel = 0; pixel < 128; pixel++)
    3594:	2300      	movs	r3, #0
    3596:	60fb      	str	r3, [r7, #12]
    3598:	e00c      	b.n	35b4 <sendArrayOfPixels+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:72 (discriminator 2)
	{
		itoa_8_bit(array[pixel]);
    359a:	68fb      	ldr	r3, [r7, #12]
    359c:	687a      	ldr	r2, [r7, #4]
    359e:	18d3      	adds	r3, r2, r3
    35a0:	781b      	ldrb	r3, [r3, #0]
    35a2:	1c18      	adds	r0, r3, #0
    35a4:	f7ff ffa2 	bl	34ec <itoa_8_bit>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:73 (discriminator 2)
		sendAChar(' ');
    35a8:	2020      	movs	r0, #32
    35aa:	f7ff ff7d 	bl	34a8 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:70 (discriminator 2)

void sendArrayOfPixels(uint8 array[])
{
	init_Serial();

	for (int pixel = 0; pixel < 128; pixel++)
    35ae:	68fb      	ldr	r3, [r7, #12]
    35b0:	3301      	adds	r3, #1
    35b2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:70 (discriminator 1)
    35b4:	68fb      	ldr	r3, [r7, #12]
    35b6:	2b7f      	cmp	r3, #127	; 0x7f
    35b8:	ddef      	ble.n	359a <sendArrayOfPixels+0x12>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:76
	{
		itoa_8_bit(array[pixel]);
		sendAChar(' ');
	}

	sendAChar('\n');
    35ba:	200a      	movs	r0, #10
    35bc:	f7ff ff74 	bl	34a8 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:77
	sendAChar('\r');
    35c0:	200d      	movs	r0, #13
    35c2:	f7ff ff71 	bl	34a8 <sendAChar>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:79

	serialFinished = TRUE;
    35c6:	4b03      	ldr	r3, [pc, #12]	; (35d4 <sendArrayOfPixels+0x4c>)
    35c8:	2201      	movs	r2, #1
    35ca:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SerialCommunication.c:80
}
    35cc:	46bd      	mov	sp, r7
    35ce:	b004      	add	sp, #16
    35d0:	bd80      	pop	{r7, pc}
    35d2:	46c0      	nop			; (mov r8, r8)
    35d4:	1ffff1b0 	.word	0x1ffff1b0

000035d8 <setServoDirection>:
setServoDirection():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ServoController.c:19
 *    Positive values: Turn right (max: 350)
 *
 *    Wait 480 ms between two calls of this function
 */
void setServoDirection(int direction)
{
    35d8:	b580      	push	{r7, lr}
    35da:	b082      	sub	sp, #8
    35dc:	af00      	add	r7, sp, #0
    35de:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ServoController.c:20
	if (direction < -RATE || direction > RATE)
    35e0:	687a      	ldr	r2, [r7, #4]
    35e2:	4b0b      	ldr	r3, [pc, #44]	; (3610 <setServoDirection+0x38>)
    35e4:	429a      	cmp	r2, r3
    35e6:	db04      	blt.n	35f2 <setServoDirection+0x1a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ServoController.c:20 (discriminator 1)
    35e8:	687a      	ldr	r2, [r7, #4]
    35ea:	23af      	movs	r3, #175	; 0xaf
    35ec:	005b      	lsls	r3, r3, #1
    35ee:	429a      	cmp	r2, r3
    35f0:	dd00      	ble.n	35f4 <setServoDirection+0x1c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ServoController.c:22
	{
		return;
    35f2:	e00a      	b.n	360a <setServoDirection+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ServoController.c:25
	}

	Servomotor_SetDutyUS(CENTER - direction);
    35f4:	4b07      	ldr	r3, [pc, #28]	; (3614 <setServoDirection+0x3c>)
    35f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    35f8:	687b      	ldr	r3, [r7, #4]
    35fa:	b29b      	uxth	r3, r3
    35fc:	4906      	ldr	r1, [pc, #24]	; (3618 <setServoDirection+0x40>)
    35fe:	1acb      	subs	r3, r1, r3
    3600:	b29b      	uxth	r3, r3
    3602:	1c10      	adds	r0, r2, #0
    3604:	1c19      	adds	r1, r3, #0
    3606:	f001 faf9 	bl	4bfc <PwmLdd5_SetDutyUS>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/ServoController.c:26
}
    360a:	46bd      	mov	sp, r7
    360c:	b002      	add	sp, #8
    360e:	bd80      	pop	{r7, pc}
    3610:	fffffea2 	.word	0xfffffea2
    3614:	1ffff0cc 	.word	0x1ffff0cc
    3618:	00004876 	.word	0x00004876
$d():
    361c:	00000000 	.word	0x00000000

00003620 <advancedControl>:
advancedControl():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SystemController.c:12

#include "SystemController.h"
#include "GreenLED.h"

void advancedControl(double pid_output)
{
    3620:	b590      	push	{r4, r7, lr}
    3622:	b087      	sub	sp, #28
    3624:	af00      	add	r7, sp, #0
    3626:	6038      	str	r0, [r7, #0]
    3628:	6079      	str	r1, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SystemController.c:14

	int servo_parameter = (int) (pid_output * 350.0);
    362a:	6838      	ldr	r0, [r7, #0]
    362c:	6879      	ldr	r1, [r7, #4]
    362e:	4b0f      	ldr	r3, [pc, #60]	; (366c <advancedControl+0x4c>)
    3630:	4a0d      	ldr	r2, [pc, #52]	; (3668 <advancedControl+0x48>)
    3632:	f7fe fee1 	bl	23f8 <__aeabi_dmul>
    3636:	1c03      	adds	r3, r0, #0
    3638:	1c0c      	adds	r4, r1, #0
    363a:	1c18      	adds	r0, r3, #0
    363c:	1c21      	adds	r1, r4, #0
    363e:	f7ff f96b 	bl	2918 <__aeabi_d2iz>
    3642:	1c03      	adds	r3, r0, #0
    3644:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SystemController.c:15
	int left_motor_parameter = 75;
    3646:	234b      	movs	r3, #75	; 0x4b
    3648:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SystemController.c:16
	int right_motor_parameter = 75;
    364a:	234b      	movs	r3, #75	; 0x4b
    364c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SystemController.c:18

	setServoDirection(servo_parameter);
    364e:	697b      	ldr	r3, [r7, #20]
    3650:	1c18      	adds	r0, r3, #0
    3652:	f7ff ffc1 	bl	35d8 <setServoDirection>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SystemController.c:19
	setMotorsSpeed(left_motor_parameter, right_motor_parameter);
    3656:	693a      	ldr	r2, [r7, #16]
    3658:	68fb      	ldr	r3, [r7, #12]
    365a:	1c10      	adds	r0, r2, #0
    365c:	1c19      	adds	r1, r3, #0
    365e:	f7ff fe3b 	bl	32d8 <setMotorsSpeed>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/SystemController.c:21

}
    3662:	46bd      	mov	sp, r7
    3664:	b007      	add	sp, #28
    3666:	bd90      	pop	{r4, r7, pc}
    3668:	00000000 	.word	0x00000000
    366c:	4075e000 	.word	0x4075e000

00003670 <main>:
main():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:99


/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable_Motors MISRA rule (6.3) checking. */
{
    3670:	b590      	push	{r4, r7, lr}
    3672:	b0b9      	sub	sp, #228	; 0xe4
    3674:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:102
	uint8 image[128];
	uint8 lef, rig;
	char str_lef[] = "\n\rLeft: ";
    3676:	1c3b      	adds	r3, r7, #0
    3678:	333c      	adds	r3, #60	; 0x3c
    367a:	4a47      	ldr	r2, [pc, #284]	; (3798 <main+0x128>)
    367c:	ca03      	ldmia	r2!, {r0, r1}
    367e:	c303      	stmia	r3!, {r0, r1}
    3680:	7812      	ldrb	r2, [r2, #0]
    3682:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:103
	char str_rig[] = "\n\rRig: ";
    3684:	1c3b      	adds	r3, r7, #0
    3686:	3334      	adds	r3, #52	; 0x34
    3688:	4a44      	ldr	r2, [pc, #272]	; (379c <main+0x12c>)
    368a:	ca03      	ldmia	r2!, {r0, r1}
    368c:	c303      	stmia	r3!, {r0, r1}
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:109
	SPID pid_controller;
	double pid_error, pid_output;


	/*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
	PE_low_level_init();
    368e:	f000 ffef 	bl	4670 <PE_low_level_init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:113
	/*** End of Processor Expert internal initialization.                    ***/

	// Setar contantes do pid.
	resetPID(&pid_controller);
    3692:	1c3b      	adds	r3, r7, #0
    3694:	1c18      	adds	r0, r3, #0
    3696:	f7ff fe83 	bl	33a0 <resetPID>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:116


	Camera_CLK_Interruption_Enable();
    369a:	4b41      	ldr	r3, [pc, #260]	; (37a0 <main+0x130>)
    369c:	68db      	ldr	r3, [r3, #12]
    369e:	1c18      	adds	r0, r3, #0
    36a0:	f001 ff92 	bl	55c8 <TimerIntLdd1_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:119

	// Enables motors
	Enable_Motors_SetVal();
    36a4:	4b3e      	ldr	r3, [pc, #248]	; (37a0 <main+0x130>)
    36a6:	699b      	ldr	r3, [r3, #24]
    36a8:	1c18      	adds	r0, r3, #0
    36aa:	f000 fd99 	bl	41e0 <BitIoLdd4_SetVal>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:121

	Servomotor_Enable();
    36ae:	4b3c      	ldr	r3, [pc, #240]	; (37a0 <main+0x130>)
    36b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    36b2:	1c18      	adds	r0, r3, #0
    36b4:	f001 fa8a 	bl	4bcc <PwmLdd5_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:124

	// Wait for the SW2 button to be pressed
	while (!SW2_Start_Button_GetVal())
    36b8:	e008      	b.n	36cc <main+0x5c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:126
	{
		getRawImageMean(1);
    36ba:	2001      	movs	r0, #1
    36bc:	f7ff fbdc 	bl	2e78 <getRawImageMean>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:127
		sendArrayOfPixels(rawImage);
    36c0:	4b38      	ldr	r3, [pc, #224]	; (37a4 <main+0x134>)
    36c2:	1c18      	adds	r0, r3, #0
    36c4:	f7ff ff60 	bl	3588 <sendArrayOfPixels>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:128
		updateBatteryLevel();
    36c8:	f7ff fa94 	bl	2bf4 <updateBatteryLevel>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:124 (discriminator 1)
	Enable_Motors_SetVal();

	Servomotor_Enable();

	// Wait for the SW2 button to be pressed
	while (!SW2_Start_Button_GetVal())
    36cc:	4b34      	ldr	r3, [pc, #208]	; (37a0 <main+0x130>)
    36ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    36d0:	1c18      	adds	r0, r3, #0
    36d2:	f000 fd3d 	bl	4150 <BitIoLdd3_GetVal>
    36d6:	1c03      	adds	r3, r0, #0
    36d8:	2b00      	cmp	r3, #0
    36da:	d0ee      	beq.n	36ba <main+0x4a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:131
		getRawImageMean(1);
		sendArrayOfPixels(rawImage);
		updateBatteryLevel();
	}

	while(SW2_Start_Button_GetVal());
    36dc:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:131 (discriminator 1)
    36de:	4b30      	ldr	r3, [pc, #192]	; (37a0 <main+0x130>)
    36e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    36e2:	1c18      	adds	r0, r3, #0
    36e4:	f000 fd34 	bl	4150 <BitIoLdd3_GetVal>
    36e8:	1c03      	adds	r3, r0, #0
    36ea:	2b00      	cmp	r3, #0
    36ec:	d1f7      	bne.n	36de <main+0x6e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:133

	calibration();
    36ee:	f7ff fd2d 	bl	314c <calibration>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:134
	while (!SW2_Start_Button_GetVal());
    36f2:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:134 (discriminator 1)
    36f4:	4b2a      	ldr	r3, [pc, #168]	; (37a0 <main+0x130>)
    36f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    36f8:	1c18      	adds	r0, r3, #0
    36fa:	f000 fd29 	bl	4150 <BitIoLdd3_GetVal>
    36fe:	1c03      	adds	r3, r0, #0
    3700:	2b00      	cmp	r3, #0
    3702:	d0f7      	beq.n	36f4 <main+0x84>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:135
	while(SW2_Start_Button_GetVal());
    3704:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:135 (discriminator 1)
    3706:	4b26      	ldr	r3, [pc, #152]	; (37a0 <main+0x130>)
    3708:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    370a:	1c18      	adds	r0, r3, #0
    370c:	f000 fd20 	bl	4150 <BitIoLdd3_GetVal>
    3710:	1c03      	adds	r3, r0, #0
    3712:	2b00      	cmp	r3, #0
    3714:	d1f7      	bne.n	3706 <main+0x96>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:138

	// test of binarization
	while (0)
    3716:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:163
	}

	// Program Loop
	while (TRUE)
	{
		getRawImageMean(1);
    3718:	2001      	movs	r0, #1
    371a:	f7ff fbad 	bl	2e78 <getRawImageMean>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:165

		binarization(image);
    371e:	1c3b      	adds	r3, r7, #0
    3720:	3348      	adds	r3, #72	; 0x48
    3722:	1c18      	adds	r0, r3, #0
    3724:	f7ff fd30 	bl	3188 <binarization>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:170

		//sendArrayOfPixels(image);

		// obtem o erro atual
		pid_error = get_error(image);
    3728:	1c3b      	adds	r3, r7, #0
    372a:	3348      	adds	r3, #72	; 0x48
    372c:	1c18      	adds	r0, r3, #0
    372e:	f7ff fc15 	bl	2f5c <get_error>
    3732:	1c03      	adds	r3, r0, #0
    3734:	1c0c      	adds	r4, r1, #0
    3736:	22d0      	movs	r2, #208	; 0xd0
    3738:	19d2      	adds	r2, r2, r7
    373a:	6013      	str	r3, [r2, #0]
    373c:	6054      	str	r4, [r2, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:173

		// obtem a saida do pid
		pid_output = update_pid(&pid_controller, pid_error);
    373e:	1c3a      	adds	r2, r7, #0
    3740:	20d0      	movs	r0, #208	; 0xd0
    3742:	19c0      	adds	r0, r0, r7
    3744:	6803      	ldr	r3, [r0, #0]
    3746:	6844      	ldr	r4, [r0, #4]
    3748:	1c10      	adds	r0, r2, #0
    374a:	1c1a      	adds	r2, r3, #0
    374c:	1c23      	adds	r3, r4, #0
    374e:	f7ff fe57 	bl	3400 <update_pid>
    3752:	1c03      	adds	r3, r0, #0
    3754:	1c0c      	adds	r4, r1, #0
    3756:	21c8      	movs	r1, #200	; 0xc8
    3758:	19c9      	adds	r1, r1, r7
    375a:	600b      	str	r3, [r1, #0]
    375c:	604c      	str	r4, [r1, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:176

		// atua sobre a resposta do pid
		advancedControl(pid_output);
    375e:	22c8      	movs	r2, #200	; 0xc8
    3760:	19d2      	adds	r2, r2, r7
    3762:	6813      	ldr	r3, [r2, #0]
    3764:	6854      	ldr	r4, [r2, #4]
    3766:	1c18      	adds	r0, r3, #0
    3768:	1c21      	adds	r1, r4, #0
    376a:	f7ff ff59 	bl	3620 <advancedControl>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:179

		// delay for the servo// Melhorar isso
		for (int i = 0; i < 50000; i++);
    376e:	2300      	movs	r3, #0
    3770:	20dc      	movs	r0, #220	; 0xdc
    3772:	19c0      	adds	r0, r0, r7
    3774:	6003      	str	r3, [r0, #0]
    3776:	e006      	b.n	3786 <main+0x116>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:179 (discriminator 2)
    3778:	21dc      	movs	r1, #220	; 0xdc
    377a:	19c9      	adds	r1, r1, r7
    377c:	680b      	ldr	r3, [r1, #0]
    377e:	3301      	adds	r3, #1
    3780:	22dc      	movs	r2, #220	; 0xdc
    3782:	19d2      	adds	r2, r2, r7
    3784:	6013      	str	r3, [r2, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:179 (discriminator 1)
    3786:	23dc      	movs	r3, #220	; 0xdc
    3788:	19db      	adds	r3, r3, r7
    378a:	681a      	ldr	r2, [r3, #0]
    378c:	4b06      	ldr	r3, [pc, #24]	; (37a8 <main+0x138>)
    378e:	429a      	cmp	r2, r3
    3790:	ddf2      	ble.n	3778 <main+0x108>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:182

		// Update the battery indicator LED
		updateBatteryLevel();
    3792:	f7ff fa2f 	bl	2bf4 <updateBatteryLevel>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Sources/main.c:184
		//sendBatteryLevel();
	}
    3796:	e7bf      	b.n	3718 <main+0xa8>
    3798:	000056e8 	.word	0x000056e8
    379c:	000056f4 	.word	0x000056f4
    37a0:	1ffff0cc 	.word	0x1ffff0cc
    37a4:	1ffff1c8 	.word	0x1ffff1c8
    37a8:	0000c34f 	.word	0x0000c34f

000037ac <__copy_rom_section>:
__copy_rom_section():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:44

/*
 *	Routine to copy a single section from ROM to RAM ...
 */
void __copy_rom_section(unsigned long dst, unsigned long src, unsigned long size)
{
    37ac:	b580      	push	{r7, lr}
    37ae:	b08a      	sub	sp, #40	; 0x28
    37b0:	af00      	add	r7, sp, #0
    37b2:	60f8      	str	r0, [r7, #12]
    37b4:	60b9      	str	r1, [r7, #8]
    37b6:	607a      	str	r2, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:45
	unsigned long len = size;
    37b8:	687b      	ldr	r3, [r7, #4]
    37ba:	627b      	str	r3, [r7, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:47

	const unsigned int size_int = sizeof(int);
    37bc:	2304      	movs	r3, #4
    37be:	623b      	str	r3, [r7, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:48
	const unsigned int mask_int = sizeof(int)-1;
    37c0:	2303      	movs	r3, #3
    37c2:	61fb      	str	r3, [r7, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:50

	const unsigned int size_short = sizeof(short);
    37c4:	2302      	movs	r3, #2
    37c6:	61bb      	str	r3, [r7, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:51
	const unsigned int mask_short = sizeof(short)-1;
    37c8:	2301      	movs	r3, #1
    37ca:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:53

	const unsigned int size_char = sizeof(char);
    37cc:	2301      	movs	r3, #1
    37ce:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:55

	if( dst == src || size == 0)
    37d0:	68fa      	ldr	r2, [r7, #12]
    37d2:	68bb      	ldr	r3, [r7, #8]
    37d4:	429a      	cmp	r2, r3
    37d6:	d002      	beq.n	37de <__copy_rom_section+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:55 (discriminator 1)
    37d8:	687b      	ldr	r3, [r7, #4]
    37da:	2b00      	cmp	r3, #0
    37dc:	d100      	bne.n	37e0 <__copy_rom_section+0x34>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:57
	{
		return;
    37de:	e04d      	b.n	387c <__copy_rom_section+0xd0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:61
	}


	while( len > 0)
    37e0:	e049      	b.n	3876 <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:64
	{

		if( !(src & mask_int) && !(dst & mask_int) && len >= size_int)
    37e2:	68bb      	ldr	r3, [r7, #8]
    37e4:	69fa      	ldr	r2, [r7, #28]
    37e6:	4013      	ands	r3, r2
    37e8:	d118      	bne.n	381c <__copy_rom_section+0x70>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:64 (discriminator 1)
    37ea:	68fb      	ldr	r3, [r7, #12]
    37ec:	69fa      	ldr	r2, [r7, #28]
    37ee:	4013      	ands	r3, r2
    37f0:	d114      	bne.n	381c <__copy_rom_section+0x70>
    37f2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    37f4:	6a3b      	ldr	r3, [r7, #32]
    37f6:	429a      	cmp	r2, r3
    37f8:	d310      	bcc.n	381c <__copy_rom_section+0x70>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:66
		{
			*((int *)dst)  = *((int*)src);
    37fa:	68fb      	ldr	r3, [r7, #12]
    37fc:	68ba      	ldr	r2, [r7, #8]
    37fe:	6812      	ldr	r2, [r2, #0]
    3800:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:67
			dst += size_int;
    3802:	68fa      	ldr	r2, [r7, #12]
    3804:	6a3b      	ldr	r3, [r7, #32]
    3806:	18d3      	adds	r3, r2, r3
    3808:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:68
			src += size_int;
    380a:	68ba      	ldr	r2, [r7, #8]
    380c:	6a3b      	ldr	r3, [r7, #32]
    380e:	18d3      	adds	r3, r2, r3
    3810:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:69
			len -= size_int;
    3812:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    3814:	6a3b      	ldr	r3, [r7, #32]
    3816:	1ad3      	subs	r3, r2, r3
    3818:	627b      	str	r3, [r7, #36]	; 0x24
    381a:	e02c      	b.n	3876 <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:71
		}
		else if( !(src & mask_short) && !(dst & mask_short) && len >= size_short)
    381c:	68bb      	ldr	r3, [r7, #8]
    381e:	697a      	ldr	r2, [r7, #20]
    3820:	4013      	ands	r3, r2
    3822:	d118      	bne.n	3856 <__copy_rom_section+0xaa>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:71 (discriminator 1)
    3824:	68fb      	ldr	r3, [r7, #12]
    3826:	697a      	ldr	r2, [r7, #20]
    3828:	4013      	ands	r3, r2
    382a:	d114      	bne.n	3856 <__copy_rom_section+0xaa>
    382c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    382e:	69bb      	ldr	r3, [r7, #24]
    3830:	429a      	cmp	r2, r3
    3832:	d310      	bcc.n	3856 <__copy_rom_section+0xaa>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:73
		{
			*((short *)dst)  = *((short*)src);
    3834:	68fb      	ldr	r3, [r7, #12]
    3836:	68ba      	ldr	r2, [r7, #8]
    3838:	8812      	ldrh	r2, [r2, #0]
    383a:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:74
			dst += size_short;
    383c:	68fa      	ldr	r2, [r7, #12]
    383e:	69bb      	ldr	r3, [r7, #24]
    3840:	18d3      	adds	r3, r2, r3
    3842:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:75
			src += size_short;
    3844:	68ba      	ldr	r2, [r7, #8]
    3846:	69bb      	ldr	r3, [r7, #24]
    3848:	18d3      	adds	r3, r2, r3
    384a:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:76
			len -= size_short;
    384c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    384e:	69bb      	ldr	r3, [r7, #24]
    3850:	1ad3      	subs	r3, r2, r3
    3852:	627b      	str	r3, [r7, #36]	; 0x24
    3854:	e00f      	b.n	3876 <__copy_rom_section+0xca>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:80
		}
		else
		{
			*((char *)dst)  = *((char*)src);
    3856:	68fb      	ldr	r3, [r7, #12]
    3858:	68ba      	ldr	r2, [r7, #8]
    385a:	7812      	ldrb	r2, [r2, #0]
    385c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:81
			dst += size_char;
    385e:	68fa      	ldr	r2, [r7, #12]
    3860:	693b      	ldr	r3, [r7, #16]
    3862:	18d3      	adds	r3, r2, r3
    3864:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:82
			src += size_char;
    3866:	68ba      	ldr	r2, [r7, #8]
    3868:	693b      	ldr	r3, [r7, #16]
    386a:	18d3      	adds	r3, r2, r3
    386c:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:83
			len -= size_char;
    386e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    3870:	693b      	ldr	r3, [r7, #16]
    3872:	1ad3      	subs	r3, r2, r3
    3874:	627b      	str	r3, [r7, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:61 (discriminator 1)
	{
		return;
	}


	while( len > 0)
    3876:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3878:	2b00      	cmp	r3, #0
    387a:	d1b2      	bne.n	37e2 <__copy_rom_section+0x36>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:86
			dst += size_char;
			src += size_char;
			len -= size_char;
		}
	}
}
    387c:	46bd      	mov	sp, r7
    387e:	b00a      	add	sp, #40	; 0x28
    3880:	bd80      	pop	{r7, pc}
    3882:	46c0      	nop			; (mov r8, r8)

00003884 <__copy_rom_sections_to_ram>:
__copy_rom_sections_to_ram():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:98
 *  It is a table of RomInfo
 *	structures.  The final entry in the table has all-zero
 *	fields.
 */
void __copy_rom_sections_to_ram(void)
{
    3884:	b590      	push	{r4, r7, lr}
    3886:	b083      	sub	sp, #12
    3888:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:102

	int				index;

	if (__S_romp == 0L) return;
    388a:	4b23      	ldr	r3, [pc, #140]	; (3918 <__copy_rom_sections_to_ram+0x94>)
    388c:	2b00      	cmp	r3, #0
    388e:	d100      	bne.n	3892 <__copy_rom_sections_to_ram+0xe>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:102 (discriminator 1)
    3890:	e03e      	b.n	3910 <__copy_rom_sections_to_ram+0x8c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:107

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
    3892:	2300      	movs	r3, #0
    3894:	607b      	str	r3, [r7, #4]
    3896:	e01d      	b.n	38d4 <__copy_rom_sections_to_ram+0x50>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:113
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
	{
		__copy_rom_section( __S_romp[index].Target,
    3898:	491f      	ldr	r1, [pc, #124]	; (3918 <__copy_rom_sections_to_ram+0x94>)
    389a:	687a      	ldr	r2, [r7, #4]
    389c:	1c13      	adds	r3, r2, #0
    389e:	005b      	lsls	r3, r3, #1
    38a0:	189b      	adds	r3, r3, r2
    38a2:	009b      	lsls	r3, r3, #2
    38a4:	18cb      	adds	r3, r1, r3
    38a6:	6858      	ldr	r0, [r3, #4]
    38a8:	491b      	ldr	r1, [pc, #108]	; (3918 <__copy_rom_sections_to_ram+0x94>)
    38aa:	687a      	ldr	r2, [r7, #4]
    38ac:	1c13      	adds	r3, r2, #0
    38ae:	005b      	lsls	r3, r3, #1
    38b0:	189b      	adds	r3, r3, r2
    38b2:	009b      	lsls	r3, r3, #2
    38b4:	5859      	ldr	r1, [r3, r1]
    38b6:	4c18      	ldr	r4, [pc, #96]	; (3918 <__copy_rom_sections_to_ram+0x94>)
    38b8:	687a      	ldr	r2, [r7, #4]
    38ba:	1c13      	adds	r3, r2, #0
    38bc:	005b      	lsls	r3, r3, #1
    38be:	189b      	adds	r3, r3, r2
    38c0:	009b      	lsls	r3, r3, #2
    38c2:	18e3      	adds	r3, r4, r3
    38c4:	3308      	adds	r3, #8
    38c6:	681b      	ldr	r3, [r3, #0]
    38c8:	1c1a      	adds	r2, r3, #0
    38ca:	f7ff ff6f 	bl	37ac <__copy_rom_section>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:111
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
    38ce:	687b      	ldr	r3, [r7, #4]
    38d0:	3301      	adds	r3, #1
    38d2:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:108 (discriminator 1)

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
    38d4:	4910      	ldr	r1, [pc, #64]	; (3918 <__copy_rom_sections_to_ram+0x94>)
    38d6:	687a      	ldr	r2, [r7, #4]
    38d8:	1c13      	adds	r3, r2, #0
    38da:	005b      	lsls	r3, r3, #1
    38dc:	189b      	adds	r3, r3, r2
    38de:	009b      	lsls	r3, r3, #2
    38e0:	585b      	ldr	r3, [r3, r1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:107 (discriminator 1)
	if (__S_romp == 0L) return;

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
    38e2:	2b00      	cmp	r3, #0
    38e4:	d1d8      	bne.n	3898 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:109
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
    38e6:	490c      	ldr	r1, [pc, #48]	; (3918 <__copy_rom_sections_to_ram+0x94>)
    38e8:	687a      	ldr	r2, [r7, #4]
    38ea:	1c13      	adds	r3, r2, #0
    38ec:	005b      	lsls	r3, r3, #1
    38ee:	189b      	adds	r3, r3, r2
    38f0:	009b      	lsls	r3, r3, #2
    38f2:	18cb      	adds	r3, r1, r3
    38f4:	685b      	ldr	r3, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:108

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
    38f6:	2b00      	cmp	r3, #0
    38f8:	d1ce      	bne.n	3898 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:110
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
    38fa:	4907      	ldr	r1, [pc, #28]	; (3918 <__copy_rom_sections_to_ram+0x94>)
    38fc:	687a      	ldr	r2, [r7, #4]
    38fe:	1c13      	adds	r3, r2, #0
    3900:	005b      	lsls	r3, r3, #1
    3902:	189b      	adds	r3, r3, r2
    3904:	009b      	lsls	r3, r3, #2
    3906:	18cb      	adds	r3, r1, r3
    3908:	3308      	adds	r3, #8
    390a:	681b      	ldr	r3, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:109
	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
    390c:	2b00      	cmp	r3, #0
    390e:	d1c3      	bne.n	3898 <__copy_rom_sections_to_ram+0x14>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:118
		__copy_rom_section( __S_romp[index].Target,
							__S_romp[index].Source,
							__S_romp[index].Size );

	}
}
    3910:	46bd      	mov	sp, r7
    3912:	b003      	add	sp, #12
    3914:	bd90      	pop	{r4, r7, pc}
    3916:	46c0      	nop			; (mov r8, r8)
    3918:	000058b0 	.word	0x000058b0

0000391c <__init_registers>:
__init_registers():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:168
  }
}
#endif

void __attribute__ ((weak)) __init_registers(void)
{
    391c:	b580      	push	{r7, lr}
    391e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:174
  #if defined(SCB_CPACR)
  /* Initialize FPU */
  SCB_CPACR |= SCB_CPACR_CP10(3U) | SCB_CPACR_CP11(3U); 
  #endif

}
    3920:	46bd      	mov	sp, r7
    3922:	bd80      	pop	{r7, pc}

00003924 <__init_user>:
__init_user():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:182
{

}

void __attribute__ ((weak)) __init_user(void)
{
    3924:	b580      	push	{r7, lr}
    3926:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:184

}
    3928:	46bd      	mov	sp, r7
    392a:	bd80      	pop	{r7, pc}

0000392c <__thumb_startup>:
__thumb_startup():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:197
	__thumb_startup();
}

__attribute__((naked)) void __thumb_startup(void)
{
int addr = (int)__SP_INIT;
    392c:	4c0a      	ldr	r4, [pc, #40]	; (3958 <skip_sp+0x18>)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:202

    /* setup the stack before we attempt anything else
       skip stack setup if __SP_INIT is 0
       assume sp is already setup. */
    __asm (
    392e:	1c20      	adds	r0, r4, #0
    3930:	2800      	cmp	r0, #0
    3932:	d005      	beq.n	3940 <skip_sp>
    3934:	4685      	mov	sp, r0
    3936:	b081      	sub	sp, #4
    3938:	2000      	movs	r0, #0
    393a:	43c0      	mvns	r0, r0
    393c:	9000      	str	r0, [sp, #0]
    393e:	b001      	add	sp, #4

00003940 <skip_sp>:
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:216
    "add  sp,#4\n\t"
    "skip_sp:\n\t"
    ::"r"(addr));

    /* Setup registers */
    __init_registers();
    3940:	f7ff ffec 	bl	391c <__init_registers>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:219
    
    /* setup hardware */
    __init_hardware();
    3944:	f000 fe0c 	bl	4560 <__init_hardware>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:222
    
    /* SUPPORT_ROM_TO_RAM */
    __copy_rom_sections_to_ram();
    3948:	f7ff ff9c 	bl	3884 <__copy_rom_sections_to_ram>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:225
    
    /* initializations before main, user specific */
    __init_user();
    394c:	f7ff ffea 	bl	3924 <__init_user>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:228

#ifndef __ATOLLIC__
    _start();
    3950:	f7fc fd8e 	bl	470 <_mainCRTStartup>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Project_Settings/Startup_Code/startup.c:238 (discriminator 1)
    __libc_init_array();
    main();
#endif

    /*	should never get here */
    while (1);
    3954:	e7fe      	b.n	3954 <skip_sp+0x14>
    3956:	46c0      	nop			; (mov r8, r8)
    3958:	20003000 	.word	0x20003000

0000395c <ClrSumV>:
ClrSumV():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:133
**         number of last conversions.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void ClrSumV(void)
{
    395c:	b580      	push	{r7, lr}
    395e:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:134
  AD_Converter_OutV[0] = 0U;           /* Set variable for storing measured values to 0 */
    3960:	4b03      	ldr	r3, [pc, #12]	; (3970 <ClrSumV+0x14>)
    3962:	2200      	movs	r2, #0
    3964:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:135
  AD_Converter_OutV[1] = 0U;           /* Set variable for storing measured values to 0 */
    3966:	4b02      	ldr	r3, [pc, #8]	; (3970 <ClrSumV+0x14>)
    3968:	2200      	movs	r2, #0
    396a:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:136
}
    396c:	46bd      	mov	sp, r7
    396e:	bd80      	pop	{r7, pc}
    3970:	1ffff34c 	.word	0x1ffff34c

00003974 <AD_Converter_HWEnDi>:
AD_Converter_HWEnDi():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:150
**         Enable and Disable methods and several internal methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AD_Converter_HWEnDi(void)
{
    3974:	b580      	push	{r7, lr}
    3976:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:151
  if (ModeFlg) {                       /* Start or stop measurement? */
    3978:	4b1e      	ldr	r3, [pc, #120]	; (39f4 <AD_Converter_HWEnDi+0x80>)
    397a:	781b      	ldrb	r3, [r3, #0]
    397c:	b2db      	uxtb	r3, r3
    397e:	2b00      	cmp	r3, #0
    3980:	d036      	beq.n	39f0 <AD_Converter_HWEnDi+0x7c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:152
    if (ModeFlg != SINGLE) {
    3982:	4b1c      	ldr	r3, [pc, #112]	; (39f4 <AD_Converter_HWEnDi+0x80>)
    3984:	781b      	ldrb	r3, [r3, #0]
    3986:	b2db      	uxtb	r3, r3
    3988:	2b03      	cmp	r3, #3
    398a:	d00b      	beq.n	39a4 <AD_Converter_HWEnDi+0x30>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:153
      OutFlg = 0U;                     /* Output values aren't available */
    398c:	4b1a      	ldr	r3, [pc, #104]	; (39f8 <AD_Converter_HWEnDi+0x84>)
    398e:	2200      	movs	r2, #0
    3990:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:154
      SumChan = 0U;                    /* Set the counter of measured channels to 0 */
    3992:	4b1a      	ldr	r3, [pc, #104]	; (39fc <AD_Converter_HWEnDi+0x88>)
    3994:	2200      	movs	r2, #0
    3996:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:155
      ClrSumV();                       /* Clear measured values */
    3998:	f7ff ffe0 	bl	395c <ClrSumV>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:156
      SampleGroup[0].ChannelIdx = 0U;
    399c:	4b18      	ldr	r3, [pc, #96]	; (3a00 <AD_Converter_HWEnDi+0x8c>)
    399e:	2200      	movs	r2, #0
    39a0:	701a      	strb	r2, [r3, #0]
    39a2:	e018      	b.n	39d6 <AD_Converter_HWEnDi+0x62>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:159
    }
    else {
      OutFlg &= (byte)(~(byte)Table[SumChan]); /* Output value isn't available */
    39a4:	4b15      	ldr	r3, [pc, #84]	; (39fc <AD_Converter_HWEnDi+0x88>)
    39a6:	781b      	ldrb	r3, [r3, #0]
    39a8:	b2db      	uxtb	r3, r3
    39aa:	4a16      	ldr	r2, [pc, #88]	; (3a04 <AD_Converter_HWEnDi+0x90>)
    39ac:	5cd3      	ldrb	r3, [r2, r3]
    39ae:	43db      	mvns	r3, r3
    39b0:	b2db      	uxtb	r3, r3
    39b2:	4a11      	ldr	r2, [pc, #68]	; (39f8 <AD_Converter_HWEnDi+0x84>)
    39b4:	7812      	ldrb	r2, [r2, #0]
    39b6:	b2d2      	uxtb	r2, r2
    39b8:	4013      	ands	r3, r2
    39ba:	b2da      	uxtb	r2, r3
    39bc:	4b0e      	ldr	r3, [pc, #56]	; (39f8 <AD_Converter_HWEnDi+0x84>)
    39be:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:160
      AD_Converter_OutV[SumChan] = 0U; /* Set variable for storing measured values to 0 */
    39c0:	4b0e      	ldr	r3, [pc, #56]	; (39fc <AD_Converter_HWEnDi+0x88>)
    39c2:	781b      	ldrb	r3, [r3, #0]
    39c4:	b2db      	uxtb	r3, r3
    39c6:	4a10      	ldr	r2, [pc, #64]	; (3a08 <AD_Converter_HWEnDi+0x94>)
    39c8:	2100      	movs	r1, #0
    39ca:	54d1      	strb	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:161
      SampleGroup[0].ChannelIdx = SumChan;
    39cc:	4b0b      	ldr	r3, [pc, #44]	; (39fc <AD_Converter_HWEnDi+0x88>)
    39ce:	781b      	ldrb	r3, [r3, #0]
    39d0:	b2da      	uxtb	r2, r3
    39d2:	4b0b      	ldr	r3, [pc, #44]	; (3a00 <AD_Converter_HWEnDi+0x8c>)
    39d4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:163
    }
    (void)AdcLdd1_CreateSampleGroup(AdcLdd1_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    39d6:	4b0d      	ldr	r3, [pc, #52]	; (3a0c <AD_Converter_HWEnDi+0x98>)
    39d8:	681a      	ldr	r2, [r3, #0]
    39da:	4b09      	ldr	r3, [pc, #36]	; (3a00 <AD_Converter_HWEnDi+0x8c>)
    39dc:	1c10      	adds	r0, r2, #0
    39de:	1c19      	adds	r1, r3, #0
    39e0:	2201      	movs	r2, #1
    39e2:	f000 f997 	bl	3d14 <AdcLdd1_CreateSampleGroup>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:164
    (void)AdcLdd1_StartSingleMeasurement(AdcLdd1_DeviceDataPtr);
    39e6:	4b09      	ldr	r3, [pc, #36]	; (3a0c <AD_Converter_HWEnDi+0x98>)
    39e8:	681b      	ldr	r3, [r3, #0]
    39ea:	1c18      	adds	r0, r3, #0
    39ec:	f000 f970 	bl	3cd0 <AdcLdd1_StartSingleMeasurement>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:166
  }
}
    39f0:	46bd      	mov	sp, r7
    39f2:	bd80      	pop	{r7, pc}
    39f4:	1ffff085 	.word	0x1ffff085
    39f8:	1ffff08c 	.word	0x1ffff08c
    39fc:	1ffff084 	.word	0x1ffff084
    3a00:	1ffff088 	.word	0x1ffff088
    3a04:	00005810 	.word	0x00005810
    3a08:	1ffff34c 	.word	0x1ffff34c
    3a0c:	1ffff348 	.word	0x1ffff348

00003a10 <AD_Converter_MeasureChan>:
AD_Converter_MeasureChan():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:252
byte AD_Converter_MeasureChan(bool WaitForResult, byte Channel)
was optimised based on the current component setting. An appropriate macro has been defined 
in the AD1.h to maintain API compatibility.
*/
byte AD_Converter_MeasureChan(bool WaitForResult,byte Channel)
{
    3a10:	b580      	push	{r7, lr}
    3a12:	b082      	sub	sp, #8
    3a14:	af00      	add	r7, sp, #0
    3a16:	1c0a      	adds	r2, r1, #0
    3a18:	1dfb      	adds	r3, r7, #7
    3a1a:	1c01      	adds	r1, r0, #0
    3a1c:	7019      	strb	r1, [r3, #0]
    3a1e:	1dbb      	adds	r3, r7, #6
    3a20:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:253
  if (Channel >= 2U) {                 /* Is channel number greater than or equal to 2 */
    3a22:	1dbb      	adds	r3, r7, #6
    3a24:	781b      	ldrb	r3, [r3, #0]
    3a26:	2b01      	cmp	r3, #1
    3a28:	d901      	bls.n	3a2e <AD_Converter_MeasureChan+0x1e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:254
    return ERR_RANGE;                  /* If yes then error */
    3a2a:	2302      	movs	r3, #2
    3a2c:	e01a      	b.n	3a64 <AD_Converter_MeasureChan+0x54>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:256
  }
  if (ModeFlg != STOP) {               /* Is the device in different mode than "stop"? */
    3a2e:	4b0f      	ldr	r3, [pc, #60]	; (3a6c <AD_Converter_MeasureChan+0x5c>)
    3a30:	781b      	ldrb	r3, [r3, #0]
    3a32:	b2db      	uxtb	r3, r3
    3a34:	2b00      	cmp	r3, #0
    3a36:	d001      	beq.n	3a3c <AD_Converter_MeasureChan+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:257
    return ERR_BUSY;                   /* If yes then error */
    3a38:	2308      	movs	r3, #8
    3a3a:	e013      	b.n	3a64 <AD_Converter_MeasureChan+0x54>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:259
  }
  ModeFlg = SINGLE;                    /* Set state of device to the measure mode */
    3a3c:	4b0b      	ldr	r3, [pc, #44]	; (3a6c <AD_Converter_MeasureChan+0x5c>)
    3a3e:	2203      	movs	r2, #3
    3a40:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:260
  SumChan = Channel;                   /* Set required channel */
    3a42:	4b0b      	ldr	r3, [pc, #44]	; (3a70 <AD_Converter_MeasureChan+0x60>)
    3a44:	1dba      	adds	r2, r7, #6
    3a46:	7812      	ldrb	r2, [r2, #0]
    3a48:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:261
  AD_Converter_HWEnDi();               /* Enable the device */
    3a4a:	f7ff ff93 	bl	3974 <AD_Converter_HWEnDi>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:262
  if (WaitForResult) {                 /* Is WaitForResult TRUE? */
    3a4e:	1dfb      	adds	r3, r7, #7
    3a50:	781b      	ldrb	r3, [r3, #0]
    3a52:	2b00      	cmp	r3, #0
    3a54:	d005      	beq.n	3a62 <AD_Converter_MeasureChan+0x52>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:263
    while (ModeFlg == SINGLE) {}       /* If yes then wait for end of measurement */
    3a56:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:263 (discriminator 1)
    3a58:	4b04      	ldr	r3, [pc, #16]	; (3a6c <AD_Converter_MeasureChan+0x5c>)
    3a5a:	781b      	ldrb	r3, [r3, #0]
    3a5c:	b2db      	uxtb	r3, r3
    3a5e:	2b03      	cmp	r3, #3
    3a60:	d0fa      	beq.n	3a58 <AD_Converter_MeasureChan+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:265
  }
  return ERR_OK;                       /* OK */
    3a62:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:266
}
    3a64:	1c18      	adds	r0, r3, #0
    3a66:	46bd      	mov	sp, r7
    3a68:	b002      	add	sp, #8
    3a6a:	bd80      	pop	{r7, pc}
    3a6c:	1ffff085 	.word	0x1ffff085
    3a70:	1ffff084 	.word	0x1ffff084

00003a74 <AD_Converter_GetChanValue>:
AD_Converter_GetChanValue():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:352
byte AD_Converter_GetChanValue(byte Channel, void* Value)
was optimised based on the current component setting. An appropriate macro has been defined 
in the AD1.h to maintain API compatibility.
*/
byte AD_Converter_GetChanValue(byte Channel, void* Value)
{
    3a74:	b580      	push	{r7, lr}
    3a76:	b082      	sub	sp, #8
    3a78:	af00      	add	r7, sp, #0
    3a7a:	1c02      	adds	r2, r0, #0
    3a7c:	6039      	str	r1, [r7, #0]
    3a7e:	1dfb      	adds	r3, r7, #7
    3a80:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:353
  if (Channel >= 2U) {                 /* Is channel number greater than or equal to 2 */
    3a82:	1dfb      	adds	r3, r7, #7
    3a84:	781b      	ldrb	r3, [r3, #0]
    3a86:	2b01      	cmp	r3, #1
    3a88:	d901      	bls.n	3a8e <AD_Converter_GetChanValue+0x1a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:354
    return ERR_RANGE;                  /* If yes then error */
    3a8a:	2302      	movs	r3, #2
    3a8c:	e014      	b.n	3ab8 <AD_Converter_GetChanValue+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:356
  }
  if ((OutFlg & Table[Channel]) == 0U) { /* Is output flag set? */
    3a8e:	1dfb      	adds	r3, r7, #7
    3a90:	781b      	ldrb	r3, [r3, #0]
    3a92:	4a0b      	ldr	r2, [pc, #44]	; (3ac0 <AD_Converter_GetChanValue+0x4c>)
    3a94:	5cd3      	ldrb	r3, [r2, r3]
    3a96:	4a0b      	ldr	r2, [pc, #44]	; (3ac4 <AD_Converter_GetChanValue+0x50>)
    3a98:	7812      	ldrb	r2, [r2, #0]
    3a9a:	b2d2      	uxtb	r2, r2
    3a9c:	4013      	ands	r3, r2
    3a9e:	b2db      	uxtb	r3, r3
    3aa0:	2b00      	cmp	r3, #0
    3aa2:	d101      	bne.n	3aa8 <AD_Converter_GetChanValue+0x34>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:357
    return ERR_NOTAVAIL;               /* If no then error */
    3aa4:	2309      	movs	r3, #9
    3aa6:	e007      	b.n	3ab8 <AD_Converter_GetChanValue+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:360
  }
  /* Copy value from temporary buffer */
  *(AdcLdd1_TResultData *)Value = AD_Converter_OutV[Channel];
    3aa8:	1dfb      	adds	r3, r7, #7
    3aaa:	781b      	ldrb	r3, [r3, #0]
    3aac:	4a06      	ldr	r2, [pc, #24]	; (3ac8 <AD_Converter_GetChanValue+0x54>)
    3aae:	5cd3      	ldrb	r3, [r2, r3]
    3ab0:	b2da      	uxtb	r2, r3
    3ab2:	683b      	ldr	r3, [r7, #0]
    3ab4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:361
  return ERR_OK;
    3ab6:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:362
}
    3ab8:	1c18      	adds	r0, r3, #0
    3aba:	46bd      	mov	sp, r7
    3abc:	b002      	add	sp, #8
    3abe:	bd80      	pop	{r7, pc}
    3ac0:	00005810 	.word	0x00005810
    3ac4:	1ffff08c 	.word	0x1ffff08c
    3ac8:	1ffff34c 	.word	0x1ffff34c

00003acc <AdcLdd1_OnMeasurementComplete>:
AdcLdd1_OnMeasurementComplete():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:420
**         event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AdcLdd1_OnMeasurementComplete(LDD_TUserData *UserDataPtr)
{
    3acc:	b580      	push	{r7, lr}
    3ace:	b082      	sub	sp, #8
    3ad0:	af00      	add	r7, sp, #0
    3ad2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:422
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  if (ModeFlg == CALIBRATING) {        /* If the driver is in CALIBRATING mode */
    3ad4:	4b34      	ldr	r3, [pc, #208]	; (3ba8 <AdcLdd1_OnMeasurementComplete+0xdc>)
    3ad6:	781b      	ldrb	r3, [r3, #0]
    3ad8:	b2db      	uxtb	r3, r3
    3ada:	2b04      	cmp	r3, #4
    3adc:	d108      	bne.n	3af0 <AdcLdd1_OnMeasurementComplete+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:423
    (void)AdcLdd1_GetCalibrationResultStatus(AdcLdd1_DeviceDataPtr);
    3ade:	4b33      	ldr	r3, [pc, #204]	; (3bac <AdcLdd1_OnMeasurementComplete+0xe0>)
    3ae0:	681b      	ldr	r3, [r3, #0]
    3ae2:	1c18      	adds	r0, r3, #0
    3ae4:	f000 f97c 	bl	3de0 <AdcLdd1_GetCalibrationResultStatus>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:424
    ModeFlg = STOP;                    /* Set the device to the stop mode */
    3ae8:	4b2f      	ldr	r3, [pc, #188]	; (3ba8 <AdcLdd1_OnMeasurementComplete+0xdc>)
    3aea:	2200      	movs	r2, #0
    3aec:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:425
    return;                            /* Return from interrupt */
    3aee:	e058      	b.n	3ba2 <AdcLdd1_OnMeasurementComplete+0xd6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:427
  }
  if (ModeFlg != SINGLE) {
    3af0:	4b2d      	ldr	r3, [pc, #180]	; (3ba8 <AdcLdd1_OnMeasurementComplete+0xdc>)
    3af2:	781b      	ldrb	r3, [r3, #0]
    3af4:	b2db      	uxtb	r3, r3
    3af6:	2b03      	cmp	r3, #3
    3af8:	d036      	beq.n	3b68 <AdcLdd1_OnMeasurementComplete+0x9c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:428
    AdcLdd1_GetMeasuredValues(AdcLdd1_DeviceDataPtr, (LDD_TData *)&AD_Converter_OutV[SumChan]);
    3afa:	4b2c      	ldr	r3, [pc, #176]	; (3bac <AdcLdd1_OnMeasurementComplete+0xe0>)
    3afc:	681a      	ldr	r2, [r3, #0]
    3afe:	4b2c      	ldr	r3, [pc, #176]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b00:	781b      	ldrb	r3, [r3, #0]
    3b02:	b2db      	uxtb	r3, r3
    3b04:	1c19      	adds	r1, r3, #0
    3b06:	4b2b      	ldr	r3, [pc, #172]	; (3bb4 <AdcLdd1_OnMeasurementComplete+0xe8>)
    3b08:	18cb      	adds	r3, r1, r3
    3b0a:	1c10      	adds	r0, r2, #0
    3b0c:	1c19      	adds	r1, r3, #0
    3b0e:	f000 f937 	bl	3d80 <AdcLdd1_GetMeasuredValues>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:429
    SumChan++;                         /* Increase counter of measured channels*/
    3b12:	4b27      	ldr	r3, [pc, #156]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b14:	781b      	ldrb	r3, [r3, #0]
    3b16:	b2db      	uxtb	r3, r3
    3b18:	3301      	adds	r3, #1
    3b1a:	b2da      	uxtb	r2, r3
    3b1c:	4b24      	ldr	r3, [pc, #144]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b1e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:430
    if (SumChan == 2U) {               /* Is number of measured channels equal to the number of channels used in the component? */
    3b20:	4b23      	ldr	r3, [pc, #140]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b22:	781b      	ldrb	r3, [r3, #0]
    3b24:	b2db      	uxtb	r3, r3
    3b26:	2b02      	cmp	r3, #2
    3b28:	d10b      	bne.n	3b42 <AdcLdd1_OnMeasurementComplete+0x76>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:431
      SumChan = 0U;                    /* If yes then set the counter of measured channels to 0 */
    3b2a:	4b21      	ldr	r3, [pc, #132]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b2c:	2200      	movs	r2, #0
    3b2e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:432
      OutFlg = 0x03U;                  /* Measured values are available */
    3b30:	4b21      	ldr	r3, [pc, #132]	; (3bb8 <AdcLdd1_OnMeasurementComplete+0xec>)
    3b32:	2203      	movs	r2, #3
    3b34:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:433
      AD_Converter_OnEnd();            /* If yes then invoke user event */
    3b36:	f7ff fae3 	bl	3100 <AD_Converter_OnEnd>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:434
      ModeFlg = STOP;                  /* Set the device to the stop mode */
    3b3a:	4b1b      	ldr	r3, [pc, #108]	; (3ba8 <AdcLdd1_OnMeasurementComplete+0xdc>)
    3b3c:	2200      	movs	r2, #0
    3b3e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:435
      return;                          /* Return from interrupt */
    3b40:	e02f      	b.n	3ba2 <AdcLdd1_OnMeasurementComplete+0xd6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:437
    }
    SampleGroup[0].ChannelIdx = SumChan; /* Start measurement of next channel */
    3b42:	4b1b      	ldr	r3, [pc, #108]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b44:	781b      	ldrb	r3, [r3, #0]
    3b46:	b2da      	uxtb	r2, r3
    3b48:	4b1c      	ldr	r3, [pc, #112]	; (3bbc <AdcLdd1_OnMeasurementComplete+0xf0>)
    3b4a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:438
    (void)AdcLdd1_CreateSampleGroup(AdcLdd1_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    3b4c:	4b17      	ldr	r3, [pc, #92]	; (3bac <AdcLdd1_OnMeasurementComplete+0xe0>)
    3b4e:	681a      	ldr	r2, [r3, #0]
    3b50:	4b1a      	ldr	r3, [pc, #104]	; (3bbc <AdcLdd1_OnMeasurementComplete+0xf0>)
    3b52:	1c10      	adds	r0, r2, #0
    3b54:	1c19      	adds	r1, r3, #0
    3b56:	2201      	movs	r2, #1
    3b58:	f000 f8dc 	bl	3d14 <AdcLdd1_CreateSampleGroup>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:439
    (void)AdcLdd1_StartSingleMeasurement(AdcLdd1_DeviceDataPtr);
    3b5c:	4b13      	ldr	r3, [pc, #76]	; (3bac <AdcLdd1_OnMeasurementComplete+0xe0>)
    3b5e:	681b      	ldr	r3, [r3, #0]
    3b60:	1c18      	adds	r0, r3, #0
    3b62:	f000 f8b5 	bl	3cd0 <AdcLdd1_StartSingleMeasurement>
    3b66:	e01c      	b.n	3ba2 <AdcLdd1_OnMeasurementComplete+0xd6>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:442
  }
  else {
    AdcLdd1_GetMeasuredValues(AdcLdd1_DeviceDataPtr, (LDD_TData *)&AD_Converter_OutV[SumChan]);
    3b68:	4b10      	ldr	r3, [pc, #64]	; (3bac <AdcLdd1_OnMeasurementComplete+0xe0>)
    3b6a:	681a      	ldr	r2, [r3, #0]
    3b6c:	4b10      	ldr	r3, [pc, #64]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b6e:	781b      	ldrb	r3, [r3, #0]
    3b70:	b2db      	uxtb	r3, r3
    3b72:	1c19      	adds	r1, r3, #0
    3b74:	4b0f      	ldr	r3, [pc, #60]	; (3bb4 <AdcLdd1_OnMeasurementComplete+0xe8>)
    3b76:	18cb      	adds	r3, r1, r3
    3b78:	1c10      	adds	r0, r2, #0
    3b7a:	1c19      	adds	r1, r3, #0
    3b7c:	f000 f900 	bl	3d80 <AdcLdd1_GetMeasuredValues>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:443
    OutFlg |= Table[SumChan];          /* Value of measured channel is available */
    3b80:	4b0b      	ldr	r3, [pc, #44]	; (3bb0 <AdcLdd1_OnMeasurementComplete+0xe4>)
    3b82:	781b      	ldrb	r3, [r3, #0]
    3b84:	b2db      	uxtb	r3, r3
    3b86:	4a0e      	ldr	r2, [pc, #56]	; (3bc0 <AdcLdd1_OnMeasurementComplete+0xf4>)
    3b88:	5cd2      	ldrb	r2, [r2, r3]
    3b8a:	4b0b      	ldr	r3, [pc, #44]	; (3bb8 <AdcLdd1_OnMeasurementComplete+0xec>)
    3b8c:	781b      	ldrb	r3, [r3, #0]
    3b8e:	b2db      	uxtb	r3, r3
    3b90:	4313      	orrs	r3, r2
    3b92:	b2da      	uxtb	r2, r3
    3b94:	4b08      	ldr	r3, [pc, #32]	; (3bb8 <AdcLdd1_OnMeasurementComplete+0xec>)
    3b96:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:444
    AD_Converter_OnEnd();              /* If yes then invoke user event */
    3b98:	f7ff fab2 	bl	3100 <AD_Converter_OnEnd>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:445
    ModeFlg = STOP;                    /* Set the device to the stop mode */
    3b9c:	4b02      	ldr	r3, [pc, #8]	; (3ba8 <AdcLdd1_OnMeasurementComplete+0xdc>)
    3b9e:	2200      	movs	r2, #0
    3ba0:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:447
  }
}
    3ba2:	46bd      	mov	sp, r7
    3ba4:	b002      	add	sp, #8
    3ba6:	bd80      	pop	{r7, pc}
    3ba8:	1ffff085 	.word	0x1ffff085
    3bac:	1ffff348 	.word	0x1ffff348
    3bb0:	1ffff084 	.word	0x1ffff084
    3bb4:	1ffff34c 	.word	0x1ffff34c
    3bb8:	1ffff08c 	.word	0x1ffff08c
    3bbc:	1ffff088 	.word	0x1ffff088
    3bc0:	00005810 	.word	0x00005810

00003bc4 <AD_Converter_Init>:
AD_Converter_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:461
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AD_Converter_Init(void)
{
    3bc4:	b580      	push	{r7, lr}
    3bc6:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:462
  OutFlg = 0U;                         /* No measured value */
    3bc8:	4b06      	ldr	r3, [pc, #24]	; (3be4 <AD_Converter_Init+0x20>)
    3bca:	2200      	movs	r2, #0
    3bcc:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:463
  ModeFlg = STOP;                      /* Device isn't running */
    3bce:	4b06      	ldr	r3, [pc, #24]	; (3be8 <AD_Converter_Init+0x24>)
    3bd0:	2200      	movs	r2, #0
    3bd2:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:464
  AdcLdd1_DeviceDataPtr = AdcLdd1_Init(NULL); /* Calling init method of the inherited component */
    3bd4:	2000      	movs	r0, #0
    3bd6:	f000 f80b 	bl	3bf0 <AdcLdd1_Init>
    3bda:	1c02      	adds	r2, r0, #0
    3bdc:	4b03      	ldr	r3, [pc, #12]	; (3bec <AD_Converter_Init+0x28>)
    3bde:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AD_Converter.c:465
}
    3be0:	46bd      	mov	sp, r7
    3be2:	bd80      	pop	{r7, pc}
    3be4:	1ffff08c 	.word	0x1ffff08c
    3be8:	1ffff085 	.word	0x1ffff085
    3bec:	1ffff348 	.word	0x1ffff348

00003bf0 <AdcLdd1_Init>:
AdcLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:183
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* AdcLdd1_Init(LDD_TUserData *UserDataPtr)
{
    3bf0:	b580      	push	{r7, lr}
    3bf2:	b084      	sub	sp, #16
    3bf4:	af00      	add	r7, sp, #0
    3bf6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:188
  /* Allocate LDD device structure */
  AdcLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    3bf8:	4b2b      	ldr	r3, [pc, #172]	; (3ca8 <AdcLdd1_Init+0xb8>)
    3bfa:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:189
  DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
    3bfc:	68fb      	ldr	r3, [r7, #12]
    3bfe:	687a      	ldr	r2, [r7, #4]
    3c00:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:192
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_ADC0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    3c02:	4b2a      	ldr	r3, [pc, #168]	; (3cac <AdcLdd1_Init+0xbc>)
    3c04:	68fa      	ldr	r2, [r7, #12]
    3c06:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:193
  DeviceDataPrv->SampleCount = 0U;     /* Initializing SampleCount for right access of some methods to SC1n registers before first conversion is done */
    3c08:	68fb      	ldr	r3, [r7, #12]
    3c0a:	2200      	movs	r2, #0
    3c0c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:194
  DeviceDataPrv->CompleteStatus = FALSE; /* Clear measurement complete status flag */
    3c0e:	68fb      	ldr	r3, [r7, #12]
    3c10:	2200      	movs	r2, #0
    3c12:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:196
  /* SIM_SCGC6: ADC0=1 */
  SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    3c14:	4a26      	ldr	r2, [pc, #152]	; (3cb0 <AdcLdd1_Init+0xc0>)
    3c16:	4926      	ldr	r1, [pc, #152]	; (3cb0 <AdcLdd1_Init+0xc0>)
    3c18:	4b26      	ldr	r3, [pc, #152]	; (3cb4 <AdcLdd1_Init+0xc4>)
    3c1a:	58cb      	ldr	r3, [r1, r3]
    3c1c:	2180      	movs	r1, #128	; 0x80
    3c1e:	0509      	lsls	r1, r1, #20
    3c20:	4319      	orrs	r1, r3
    3c22:	4b24      	ldr	r3, [pc, #144]	; (3cb4 <AdcLdd1_Init+0xc4>)
    3c24:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:199
  /* Interrupt vector(s) priority setting */
  /* NVIC_IPR3: PRI_15=0x80 */
  NVIC_IPR3 = (uint32_t)((NVIC_IPR3 & (uint32_t)~(uint32_t)(
    3c26:	4a24      	ldr	r2, [pc, #144]	; (3cb8 <AdcLdd1_Init+0xc8>)
    3c28:	4923      	ldr	r1, [pc, #140]	; (3cb8 <AdcLdd1_Init+0xc8>)
    3c2a:	23c3      	movs	r3, #195	; 0xc3
    3c2c:	009b      	lsls	r3, r3, #2
    3c2e:	58cb      	ldr	r3, [r1, r3]
    3c30:	009b      	lsls	r3, r3, #2
    3c32:	0899      	lsrs	r1, r3, #2
    3c34:	23c3      	movs	r3, #195	; 0xc3
    3c36:	009b      	lsls	r3, r3, #2
    3c38:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:205
               NVIC_IP_PRI_15(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_15(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x8000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x8000);
    3c3a:	4b1f      	ldr	r3, [pc, #124]	; (3cb8 <AdcLdd1_Init+0xc8>)
    3c3c:	4a1e      	ldr	r2, [pc, #120]	; (3cb8 <AdcLdd1_Init+0xc8>)
    3c3e:	6812      	ldr	r2, [r2, #0]
    3c40:	2180      	movs	r1, #128	; 0x80
    3c42:	0209      	lsls	r1, r1, #8
    3c44:	430a      	orrs	r2, r1
    3c46:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:207
  /* PORTD_PCR5: ISF=0,MUX=0 */
  PORTD_PCR5 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    3c48:	4b1c      	ldr	r3, [pc, #112]	; (3cbc <AdcLdd1_Init+0xcc>)
    3c4a:	4a1c      	ldr	r2, [pc, #112]	; (3cbc <AdcLdd1_Init+0xcc>)
    3c4c:	6951      	ldr	r1, [r2, #20]
    3c4e:	4a1c      	ldr	r2, [pc, #112]	; (3cc0 <AdcLdd1_Init+0xd0>)
    3c50:	400a      	ands	r2, r1
    3c52:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:209
  /* ADC0_CFG2: MUXSEL=1 */
  ADC0_CFG2 |= ADC_CFG2_MUXSEL_MASK;
    3c54:	4b1b      	ldr	r3, [pc, #108]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c56:	4a1b      	ldr	r2, [pc, #108]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c58:	68d2      	ldr	r2, [r2, #12]
    3c5a:	2110      	movs	r1, #16
    3c5c:	430a      	orrs	r2, r1
    3c5e:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:211
  /* PORTE_PCR29: ISF=0,MUX=0 */
  PORTE_PCR29 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    3c60:	4b19      	ldr	r3, [pc, #100]	; (3cc8 <AdcLdd1_Init+0xd8>)
    3c62:	4a19      	ldr	r2, [pc, #100]	; (3cc8 <AdcLdd1_Init+0xd8>)
    3c64:	6f51      	ldr	r1, [r2, #116]	; 0x74
    3c66:	4a16      	ldr	r2, [pc, #88]	; (3cc0 <AdcLdd1_Init+0xd0>)
    3c68:	400a      	ands	r2, r1
    3c6a:	675a      	str	r2, [r3, #116]	; 0x74
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:213
  /* ADC0_CFG2: MUXSEL=1 */
  ADC0_CFG2 |= ADC_CFG2_MUXSEL_MASK;
    3c6c:	4b15      	ldr	r3, [pc, #84]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c6e:	4a15      	ldr	r2, [pc, #84]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c70:	68d2      	ldr	r2, [r2, #12]
    3c72:	2110      	movs	r1, #16
    3c74:	430a      	orrs	r2, r1
    3c76:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:215
  /* ADC0_CFG1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADLPC=0,ADIV=3,ADLSMP=0,MODE=0,ADICLK=1 */
  ADC0_CFG1 = ADC_CFG1_ADIV(0x03) |
    3c78:	4b12      	ldr	r3, [pc, #72]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c7a:	2261      	movs	r2, #97	; 0x61
    3c7c:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:220
              ADC_CFG1_MODE(0x00) |
              ADC_CFG1_ADICLK(0x01);

  /* ADC0_CFG2: ADACKEN=0,ADHSC=0,ADLSTS=0 */
  ADC0_CFG2 &= (uint32_t)~(uint32_t)(
    3c7e:	4b11      	ldr	r3, [pc, #68]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c80:	4a10      	ldr	r2, [pc, #64]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c82:	68d2      	ldr	r2, [r2, #12]
    3c84:	210f      	movs	r1, #15
    3c86:	438a      	bics	r2, r1
    3c88:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:226
                ADC_CFG2_ADACKEN_MASK |
                ADC_CFG2_ADHSC_MASK |
                ADC_CFG2_ADLSTS(0x03)
               );
  /* ADC0_SC2: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADACT=0,ADTRG=0,ACFE=0,ACFGT=0,ACREN=0,DMAEN=0,REFSEL=0 */
  ADC0_SC2 = ADC_SC2_REFSEL(0x00);
    3c8a:	4b0e      	ldr	r3, [pc, #56]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c8c:	2200      	movs	r2, #0
    3c8e:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:228
  /* ADC0_SC3: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CAL=0,CALF=1,??=0,??=0,ADCO=0,AVGE=0,AVGS=0 */
  ADC0_SC3 = (ADC_SC3_CALF_MASK | ADC_SC3_AVGS(0x00));
    3c90:	4b0c      	ldr	r3, [pc, #48]	; (3cc4 <AdcLdd1_Init+0xd4>)
    3c92:	2240      	movs	r2, #64	; 0x40
    3c94:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:230
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_AdcLdd1_ID,DeviceDataPrv);
    3c96:	4b0d      	ldr	r3, [pc, #52]	; (3ccc <AdcLdd1_Init+0xdc>)
    3c98:	68fa      	ldr	r2, [r7, #12]
    3c9a:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:231
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the data data structure */
    3c9c:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:232
}
    3c9e:	1c18      	adds	r0, r3, #0
    3ca0:	46bd      	mov	sp, r7
    3ca2:	b004      	add	sp, #16
    3ca4:	bd80      	pop	{r7, pc}
    3ca6:	46c0      	nop			; (mov r8, r8)
    3ca8:	1ffff090 	.word	0x1ffff090
    3cac:	1ffff098 	.word	0x1ffff098
    3cb0:	40047000 	.word	0x40047000
    3cb4:	0000103c 	.word	0x0000103c
    3cb8:	e000e100 	.word	0xe000e100
    3cbc:	4004c000 	.word	0x4004c000
    3cc0:	fefff8ff 	.word	0xfefff8ff
    3cc4:	4003b000 	.word	0x4003b000
    3cc8:	4004d000 	.word	0x4004d000
    3ccc:	1ffff0cc 	.word	0x1ffff0cc

00003cd0 <AdcLdd1_StartSingleMeasurement>:
AdcLdd1_StartSingleMeasurement():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:273
**                           ERR_DISABLED - Component is disabled
**                           ERR_BUSY - A measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd1_StartSingleMeasurement(LDD_TDeviceData *DeviceDataPtr)
{
    3cd0:	b580      	push	{r7, lr}
    3cd2:	b082      	sub	sp, #8
    3cd4:	af00      	add	r7, sp, #0
    3cd6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:275
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
    3cd8:	4b0d      	ldr	r3, [pc, #52]	; (3d10 <AdcLdd1_StartSingleMeasurement+0x40>)
    3cda:	6a1a      	ldr	r2, [r3, #32]
    3cdc:	2380      	movs	r3, #128	; 0x80
    3cde:	4013      	ands	r3, r2
    3ce0:	d001      	beq.n	3ce6 <AdcLdd1_StartSingleMeasurement+0x16>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:276
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    3ce2:	2308      	movs	r3, #8
    3ce4:	e010      	b.n	3d08 <AdcLdd1_StartSingleMeasurement+0x38>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:278
  }
  ADC_PDD_SetContinuousMode(ADC0_BASE_PTR, ADC_PDD_ONE_CONVERSION); /* Set one conversion mode */
    3ce6:	4b0a      	ldr	r3, [pc, #40]	; (3d10 <AdcLdd1_StartSingleMeasurement+0x40>)
    3ce8:	4a09      	ldr	r2, [pc, #36]	; (3d10 <AdcLdd1_StartSingleMeasurement+0x40>)
    3cea:	6a52      	ldr	r2, [r2, #36]	; 0x24
    3cec:	2148      	movs	r1, #72	; 0x48
    3cee:	438a      	bics	r2, r1
    3cf0:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:279
  ADC_PDD_SetConversionTriggerType(ADC0_BASE_PTR, ADC_PDD_SW_TRIGGER); /* Select SW triggering */
    3cf2:	4b07      	ldr	r3, [pc, #28]	; (3d10 <AdcLdd1_StartSingleMeasurement+0x40>)
    3cf4:	4a06      	ldr	r2, [pc, #24]	; (3d10 <AdcLdd1_StartSingleMeasurement+0x40>)
    3cf6:	6a12      	ldr	r2, [r2, #32]
    3cf8:	2140      	movs	r1, #64	; 0x40
    3cfa:	438a      	bics	r2, r1
    3cfc:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:280
  ADC_PDD_WriteStatusControl1Reg(ADC0_BASE_PTR, 0U, ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->FirstSample); /* Set sample 0 and start conversion */
    3cfe:	4b04      	ldr	r3, [pc, #16]	; (3d10 <AdcLdd1_StartSingleMeasurement+0x40>)
    3d00:	687a      	ldr	r2, [r7, #4]
    3d02:	7852      	ldrb	r2, [r2, #1]
    3d04:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:281
  return ERR_OK;                       /* OK */
    3d06:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:282
}
    3d08:	1c18      	adds	r0, r3, #0
    3d0a:	46bd      	mov	sp, r7
    3d0c:	b002      	add	sp, #8
    3d0e:	bd80      	pop	{r7, pc}
    3d10:	4003b000 	.word	0x4003b000

00003d14 <AdcLdd1_CreateSampleGroup>:
AdcLdd1_CreateSampleGroup():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:356
**                           variable value is out of range
**                           ERR_BUSY - Measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd1_CreateSampleGroup(LDD_TDeviceData *DeviceDataPtr, LDD_ADC_TSample *SampleGroupPtr, uint8_t SampleCount)
{
    3d14:	b580      	push	{r7, lr}
    3d16:	b086      	sub	sp, #24
    3d18:	af00      	add	r7, sp, #0
    3d1a:	60f8      	str	r0, [r7, #12]
    3d1c:	60b9      	str	r1, [r7, #8]
    3d1e:	1dfb      	adds	r3, r7, #7
    3d20:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:357
  AdcLdd1_TDeviceDataPtr DeviceDataPrv = (AdcLdd1_TDeviceDataPtr)DeviceDataPtr;
    3d22:	68fb      	ldr	r3, [r7, #12]
    3d24:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:361

  /* Sample count test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((SampleCount > AdcLdd1_MAX_HW_SAMPLE_COUNT) || (SampleCount == 0U)) { /* Is number of sample greater then supported by the HW? */
    3d26:	1dfb      	adds	r3, r7, #7
    3d28:	781b      	ldrb	r3, [r3, #0]
    3d2a:	2b01      	cmp	r3, #1
    3d2c:	d803      	bhi.n	3d36 <AdcLdd1_CreateSampleGroup+0x22>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:361 (discriminator 1)
    3d2e:	1dfb      	adds	r3, r7, #7
    3d30:	781b      	ldrb	r3, [r3, #0]
    3d32:	2b00      	cmp	r3, #0
    3d34:	d101      	bne.n	3d3a <AdcLdd1_CreateSampleGroup+0x26>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:362
    return ERR_PARAM_SAMPLE_COUNT;     /* Yes, return ERR_PARAM_SAMPLE_COUNT */
    3d36:	2396      	movs	r3, #150	; 0x96
    3d38:	e01a      	b.n	3d70 <AdcLdd1_CreateSampleGroup+0x5c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:364
  }
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
    3d3a:	4b0f      	ldr	r3, [pc, #60]	; (3d78 <AdcLdd1_CreateSampleGroup+0x64>)
    3d3c:	6a1a      	ldr	r2, [r3, #32]
    3d3e:	2380      	movs	r3, #128	; 0x80
    3d40:	4013      	ands	r3, r2
    3d42:	d001      	beq.n	3d48 <AdcLdd1_CreateSampleGroup+0x34>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:365
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    3d44:	2308      	movs	r3, #8
    3d46:	e013      	b.n	3d70 <AdcLdd1_CreateSampleGroup+0x5c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:367
  }
  DeviceDataPrv->SampleCount = SampleCount; /* Remember sample count */
    3d48:	697b      	ldr	r3, [r7, #20]
    3d4a:	1dfa      	adds	r2, r7, #7
    3d4c:	7812      	ldrb	r2, [r2, #0]
    3d4e:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:370
  /* Channel index test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (SampleGroupPtr[0].ChannelIdx >= AdcLdd1_CHANNEL_COUNT) { /* Is channel index out of range? */
    3d50:	68bb      	ldr	r3, [r7, #8]
    3d52:	781b      	ldrb	r3, [r3, #0]
    3d54:	2b01      	cmp	r3, #1
    3d56:	d901      	bls.n	3d5c <AdcLdd1_CreateSampleGroup+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:371
    return ERR_PARAM_INDEX;            /* Yes, return ERR_PARAM_INDEX */
    3d58:	2382      	movs	r3, #130	; 0x82
    3d5a:	e009      	b.n	3d70 <AdcLdd1_CreateSampleGroup+0x5c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:373
  }
  DeviceDataPrv->FirstSample = (ChannelToPin[SampleGroupPtr[0].ChannelIdx]) | (uint8_t)(LDD_ADC_ON_MEASUREMENT_COMPLETE); /* Remember first sample */
    3d5c:	68bb      	ldr	r3, [r7, #8]
    3d5e:	781b      	ldrb	r3, [r3, #0]
    3d60:	4a06      	ldr	r2, [pc, #24]	; (3d7c <AdcLdd1_CreateSampleGroup+0x68>)
    3d62:	5cd3      	ldrb	r3, [r2, r3]
    3d64:	2240      	movs	r2, #64	; 0x40
    3d66:	4313      	orrs	r3, r2
    3d68:	b2da      	uxtb	r2, r3
    3d6a:	697b      	ldr	r3, [r7, #20]
    3d6c:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:374
  return ERR_OK;                       /* OK */
    3d6e:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:375
}
    3d70:	1c18      	adds	r0, r3, #0
    3d72:	46bd      	mov	sp, r7
    3d74:	b006      	add	sp, #24
    3d76:	bd80      	pop	{r7, pc}
    3d78:	4003b000 	.word	0x4003b000
    3d7c:	00005814 	.word	0x00005814

00003d80 <AdcLdd1_GetMeasuredValues>:
AdcLdd1_GetMeasuredValues():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:410
**                           active clock configuration
**                           ERR_DISABLED - Component is disabled
*/
/* ===================================================================*/
LDD_TError AdcLdd1_GetMeasuredValues(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr)
{
    3d80:	b580      	push	{r7, lr}
    3d82:	b084      	sub	sp, #16
    3d84:	af00      	add	r7, sp, #0
    3d86:	6078      	str	r0, [r7, #4]
    3d88:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:412
  uint8_t Sample;
  AdcLdd1_TResultData *pBuffer = (AdcLdd1_TResultData *)BufferPtr;
    3d8a:	683b      	ldr	r3, [r7, #0]
    3d8c:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:416

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    3d8e:	1c3b      	adds	r3, r7, #0
    3d90:	330f      	adds	r3, #15
    3d92:	2200      	movs	r2, #0
    3d94:	701a      	strb	r2, [r3, #0]
    3d96:	e014      	b.n	3dc2 <AdcLdd1_GetMeasuredValues+0x42>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:417 (discriminator 2)
    pBuffer[Sample] =(uint8_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
    3d98:	1c3b      	adds	r3, r7, #0
    3d9a:	330f      	adds	r3, #15
    3d9c:	781b      	ldrb	r3, [r3, #0]
    3d9e:	68ba      	ldr	r2, [r7, #8]
    3da0:	18d3      	adds	r3, r2, r3
    3da2:	4a0e      	ldr	r2, [pc, #56]	; (3ddc <AdcLdd1_GetMeasuredValues+0x5c>)
    3da4:	1c39      	adds	r1, r7, #0
    3da6:	310f      	adds	r1, #15
    3da8:	7809      	ldrb	r1, [r1, #0]
    3daa:	3104      	adds	r1, #4
    3dac:	0089      	lsls	r1, r1, #2
    3dae:	588a      	ldr	r2, [r1, r2]
    3db0:	b2d2      	uxtb	r2, r2
    3db2:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:416 (discriminator 2)
  uint8_t Sample;
  AdcLdd1_TResultData *pBuffer = (AdcLdd1_TResultData *)BufferPtr;

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd1_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    3db4:	1c3b      	adds	r3, r7, #0
    3db6:	330f      	adds	r3, #15
    3db8:	781a      	ldrb	r2, [r3, #0]
    3dba:	1c3b      	adds	r3, r7, #0
    3dbc:	330f      	adds	r3, #15
    3dbe:	3201      	adds	r2, #1
    3dc0:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:416 (discriminator 1)
    3dc2:	687b      	ldr	r3, [r7, #4]
    3dc4:	781b      	ldrb	r3, [r3, #0]
    3dc6:	1c3a      	adds	r2, r7, #0
    3dc8:	320f      	adds	r2, #15
    3dca:	7812      	ldrb	r2, [r2, #0]
    3dcc:	429a      	cmp	r2, r3
    3dce:	d3e3      	bcc.n	3d98 <AdcLdd1_GetMeasuredValues+0x18>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:419
    pBuffer[Sample] =(uint8_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
  }
  return ERR_OK;                       /* OK */
    3dd0:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:420
}
    3dd2:	1c18      	adds	r0, r3, #0
    3dd4:	46bd      	mov	sp, r7
    3dd6:	b004      	add	sp, #16
    3dd8:	bd80      	pop	{r7, pc}
    3dda:	46c0      	nop			; (mov r8, r8)
    3ddc:	4003b000 	.word	0x4003b000

00003de0 <AdcLdd1_GetCalibrationResultStatus>:
AdcLdd1_GetCalibrationResultStatus():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:508
**                           ERR_FAILED - Last calibration hasn't been
**                           finished correctly
*/
/* ===================================================================*/
LDD_TError AdcLdd1_GetCalibrationResultStatus(LDD_TDeviceData *DeviceDataPtr)
{
    3de0:	b580      	push	{r7, lr}
    3de2:	b084      	sub	sp, #16
    3de4:	af00      	add	r7, sp, #0
    3de6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:512
  uint32_t GainValue;

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (ADC_PDD_GetCalibrationFailedStatusFlag(ADC0_BASE_PTR)) {
    3de8:	4b2a      	ldr	r3, [pc, #168]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3dea:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    3dec:	2340      	movs	r3, #64	; 0x40
    3dee:	4013      	ands	r3, r2
    3df0:	d001      	beq.n	3df6 <AdcLdd1_GetCalibrationResultStatus+0x16>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:513
    return ERR_FAILED;
    3df2:	231b      	movs	r3, #27
    3df4:	e04a      	b.n	3e8c <AdcLdd1_GetCalibrationResultStatus+0xac>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:517
  }
  /* If calibration is successfully passed place calibrated value into gain registers */
  /* Cumulated gradually because of undefined behavior: the order of volatile accesses is undefined in this statement */
  GainValue = ADC_PDD_GetPlus0CalibrationValue(ADC0_BASE_PTR); /* Find plus gain value */
    3df6:	4b27      	ldr	r3, [pc, #156]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3df8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    3dfa:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:518
  GainValue += ADC_PDD_GetPlus1CalibrationValue(ADC0_BASE_PTR);
    3dfc:	4b25      	ldr	r3, [pc, #148]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3dfe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    3e00:	68fa      	ldr	r2, [r7, #12]
    3e02:	18d3      	adds	r3, r2, r3
    3e04:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:519
  GainValue += ADC_PDD_GetPlus2CalibrationValue(ADC0_BASE_PTR);
    3e06:	4b23      	ldr	r3, [pc, #140]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    3e0a:	68fa      	ldr	r2, [r7, #12]
    3e0c:	18d3      	adds	r3, r2, r3
    3e0e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:520
  GainValue += ADC_PDD_GetPlus3CalibrationValue(ADC0_BASE_PTR);
    3e10:	4b20      	ldr	r3, [pc, #128]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3e14:	68fa      	ldr	r2, [r7, #12]
    3e16:	18d3      	adds	r3, r2, r3
    3e18:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:521
  GainValue += ADC_PDD_GetPlus4CalibrationValue(ADC0_BASE_PTR);
    3e1a:	4b1e      	ldr	r3, [pc, #120]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    3e1e:	68fa      	ldr	r2, [r7, #12]
    3e20:	18d3      	adds	r3, r2, r3
    3e22:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:522
  GainValue += ADC_PDD_GetPlusSCalibrationValue(ADC0_BASE_PTR);
    3e24:	4b1b      	ldr	r3, [pc, #108]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    3e28:	68fa      	ldr	r2, [r7, #12]
    3e2a:	18d3      	adds	r3, r2, r3
    3e2c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:523
  GainValue = (GainValue >> 1U) | 0x8000U;
    3e2e:	68fb      	ldr	r3, [r7, #12]
    3e30:	085b      	lsrs	r3, r3, #1
    3e32:	2280      	movs	r2, #128	; 0x80
    3e34:	0212      	lsls	r2, r2, #8
    3e36:	4313      	orrs	r3, r2
    3e38:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:524
  ADC_PDD_SetPlusGainValue(ADC0_BASE_PTR,GainValue); /* Set plus gain value */
    3e3a:	4b16      	ldr	r3, [pc, #88]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e3c:	68fa      	ldr	r2, [r7, #12]
    3e3e:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:525
  GainValue = ADC_PDD_GetMinus0CalibrationValue(ADC0_BASE_PTR); /* Find minus gain value */
    3e40:	4b14      	ldr	r3, [pc, #80]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e42:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    3e44:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:526
  GainValue += ADC_PDD_GetMinus1CalibrationValue(ADC0_BASE_PTR);
    3e46:	4b13      	ldr	r3, [pc, #76]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e48:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    3e4a:	68fa      	ldr	r2, [r7, #12]
    3e4c:	18d3      	adds	r3, r2, r3
    3e4e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:527
  GainValue += ADC_PDD_GetMinus2CalibrationValue(ADC0_BASE_PTR);
    3e50:	4b10      	ldr	r3, [pc, #64]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e52:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    3e54:	68fa      	ldr	r2, [r7, #12]
    3e56:	18d3      	adds	r3, r2, r3
    3e58:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:528
  GainValue += ADC_PDD_GetMinus3CalibrationValue(ADC0_BASE_PTR);
    3e5a:	4b0e      	ldr	r3, [pc, #56]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e5c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    3e5e:	68fa      	ldr	r2, [r7, #12]
    3e60:	18d3      	adds	r3, r2, r3
    3e62:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:529
  GainValue += ADC_PDD_GetMinus4CalibrationValue(ADC0_BASE_PTR);
    3e64:	4b0b      	ldr	r3, [pc, #44]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e66:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    3e68:	68fa      	ldr	r2, [r7, #12]
    3e6a:	18d3      	adds	r3, r2, r3
    3e6c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:530
  GainValue += ADC_PDD_GetMinusSCalibrationValue(ADC0_BASE_PTR);
    3e6e:	4b09      	ldr	r3, [pc, #36]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e70:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    3e72:	68fa      	ldr	r2, [r7, #12]
    3e74:	18d3      	adds	r3, r2, r3
    3e76:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:531
  GainValue =  (GainValue >> 1U) | 0x8000U;
    3e78:	68fb      	ldr	r3, [r7, #12]
    3e7a:	085b      	lsrs	r3, r3, #1
    3e7c:	2280      	movs	r2, #128	; 0x80
    3e7e:	0212      	lsls	r2, r2, #8
    3e80:	4313      	orrs	r3, r2
    3e82:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:532
  ADC_PDD_SetMinusGainValue(ADC0_BASE_PTR,GainValue); /* Set minus gain value */
    3e84:	4b03      	ldr	r3, [pc, #12]	; (3e94 <AdcLdd1_GetCalibrationResultStatus+0xb4>)
    3e86:	68fa      	ldr	r2, [r7, #12]
    3e88:	631a      	str	r2, [r3, #48]	; 0x30
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:533
  return ERR_OK;
    3e8a:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:534
}
    3e8c:	1c18      	adds	r0, r3, #0
    3e8e:	46bd      	mov	sp, r7
    3e90:	b004      	add	sp, #16
    3e92:	bd80      	pop	{r7, pc}
    3e94:	4003b000 	.word	0x4003b000

00003e98 <AdcLdd1_MeasurementCompleteInterrupt>:
AdcLdd1_MeasurementCompleteInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:546
**         Measurement complete interrupt handler
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(AdcLdd1_MeasurementCompleteInterrupt)
{
    3e98:	b580      	push	{r7, lr}
    3e9a:	b082      	sub	sp, #8
    3e9c:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:548
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  AdcLdd1_TDeviceDataPtr DeviceDataPrv = INT_ADC0__DEFAULT_RTOS_ISRPARAM;
    3e9e:	4b08      	ldr	r3, [pc, #32]	; (3ec0 <AdcLdd1_MeasurementCompleteInterrupt+0x28>)
    3ea0:	681b      	ldr	r3, [r3, #0]
    3ea2:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:549
  DeviceDataPrv->CompleteStatus = TRUE; /* Set measurement complete status flag */
    3ea4:	687b      	ldr	r3, [r7, #4]
    3ea6:	2201      	movs	r2, #1
    3ea8:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:550
  AdcLdd1_OnMeasurementComplete(DeviceDataPrv->UserData);
    3eaa:	687b      	ldr	r3, [r7, #4]
    3eac:	685b      	ldr	r3, [r3, #4]
    3eae:	1c18      	adds	r0, r3, #0
    3eb0:	f7ff fe0c 	bl	3acc <AdcLdd1_OnMeasurementComplete>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:551
  (void)ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, 0U); /* Clear conversion complete flag */
    3eb4:	4b03      	ldr	r3, [pc, #12]	; (3ec4 <AdcLdd1_MeasurementCompleteInterrupt+0x2c>)
    3eb6:	691b      	ldr	r3, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/AdcLdd1.c:552
}
    3eb8:	46bd      	mov	sp, r7
    3eba:	b002      	add	sp, #8
    3ebc:	bd80      	pop	{r7, pc}
    3ebe:	46c0      	nop			; (mov r8, r8)
    3ec0:	1ffff098 	.word	0x1ffff098
    3ec4:	4003b000 	.word	0x4003b000

00003ec8 <BitIoLdd1_Init>:
BitIoLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:123
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd1_Init(LDD_TUserData *UserDataPtr)
{
    3ec8:	b580      	push	{r7, lr}
    3eca:	b084      	sub	sp, #16
    3ecc:	af00      	add	r7, sp, #0
    3ece:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:128
  /* Allocate device structure */
  BitIoLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    3ed0:	4b10      	ldr	r3, [pc, #64]	; (3f14 <BitIoLdd1_Init+0x4c>)
    3ed2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:129
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3ed4:	68fb      	ldr	r3, [r7, #12]
    3ed6:	687a      	ldr	r2, [r7, #4]
    3ed8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:132
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x80 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x80);
    3eda:	4b0f      	ldr	r3, [pc, #60]	; (3f18 <BitIoLdd1_Init+0x50>)
    3edc:	4a0e      	ldr	r2, [pc, #56]	; (3f18 <BitIoLdd1_Init+0x50>)
    3ede:	6952      	ldr	r2, [r2, #20]
    3ee0:	2180      	movs	r1, #128	; 0x80
    3ee2:	430a      	orrs	r2, r1
    3ee4:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:135
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x80 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x80));
    3ee6:	4b0c      	ldr	r3, [pc, #48]	; (3f18 <BitIoLdd1_Init+0x50>)
    3ee8:	4a0b      	ldr	r2, [pc, #44]	; (3f18 <BitIoLdd1_Init+0x50>)
    3eea:	6812      	ldr	r2, [r2, #0]
    3eec:	2180      	movs	r1, #128	; 0x80
    3eee:	438a      	bics	r2, r1
    3ef0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:138
  /* Initialization of Port Control register */
  /* PORTD_PCR7: ISF=0,MUX=1 */
  PORTD_PCR7 = (uint32_t)((PORTD_PCR7 & (uint32_t)~(uint32_t)(
    3ef2:	4b0a      	ldr	r3, [pc, #40]	; (3f1c <BitIoLdd1_Init+0x54>)
    3ef4:	4a09      	ldr	r2, [pc, #36]	; (3f1c <BitIoLdd1_Init+0x54>)
    3ef6:	69d1      	ldr	r1, [r2, #28]
    3ef8:	4a09      	ldr	r2, [pc, #36]	; (3f20 <BitIoLdd1_Init+0x58>)
    3efa:	400a      	ands	r2, r1
    3efc:	2180      	movs	r1, #128	; 0x80
    3efe:	0049      	lsls	r1, r1, #1
    3f00:	430a      	orrs	r2, r1
    3f02:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:145
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd1_ID,DeviceDataPrv);
    3f04:	4b07      	ldr	r3, [pc, #28]	; (3f24 <BitIoLdd1_Init+0x5c>)
    3f06:	68fa      	ldr	r2, [r7, #12]
    3f08:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:146
  return ((LDD_TDeviceData *)DeviceDataPrv);
    3f0a:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:147
}
    3f0c:	1c18      	adds	r0, r3, #0
    3f0e:	46bd      	mov	sp, r7
    3f10:	b004      	add	sp, #16
    3f12:	bd80      	pop	{r7, pc}
    3f14:	1ffff09c 	.word	0x1ffff09c
    3f18:	400ff0c0 	.word	0x400ff0c0
    3f1c:	4004c000 	.word	0x4004c000
    3f20:	fefff8ff 	.word	0xfefff8ff
    3f24:	1ffff0cc 	.word	0x1ffff0cc

00003f28 <BitIoLdd1_GetVal>:
BitIoLdd1_GetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:169
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd1_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    3f28:	b580      	push	{r7, lr}
    3f2a:	b084      	sub	sp, #16
    3f2c:	af00      	add	r7, sp, #0
    3f2e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:173
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataOutput(BitIoLdd1_MODULE_BASE_ADDRESS) & BitIoLdd1_PORT_MASK;
    3f30:	4b06      	ldr	r3, [pc, #24]	; (3f4c <BitIoLdd1_GetVal+0x24>)
    3f32:	681a      	ldr	r2, [r3, #0]
    3f34:	2380      	movs	r3, #128	; 0x80
    3f36:	4013      	ands	r3, r2
    3f38:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:174
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    3f3a:	68fb      	ldr	r3, [r7, #12]
    3f3c:	1e5a      	subs	r2, r3, #1
    3f3e:	4193      	sbcs	r3, r2
    3f40:	b2db      	uxtb	r3, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:175
}
    3f42:	1c18      	adds	r0, r3, #0
    3f44:	46bd      	mov	sp, r7
    3f46:	b004      	add	sp, #16
    3f48:	bd80      	pop	{r7, pc}
    3f4a:	46c0      	nop			; (mov r8, r8)
    3f4c:	f80ff0c0 	.word	0xf80ff0c0

00003f50 <BitIoLdd1_ClrVal>:
BitIoLdd1_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:226
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    3f50:	b580      	push	{r7, lr}
    3f52:	b082      	sub	sp, #8
    3f54:	af00      	add	r7, sp, #0
    3f56:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:228
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
    3f58:	4b02      	ldr	r3, [pc, #8]	; (3f64 <BitIoLdd1_ClrVal+0x14>)
    3f5a:	2280      	movs	r2, #128	; 0x80
    3f5c:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:229
}
    3f5e:	46bd      	mov	sp, r7
    3f60:	b002      	add	sp, #8
    3f62:	bd80      	pop	{r7, pc}
    3f64:	f80ff0c0 	.word	0xf80ff0c0

00003f68 <BitIoLdd1_SetVal>:
BitIoLdd1_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:246
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    3f68:	b580      	push	{r7, lr}
    3f6a:	b082      	sub	sp, #8
    3f6c:	af00      	add	r7, sp, #0
    3f6e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:248
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
    3f70:	4b02      	ldr	r3, [pc, #8]	; (3f7c <BitIoLdd1_SetVal+0x14>)
    3f72:	2280      	movs	r2, #128	; 0x80
    3f74:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd1.c:249
}
    3f76:	46bd      	mov	sp, r7
    3f78:	b002      	add	sp, #8
    3f7a:	bd80      	pop	{r7, pc}
    3f7c:	f80ff0c0 	.word	0xf80ff0c0

00003f80 <BitIoLdd10_Init>:
BitIoLdd10_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd10_Init(LDD_TUserData *UserDataPtr)
{
    3f80:	b580      	push	{r7, lr}
    3f82:	b084      	sub	sp, #16
    3f84:	af00      	add	r7, sp, #0
    3f86:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:127
  /* Allocate device structure */
  BitIoLdd10_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    3f88:	4b10      	ldr	r3, [pc, #64]	; (3fcc <BitIoLdd10_Init+0x4c>)
    3f8a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3f8c:	68fb      	ldr	r3, [r7, #12]
    3f8e:	687a      	ldr	r2, [r7, #4]
    3f90:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:131
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=1 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x01);
    3f92:	4b0f      	ldr	r3, [pc, #60]	; (3fd0 <BitIoLdd10_Init+0x50>)
    3f94:	4a0e      	ldr	r2, [pc, #56]	; (3fd0 <BitIoLdd10_Init+0x50>)
    3f96:	6952      	ldr	r2, [r2, #20]
    3f98:	2101      	movs	r1, #1
    3f9a:	430a      	orrs	r2, r1
    3f9c:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:134
  /* Set initialization value */
  /* GPIOE_PDOR: PDO|=1 */
  GPIOE_PDOR |= GPIO_PDOR_PDO(0x01);
    3f9e:	4b0c      	ldr	r3, [pc, #48]	; (3fd0 <BitIoLdd10_Init+0x50>)
    3fa0:	4a0b      	ldr	r2, [pc, #44]	; (3fd0 <BitIoLdd10_Init+0x50>)
    3fa2:	6812      	ldr	r2, [r2, #0]
    3fa4:	2101      	movs	r1, #1
    3fa6:	430a      	orrs	r2, r1
    3fa8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:137
  /* Initialization of Port Control register */
  /* PORTE_PCR0: ISF=0,MUX=1 */
  PORTE_PCR0 = (uint32_t)((PORTE_PCR0 & (uint32_t)~(uint32_t)(
    3faa:	4b0a      	ldr	r3, [pc, #40]	; (3fd4 <BitIoLdd10_Init+0x54>)
    3fac:	4a09      	ldr	r2, [pc, #36]	; (3fd4 <BitIoLdd10_Init+0x54>)
    3fae:	6811      	ldr	r1, [r2, #0]
    3fb0:	4a09      	ldr	r2, [pc, #36]	; (3fd8 <BitIoLdd10_Init+0x58>)
    3fb2:	400a      	ands	r2, r1
    3fb4:	2180      	movs	r1, #128	; 0x80
    3fb6:	0049      	lsls	r1, r1, #1
    3fb8:	430a      	orrs	r2, r1
    3fba:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:144
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd10_ID,DeviceDataPrv);
    3fbc:	4b07      	ldr	r3, [pc, #28]	; (3fdc <BitIoLdd10_Init+0x5c>)
    3fbe:	68fa      	ldr	r2, [r7, #12]
    3fc0:	651a      	str	r2, [r3, #80]	; 0x50
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:145
  return ((LDD_TDeviceData *)DeviceDataPrv);
    3fc2:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd10.c:146
}
    3fc4:	1c18      	adds	r0, r3, #0
    3fc6:	46bd      	mov	sp, r7
    3fc8:	b004      	add	sp, #16
    3fca:	bd80      	pop	{r7, pc}
    3fcc:	1ffff0a0 	.word	0x1ffff0a0
    3fd0:	400ff100 	.word	0x400ff100
    3fd4:	4004d000 	.word	0x4004d000
    3fd8:	fefff8ff 	.word	0xfefff8ff
    3fdc:	1ffff0cc 	.word	0x1ffff0cc

00003fe0 <BitIoLdd11_Init>:
BitIoLdd11_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd11_Init(LDD_TUserData *UserDataPtr)
{
    3fe0:	b580      	push	{r7, lr}
    3fe2:	b084      	sub	sp, #16
    3fe4:	af00      	add	r7, sp, #0
    3fe6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:127
  /* Allocate device structure */
  BitIoLdd11_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    3fe8:	4b10      	ldr	r3, [pc, #64]	; (402c <BitIoLdd11_Init+0x4c>)
    3fea:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    3fec:	68fb      	ldr	r3, [r7, #12]
    3fee:	687a      	ldr	r2, [r7, #4]
    3ff0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:131
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=2 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x02);
    3ff2:	4b0f      	ldr	r3, [pc, #60]	; (4030 <BitIoLdd11_Init+0x50>)
    3ff4:	4a0e      	ldr	r2, [pc, #56]	; (4030 <BitIoLdd11_Init+0x50>)
    3ff6:	6952      	ldr	r2, [r2, #20]
    3ff8:	2102      	movs	r1, #2
    3ffa:	430a      	orrs	r2, r1
    3ffc:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:134
  /* Set initialization value */
  /* GPIOD_PDOR: PDO|=2 */
  GPIOD_PDOR |= GPIO_PDOR_PDO(0x02);
    3ffe:	4b0c      	ldr	r3, [pc, #48]	; (4030 <BitIoLdd11_Init+0x50>)
    4000:	4a0b      	ldr	r2, [pc, #44]	; (4030 <BitIoLdd11_Init+0x50>)
    4002:	6812      	ldr	r2, [r2, #0]
    4004:	2102      	movs	r1, #2
    4006:	430a      	orrs	r2, r1
    4008:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:137
  /* Initialization of Port Control register */
  /* PORTD_PCR1: ISF=0,MUX=1 */
  PORTD_PCR1 = (uint32_t)((PORTD_PCR1 & (uint32_t)~(uint32_t)(
    400a:	4b0a      	ldr	r3, [pc, #40]	; (4034 <BitIoLdd11_Init+0x54>)
    400c:	4a09      	ldr	r2, [pc, #36]	; (4034 <BitIoLdd11_Init+0x54>)
    400e:	6851      	ldr	r1, [r2, #4]
    4010:	4a09      	ldr	r2, [pc, #36]	; (4038 <BitIoLdd11_Init+0x58>)
    4012:	400a      	ands	r2, r1
    4014:	2180      	movs	r1, #128	; 0x80
    4016:	0049      	lsls	r1, r1, #1
    4018:	430a      	orrs	r2, r1
    401a:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:144
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd11_ID,DeviceDataPrv);
    401c:	4b07      	ldr	r3, [pc, #28]	; (403c <BitIoLdd11_Init+0x5c>)
    401e:	68fa      	ldr	r2, [r7, #12]
    4020:	655a      	str	r2, [r3, #84]	; 0x54
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:145
  return ((LDD_TDeviceData *)DeviceDataPrv);
    4022:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd11.c:146
}
    4024:	1c18      	adds	r0, r3, #0
    4026:	46bd      	mov	sp, r7
    4028:	b004      	add	sp, #16
    402a:	bd80      	pop	{r7, pc}
    402c:	1ffff0a4 	.word	0x1ffff0a4
    4030:	400ff0c0 	.word	0x400ff0c0
    4034:	4004c000 	.word	0x4004c000
    4038:	fefff8ff 	.word	0xfefff8ff
    403c:	1ffff0cc 	.word	0x1ffff0cc

00004040 <BitIoLdd2_Init>:
BitIoLdd2_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:123
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd2_Init(LDD_TUserData *UserDataPtr)
{
    4040:	b580      	push	{r7, lr}
    4042:	b084      	sub	sp, #16
    4044:	af00      	add	r7, sp, #0
    4046:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:128
  /* Allocate device structure */
  BitIoLdd2_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4048:	4b10      	ldr	r3, [pc, #64]	; (408c <BitIoLdd2_Init+0x4c>)
    404a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:129
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    404c:	68fb      	ldr	r3, [r7, #12]
    404e:	687a      	ldr	r2, [r7, #4]
    4050:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:132
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=2 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x02);
    4052:	4b0f      	ldr	r3, [pc, #60]	; (4090 <BitIoLdd2_Init+0x50>)
    4054:	4a0e      	ldr	r2, [pc, #56]	; (4090 <BitIoLdd2_Init+0x50>)
    4056:	6952      	ldr	r2, [r2, #20]
    4058:	2102      	movs	r1, #2
    405a:	430a      	orrs	r2, r1
    405c:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:135
  /* Set initialization value */
  /* GPIOE_PDOR: PDO&=~2 */
  GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x02));
    405e:	4b0c      	ldr	r3, [pc, #48]	; (4090 <BitIoLdd2_Init+0x50>)
    4060:	4a0b      	ldr	r2, [pc, #44]	; (4090 <BitIoLdd2_Init+0x50>)
    4062:	6812      	ldr	r2, [r2, #0]
    4064:	2102      	movs	r1, #2
    4066:	438a      	bics	r2, r1
    4068:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:138
  /* Initialization of Port Control register */
  /* PORTE_PCR1: ISF=0,MUX=1 */
  PORTE_PCR1 = (uint32_t)((PORTE_PCR1 & (uint32_t)~(uint32_t)(
    406a:	4b0a      	ldr	r3, [pc, #40]	; (4094 <BitIoLdd2_Init+0x54>)
    406c:	4a09      	ldr	r2, [pc, #36]	; (4094 <BitIoLdd2_Init+0x54>)
    406e:	6851      	ldr	r1, [r2, #4]
    4070:	4a09      	ldr	r2, [pc, #36]	; (4098 <BitIoLdd2_Init+0x58>)
    4072:	400a      	ands	r2, r1
    4074:	2180      	movs	r1, #128	; 0x80
    4076:	0049      	lsls	r1, r1, #1
    4078:	430a      	orrs	r2, r1
    407a:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:145
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd2_ID,DeviceDataPrv);
    407c:	4b07      	ldr	r3, [pc, #28]	; (409c <BitIoLdd2_Init+0x5c>)
    407e:	68fa      	ldr	r2, [r7, #12]
    4080:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:146
  return ((LDD_TDeviceData *)DeviceDataPrv);
    4082:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:147
}
    4084:	1c18      	adds	r0, r3, #0
    4086:	46bd      	mov	sp, r7
    4088:	b004      	add	sp, #16
    408a:	bd80      	pop	{r7, pc}
    408c:	1ffff0a8 	.word	0x1ffff0a8
    4090:	400ff100 	.word	0x400ff100
    4094:	4004d000 	.word	0x4004d000
    4098:	fefff8ff 	.word	0xfefff8ff
    409c:	1ffff0cc 	.word	0x1ffff0cc

000040a0 <BitIoLdd2_GetVal>:
BitIoLdd2_GetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:169
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd2_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    40a0:	b580      	push	{r7, lr}
    40a2:	b084      	sub	sp, #16
    40a4:	af00      	add	r7, sp, #0
    40a6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:173
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataOutput(BitIoLdd2_MODULE_BASE_ADDRESS) & BitIoLdd2_PORT_MASK;
    40a8:	4b06      	ldr	r3, [pc, #24]	; (40c4 <BitIoLdd2_GetVal+0x24>)
    40aa:	681a      	ldr	r2, [r3, #0]
    40ac:	2302      	movs	r3, #2
    40ae:	4013      	ands	r3, r2
    40b0:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:174
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    40b2:	68fb      	ldr	r3, [r7, #12]
    40b4:	1e5a      	subs	r2, r3, #1
    40b6:	4193      	sbcs	r3, r2
    40b8:	b2db      	uxtb	r3, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:175
}
    40ba:	1c18      	adds	r0, r3, #0
    40bc:	46bd      	mov	sp, r7
    40be:	b004      	add	sp, #16
    40c0:	bd80      	pop	{r7, pc}
    40c2:	46c0      	nop			; (mov r8, r8)
    40c4:	f80ff100 	.word	0xf80ff100

000040c8 <BitIoLdd2_ClrVal>:
BitIoLdd2_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:226
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    40c8:	b580      	push	{r7, lr}
    40ca:	b082      	sub	sp, #8
    40cc:	af00      	add	r7, sp, #0
    40ce:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:228
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
    40d0:	4b02      	ldr	r3, [pc, #8]	; (40dc <BitIoLdd2_ClrVal+0x14>)
    40d2:	2202      	movs	r2, #2
    40d4:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:229
}
    40d6:	46bd      	mov	sp, r7
    40d8:	b002      	add	sp, #8
    40da:	bd80      	pop	{r7, pc}
    40dc:	f80ff100 	.word	0xf80ff100

000040e0 <BitIoLdd2_SetVal>:
BitIoLdd2_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:246
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    40e0:	b580      	push	{r7, lr}
    40e2:	b082      	sub	sp, #8
    40e4:	af00      	add	r7, sp, #0
    40e6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:248
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
    40e8:	4b02      	ldr	r3, [pc, #8]	; (40f4 <BitIoLdd2_SetVal+0x14>)
    40ea:	2202      	movs	r2, #2
    40ec:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd2.c:249
}
    40ee:	46bd      	mov	sp, r7
    40f0:	b002      	add	sp, #8
    40f2:	bd80      	pop	{r7, pc}
    40f4:	f80ff100 	.word	0xf80ff100

000040f8 <BitIoLdd3_Init>:
BitIoLdd3_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:119
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd3_Init(LDD_TUserData *UserDataPtr)
{
    40f8:	b580      	push	{r7, lr}
    40fa:	b084      	sub	sp, #16
    40fc:	af00      	add	r7, sp, #0
    40fe:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:124
  /* Allocate device structure */
  BitIoLdd3_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4100:	4b0d      	ldr	r3, [pc, #52]	; (4138 <BitIoLdd3_Init+0x40>)
    4102:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:125
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4104:	68fb      	ldr	r3, [r7, #12]
    4106:	687a      	ldr	r2, [r7, #4]
    4108:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:128
  /* Configure pin as input */
  /* GPIOC_PDDR: PDD&=~0x00020000 */
  GPIOC_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x00020000));
    410a:	4b0c      	ldr	r3, [pc, #48]	; (413c <BitIoLdd3_Init+0x44>)
    410c:	4a0b      	ldr	r2, [pc, #44]	; (413c <BitIoLdd3_Init+0x44>)
    410e:	6951      	ldr	r1, [r2, #20]
    4110:	4a0b      	ldr	r2, [pc, #44]	; (4140 <BitIoLdd3_Init+0x48>)
    4112:	400a      	ands	r2, r1
    4114:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:131
  /* Initialization of Port Control register */
  /* PORTC_PCR17: ISF=0,MUX=1 */
  PORTC_PCR17 = (uint32_t)((PORTC_PCR17 & (uint32_t)~(uint32_t)(
    4116:	4b0b      	ldr	r3, [pc, #44]	; (4144 <BitIoLdd3_Init+0x4c>)
    4118:	4a0a      	ldr	r2, [pc, #40]	; (4144 <BitIoLdd3_Init+0x4c>)
    411a:	6c51      	ldr	r1, [r2, #68]	; 0x44
    411c:	4a0a      	ldr	r2, [pc, #40]	; (4148 <BitIoLdd3_Init+0x50>)
    411e:	400a      	ands	r2, r1
    4120:	2180      	movs	r1, #128	; 0x80
    4122:	0049      	lsls	r1, r1, #1
    4124:	430a      	orrs	r2, r1
    4126:	645a      	str	r2, [r3, #68]	; 0x44
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:138
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd3_ID,DeviceDataPrv);
    4128:	4b08      	ldr	r3, [pc, #32]	; (414c <BitIoLdd3_Init+0x54>)
    412a:	68fa      	ldr	r2, [r7, #12]
    412c:	639a      	str	r2, [r3, #56]	; 0x38
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:139
  return ((LDD_TDeviceData *)DeviceDataPrv);
    412e:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:140
}
    4130:	1c18      	adds	r0, r3, #0
    4132:	46bd      	mov	sp, r7
    4134:	b004      	add	sp, #16
    4136:	bd80      	pop	{r7, pc}
    4138:	1ffff0ac 	.word	0x1ffff0ac
    413c:	400ff080 	.word	0x400ff080
    4140:	fffdffff 	.word	0xfffdffff
    4144:	4004b000 	.word	0x4004b000
    4148:	fefff8ff 	.word	0xfefff8ff
    414c:	1ffff0cc 	.word	0x1ffff0cc

00004150 <BitIoLdd3_GetVal>:
BitIoLdd3_GetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:162
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd3_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    4150:	b580      	push	{r7, lr}
    4152:	b084      	sub	sp, #16
    4154:	af00      	add	r7, sp, #0
    4156:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:166
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd3_MODULE_BASE_ADDRESS) & BitIoLdd3_PORT_MASK;
    4158:	4b06      	ldr	r3, [pc, #24]	; (4174 <BitIoLdd3_GetVal+0x24>)
    415a:	691a      	ldr	r2, [r3, #16]
    415c:	2380      	movs	r3, #128	; 0x80
    415e:	029b      	lsls	r3, r3, #10
    4160:	4013      	ands	r3, r2
    4162:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:167
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    4164:	68fb      	ldr	r3, [r7, #12]
    4166:	1e5a      	subs	r2, r3, #1
    4168:	4193      	sbcs	r3, r2
    416a:	b2db      	uxtb	r3, r3
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd3.c:168
}
    416c:	1c18      	adds	r0, r3, #0
    416e:	46bd      	mov	sp, r7
    4170:	b004      	add	sp, #16
    4172:	bd80      	pop	{r7, pc}
    4174:	f80ff080 	.word	0xf80ff080

00004178 <BitIoLdd4_Init>:
BitIoLdd4_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:120
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd4_Init(LDD_TUserData *UserDataPtr)
{
    4178:	b580      	push	{r7, lr}
    417a:	b084      	sub	sp, #16
    417c:	af00      	add	r7, sp, #0
    417e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:125
  /* Allocate device structure */
  BitIoLdd4_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4180:	4b11      	ldr	r3, [pc, #68]	; (41c8 <BitIoLdd4_Init+0x50>)
    4182:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:126
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4184:	68fb      	ldr	r3, [r7, #12]
    4186:	687a      	ldr	r2, [r7, #4]
    4188:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:129
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=0x00200000 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x00200000);
    418a:	4b10      	ldr	r3, [pc, #64]	; (41cc <BitIoLdd4_Init+0x54>)
    418c:	4a0f      	ldr	r2, [pc, #60]	; (41cc <BitIoLdd4_Init+0x54>)
    418e:	6952      	ldr	r2, [r2, #20]
    4190:	2180      	movs	r1, #128	; 0x80
    4192:	0389      	lsls	r1, r1, #14
    4194:	430a      	orrs	r2, r1
    4196:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:132
  /* Set initialization value */
  /* GPIOE_PDOR: PDO&=~0x00200000 */
  GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x00200000));
    4198:	4b0c      	ldr	r3, [pc, #48]	; (41cc <BitIoLdd4_Init+0x54>)
    419a:	4a0c      	ldr	r2, [pc, #48]	; (41cc <BitIoLdd4_Init+0x54>)
    419c:	6811      	ldr	r1, [r2, #0]
    419e:	4a0c      	ldr	r2, [pc, #48]	; (41d0 <BitIoLdd4_Init+0x58>)
    41a0:	400a      	ands	r2, r1
    41a2:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:135
  /* Initialization of Port Control register */
  /* PORTE_PCR21: ISF=0,MUX=1 */
  PORTE_PCR21 = (uint32_t)((PORTE_PCR21 & (uint32_t)~(uint32_t)(
    41a4:	4b0b      	ldr	r3, [pc, #44]	; (41d4 <BitIoLdd4_Init+0x5c>)
    41a6:	4a0b      	ldr	r2, [pc, #44]	; (41d4 <BitIoLdd4_Init+0x5c>)
    41a8:	6d51      	ldr	r1, [r2, #84]	; 0x54
    41aa:	4a0b      	ldr	r2, [pc, #44]	; (41d8 <BitIoLdd4_Init+0x60>)
    41ac:	400a      	ands	r2, r1
    41ae:	2180      	movs	r1, #128	; 0x80
    41b0:	0049      	lsls	r1, r1, #1
    41b2:	430a      	orrs	r2, r1
    41b4:	655a      	str	r2, [r3, #84]	; 0x54
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:142
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd4_ID,DeviceDataPrv);
    41b6:	4b09      	ldr	r3, [pc, #36]	; (41dc <BitIoLdd4_Init+0x64>)
    41b8:	68fa      	ldr	r2, [r7, #12]
    41ba:	619a      	str	r2, [r3, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:143
  return ((LDD_TDeviceData *)DeviceDataPrv);
    41bc:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:144
}
    41be:	1c18      	adds	r0, r3, #0
    41c0:	46bd      	mov	sp, r7
    41c2:	b004      	add	sp, #16
    41c4:	bd80      	pop	{r7, pc}
    41c6:	46c0      	nop			; (mov r8, r8)
    41c8:	1ffff0b0 	.word	0x1ffff0b0
    41cc:	400ff100 	.word	0x400ff100
    41d0:	ffdfffff 	.word	0xffdfffff
    41d4:	4004d000 	.word	0x4004d000
    41d8:	fefff8ff 	.word	0xfefff8ff
    41dc:	1ffff0cc 	.word	0x1ffff0cc

000041e0 <BitIoLdd4_SetVal>:
BitIoLdd4_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:180
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd4_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    41e0:	b580      	push	{r7, lr}
    41e2:	b082      	sub	sp, #8
    41e4:	af00      	add	r7, sp, #0
    41e6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:182
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd4_MODULE_BASE_ADDRESS, BitIoLdd4_PORT_MASK);
    41e8:	4b03      	ldr	r3, [pc, #12]	; (41f8 <BitIoLdd4_SetVal+0x18>)
    41ea:	2280      	movs	r2, #128	; 0x80
    41ec:	0392      	lsls	r2, r2, #14
    41ee:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd4.c:183
}
    41f0:	46bd      	mov	sp, r7
    41f2:	b002      	add	sp, #8
    41f4:	bd80      	pop	{r7, pc}
    41f6:	46c0      	nop			; (mov r8, r8)
    41f8:	f80ff100 	.word	0xf80ff100

000041fc <BitIoLdd5_Init>:
BitIoLdd5_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd5_Init(LDD_TUserData *UserDataPtr)
{
    41fc:	b580      	push	{r7, lr}
    41fe:	b084      	sub	sp, #16
    4200:	af00      	add	r7, sp, #0
    4202:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:126
  /* Allocate device structure */
  BitIoLdd5_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4204:	4b11      	ldr	r3, [pc, #68]	; (424c <BitIoLdd5_Init+0x50>)
    4206:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4208:	68fb      	ldr	r3, [r7, #12]
    420a:	687a      	ldr	r2, [r7, #4]
    420c:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0800 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0800);
    420e:	4b10      	ldr	r3, [pc, #64]	; (4250 <BitIoLdd5_Init+0x54>)
    4210:	4a0f      	ldr	r2, [pc, #60]	; (4250 <BitIoLdd5_Init+0x54>)
    4212:	6952      	ldr	r2, [r2, #20]
    4214:	2180      	movs	r1, #128	; 0x80
    4216:	0109      	lsls	r1, r1, #4
    4218:	430a      	orrs	r2, r1
    421a:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0800 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0800));
    421c:	4b0c      	ldr	r3, [pc, #48]	; (4250 <BitIoLdd5_Init+0x54>)
    421e:	4a0c      	ldr	r2, [pc, #48]	; (4250 <BitIoLdd5_Init+0x54>)
    4220:	6811      	ldr	r1, [r2, #0]
    4222:	4a0c      	ldr	r2, [pc, #48]	; (4254 <BitIoLdd5_Init+0x58>)
    4224:	400a      	ands	r2, r1
    4226:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR11: ISF=0,MUX=1 */
  PORTB_PCR11 = (uint32_t)((PORTB_PCR11 & (uint32_t)~(uint32_t)(
    4228:	4b0b      	ldr	r3, [pc, #44]	; (4258 <BitIoLdd5_Init+0x5c>)
    422a:	4a0b      	ldr	r2, [pc, #44]	; (4258 <BitIoLdd5_Init+0x5c>)
    422c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    422e:	4a0b      	ldr	r2, [pc, #44]	; (425c <BitIoLdd5_Init+0x60>)
    4230:	400a      	ands	r2, r1
    4232:	2180      	movs	r1, #128	; 0x80
    4234:	0049      	lsls	r1, r1, #1
    4236:	430a      	orrs	r2, r1
    4238:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:143
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd5_ID,DeviceDataPrv);
    423a:	4b09      	ldr	r3, [pc, #36]	; (4260 <BitIoLdd5_Init+0x64>)
    423c:	68fa      	ldr	r2, [r7, #12]
    423e:	63da      	str	r2, [r3, #60]	; 0x3c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    4240:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:145
}
    4242:	1c18      	adds	r0, r3, #0
    4244:	46bd      	mov	sp, r7
    4246:	b004      	add	sp, #16
    4248:	bd80      	pop	{r7, pc}
    424a:	46c0      	nop			; (mov r8, r8)
    424c:	1ffff0b4 	.word	0x1ffff0b4
    4250:	400ff040 	.word	0x400ff040
    4254:	fffff7ff 	.word	0xfffff7ff
    4258:	4004a000 	.word	0x4004a000
    425c:	fefff8ff 	.word	0xfefff8ff
    4260:	1ffff0cc 	.word	0x1ffff0cc

00004264 <BitIoLdd5_SetVal>:
BitIoLdd5_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd5_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    4264:	b580      	push	{r7, lr}
    4266:	b082      	sub	sp, #8
    4268:	af00      	add	r7, sp, #0
    426a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd5_MODULE_BASE_ADDRESS, BitIoLdd5_PORT_MASK);
    426c:	4b03      	ldr	r3, [pc, #12]	; (427c <BitIoLdd5_SetVal+0x18>)
    426e:	2280      	movs	r2, #128	; 0x80
    4270:	0112      	lsls	r2, r2, #4
    4272:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:184
}
    4274:	46bd      	mov	sp, r7
    4276:	b002      	add	sp, #8
    4278:	bd80      	pop	{r7, pc}
    427a:	46c0      	nop			; (mov r8, r8)
    427c:	f80ff040 	.word	0xf80ff040

00004280 <BitIoLdd5_NegVal>:
BitIoLdd5_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd5_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    4280:	b580      	push	{r7, lr}
    4282:	b082      	sub	sp, #8
    4284:	af00      	add	r7, sp, #0
    4286:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd5_MODULE_BASE_ADDRESS, BitIoLdd5_PORT_MASK);
    4288:	4b03      	ldr	r3, [pc, #12]	; (4298 <BitIoLdd5_NegVal+0x18>)
    428a:	2280      	movs	r2, #128	; 0x80
    428c:	0112      	lsls	r2, r2, #4
    428e:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd5.c:204
}
    4290:	46bd      	mov	sp, r7
    4292:	b002      	add	sp, #8
    4294:	bd80      	pop	{r7, pc}
    4296:	46c0      	nop			; (mov r8, r8)
    4298:	f80ff040 	.word	0xf80ff040

0000429c <BitIoLdd6_Init>:
BitIoLdd6_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd6_Init(LDD_TUserData *UserDataPtr)
{
    429c:	b580      	push	{r7, lr}
    429e:	b084      	sub	sp, #16
    42a0:	af00      	add	r7, sp, #0
    42a2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:126
  /* Allocate device structure */
  BitIoLdd6_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    42a4:	4b11      	ldr	r3, [pc, #68]	; (42ec <BitIoLdd6_Init+0x50>)
    42a6:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    42a8:	68fb      	ldr	r3, [r7, #12]
    42aa:	687a      	ldr	r2, [r7, #4]
    42ac:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0400 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0400);
    42ae:	4b10      	ldr	r3, [pc, #64]	; (42f0 <BitIoLdd6_Init+0x54>)
    42b0:	4a0f      	ldr	r2, [pc, #60]	; (42f0 <BitIoLdd6_Init+0x54>)
    42b2:	6952      	ldr	r2, [r2, #20]
    42b4:	2180      	movs	r1, #128	; 0x80
    42b6:	00c9      	lsls	r1, r1, #3
    42b8:	430a      	orrs	r2, r1
    42ba:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0400 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0400));
    42bc:	4b0c      	ldr	r3, [pc, #48]	; (42f0 <BitIoLdd6_Init+0x54>)
    42be:	4a0c      	ldr	r2, [pc, #48]	; (42f0 <BitIoLdd6_Init+0x54>)
    42c0:	6811      	ldr	r1, [r2, #0]
    42c2:	4a0c      	ldr	r2, [pc, #48]	; (42f4 <BitIoLdd6_Init+0x58>)
    42c4:	400a      	ands	r2, r1
    42c6:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR10: ISF=0,MUX=1 */
  PORTB_PCR10 = (uint32_t)((PORTB_PCR10 & (uint32_t)~(uint32_t)(
    42c8:	4b0b      	ldr	r3, [pc, #44]	; (42f8 <BitIoLdd6_Init+0x5c>)
    42ca:	4a0b      	ldr	r2, [pc, #44]	; (42f8 <BitIoLdd6_Init+0x5c>)
    42cc:	6a91      	ldr	r1, [r2, #40]	; 0x28
    42ce:	4a0b      	ldr	r2, [pc, #44]	; (42fc <BitIoLdd6_Init+0x60>)
    42d0:	400a      	ands	r2, r1
    42d2:	2180      	movs	r1, #128	; 0x80
    42d4:	0049      	lsls	r1, r1, #1
    42d6:	430a      	orrs	r2, r1
    42d8:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:143
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd6_ID,DeviceDataPrv);
    42da:	4b09      	ldr	r3, [pc, #36]	; (4300 <BitIoLdd6_Init+0x64>)
    42dc:	68fa      	ldr	r2, [r7, #12]
    42de:	641a      	str	r2, [r3, #64]	; 0x40
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    42e0:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:145
}
    42e2:	1c18      	adds	r0, r3, #0
    42e4:	46bd      	mov	sp, r7
    42e6:	b004      	add	sp, #16
    42e8:	bd80      	pop	{r7, pc}
    42ea:	46c0      	nop			; (mov r8, r8)
    42ec:	1ffff0b8 	.word	0x1ffff0b8
    42f0:	400ff040 	.word	0x400ff040
    42f4:	fffffbff 	.word	0xfffffbff
    42f8:	4004a000 	.word	0x4004a000
    42fc:	fefff8ff 	.word	0xfefff8ff
    4300:	1ffff0cc 	.word	0x1ffff0cc

00004304 <BitIoLdd6_ClrVal>:
BitIoLdd6_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:161
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    4304:	b580      	push	{r7, lr}
    4306:	b082      	sub	sp, #8
    4308:	af00      	add	r7, sp, #0
    430a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:163
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    430c:	4b03      	ldr	r3, [pc, #12]	; (431c <BitIoLdd6_ClrVal+0x18>)
    430e:	2280      	movs	r2, #128	; 0x80
    4310:	00d2      	lsls	r2, r2, #3
    4312:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:164
}
    4314:	46bd      	mov	sp, r7
    4316:	b002      	add	sp, #8
    4318:	bd80      	pop	{r7, pc}
    431a:	46c0      	nop			; (mov r8, r8)
    431c:	f80ff040 	.word	0xf80ff040

00004320 <BitIoLdd6_SetVal>:
BitIoLdd6_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    4320:	b580      	push	{r7, lr}
    4322:	b082      	sub	sp, #8
    4324:	af00      	add	r7, sp, #0
    4326:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    4328:	4b03      	ldr	r3, [pc, #12]	; (4338 <BitIoLdd6_SetVal+0x18>)
    432a:	2280      	movs	r2, #128	; 0x80
    432c:	00d2      	lsls	r2, r2, #3
    432e:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:184
}
    4330:	46bd      	mov	sp, r7
    4332:	b002      	add	sp, #8
    4334:	bd80      	pop	{r7, pc}
    4336:	46c0      	nop			; (mov r8, r8)
    4338:	f80ff040 	.word	0xf80ff040

0000433c <BitIoLdd6_NegVal>:
BitIoLdd6_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    433c:	b580      	push	{r7, lr}
    433e:	b082      	sub	sp, #8
    4340:	af00      	add	r7, sp, #0
    4342:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    4344:	4b03      	ldr	r3, [pc, #12]	; (4354 <BitIoLdd6_NegVal+0x18>)
    4346:	2280      	movs	r2, #128	; 0x80
    4348:	00d2      	lsls	r2, r2, #3
    434a:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd6.c:204
}
    434c:	46bd      	mov	sp, r7
    434e:	b002      	add	sp, #8
    4350:	bd80      	pop	{r7, pc}
    4352:	46c0      	nop			; (mov r8, r8)
    4354:	f80ff040 	.word	0xf80ff040

00004358 <BitIoLdd7_Init>:
BitIoLdd7_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd7_Init(LDD_TUserData *UserDataPtr)
{
    4358:	b580      	push	{r7, lr}
    435a:	b084      	sub	sp, #16
    435c:	af00      	add	r7, sp, #0
    435e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:126
  /* Allocate device structure */
  BitIoLdd7_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4360:	4b11      	ldr	r3, [pc, #68]	; (43a8 <BitIoLdd7_Init+0x50>)
    4362:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4364:	68fb      	ldr	r3, [r7, #12]
    4366:	687a      	ldr	r2, [r7, #4]
    4368:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0200 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0200);
    436a:	4b10      	ldr	r3, [pc, #64]	; (43ac <BitIoLdd7_Init+0x54>)
    436c:	4a0f      	ldr	r2, [pc, #60]	; (43ac <BitIoLdd7_Init+0x54>)
    436e:	6952      	ldr	r2, [r2, #20]
    4370:	2180      	movs	r1, #128	; 0x80
    4372:	0089      	lsls	r1, r1, #2
    4374:	430a      	orrs	r2, r1
    4376:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0200 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0200));
    4378:	4b0c      	ldr	r3, [pc, #48]	; (43ac <BitIoLdd7_Init+0x54>)
    437a:	4a0c      	ldr	r2, [pc, #48]	; (43ac <BitIoLdd7_Init+0x54>)
    437c:	6811      	ldr	r1, [r2, #0]
    437e:	4a0c      	ldr	r2, [pc, #48]	; (43b0 <BitIoLdd7_Init+0x58>)
    4380:	400a      	ands	r2, r1
    4382:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR9: ISF=0,MUX=1 */
  PORTB_PCR9 = (uint32_t)((PORTB_PCR9 & (uint32_t)~(uint32_t)(
    4384:	4b0b      	ldr	r3, [pc, #44]	; (43b4 <BitIoLdd7_Init+0x5c>)
    4386:	4a0b      	ldr	r2, [pc, #44]	; (43b4 <BitIoLdd7_Init+0x5c>)
    4388:	6a51      	ldr	r1, [r2, #36]	; 0x24
    438a:	4a0b      	ldr	r2, [pc, #44]	; (43b8 <BitIoLdd7_Init+0x60>)
    438c:	400a      	ands	r2, r1
    438e:	2180      	movs	r1, #128	; 0x80
    4390:	0049      	lsls	r1, r1, #1
    4392:	430a      	orrs	r2, r1
    4394:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:143
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd7_ID,DeviceDataPrv);
    4396:	4b09      	ldr	r3, [pc, #36]	; (43bc <BitIoLdd7_Init+0x64>)
    4398:	68fa      	ldr	r2, [r7, #12]
    439a:	645a      	str	r2, [r3, #68]	; 0x44
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    439c:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:145
}
    439e:	1c18      	adds	r0, r3, #0
    43a0:	46bd      	mov	sp, r7
    43a2:	b004      	add	sp, #16
    43a4:	bd80      	pop	{r7, pc}
    43a6:	46c0      	nop			; (mov r8, r8)
    43a8:	1ffff0bc 	.word	0x1ffff0bc
    43ac:	400ff040 	.word	0x400ff040
    43b0:	fffffdff 	.word	0xfffffdff
    43b4:	4004a000 	.word	0x4004a000
    43b8:	fefff8ff 	.word	0xfefff8ff
    43bc:	1ffff0cc 	.word	0x1ffff0cc

000043c0 <BitIoLdd7_ClrVal>:
BitIoLdd7_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:161
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd7_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    43c0:	b580      	push	{r7, lr}
    43c2:	b082      	sub	sp, #8
    43c4:	af00      	add	r7, sp, #0
    43c6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:163
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd7_MODULE_BASE_ADDRESS, BitIoLdd7_PORT_MASK);
    43c8:	4b03      	ldr	r3, [pc, #12]	; (43d8 <BitIoLdd7_ClrVal+0x18>)
    43ca:	2280      	movs	r2, #128	; 0x80
    43cc:	0092      	lsls	r2, r2, #2
    43ce:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:164
}
    43d0:	46bd      	mov	sp, r7
    43d2:	b002      	add	sp, #8
    43d4:	bd80      	pop	{r7, pc}
    43d6:	46c0      	nop			; (mov r8, r8)
    43d8:	f80ff040 	.word	0xf80ff040

000043dc <BitIoLdd7_SetVal>:
BitIoLdd7_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd7_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    43dc:	b580      	push	{r7, lr}
    43de:	b082      	sub	sp, #8
    43e0:	af00      	add	r7, sp, #0
    43e2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd7_MODULE_BASE_ADDRESS, BitIoLdd7_PORT_MASK);
    43e4:	4b03      	ldr	r3, [pc, #12]	; (43f4 <BitIoLdd7_SetVal+0x18>)
    43e6:	2280      	movs	r2, #128	; 0x80
    43e8:	0092      	lsls	r2, r2, #2
    43ea:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:184
}
    43ec:	46bd      	mov	sp, r7
    43ee:	b002      	add	sp, #8
    43f0:	bd80      	pop	{r7, pc}
    43f2:	46c0      	nop			; (mov r8, r8)
    43f4:	f80ff040 	.word	0xf80ff040

000043f8 <BitIoLdd7_NegVal>:
BitIoLdd7_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd7_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    43f8:	b580      	push	{r7, lr}
    43fa:	b082      	sub	sp, #8
    43fc:	af00      	add	r7, sp, #0
    43fe:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd7_MODULE_BASE_ADDRESS, BitIoLdd7_PORT_MASK);
    4400:	4b03      	ldr	r3, [pc, #12]	; (4410 <BitIoLdd7_NegVal+0x18>)
    4402:	2280      	movs	r2, #128	; 0x80
    4404:	0092      	lsls	r2, r2, #2
    4406:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd7.c:204
}
    4408:	46bd      	mov	sp, r7
    440a:	b002      	add	sp, #8
    440c:	bd80      	pop	{r7, pc}
    440e:	46c0      	nop			; (mov r8, r8)
    4410:	f80ff040 	.word	0xf80ff040

00004414 <BitIoLdd8_Init>:
BitIoLdd8_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd8_Init(LDD_TUserData *UserDataPtr)
{
    4414:	b580      	push	{r7, lr}
    4416:	b084      	sub	sp, #16
    4418:	af00      	add	r7, sp, #0
    441a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:126
  /* Allocate device structure */
  BitIoLdd8_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    441c:	4b11      	ldr	r3, [pc, #68]	; (4464 <BitIoLdd8_Init+0x50>)
    441e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4420:	68fb      	ldr	r3, [r7, #12]
    4422:	687a      	ldr	r2, [r7, #4]
    4424:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:130
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x0100 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x0100);
    4426:	4b10      	ldr	r3, [pc, #64]	; (4468 <BitIoLdd8_Init+0x54>)
    4428:	4a0f      	ldr	r2, [pc, #60]	; (4468 <BitIoLdd8_Init+0x54>)
    442a:	6952      	ldr	r2, [r2, #20]
    442c:	2180      	movs	r1, #128	; 0x80
    442e:	0049      	lsls	r1, r1, #1
    4430:	430a      	orrs	r2, r1
    4432:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:133
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x0100 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0100));
    4434:	4b0c      	ldr	r3, [pc, #48]	; (4468 <BitIoLdd8_Init+0x54>)
    4436:	4a0c      	ldr	r2, [pc, #48]	; (4468 <BitIoLdd8_Init+0x54>)
    4438:	6811      	ldr	r1, [r2, #0]
    443a:	4a0c      	ldr	r2, [pc, #48]	; (446c <BitIoLdd8_Init+0x58>)
    443c:	400a      	ands	r2, r1
    443e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:136
  /* Initialization of Port Control register */
  /* PORTB_PCR8: ISF=0,MUX=1 */
  PORTB_PCR8 = (uint32_t)((PORTB_PCR8 & (uint32_t)~(uint32_t)(
    4440:	4b0b      	ldr	r3, [pc, #44]	; (4470 <BitIoLdd8_Init+0x5c>)
    4442:	4a0b      	ldr	r2, [pc, #44]	; (4470 <BitIoLdd8_Init+0x5c>)
    4444:	6a11      	ldr	r1, [r2, #32]
    4446:	4a0b      	ldr	r2, [pc, #44]	; (4474 <BitIoLdd8_Init+0x60>)
    4448:	400a      	ands	r2, r1
    444a:	2180      	movs	r1, #128	; 0x80
    444c:	0049      	lsls	r1, r1, #1
    444e:	430a      	orrs	r2, r1
    4450:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:143
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd8_ID,DeviceDataPrv);
    4452:	4b09      	ldr	r3, [pc, #36]	; (4478 <BitIoLdd8_Init+0x64>)
    4454:	68fa      	ldr	r2, [r7, #12]
    4456:	649a      	str	r2, [r3, #72]	; 0x48
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:144
  return ((LDD_TDeviceData *)DeviceDataPrv);
    4458:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:145
}
    445a:	1c18      	adds	r0, r3, #0
    445c:	46bd      	mov	sp, r7
    445e:	b004      	add	sp, #16
    4460:	bd80      	pop	{r7, pc}
    4462:	46c0      	nop			; (mov r8, r8)
    4464:	1ffff0c0 	.word	0x1ffff0c0
    4468:	400ff040 	.word	0x400ff040
    446c:	fffffeff 	.word	0xfffffeff
    4470:	4004a000 	.word	0x4004a000
    4474:	fefff8ff 	.word	0xfefff8ff
    4478:	1ffff0cc 	.word	0x1ffff0cc

0000447c <BitIoLdd8_ClrVal>:
BitIoLdd8_ClrVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:161
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    447c:	b580      	push	{r7, lr}
    447e:	b082      	sub	sp, #8
    4480:	af00      	add	r7, sp, #0
    4482:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:163
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    4484:	4b03      	ldr	r3, [pc, #12]	; (4494 <BitIoLdd8_ClrVal+0x18>)
    4486:	2280      	movs	r2, #128	; 0x80
    4488:	0052      	lsls	r2, r2, #1
    448a:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:164
}
    448c:	46bd      	mov	sp, r7
    448e:	b002      	add	sp, #8
    4490:	bd80      	pop	{r7, pc}
    4492:	46c0      	nop			; (mov r8, r8)
    4494:	f80ff040 	.word	0xf80ff040

00004498 <BitIoLdd8_SetVal>:
BitIoLdd8_SetVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:181
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    4498:	b580      	push	{r7, lr}
    449a:	b082      	sub	sp, #8
    449c:	af00      	add	r7, sp, #0
    449e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:183
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    44a0:	4b03      	ldr	r3, [pc, #12]	; (44b0 <BitIoLdd8_SetVal+0x18>)
    44a2:	2280      	movs	r2, #128	; 0x80
    44a4:	0052      	lsls	r2, r2, #1
    44a6:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:184
}
    44a8:	46bd      	mov	sp, r7
    44aa:	b002      	add	sp, #8
    44ac:	bd80      	pop	{r7, pc}
    44ae:	46c0      	nop			; (mov r8, r8)
    44b0:	f80ff040 	.word	0xf80ff040

000044b4 <BitIoLdd8_NegVal>:
BitIoLdd8_NegVal():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:201
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    44b4:	b580      	push	{r7, lr}
    44b6:	b082      	sub	sp, #8
    44b8:	af00      	add	r7, sp, #0
    44ba:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:203
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    44bc:	4b03      	ldr	r3, [pc, #12]	; (44cc <BitIoLdd8_NegVal+0x18>)
    44be:	2280      	movs	r2, #128	; 0x80
    44c0:	0052      	lsls	r2, r2, #1
    44c2:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd8.c:204
}
    44c4:	46bd      	mov	sp, r7
    44c6:	b002      	add	sp, #8
    44c8:	bd80      	pop	{r7, pc}
    44ca:	46c0      	nop			; (mov r8, r8)
    44cc:	f80ff040 	.word	0xf80ff040

000044d0 <BitIoLdd9_Init>:
BitIoLdd9_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd9_Init(LDD_TUserData *UserDataPtr)
{
    44d0:	b580      	push	{r7, lr}
    44d2:	b084      	sub	sp, #16
    44d4:	af00      	add	r7, sp, #0
    44d6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:127
  /* Allocate device structure */
  BitIoLdd9_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    44d8:	4b11      	ldr	r3, [pc, #68]	; (4520 <BitIoLdd9_Init+0x50>)
    44da:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    44dc:	68fb      	ldr	r3, [r7, #12]
    44de:	687a      	ldr	r2, [r7, #4]
    44e0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:131
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x00040000 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x00040000);
    44e2:	4b10      	ldr	r3, [pc, #64]	; (4524 <BitIoLdd9_Init+0x54>)
    44e4:	4a0f      	ldr	r2, [pc, #60]	; (4524 <BitIoLdd9_Init+0x54>)
    44e6:	6952      	ldr	r2, [r2, #20]
    44e8:	2180      	movs	r1, #128	; 0x80
    44ea:	02c9      	lsls	r1, r1, #11
    44ec:	430a      	orrs	r2, r1
    44ee:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:134
  /* Set initialization value */
  /* GPIOB_PDOR: PDO|=0x00040000 */
  GPIOB_PDOR |= GPIO_PDOR_PDO(0x00040000);
    44f0:	4b0c      	ldr	r3, [pc, #48]	; (4524 <BitIoLdd9_Init+0x54>)
    44f2:	4a0c      	ldr	r2, [pc, #48]	; (4524 <BitIoLdd9_Init+0x54>)
    44f4:	6812      	ldr	r2, [r2, #0]
    44f6:	2180      	movs	r1, #128	; 0x80
    44f8:	02c9      	lsls	r1, r1, #11
    44fa:	430a      	orrs	r2, r1
    44fc:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:137
  /* Initialization of Port Control register */
  /* PORTB_PCR18: ISF=0,MUX=1 */
  PORTB_PCR18 = (uint32_t)((PORTB_PCR18 & (uint32_t)~(uint32_t)(
    44fe:	4b0a      	ldr	r3, [pc, #40]	; (4528 <BitIoLdd9_Init+0x58>)
    4500:	4a09      	ldr	r2, [pc, #36]	; (4528 <BitIoLdd9_Init+0x58>)
    4502:	6c91      	ldr	r1, [r2, #72]	; 0x48
    4504:	4a09      	ldr	r2, [pc, #36]	; (452c <BitIoLdd9_Init+0x5c>)
    4506:	400a      	ands	r2, r1
    4508:	2180      	movs	r1, #128	; 0x80
    450a:	0049      	lsls	r1, r1, #1
    450c:	430a      	orrs	r2, r1
    450e:	649a      	str	r2, [r3, #72]	; 0x48
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:144
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd9_ID,DeviceDataPrv);
    4510:	4b07      	ldr	r3, [pc, #28]	; (4530 <BitIoLdd9_Init+0x60>)
    4512:	68fa      	ldr	r2, [r7, #12]
    4514:	64da      	str	r2, [r3, #76]	; 0x4c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:145
  return ((LDD_TDeviceData *)DeviceDataPrv);
    4516:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/BitIoLdd9.c:146
}
    4518:	1c18      	adds	r0, r3, #0
    451a:	46bd      	mov	sp, r7
    451c:	b004      	add	sp, #16
    451e:	bd80      	pop	{r7, pc}
    4520:	1ffff0c4 	.word	0x1ffff0c4
    4524:	400ff040 	.word	0x400ff040
    4528:	4004a000 	.word	0x4004a000
    452c:	fefff8ff 	.word	0xfefff8ff
    4530:	1ffff0cc 	.word	0x1ffff0cc

00004534 <TimerIntLdd1_OnInterrupt>:
TimerIntLdd1_OnInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Camera_CLK_Interruption.c:186
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TimerIntLdd1_OnInterrupt(LDD_TUserData *UserDataPtr)
{
    4534:	b580      	push	{r7, lr}
    4536:	b082      	sub	sp, #8
    4538:	af00      	add	r7, sp, #0
    453a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Camera_CLK_Interruption.c:188
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  Camera_CLK_Interruption_OnInterrupt(); /* Invoke OnInterrupt event */
    453c:	f7fe fd50 	bl	2fe0 <Camera_CLK_Interruption_OnInterrupt>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Camera_CLK_Interruption.c:189
}
    4540:	46bd      	mov	sp, r7
    4542:	b002      	add	sp, #8
    4544:	bd80      	pop	{r7, pc}
    4546:	46c0      	nop			; (mov r8, r8)

00004548 <Cpu_INT_NMIInterrupt>:
Cpu_INT_NMIInterrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:312
**         This ISR services the Non Maskable Interrupt interrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(Cpu_INT_NMIInterrupt)
{
    4548:	b580      	push	{r7, lr}
    454a:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:313
  Cpu_OnNMIINT();
    454c:	f7fe fd44 	bl	2fd8 <Cpu_OnNMIINT>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:314
}
    4550:	46bd      	mov	sp, r7
    4552:	bd80      	pop	{r7, pc}

00004554 <Cpu_Interrupt>:
Cpu_Interrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:326
**         This ISR services an unused interrupt/exception vector.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(Cpu_Interrupt)
{
    4554:	b580      	push	{r7, lr}
    4556:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:328
  /* This code can be changed using the CPU component property "Build Options / Unhandled int code" */
  PE_DEBUGHALT();
    4558:	beff      	bkpt	0x00ff
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:329
}
    455a:	46bd      	mov	sp, r7
    455c:	bd80      	pop	{r7, pc}
    455e:	46c0      	nop			; (mov r8, r8)

00004560 <__init_hardware>:
__init_hardware():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:337
/*** !!! Here you can place your own code using property "User data declarations" on the build options tab. !!! ***/

/*lint -esym(765,__init_hardware) Disable MISRA rule (8.10) checking for symbols (__init_hardware). The function is linked to the EWL library */
/*lint -esym(765,Cpu_Interrupt) Disable MISRA rule (8.10) checking for symbols (Cpu_Interrupt). */
void __init_hardware(void)
{
    4560:	b580      	push	{r7, lr}
    4562:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:343

  /*** !!! Here you can place your own code before PE initialization using property "User code before PE initialization" on the build options tab. !!! ***/

  /*** ### MKL25Z128VLK4 "Cpu" init code ... ***/
  /*** PE initialization code after reset ***/
  SCB_VTOR = (uint32_t)(&__vect_table); /* Set the interrupt vector table position */
    4564:	4a36      	ldr	r2, [pc, #216]	; (4640 <__init_hardware+0xe0>)
    4566:	4937      	ldr	r1, [pc, #220]	; (4644 <__init_hardware+0xe4>)
    4568:	4b37      	ldr	r3, [pc, #220]	; (4648 <__init_hardware+0xe8>)
    456a:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:346
  /* Disable the WDOG module */
  /* SIM_COPC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COPT=0,COPCLKS=0,COPW=0 */
  SIM_COPC = SIM_COPC_COPT(0x00);
    456c:	4a37      	ldr	r2, [pc, #220]	; (464c <__init_hardware+0xec>)
    456e:	2388      	movs	r3, #136	; 0x88
    4570:	015b      	lsls	r3, r3, #5
    4572:	2100      	movs	r1, #0
    4574:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:350

  /* System clock initialization */
  /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescalers to safe value */
    4576:	4a35      	ldr	r2, [pc, #212]	; (464c <__init_hardware+0xec>)
    4578:	4b35      	ldr	r3, [pc, #212]	; (4650 <__init_hardware+0xf0>)
    457a:	21c0      	movs	r1, #192	; 0xc0
    457c:	0289      	lsls	r1, r1, #10
    457e:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:352
  /* SIM_SCGC5: PORTE=1,PORTD=1,PORTC=1,PORTB=1,PORTA=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK |
    4580:	4a32      	ldr	r2, [pc, #200]	; (464c <__init_hardware+0xec>)
    4582:	4932      	ldr	r1, [pc, #200]	; (464c <__init_hardware+0xec>)
    4584:	4b33      	ldr	r3, [pc, #204]	; (4654 <__init_hardware+0xf4>)
    4586:	58cb      	ldr	r3, [r1, r3]
    4588:	21f8      	movs	r1, #248	; 0xf8
    458a:	0189      	lsls	r1, r1, #6
    458c:	4319      	orrs	r1, r3
    458e:	4b31      	ldr	r3, [pc, #196]	; (4654 <__init_hardware+0xf4>)
    4590:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:357
               SIM_SCGC5_PORTD_MASK |
               SIM_SCGC5_PORTC_MASK |
               SIM_SCGC5_PORTB_MASK |
               SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
  if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
    4592:	4b31      	ldr	r3, [pc, #196]	; (4658 <__init_hardware+0xf8>)
    4594:	789b      	ldrb	r3, [r3, #2]
    4596:	b2db      	uxtb	r3, r3
    4598:	1c1a      	adds	r2, r3, #0
    459a:	2308      	movs	r3, #8
    459c:	4013      	ands	r3, r2
    459e:	d007      	beq.n	45b0 <__init_hardware+0x50>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:359
    /* PMC_REGSC: ACKISO=1 */
    PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
    45a0:	4b2d      	ldr	r3, [pc, #180]	; (4658 <__init_hardware+0xf8>)
    45a2:	4a2d      	ldr	r2, [pc, #180]	; (4658 <__init_hardware+0xf8>)
    45a4:	7892      	ldrb	r2, [r2, #2]
    45a6:	b2d2      	uxtb	r2, r2
    45a8:	2108      	movs	r1, #8
    45aa:	430a      	orrs	r2, r1
    45ac:	b2d2      	uxtb	r2, r2
    45ae:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:362
  }
  /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x00)); /* Update system prescalers */
    45b0:	4a26      	ldr	r2, [pc, #152]	; (464c <__init_hardware+0xec>)
    45b2:	4b27      	ldr	r3, [pc, #156]	; (4650 <__init_hardware+0xf0>)
    45b4:	2100      	movs	r1, #0
    45b6:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:364
  /* SIM_SOPT2: ??=0,PLLFLLSEL=0 */
  SIM_SOPT2 &= (uint32_t)~(uint32_t)((SIM_SOPT2_PLLFLLSEL_MASK | 0x00020000U)); /* Select FLL as a clock source for various peripherals */
    45b8:	4a24      	ldr	r2, [pc, #144]	; (464c <__init_hardware+0xec>)
    45ba:	4924      	ldr	r1, [pc, #144]	; (464c <__init_hardware+0xec>)
    45bc:	4b27      	ldr	r3, [pc, #156]	; (465c <__init_hardware+0xfc>)
    45be:	58c9      	ldr	r1, [r1, r3]
    45c0:	4b27      	ldr	r3, [pc, #156]	; (4660 <__init_hardware+0x100>)
    45c2:	4019      	ands	r1, r3
    45c4:	4b25      	ldr	r3, [pc, #148]	; (465c <__init_hardware+0xfc>)
    45c6:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:366
  /* SIM_SOPT1: OSC32KSEL=3 */
  SIM_SOPT1 |= SIM_SOPT1_OSC32KSEL(0x03); /* LPO 1kHz oscillator drives 32 kHz clock for various peripherals */
    45c8:	4b20      	ldr	r3, [pc, #128]	; (464c <__init_hardware+0xec>)
    45ca:	4a20      	ldr	r2, [pc, #128]	; (464c <__init_hardware+0xec>)
    45cc:	6812      	ldr	r2, [r2, #0]
    45ce:	21c0      	movs	r1, #192	; 0xc0
    45d0:	0309      	lsls	r1, r1, #12
    45d2:	430a      	orrs	r2, r1
    45d4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:368
  /* SIM_SOPT2: TPMSRC=1 */
  SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
    45d6:	4a1d      	ldr	r2, [pc, #116]	; (464c <__init_hardware+0xec>)
    45d8:	491c      	ldr	r1, [pc, #112]	; (464c <__init_hardware+0xec>)
    45da:	4b20      	ldr	r3, [pc, #128]	; (465c <__init_hardware+0xfc>)
    45dc:	58c9      	ldr	r1, [r1, r3]
    45de:	4b21      	ldr	r3, [pc, #132]	; (4664 <__init_hardware+0x104>)
    45e0:	400b      	ands	r3, r1
    45e2:	2180      	movs	r1, #128	; 0x80
    45e4:	0449      	lsls	r1, r1, #17
    45e6:	4319      	orrs	r1, r3
    45e8:	4b1c      	ldr	r3, [pc, #112]	; (465c <__init_hardware+0xfc>)
    45ea:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:375
              )) | (uint32_t)(
               SIM_SOPT2_TPMSRC(0x01)
              ));                      /* Set the TPM clock */
  /* Switch to FEI Mode */
  /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
  MCG_C1 = MCG_C1_CLKS(0x00) |
    45ec:	4b1e      	ldr	r3, [pc, #120]	; (4668 <__init_hardware+0x108>)
    45ee:	2206      	movs	r2, #6
    45f0:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:380
           MCG_C1_FRDIV(0x00) |
           MCG_C1_IREFS_MASK |
           MCG_C1_IRCLKEN_MASK;
  /* MCG_C2: LOCRE0=0,??=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
  MCG_C2 = MCG_C2_RANGE0(0x00);
    45f2:	4b1d      	ldr	r3, [pc, #116]	; (4668 <__init_hardware+0x108>)
    45f4:	2200      	movs	r2, #0
    45f6:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:382
  /* MCG_C4: DMX32=0,DRST_DRS=0 */
  MCG_C4 &= (uint8_t)~(uint8_t)((MCG_C4_DMX32_MASK | MCG_C4_DRST_DRS(0x03)));
    45f8:	4b1b      	ldr	r3, [pc, #108]	; (4668 <__init_hardware+0x108>)
    45fa:	4a1b      	ldr	r2, [pc, #108]	; (4668 <__init_hardware+0x108>)
    45fc:	78d2      	ldrb	r2, [r2, #3]
    45fe:	b2d1      	uxtb	r1, r2
    4600:	221f      	movs	r2, #31
    4602:	400a      	ands	r2, r1
    4604:	b2d2      	uxtb	r2, r2
    4606:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:384
  /* OSC0_CR: ERCLKEN=1,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
  OSC0_CR = OSC_CR_ERCLKEN_MASK;
    4608:	4b18      	ldr	r3, [pc, #96]	; (466c <__init_hardware+0x10c>)
    460a:	2280      	movs	r2, #128	; 0x80
    460c:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:386
  /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
  MCG_C5 = MCG_C5_PRDIV0(0x00);
    460e:	4b16      	ldr	r3, [pc, #88]	; (4668 <__init_hardware+0x108>)
    4610:	2200      	movs	r2, #0
    4612:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:388
  /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
  MCG_C6 = MCG_C6_VDIV0(0x00);
    4614:	4b14      	ldr	r3, [pc, #80]	; (4668 <__init_hardware+0x108>)
    4616:	2200      	movs	r2, #0
    4618:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:389
  while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    461a:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:389 (discriminator 1)
    461c:	4b12      	ldr	r3, [pc, #72]	; (4668 <__init_hardware+0x108>)
    461e:	799b      	ldrb	r3, [r3, #6]
    4620:	b2db      	uxtb	r3, r3
    4622:	1c1a      	adds	r2, r3, #0
    4624:	2310      	movs	r3, #16
    4626:	4013      	ands	r3, r2
    4628:	d0f8      	beq.n	461c <__init_hardware+0xbc>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:391
  }
  while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
    462a:	46c0      	nop			; (mov r8, r8)
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:391 (discriminator 1)
    462c:	4b0e      	ldr	r3, [pc, #56]	; (4668 <__init_hardware+0x108>)
    462e:	799b      	ldrb	r3, [r3, #6]
    4630:	b2db      	uxtb	r3, r3
    4632:	1c1a      	adds	r2, r3, #0
    4634:	230c      	movs	r3, #12
    4636:	4013      	ands	r3, r2
    4638:	d1f8      	bne.n	462c <__init_hardware+0xcc>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:397
  }
  /*** End of PE initialization code after reset ***/

  /*** !!! Here you can place your own code after PE initialization using property "User code after PE initialization" on the build options tab. !!! ***/

}
    463a:	46bd      	mov	sp, r7
    463c:	bd80      	pop	{r7, pc}
    463e:	46c0      	nop			; (mov r8, r8)
    4640:	e000e000 	.word	0xe000e000
    4644:	00000000 	.word	0x00000000
    4648:	00000d08 	.word	0x00000d08
    464c:	40047000 	.word	0x40047000
    4650:	00001044 	.word	0x00001044
    4654:	00001038 	.word	0x00001038
    4658:	4007d000 	.word	0x4007d000
    465c:	00001004 	.word	0x00001004
    4660:	fffcffff 	.word	0xfffcffff
    4664:	fcffffff 	.word	0xfcffffff
    4668:	40064000 	.word	0x40064000
    466c:	40065000 	.word	0x40065000

00004670 <PE_low_level_init>:
PE_low_level_init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:413
**         application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void PE_low_level_init(void)
{
    4670:	b580      	push	{r7, lr}
    4672:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:419
  #ifdef PEX_RTOS_INIT
    PEX_RTOS_INIT();                   /* Initialization of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
      /* Initialization of the SIM module */
  /* PORTA_PCR4: ISF=0,MUX=7 */
  PORTA_PCR4 = (uint32_t)((PORTA_PCR4 & (uint32_t)~(uint32_t)(
    4674:	4b44      	ldr	r3, [pc, #272]	; (4788 <PE_low_level_init+0x118>)
    4676:	4a44      	ldr	r2, [pc, #272]	; (4788 <PE_low_level_init+0x118>)
    4678:	6911      	ldr	r1, [r2, #16]
    467a:	4a44      	ldr	r2, [pc, #272]	; (478c <PE_low_level_init+0x11c>)
    467c:	400a      	ands	r2, r1
    467e:	21e0      	movs	r1, #224	; 0xe0
    4680:	00c9      	lsls	r1, r1, #3
    4682:	430a      	orrs	r2, r1
    4684:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:426
               )) | (uint32_t)(
                PORT_PCR_MUX(0x07)
               ));
        /* Initialization of the RCM module */
  /* RCM_RPFW: RSTFLTSEL=0 */
  RCM_RPFW &= (uint8_t)~(uint8_t)(RCM_RPFW_RSTFLTSEL(0x1F));
    4686:	4b42      	ldr	r3, [pc, #264]	; (4790 <PE_low_level_init+0x120>)
    4688:	4a41      	ldr	r2, [pc, #260]	; (4790 <PE_low_level_init+0x120>)
    468a:	7952      	ldrb	r2, [r2, #5]
    468c:	b2d2      	uxtb	r2, r2
    468e:	211f      	movs	r1, #31
    4690:	438a      	bics	r2, r1
    4692:	b2d2      	uxtb	r2, r2
    4694:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:428
  /* RCM_RPFC: RSTFLTSS=0,RSTFLTSRW=0 */
  RCM_RPFC &= (uint8_t)~(uint8_t)(
    4696:	4b3e      	ldr	r3, [pc, #248]	; (4790 <PE_low_level_init+0x120>)
    4698:	4a3d      	ldr	r2, [pc, #244]	; (4790 <PE_low_level_init+0x120>)
    469a:	7912      	ldrb	r2, [r2, #4]
    469c:	b2d2      	uxtb	r2, r2
    469e:	2107      	movs	r1, #7
    46a0:	438a      	bics	r2, r1
    46a2:	b2d2      	uxtb	r2, r2
    46a4:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:435
               RCM_RPFC_RSTFLTSRW(0x03)
              );
        /* Initialization of the FTFL_FlashConfig module */
      /* Initialization of the PMC module */
  /* PMC_LVDSC1: LVDACK=1,LVDIE=0,LVDRE=1,LVDV=0 */
  PMC_LVDSC1 = (uint8_t)((PMC_LVDSC1 & (uint8_t)~(uint8_t)(
    46a6:	4b3b      	ldr	r3, [pc, #236]	; (4794 <PE_low_level_init+0x124>)
    46a8:	4a3a      	ldr	r2, [pc, #232]	; (4794 <PE_low_level_init+0x124>)
    46aa:	7812      	ldrb	r2, [r2, #0]
    46ac:	b2d2      	uxtb	r2, r2
    46ae:	b2d2      	uxtb	r2, r2
    46b0:	2173      	movs	r1, #115	; 0x73
    46b2:	438a      	bics	r2, r1
    46b4:	b2d2      	uxtb	r2, r2
    46b6:	2150      	movs	r1, #80	; 0x50
    46b8:	430a      	orrs	r2, r1
    46ba:	b2d2      	uxtb	r2, r2
    46bc:	b2d2      	uxtb	r2, r2
    46be:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:443
               )) | (uint8_t)(
                PMC_LVDSC1_LVDACK_MASK |
                PMC_LVDSC1_LVDRE_MASK
               ));
  /* PMC_LVDSC2: LVWACK=1,LVWIE=0,LVWV=0 */
  PMC_LVDSC2 = (uint8_t)((PMC_LVDSC2 & (uint8_t)~(uint8_t)(
    46c0:	4b34      	ldr	r3, [pc, #208]	; (4794 <PE_low_level_init+0x124>)
    46c2:	4a34      	ldr	r2, [pc, #208]	; (4794 <PE_low_level_init+0x124>)
    46c4:	7852      	ldrb	r2, [r2, #1]
    46c6:	b2d2      	uxtb	r2, r2
    46c8:	b2d2      	uxtb	r2, r2
    46ca:	2163      	movs	r1, #99	; 0x63
    46cc:	438a      	bics	r2, r1
    46ce:	b2d2      	uxtb	r2, r2
    46d0:	2140      	movs	r1, #64	; 0x40
    46d2:	430a      	orrs	r2, r1
    46d4:	b2d2      	uxtb	r2, r2
    46d6:	b2d2      	uxtb	r2, r2
    46d8:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:450
                PMC_LVDSC2_LVWV(0x03)
               )) | (uint8_t)(
                PMC_LVDSC2_LVWACK_MASK
               ));
  /* PMC_REGSC: BGEN=0,ACKISO=0,BGBE=0 */
  PMC_REGSC &= (uint8_t)~(uint8_t)(
    46da:	4b2e      	ldr	r3, [pc, #184]	; (4794 <PE_low_level_init+0x124>)
    46dc:	4a2d      	ldr	r2, [pc, #180]	; (4794 <PE_low_level_init+0x124>)
    46de:	7892      	ldrb	r2, [r2, #2]
    46e0:	b2d2      	uxtb	r2, r2
    46e2:	2119      	movs	r1, #25
    46e4:	438a      	bics	r2, r1
    46e6:	b2d2      	uxtb	r2, r2
    46e8:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:456
                PMC_REGSC_BGEN_MASK |
                PMC_REGSC_ACKISO_MASK |
                PMC_REGSC_BGBE_MASK
               );
  /* SMC_PMPROT: ??=0,??=0,AVLP=0,??=0,ALLS=0,??=0,AVLLS=0,??=0 */
  SMC_PMPROT = 0x00U;                  /* Setup Power mode protection register */
    46ea:	4b2b      	ldr	r3, [pc, #172]	; (4798 <PE_low_level_init+0x128>)
    46ec:	2200      	movs	r2, #0
    46ee:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:459
  /* Common initialization of the CPU registers */
  /* PORTA_PCR20: ISF=0,MUX=7 */
  PORTA_PCR20 = (uint32_t)((PORTA_PCR20 & (uint32_t)~(uint32_t)(
    46f0:	4b25      	ldr	r3, [pc, #148]	; (4788 <PE_low_level_init+0x118>)
    46f2:	4a25      	ldr	r2, [pc, #148]	; (4788 <PE_low_level_init+0x118>)
    46f4:	6d11      	ldr	r1, [r2, #80]	; 0x50
    46f6:	4a25      	ldr	r2, [pc, #148]	; (478c <PE_low_level_init+0x11c>)
    46f8:	400a      	ands	r2, r1
    46fa:	21e0      	movs	r1, #224	; 0xe0
    46fc:	00c9      	lsls	r1, r1, #3
    46fe:	430a      	orrs	r2, r1
    4700:	651a      	str	r2, [r3, #80]	; 0x50
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:465
                 PORT_PCR_ISF_MASK
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x07)
                ));
  /* NVIC_IPR1: PRI_6=0 */
  NVIC_IPR1 &= (uint32_t)~(uint32_t)(NVIC_IP_PRI_6(0xFF));
    4702:	4a26      	ldr	r2, [pc, #152]	; (479c <PE_low_level_init+0x12c>)
    4704:	4925      	ldr	r1, [pc, #148]	; (479c <PE_low_level_init+0x12c>)
    4706:	23c1      	movs	r3, #193	; 0xc1
    4708:	009b      	lsls	r3, r3, #2
    470a:	58c9      	ldr	r1, [r1, r3]
    470c:	4b24      	ldr	r3, [pc, #144]	; (47a0 <PE_low_level_init+0x130>)
    470e:	4019      	ands	r1, r3
    4710:	23c1      	movs	r3, #193	; 0xc1
    4712:	009b      	lsls	r3, r3, #2
    4714:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:467
  /* ### BitIO_LDD "BitIoLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd1_Init(NULL);
    4716:	2000      	movs	r0, #0
    4718:	f7ff fbd6 	bl	3ec8 <BitIoLdd1_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:469
  /* ### BitIO_LDD "BitIoLdd2" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd2_Init(NULL);
    471c:	2000      	movs	r0, #0
    471e:	f7ff fc8f 	bl	4040 <BitIoLdd2_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:471
  /* ### TimerInt_LDD "TimerIntLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)TimerIntLdd1_Init(NULL);
    4722:	2000      	movs	r0, #0
    4724:	f000 ff28 	bl	5578 <TimerIntLdd1_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:474
  /* ### TimerInt "Camera_CLK_Interruption" init code ... */
  /* ### ADC "AD_Converter" init code ... */
  AD_Converter_Init();
    4728:	f7ff fa4c 	bl	3bc4 <AD_Converter_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:476
  /* ### BitIO_LDD "BitIoLdd4" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd4_Init(NULL);
    472c:	2000      	movs	r0, #0
    472e:	f7ff fd23 	bl	4178 <BitIoLdd4_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:478
  /* ### PWM_LDD "PwmLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd1_Init(NULL);
    4732:	2000      	movs	r0, #0
    4734:	f000 f836 	bl	47a4 <PwmLdd1_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:480
  /* ### PWM_LDD "PwmLdd2" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd2_Init(NULL);
    4738:	2000      	movs	r0, #0
    473a:	f000 f8ad 	bl	4898 <PwmLdd2_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:482
  /* ### PWM_LDD "PwmLdd3" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd3_Init(NULL);
    473e:	2000      	movs	r0, #0
    4740:	f000 f924 	bl	498c <PwmLdd3_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:484
  /* ### PWM_LDD "PwmLdd4" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd4_Init(NULL);
    4744:	2000      	movs	r0, #0
    4746:	f000 f99b 	bl	4a80 <PwmLdd4_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:486
  /* ### PWM_LDD "PwmLdd5" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)PwmLdd5_Init(NULL);
    474a:	2000      	movs	r0, #0
    474c:	f000 fa12 	bl	4b74 <PwmLdd5_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:488
  /* ### BitIO_LDD "BitIoLdd3" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd3_Init(NULL);
    4750:	2000      	movs	r0, #0
    4752:	f7ff fcd1 	bl	40f8 <BitIoLdd3_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:490
  /* ### BitIO_LDD "BitIoLdd5" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd5_Init(NULL);
    4756:	2000      	movs	r0, #0
    4758:	f7ff fd50 	bl	41fc <BitIoLdd5_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:492
  /* ### BitIO_LDD "BitIoLdd6" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd6_Init(NULL);
    475c:	2000      	movs	r0, #0
    475e:	f7ff fd9d 	bl	429c <BitIoLdd6_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:494
  /* ### BitIO_LDD "BitIoLdd7" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd7_Init(NULL);
    4762:	2000      	movs	r0, #0
    4764:	f7ff fdf8 	bl	4358 <BitIoLdd7_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:496
  /* ### BitIO_LDD "BitIoLdd8" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd8_Init(NULL);
    4768:	2000      	movs	r0, #0
    476a:	f7ff fe53 	bl	4414 <BitIoLdd8_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:498
  /* ### BitIO_LDD "BitIoLdd9" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd9_Init(NULL);
    476e:	2000      	movs	r0, #0
    4770:	f7ff feae 	bl	44d0 <BitIoLdd9_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:500
  /* ### BitIO_LDD "BitIoLdd10" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd10_Init(NULL);
    4774:	2000      	movs	r0, #0
    4776:	f7ff fc03 	bl	3f80 <BitIoLdd10_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:502
  /* ### BitIO_LDD "BitIoLdd11" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd11_Init(NULL);
    477a:	2000      	movs	r0, #0
    477c:	f7ff fc30 	bl	3fe0 <BitIoLdd11_Init>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:503
  __EI();
    4780:	b662      	cpsie	i
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/Cpu.c:504
}
    4782:	46bd      	mov	sp, r7
    4784:	bd80      	pop	{r7, pc}
    4786:	46c0      	nop			; (mov r8, r8)
    4788:	40049000 	.word	0x40049000
    478c:	fefff8ff 	.word	0xfefff8ff
    4790:	4007f000 	.word	0x4007f000
    4794:	4007d000 	.word	0x4007d000
    4798:	4007e000 	.word	0x4007e000
    479c:	e000e100 	.word	0xe000e100
    47a0:	ff3fffff 	.word	0xff3fffff

000047a4 <PwmLdd1_Init>:
PwmLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd1_Init(LDD_TUserData *UserDataPtr)
{
    47a4:	b580      	push	{r7, lr}
    47a6:	b084      	sub	sp, #16
    47a8:	af00      	add	r7, sp, #0
    47aa:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:147
  /* Allocate device structure */
  PwmLdd1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    47ac:	4b11      	ldr	r3, [pc, #68]	; (47f4 <PwmLdd1_Init+0x50>)
    47ae:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    47b0:	68fb      	ldr	r3, [r7, #12]
    47b2:	687a      	ldr	r2, [r7, #4]
    47b4:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    47b6:	68fb      	ldr	r3, [r7, #12]
    47b8:	2201      	movs	r2, #1
    47ba:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    47bc:	68fb      	ldr	r3, [r7, #12]
    47be:	2201      	movs	r2, #1
    47c0:	4252      	negs	r2, r2
    47c2:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd1_ID,DeviceDataPrv);
    47c4:	4b0c      	ldr	r3, [pc, #48]	; (47f8 <PwmLdd1_Init+0x54>)
    47c6:	68fa      	ldr	r2, [r7, #12]
    47c8:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    47ca:	2000      	movs	r0, #0
    47cc:	f000 fd32 	bl	5234 <TU2_Init>
    47d0:	1c02      	adds	r2, r0, #0
    47d2:	68fb      	ldr	r3, [r7, #12]
    47d4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    47d6:	68fb      	ldr	r3, [r7, #12]
    47d8:	681b      	ldr	r3, [r3, #0]
    47da:	2b00      	cmp	r3, #0
    47dc:	d104      	bne.n	47e8 <PwmLdd1_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd1_ID);
    47de:	4b06      	ldr	r3, [pc, #24]	; (47f8 <PwmLdd1_Init+0x54>)
    47e0:	2200      	movs	r2, #0
    47e2:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    47e4:	2300      	movs	r3, #0
    47e6:	e000      	b.n	47ea <PwmLdd1_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    47e8:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:162
}
    47ea:	1c18      	adds	r0, r3, #0
    47ec:	46bd      	mov	sp, r7
    47ee:	b004      	add	sp, #16
    47f0:	bd80      	pop	{r7, pc}
    47f2:	46c0      	nop			; (mov r8, r8)
    47f4:	1ffff124 	.word	0x1ffff124
    47f8:	1ffff0cc 	.word	0x1ffff0cc

000047fc <PwmLdd1_SetRatio8>:
PwmLdd1_SetRatio8():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:191
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError PwmLdd1_SetRatio8(LDD_TDeviceData *DeviceDataPtr, uint8_t Ratio)
{
    47fc:	b580      	push	{r7, lr}
    47fe:	b084      	sub	sp, #16
    4800:	af00      	add	r7, sp, #0
    4802:	6078      	str	r0, [r7, #4]
    4804:	1c0a      	adds	r2, r1, #0
    4806:	1cfb      	adds	r3, r7, #3
    4808:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:192
  PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
    480a:	687b      	ldr	r3, [r7, #4]
    480c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:194

  DeviceDataPrv->RatioStore = (uint16_t)Ratio << 8U; /* Store new value of the ratio */
    480e:	1cfb      	adds	r3, r7, #3
    4810:	781b      	ldrb	r3, [r3, #0]
    4812:	b29b      	uxth	r3, r3
    4814:	021b      	lsls	r3, r3, #8
    4816:	b29a      	uxth	r2, r3
    4818:	68fb      	ldr	r3, [r7, #12]
    481a:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:195
  SetRatio(DeviceDataPtr);
    481c:	687b      	ldr	r3, [r7, #4]
    481e:	1c18      	adds	r0, r3, #0
    4820:	f000 f806 	bl	4830 <SetRatio>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:196
  return ERR_OK;
    4824:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:197
}
    4826:	1c18      	adds	r0, r3, #0
    4828:	46bd      	mov	sp, r7
    482a:	b004      	add	sp, #16
    482c:	bd80      	pop	{r7, pc}
    482e:	46c0      	nop			; (mov r8, r8)

00004830 <SetRatio>:
SetRatio():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:210
**         variable RatioStore.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void SetRatio(LDD_TDeviceData *DeviceDataPtr)
{
    4830:	b580      	push	{r7, lr}
    4832:	b086      	sub	sp, #24
    4834:	af00      	add	r7, sp, #0
    4836:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:211
  PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData*)DeviceDataPtr;
    4838:	687b      	ldr	r3, [r7, #4]
    483a:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:215
  uint16_t Period;
  uint16_t Duty;

  (void)TU2_GetPeriodTicks(DeviceDataPrv->LinkedDeviceDataPtr, &Period);
    483c:	693b      	ldr	r3, [r7, #16]
    483e:	681a      	ldr	r2, [r3, #0]
    4840:	1c3b      	adds	r3, r7, #0
    4842:	330e      	adds	r3, #14
    4844:	1c10      	adds	r0, r2, #0
    4846:	1c19      	adds	r1, r3, #0
    4848:	f000 fd8e 	bl	5368 <TU2_GetPeriodTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:216
  if (Period == 0U) {
    484c:	1c3b      	adds	r3, r7, #0
    484e:	330e      	adds	r3, #14
    4850:	881b      	ldrh	r3, [r3, #0]
    4852:	2b00      	cmp	r3, #0
    4854:	d105      	bne.n	4862 <SetRatio+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:217
    Duty = DeviceDataPrv->RatioStore;
    4856:	1c3b      	adds	r3, r7, #0
    4858:	3316      	adds	r3, #22
    485a:	693a      	ldr	r2, [r7, #16]
    485c:	88d2      	ldrh	r2, [r2, #6]
    485e:	801a      	strh	r2, [r3, #0]
    4860:	e00c      	b.n	487c <SetRatio+0x4c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:220
  }
  else {
    Duty = (uint16_t)((((uint32_t)(Period) * DeviceDataPrv->RatioStore) + 0x8000) >> 0x10);
    4862:	1c3b      	adds	r3, r7, #0
    4864:	330e      	adds	r3, #14
    4866:	881b      	ldrh	r3, [r3, #0]
    4868:	693a      	ldr	r2, [r7, #16]
    486a:	88d2      	ldrh	r2, [r2, #6]
    486c:	4353      	muls	r3, r2
    486e:	2280      	movs	r2, #128	; 0x80
    4870:	0212      	lsls	r2, r2, #8
    4872:	189b      	adds	r3, r3, r2
    4874:	0c1a      	lsrs	r2, r3, #16
    4876:	1c3b      	adds	r3, r7, #0
    4878:	3316      	adds	r3, #22
    487a:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:222
  }
  (void)TU2_SetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, Duty);
    487c:	693b      	ldr	r3, [r7, #16]
    487e:	681a      	ldr	r2, [r3, #0]
    4880:	1c3b      	adds	r3, r7, #0
    4882:	3316      	adds	r3, #22
    4884:	881b      	ldrh	r3, [r3, #0]
    4886:	1c10      	adds	r0, r2, #0
    4888:	2100      	movs	r1, #0
    488a:	1c1a      	adds	r2, r3, #0
    488c:	f000 fd8a 	bl	53a4 <TU2_SetOffsetTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd1.c:223
}
    4890:	46bd      	mov	sp, r7
    4892:	b006      	add	sp, #24
    4894:	bd80      	pop	{r7, pc}
    4896:	46c0      	nop			; (mov r8, r8)

00004898 <PwmLdd2_Init>:
PwmLdd2_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd2_Init(LDD_TUserData *UserDataPtr)
{
    4898:	b580      	push	{r7, lr}
    489a:	b084      	sub	sp, #16
    489c:	af00      	add	r7, sp, #0
    489e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:147
  /* Allocate device structure */
  PwmLdd2_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    48a0:	4b11      	ldr	r3, [pc, #68]	; (48e8 <PwmLdd2_Init+0x50>)
    48a2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    48a4:	68fb      	ldr	r3, [r7, #12]
    48a6:	687a      	ldr	r2, [r7, #4]
    48a8:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    48aa:	68fb      	ldr	r3, [r7, #12]
    48ac:	2201      	movs	r2, #1
    48ae:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    48b0:	68fb      	ldr	r3, [r7, #12]
    48b2:	2201      	movs	r2, #1
    48b4:	4252      	negs	r2, r2
    48b6:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd2_ID,DeviceDataPrv);
    48b8:	4b0c      	ldr	r3, [pc, #48]	; (48ec <PwmLdd2_Init+0x54>)
    48ba:	68fa      	ldr	r2, [r7, #12]
    48bc:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    48be:	2000      	movs	r0, #0
    48c0:	f000 fcb8 	bl	5234 <TU2_Init>
    48c4:	1c02      	adds	r2, r0, #0
    48c6:	68fb      	ldr	r3, [r7, #12]
    48c8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    48ca:	68fb      	ldr	r3, [r7, #12]
    48cc:	681b      	ldr	r3, [r3, #0]
    48ce:	2b00      	cmp	r3, #0
    48d0:	d104      	bne.n	48dc <PwmLdd2_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd2_ID);
    48d2:	4b06      	ldr	r3, [pc, #24]	; (48ec <PwmLdd2_Init+0x54>)
    48d4:	2200      	movs	r2, #0
    48d6:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    48d8:	2300      	movs	r3, #0
    48da:	e000      	b.n	48de <PwmLdd2_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    48dc:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:162
}
    48de:	1c18      	adds	r0, r3, #0
    48e0:	46bd      	mov	sp, r7
    48e2:	b004      	add	sp, #16
    48e4:	bd80      	pop	{r7, pc}
    48e6:	46c0      	nop			; (mov r8, r8)
    48e8:	1ffff130 	.word	0x1ffff130
    48ec:	1ffff0cc 	.word	0x1ffff0cc

000048f0 <PwmLdd2_SetRatio8>:
PwmLdd2_SetRatio8():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:191
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError PwmLdd2_SetRatio8(LDD_TDeviceData *DeviceDataPtr, uint8_t Ratio)
{
    48f0:	b580      	push	{r7, lr}
    48f2:	b084      	sub	sp, #16
    48f4:	af00      	add	r7, sp, #0
    48f6:	6078      	str	r0, [r7, #4]
    48f8:	1c0a      	adds	r2, r1, #0
    48fa:	1cfb      	adds	r3, r7, #3
    48fc:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:192
  PwmLdd2_TDeviceData *DeviceDataPrv = (PwmLdd2_TDeviceData *)DeviceDataPtr;
    48fe:	687b      	ldr	r3, [r7, #4]
    4900:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:194

  DeviceDataPrv->RatioStore = (uint16_t)Ratio << 8U; /* Store new value of the ratio */
    4902:	1cfb      	adds	r3, r7, #3
    4904:	781b      	ldrb	r3, [r3, #0]
    4906:	b29b      	uxth	r3, r3
    4908:	021b      	lsls	r3, r3, #8
    490a:	b29a      	uxth	r2, r3
    490c:	68fb      	ldr	r3, [r7, #12]
    490e:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:195
  SetRatio(DeviceDataPtr);
    4910:	687b      	ldr	r3, [r7, #4]
    4912:	1c18      	adds	r0, r3, #0
    4914:	f000 f806 	bl	4924 <SetRatio>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:196
  return ERR_OK;
    4918:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:197
}
    491a:	1c18      	adds	r0, r3, #0
    491c:	46bd      	mov	sp, r7
    491e:	b004      	add	sp, #16
    4920:	bd80      	pop	{r7, pc}
    4922:	46c0      	nop			; (mov r8, r8)

00004924 <SetRatio>:
SetRatio():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:210
**         variable RatioStore.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void SetRatio(LDD_TDeviceData *DeviceDataPtr)
{
    4924:	b580      	push	{r7, lr}
    4926:	b086      	sub	sp, #24
    4928:	af00      	add	r7, sp, #0
    492a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:211
  PwmLdd2_TDeviceData *DeviceDataPrv = (PwmLdd2_TDeviceData*)DeviceDataPtr;
    492c:	687b      	ldr	r3, [r7, #4]
    492e:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:215
  uint16_t Period;
  uint16_t Duty;

  (void)TU2_GetPeriodTicks(DeviceDataPrv->LinkedDeviceDataPtr, &Period);
    4930:	693b      	ldr	r3, [r7, #16]
    4932:	681a      	ldr	r2, [r3, #0]
    4934:	1c3b      	adds	r3, r7, #0
    4936:	330e      	adds	r3, #14
    4938:	1c10      	adds	r0, r2, #0
    493a:	1c19      	adds	r1, r3, #0
    493c:	f000 fd14 	bl	5368 <TU2_GetPeriodTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:216
  if (Period == 0U) {
    4940:	1c3b      	adds	r3, r7, #0
    4942:	330e      	adds	r3, #14
    4944:	881b      	ldrh	r3, [r3, #0]
    4946:	2b00      	cmp	r3, #0
    4948:	d105      	bne.n	4956 <SetRatio+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:217
    Duty = DeviceDataPrv->RatioStore;
    494a:	1c3b      	adds	r3, r7, #0
    494c:	3316      	adds	r3, #22
    494e:	693a      	ldr	r2, [r7, #16]
    4950:	88d2      	ldrh	r2, [r2, #6]
    4952:	801a      	strh	r2, [r3, #0]
    4954:	e00c      	b.n	4970 <SetRatio+0x4c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:220
  }
  else {
    Duty = (uint16_t)((((uint32_t)(Period) * DeviceDataPrv->RatioStore) + 0x8000) >> 0x10);
    4956:	1c3b      	adds	r3, r7, #0
    4958:	330e      	adds	r3, #14
    495a:	881b      	ldrh	r3, [r3, #0]
    495c:	693a      	ldr	r2, [r7, #16]
    495e:	88d2      	ldrh	r2, [r2, #6]
    4960:	4353      	muls	r3, r2
    4962:	2280      	movs	r2, #128	; 0x80
    4964:	0212      	lsls	r2, r2, #8
    4966:	189b      	adds	r3, r3, r2
    4968:	0c1a      	lsrs	r2, r3, #16
    496a:	1c3b      	adds	r3, r7, #0
    496c:	3316      	adds	r3, #22
    496e:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:222
  }
  (void)TU2_SetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, Duty);
    4970:	693b      	ldr	r3, [r7, #16]
    4972:	681a      	ldr	r2, [r3, #0]
    4974:	1c3b      	adds	r3, r7, #0
    4976:	3316      	adds	r3, #22
    4978:	881b      	ldrh	r3, [r3, #0]
    497a:	1c10      	adds	r0, r2, #0
    497c:	2101      	movs	r1, #1
    497e:	1c1a      	adds	r2, r3, #0
    4980:	f000 fd10 	bl	53a4 <TU2_SetOffsetTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd2.c:223
}
    4984:	46bd      	mov	sp, r7
    4986:	b006      	add	sp, #24
    4988:	bd80      	pop	{r7, pc}
    498a:	46c0      	nop			; (mov r8, r8)

0000498c <PwmLdd3_Init>:
PwmLdd3_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd3_Init(LDD_TUserData *UserDataPtr)
{
    498c:	b580      	push	{r7, lr}
    498e:	b084      	sub	sp, #16
    4990:	af00      	add	r7, sp, #0
    4992:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:147
  /* Allocate device structure */
  PwmLdd3_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4994:	4b11      	ldr	r3, [pc, #68]	; (49dc <PwmLdd3_Init+0x50>)
    4996:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4998:	68fb      	ldr	r3, [r7, #12]
    499a:	687a      	ldr	r2, [r7, #4]
    499c:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    499e:	68fb      	ldr	r3, [r7, #12]
    49a0:	2201      	movs	r2, #1
    49a2:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    49a4:	68fb      	ldr	r3, [r7, #12]
    49a6:	2201      	movs	r2, #1
    49a8:	4252      	negs	r2, r2
    49aa:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd3_ID,DeviceDataPrv);
    49ac:	4b0c      	ldr	r3, [pc, #48]	; (49e0 <PwmLdd3_Init+0x54>)
    49ae:	68fa      	ldr	r2, [r7, #12]
    49b0:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    49b2:	2000      	movs	r0, #0
    49b4:	f000 fc3e 	bl	5234 <TU2_Init>
    49b8:	1c02      	adds	r2, r0, #0
    49ba:	68fb      	ldr	r3, [r7, #12]
    49bc:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    49be:	68fb      	ldr	r3, [r7, #12]
    49c0:	681b      	ldr	r3, [r3, #0]
    49c2:	2b00      	cmp	r3, #0
    49c4:	d104      	bne.n	49d0 <PwmLdd3_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd3_ID);
    49c6:	4b06      	ldr	r3, [pc, #24]	; (49e0 <PwmLdd3_Init+0x54>)
    49c8:	2200      	movs	r2, #0
    49ca:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    49cc:	2300      	movs	r3, #0
    49ce:	e000      	b.n	49d2 <PwmLdd3_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    49d0:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:162
}
    49d2:	1c18      	adds	r0, r3, #0
    49d4:	46bd      	mov	sp, r7
    49d6:	b004      	add	sp, #16
    49d8:	bd80      	pop	{r7, pc}
    49da:	46c0      	nop			; (mov r8, r8)
    49dc:	1ffff13c 	.word	0x1ffff13c
    49e0:	1ffff0cc 	.word	0x1ffff0cc

000049e4 <PwmLdd3_SetRatio8>:
PwmLdd3_SetRatio8():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:191
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError PwmLdd3_SetRatio8(LDD_TDeviceData *DeviceDataPtr, uint8_t Ratio)
{
    49e4:	b580      	push	{r7, lr}
    49e6:	b084      	sub	sp, #16
    49e8:	af00      	add	r7, sp, #0
    49ea:	6078      	str	r0, [r7, #4]
    49ec:	1c0a      	adds	r2, r1, #0
    49ee:	1cfb      	adds	r3, r7, #3
    49f0:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:192
  PwmLdd3_TDeviceData *DeviceDataPrv = (PwmLdd3_TDeviceData *)DeviceDataPtr;
    49f2:	687b      	ldr	r3, [r7, #4]
    49f4:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:194

  DeviceDataPrv->RatioStore = (uint16_t)Ratio << 8U; /* Store new value of the ratio */
    49f6:	1cfb      	adds	r3, r7, #3
    49f8:	781b      	ldrb	r3, [r3, #0]
    49fa:	b29b      	uxth	r3, r3
    49fc:	021b      	lsls	r3, r3, #8
    49fe:	b29a      	uxth	r2, r3
    4a00:	68fb      	ldr	r3, [r7, #12]
    4a02:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:195
  SetRatio(DeviceDataPtr);
    4a04:	687b      	ldr	r3, [r7, #4]
    4a06:	1c18      	adds	r0, r3, #0
    4a08:	f000 f806 	bl	4a18 <SetRatio>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:196
  return ERR_OK;
    4a0c:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:197
}
    4a0e:	1c18      	adds	r0, r3, #0
    4a10:	46bd      	mov	sp, r7
    4a12:	b004      	add	sp, #16
    4a14:	bd80      	pop	{r7, pc}
    4a16:	46c0      	nop			; (mov r8, r8)

00004a18 <SetRatio>:
SetRatio():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:210
**         variable RatioStore.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void SetRatio(LDD_TDeviceData *DeviceDataPtr)
{
    4a18:	b580      	push	{r7, lr}
    4a1a:	b086      	sub	sp, #24
    4a1c:	af00      	add	r7, sp, #0
    4a1e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:211
  PwmLdd3_TDeviceData *DeviceDataPrv = (PwmLdd3_TDeviceData*)DeviceDataPtr;
    4a20:	687b      	ldr	r3, [r7, #4]
    4a22:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:215
  uint16_t Period;
  uint16_t Duty;

  (void)TU2_GetPeriodTicks(DeviceDataPrv->LinkedDeviceDataPtr, &Period);
    4a24:	693b      	ldr	r3, [r7, #16]
    4a26:	681a      	ldr	r2, [r3, #0]
    4a28:	1c3b      	adds	r3, r7, #0
    4a2a:	330e      	adds	r3, #14
    4a2c:	1c10      	adds	r0, r2, #0
    4a2e:	1c19      	adds	r1, r3, #0
    4a30:	f000 fc9a 	bl	5368 <TU2_GetPeriodTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:216
  if (Period == 0U) {
    4a34:	1c3b      	adds	r3, r7, #0
    4a36:	330e      	adds	r3, #14
    4a38:	881b      	ldrh	r3, [r3, #0]
    4a3a:	2b00      	cmp	r3, #0
    4a3c:	d105      	bne.n	4a4a <SetRatio+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:217
    Duty = DeviceDataPrv->RatioStore;
    4a3e:	1c3b      	adds	r3, r7, #0
    4a40:	3316      	adds	r3, #22
    4a42:	693a      	ldr	r2, [r7, #16]
    4a44:	88d2      	ldrh	r2, [r2, #6]
    4a46:	801a      	strh	r2, [r3, #0]
    4a48:	e00c      	b.n	4a64 <SetRatio+0x4c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:220
  }
  else {
    Duty = (uint16_t)((((uint32_t)(Period) * DeviceDataPrv->RatioStore) + 0x8000) >> 0x10);
    4a4a:	1c3b      	adds	r3, r7, #0
    4a4c:	330e      	adds	r3, #14
    4a4e:	881b      	ldrh	r3, [r3, #0]
    4a50:	693a      	ldr	r2, [r7, #16]
    4a52:	88d2      	ldrh	r2, [r2, #6]
    4a54:	4353      	muls	r3, r2
    4a56:	2280      	movs	r2, #128	; 0x80
    4a58:	0212      	lsls	r2, r2, #8
    4a5a:	189b      	adds	r3, r3, r2
    4a5c:	0c1a      	lsrs	r2, r3, #16
    4a5e:	1c3b      	adds	r3, r7, #0
    4a60:	3316      	adds	r3, #22
    4a62:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:222
  }
  (void)TU2_SetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, Duty);
    4a64:	693b      	ldr	r3, [r7, #16]
    4a66:	681a      	ldr	r2, [r3, #0]
    4a68:	1c3b      	adds	r3, r7, #0
    4a6a:	3316      	adds	r3, #22
    4a6c:	881b      	ldrh	r3, [r3, #0]
    4a6e:	1c10      	adds	r0, r2, #0
    4a70:	2102      	movs	r1, #2
    4a72:	1c1a      	adds	r2, r3, #0
    4a74:	f000 fc96 	bl	53a4 <TU2_SetOffsetTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd3.c:223
}
    4a78:	46bd      	mov	sp, r7
    4a7a:	b006      	add	sp, #24
    4a7c:	bd80      	pop	{r7, pc}
    4a7e:	46c0      	nop			; (mov r8, r8)

00004a80 <PwmLdd4_Init>:
PwmLdd4_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:143
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd4_Init(LDD_TUserData *UserDataPtr)
{
    4a80:	b580      	push	{r7, lr}
    4a82:	b084      	sub	sp, #16
    4a84:	af00      	add	r7, sp, #0
    4a86:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:147
  /* Allocate device structure */
  PwmLdd4_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4a88:	4b11      	ldr	r3, [pc, #68]	; (4ad0 <PwmLdd4_Init+0x50>)
    4a8a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:148
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4a8c:	68fb      	ldr	r3, [r7, #12]
    4a8e:	687a      	ldr	r2, [r7, #4]
    4a90:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:149
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    4a92:	68fb      	ldr	r3, [r7, #12]
    4a94:	2201      	movs	r2, #1
    4a96:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:150
  DeviceDataPrv->RatioStore = 0xFFFFU; /* Ratio after initialization */
    4a98:	68fb      	ldr	r3, [r7, #12]
    4a9a:	2201      	movs	r2, #1
    4a9c:	4252      	negs	r2, r2
    4a9e:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:152
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd4_ID,DeviceDataPrv);
    4aa0:	4b0c      	ldr	r3, [pc, #48]	; (4ad4 <PwmLdd4_Init+0x54>)
    4aa2:	68fa      	ldr	r2, [r7, #12]
    4aa4:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:153
  DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
    4aa6:	2000      	movs	r0, #0
    4aa8:	f000 fbc4 	bl	5234 <TU2_Init>
    4aac:	1c02      	adds	r2, r0, #0
    4aae:	68fb      	ldr	r3, [r7, #12]
    4ab0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:154
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    4ab2:	68fb      	ldr	r3, [r7, #12]
    4ab4:	681b      	ldr	r3, [r3, #0]
    4ab6:	2b00      	cmp	r3, #0
    4ab8:	d104      	bne.n	4ac4 <PwmLdd4_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:156
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd4_ID);
    4aba:	4b06      	ldr	r3, [pc, #24]	; (4ad4 <PwmLdd4_Init+0x54>)
    4abc:	2200      	movs	r2, #0
    4abe:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:159
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    4ac0:	2300      	movs	r3, #0
    4ac2:	e000      	b.n	4ac6 <PwmLdd4_Init+0x46>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:161
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    4ac4:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:162
}
    4ac6:	1c18      	adds	r0, r3, #0
    4ac8:	46bd      	mov	sp, r7
    4aca:	b004      	add	sp, #16
    4acc:	bd80      	pop	{r7, pc}
    4ace:	46c0      	nop			; (mov r8, r8)
    4ad0:	1ffff148 	.word	0x1ffff148
    4ad4:	1ffff0cc 	.word	0x1ffff0cc

00004ad8 <PwmLdd4_SetRatio8>:
PwmLdd4_SetRatio8():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:191
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError PwmLdd4_SetRatio8(LDD_TDeviceData *DeviceDataPtr, uint8_t Ratio)
{
    4ad8:	b580      	push	{r7, lr}
    4ada:	b084      	sub	sp, #16
    4adc:	af00      	add	r7, sp, #0
    4ade:	6078      	str	r0, [r7, #4]
    4ae0:	1c0a      	adds	r2, r1, #0
    4ae2:	1cfb      	adds	r3, r7, #3
    4ae4:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:192
  PwmLdd4_TDeviceData *DeviceDataPrv = (PwmLdd4_TDeviceData *)DeviceDataPtr;
    4ae6:	687b      	ldr	r3, [r7, #4]
    4ae8:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:194

  DeviceDataPrv->RatioStore = (uint16_t)Ratio << 8U; /* Store new value of the ratio */
    4aea:	1cfb      	adds	r3, r7, #3
    4aec:	781b      	ldrb	r3, [r3, #0]
    4aee:	b29b      	uxth	r3, r3
    4af0:	021b      	lsls	r3, r3, #8
    4af2:	b29a      	uxth	r2, r3
    4af4:	68fb      	ldr	r3, [r7, #12]
    4af6:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:195
  SetRatio(DeviceDataPtr);
    4af8:	687b      	ldr	r3, [r7, #4]
    4afa:	1c18      	adds	r0, r3, #0
    4afc:	f000 f806 	bl	4b0c <SetRatio>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:196
  return ERR_OK;
    4b00:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:197
}
    4b02:	1c18      	adds	r0, r3, #0
    4b04:	46bd      	mov	sp, r7
    4b06:	b004      	add	sp, #16
    4b08:	bd80      	pop	{r7, pc}
    4b0a:	46c0      	nop			; (mov r8, r8)

00004b0c <SetRatio>:
SetRatio():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:210
**         variable RatioStore.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void SetRatio(LDD_TDeviceData *DeviceDataPtr)
{
    4b0c:	b580      	push	{r7, lr}
    4b0e:	b086      	sub	sp, #24
    4b10:	af00      	add	r7, sp, #0
    4b12:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:211
  PwmLdd4_TDeviceData *DeviceDataPrv = (PwmLdd4_TDeviceData*)DeviceDataPtr;
    4b14:	687b      	ldr	r3, [r7, #4]
    4b16:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:215
  uint16_t Period;
  uint16_t Duty;

  (void)TU2_GetPeriodTicks(DeviceDataPrv->LinkedDeviceDataPtr, &Period);
    4b18:	693b      	ldr	r3, [r7, #16]
    4b1a:	681a      	ldr	r2, [r3, #0]
    4b1c:	1c3b      	adds	r3, r7, #0
    4b1e:	330e      	adds	r3, #14
    4b20:	1c10      	adds	r0, r2, #0
    4b22:	1c19      	adds	r1, r3, #0
    4b24:	f000 fc20 	bl	5368 <TU2_GetPeriodTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:216
  if (Period == 0U) {
    4b28:	1c3b      	adds	r3, r7, #0
    4b2a:	330e      	adds	r3, #14
    4b2c:	881b      	ldrh	r3, [r3, #0]
    4b2e:	2b00      	cmp	r3, #0
    4b30:	d105      	bne.n	4b3e <SetRatio+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:217
    Duty = DeviceDataPrv->RatioStore;
    4b32:	1c3b      	adds	r3, r7, #0
    4b34:	3316      	adds	r3, #22
    4b36:	693a      	ldr	r2, [r7, #16]
    4b38:	88d2      	ldrh	r2, [r2, #6]
    4b3a:	801a      	strh	r2, [r3, #0]
    4b3c:	e00c      	b.n	4b58 <SetRatio+0x4c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:220
  }
  else {
    Duty = (uint16_t)((((uint32_t)(Period) * DeviceDataPrv->RatioStore) + 0x8000) >> 0x10);
    4b3e:	1c3b      	adds	r3, r7, #0
    4b40:	330e      	adds	r3, #14
    4b42:	881b      	ldrh	r3, [r3, #0]
    4b44:	693a      	ldr	r2, [r7, #16]
    4b46:	88d2      	ldrh	r2, [r2, #6]
    4b48:	4353      	muls	r3, r2
    4b4a:	2280      	movs	r2, #128	; 0x80
    4b4c:	0212      	lsls	r2, r2, #8
    4b4e:	189b      	adds	r3, r3, r2
    4b50:	0c1a      	lsrs	r2, r3, #16
    4b52:	1c3b      	adds	r3, r7, #0
    4b54:	3316      	adds	r3, #22
    4b56:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:222
  }
  (void)TU2_SetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, Duty);
    4b58:	693b      	ldr	r3, [r7, #16]
    4b5a:	681a      	ldr	r2, [r3, #0]
    4b5c:	1c3b      	adds	r3, r7, #0
    4b5e:	3316      	adds	r3, #22
    4b60:	881b      	ldrh	r3, [r3, #0]
    4b62:	1c10      	adds	r0, r2, #0
    4b64:	2103      	movs	r1, #3
    4b66:	1c1a      	adds	r2, r3, #0
    4b68:	f000 fc1c 	bl	53a4 <TU2_SetOffsetTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd4.c:223
}
    4b6c:	46bd      	mov	sp, r7
    4b6e:	b006      	add	sp, #24
    4b70:	bd80      	pop	{r7, pc}
    4b72:	46c0      	nop			; (mov r8, r8)

00004b74 <PwmLdd5_Init>:
PwmLdd5_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:147
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* PwmLdd5_Init(LDD_TUserData *UserDataPtr)
{
    4b74:	b580      	push	{r7, lr}
    4b76:	b084      	sub	sp, #16
    4b78:	af00      	add	r7, sp, #0
    4b7a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:151
  /* Allocate device structure */
  PwmLdd5_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4b7c:	4b10      	ldr	r3, [pc, #64]	; (4bc0 <PwmLdd5_Init+0x4c>)
    4b7e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:152
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4b80:	68fb      	ldr	r3, [r7, #12]
    4b82:	687a      	ldr	r2, [r7, #4]
    4b84:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:153
  DeviceDataPrv->EnUser = FALSE;       /* Set the flag "device disabled" */
    4b86:	68fb      	ldr	r3, [r7, #12]
    4b88:	2200      	movs	r2, #0
    4b8a:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:154
  DeviceDataPrv->RatioStore = 0xED6FU; /* Ratio after initialization */
    4b8c:	68fb      	ldr	r3, [r7, #12]
    4b8e:	4a0d      	ldr	r2, [pc, #52]	; (4bc4 <PwmLdd5_Init+0x50>)
    4b90:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:156
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd5_ID,DeviceDataPrv);
    4b92:	4b0d      	ldr	r3, [pc, #52]	; (4bc8 <PwmLdd5_Init+0x54>)
    4b94:	68fa      	ldr	r2, [r7, #12]
    4b96:	635a      	str	r2, [r3, #52]	; 0x34
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:157
  DeviceDataPrv->LinkedDeviceDataPtr = TU3_Init((LDD_TUserData *)NULL);
    4b98:	2000      	movs	r0, #0
    4b9a:	f000 fc2f 	bl	53fc <TU3_Init>
    4b9e:	1c02      	adds	r2, r0, #0
    4ba0:	68fb      	ldr	r3, [r7, #12]
    4ba2:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:158
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    4ba4:	68fb      	ldr	r3, [r7, #12]
    4ba6:	681b      	ldr	r3, [r3, #0]
    4ba8:	2b00      	cmp	r3, #0
    4baa:	d104      	bne.n	4bb6 <PwmLdd5_Init+0x42>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:160
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd5_ID);
    4bac:	4b06      	ldr	r3, [pc, #24]	; (4bc8 <PwmLdd5_Init+0x54>)
    4bae:	2200      	movs	r2, #0
    4bb0:	635a      	str	r2, [r3, #52]	; 0x34
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:163
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the PWM initialization is also unsuccessful */
    4bb2:	2300      	movs	r3, #0
    4bb4:	e000      	b.n	4bb8 <PwmLdd5_Init+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:165
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    4bb6:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:166
}
    4bb8:	1c18      	adds	r0, r3, #0
    4bba:	46bd      	mov	sp, r7
    4bbc:	b004      	add	sp, #16
    4bbe:	bd80      	pop	{r7, pc}
    4bc0:	1ffff154 	.word	0x1ffff154
    4bc4:	ffffed6f 	.word	0xffffed6f
    4bc8:	1ffff0cc 	.word	0x1ffff0cc

00004bcc <PwmLdd5_Enable>:
PwmLdd5_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:187
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError PwmLdd5_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    4bcc:	b580      	push	{r7, lr}
    4bce:	b084      	sub	sp, #16
    4bd0:	af00      	add	r7, sp, #0
    4bd2:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:188
  PwmLdd5_TDeviceData *DeviceDataPrv = (PwmLdd5_TDeviceData *)DeviceDataPtr;
    4bd4:	687b      	ldr	r3, [r7, #4]
    4bd6:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:190

  if (!DeviceDataPrv->EnUser) {        /* Is the device disabled by user? */
    4bd8:	68fb      	ldr	r3, [r7, #12]
    4bda:	791b      	ldrb	r3, [r3, #4]
    4bdc:	2b00      	cmp	r3, #0
    4bde:	d107      	bne.n	4bf0 <PwmLdd5_Enable+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:191
    DeviceDataPrv->EnUser = TRUE;      /* If yes then set the flag "device enabled" */
    4be0:	68fb      	ldr	r3, [r7, #12]
    4be2:	2201      	movs	r2, #1
    4be4:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:192
    (void)TU3_Enable(DeviceDataPrv->LinkedDeviceDataPtr); /* Enable TimerUnit */
    4be6:	68fb      	ldr	r3, [r7, #12]
    4be8:	681b      	ldr	r3, [r3, #0]
    4bea:	1c18      	adds	r0, r3, #0
    4bec:	f000 fc6c 	bl	54c8 <TU3_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:194
  }
  return ERR_OK;
    4bf0:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:195
}
    4bf2:	1c18      	adds	r0, r3, #0
    4bf4:	46bd      	mov	sp, r7
    4bf6:	b004      	add	sp, #16
    4bf8:	bd80      	pop	{r7, pc}
    4bfa:	46c0      	nop			; (mov r8, r8)

00004bfc <PwmLdd5_SetDutyUS>:
PwmLdd5_SetDutyUS():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:288
**                           ERR_MATH - Overflow during evaluation
**                           ERR_PARAM_RANGE - Parameter out of range
*/
/* ===================================================================*/
LDD_TError PwmLdd5_SetDutyUS(LDD_TDeviceData *DeviceDataPtr, uint16_t Time)
{
    4bfc:	b580      	push	{r7, lr}
    4bfe:	b084      	sub	sp, #16
    4c00:	af00      	add	r7, sp, #0
    4c02:	6078      	str	r0, [r7, #4]
    4c04:	1c0a      	adds	r2, r1, #0
    4c06:	1cbb      	adds	r3, r7, #2
    4c08:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:289
  PwmLdd5_TDeviceData *DeviceDataPrv = (PwmLdd5_TDeviceData *)DeviceDataPtr;
    4c0a:	687b      	ldr	r3, [r7, #4]
    4c0c:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:294
  LDD_TimerUnit_Tfloat rtval;          /* Result of multiplication */

  /* Time test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (Time > 0x4E20U) {                /* Is the given value out of range? */
    4c0e:	1cbb      	adds	r3, r7, #2
    4c10:	881a      	ldrh	r2, [r3, #0]
    4c12:	4b16      	ldr	r3, [pc, #88]	; (4c6c <PwmLdd5_SetDutyUS+0x70>)
    4c14:	429a      	cmp	r2, r3
    4c16:	d901      	bls.n	4c1c <PwmLdd5_SetDutyUS+0x20>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:295
    return ERR_PARAM_RANGE;            /* If yes then error */
    4c18:	2386      	movs	r3, #134	; 0x86
    4c1a:	e023      	b.n	4c64 <PwmLdd5_SetDutyUS+0x68>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:297
  }
  rtval = Time * 3.276787500048F;      /* Multiply given value and actual clock configuration coefficient */
    4c1c:	1cbb      	adds	r3, r7, #2
    4c1e:	881b      	ldrh	r3, [r3, #0]
    4c20:	1c18      	adds	r0, r3, #0
    4c22:	f7fc fbb1 	bl	1388 <__aeabi_i2f>
    4c26:	1c03      	adds	r3, r0, #0
    4c28:	1c18      	adds	r0, r3, #0
    4c2a:	4911      	ldr	r1, [pc, #68]	; (4c70 <PwmLdd5_SetDutyUS+0x74>)
    4c2c:	f7fc f8ec 	bl	e08 <__aeabi_fmul>
    4c30:	1c03      	adds	r3, r0, #0
    4c32:	60bb      	str	r3, [r7, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:298
  if (rtval > 0xFFFFUL) {              /* Is the result greater than 65535 ? */
    4c34:	68b8      	ldr	r0, [r7, #8]
    4c36:	490f      	ldr	r1, [pc, #60]	; (4c74 <PwmLdd5_SetDutyUS+0x78>)
    4c38:	f7fb fd6a 	bl	710 <__aeabi_fcmpgt>
    4c3c:	1c03      	adds	r3, r0, #0
    4c3e:	2b00      	cmp	r3, #0
    4c40:	d004      	beq.n	4c4c <PwmLdd5_SetDutyUS+0x50>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:299
    DeviceDataPrv->RatioStore = 0xFFFFU; /* If yes then use maximal possible value */
    4c42:	68fb      	ldr	r3, [r7, #12]
    4c44:	2201      	movs	r2, #1
    4c46:	4252      	negs	r2, r2
    4c48:	80da      	strh	r2, [r3, #6]
    4c4a:	e006      	b.n	4c5a <PwmLdd5_SetDutyUS+0x5e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:302
  }
  else {
    DeviceDataPrv->RatioStore = (uint16_t)rtval;
    4c4c:	68b8      	ldr	r0, [r7, #8]
    4c4e:	f7fb fd73 	bl	738 <__aeabi_f2uiz>
    4c52:	1c03      	adds	r3, r0, #0
    4c54:	b29a      	uxth	r2, r3
    4c56:	68fb      	ldr	r3, [r7, #12]
    4c58:	80da      	strh	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:304
  }
  SetRatio(DeviceDataPtr);             /* Calculate and set up new appropriate values of the duty register */
    4c5a:	687b      	ldr	r3, [r7, #4]
    4c5c:	1c18      	adds	r0, r3, #0
    4c5e:	f000 f80b 	bl	4c78 <SetRatio>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:305
  return ERR_OK;                       /* OK */
    4c62:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:306
}
    4c64:	1c18      	adds	r0, r3, #0
    4c66:	46bd      	mov	sp, r7
    4c68:	b004      	add	sp, #16
    4c6a:	bd80      	pop	{r7, pc}
    4c6c:	00004e20 	.word	0x00004e20
    4c70:	4051b6e3 	.word	0x4051b6e3
    4c74:	477fff00 	.word	0x477fff00

00004c78 <SetRatio>:
SetRatio():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:365
**         variable RatioStore.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void SetRatio(LDD_TDeviceData *DeviceDataPtr)
{
    4c78:	b580      	push	{r7, lr}
    4c7a:	b086      	sub	sp, #24
    4c7c:	af00      	add	r7, sp, #0
    4c7e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:366
  PwmLdd5_TDeviceData *DeviceDataPrv = (PwmLdd5_TDeviceData*)DeviceDataPtr;
    4c80:	687b      	ldr	r3, [r7, #4]
    4c82:	613b      	str	r3, [r7, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:370
  uint16_t Period;
  uint16_t Duty;

  (void)TU3_GetPeriodTicks(DeviceDataPrv->LinkedDeviceDataPtr, &Period);
    4c84:	693b      	ldr	r3, [r7, #16]
    4c86:	681a      	ldr	r2, [r3, #0]
    4c88:	1c3b      	adds	r3, r7, #0
    4c8a:	330e      	adds	r3, #14
    4c8c:	1c10      	adds	r0, r2, #0
    4c8e:	1c19      	adds	r1, r3, #0
    4c90:	f000 fc32 	bl	54f8 <TU3_GetPeriodTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:371
  if (Period == 0U) {
    4c94:	1c3b      	adds	r3, r7, #0
    4c96:	330e      	adds	r3, #14
    4c98:	881b      	ldrh	r3, [r3, #0]
    4c9a:	2b00      	cmp	r3, #0
    4c9c:	d105      	bne.n	4caa <SetRatio+0x32>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:372
    Duty = DeviceDataPrv->RatioStore;
    4c9e:	1c3b      	adds	r3, r7, #0
    4ca0:	3316      	adds	r3, #22
    4ca2:	693a      	ldr	r2, [r7, #16]
    4ca4:	88d2      	ldrh	r2, [r2, #6]
    4ca6:	801a      	strh	r2, [r3, #0]
    4ca8:	e00c      	b.n	4cc4 <SetRatio+0x4c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:375
  }
  else {
    Duty = (uint16_t)((((uint32_t)(Period) * DeviceDataPrv->RatioStore) + 0x8000) >> 0x10);
    4caa:	1c3b      	adds	r3, r7, #0
    4cac:	330e      	adds	r3, #14
    4cae:	881b      	ldrh	r3, [r3, #0]
    4cb0:	693a      	ldr	r2, [r7, #16]
    4cb2:	88d2      	ldrh	r2, [r2, #6]
    4cb4:	4353      	muls	r3, r2
    4cb6:	2280      	movs	r2, #128	; 0x80
    4cb8:	0212      	lsls	r2, r2, #8
    4cba:	189b      	adds	r3, r3, r2
    4cbc:	0c1a      	lsrs	r2, r3, #16
    4cbe:	1c3b      	adds	r3, r7, #0
    4cc0:	3316      	adds	r3, #22
    4cc2:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:377
  }
  (void)TU3_SetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, Duty);
    4cc4:	693b      	ldr	r3, [r7, #16]
    4cc6:	681a      	ldr	r2, [r3, #0]
    4cc8:	1c3b      	adds	r3, r7, #0
    4cca:	3316      	adds	r3, #22
    4ccc:	881b      	ldrh	r3, [r3, #0]
    4cce:	1c10      	adds	r0, r2, #0
    4cd0:	2100      	movs	r1, #0
    4cd2:	1c1a      	adds	r2, r3, #0
    4cd4:	f000 fc2e 	bl	5534 <TU3_SetOffsetTicks>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/PwmLdd5.c:378
}
    4cd8:	46bd      	mov	sp, r7
    4cda:	b006      	add	sp, #24
    4cdc:	bd80      	pop	{r7, pc}
    4cde:	46c0      	nop			; (mov r8, r8)

00004ce0 <SerialCom_Init>:
SerialCom_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:160
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* SerialCom_Init(LDD_TUserData *UserDataPtr)
{
    4ce0:	b580      	push	{r7, lr}
    4ce2:	b084      	sub	sp, #16
    4ce4:	af00      	add	r7, sp, #0
    4ce6:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:164
  /* Allocate device structure */
  SerialCom_TDeviceDataPtr DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4ce8:	4b5e      	ldr	r3, [pc, #376]	; (4e64 <SerialCom_Init+0x184>)
    4cea:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:167

  /* Clear the receive counters and pointer */
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Clear the counter of received characters */
    4cec:	68fb      	ldr	r3, [r7, #12]
    4cee:	2200      	movs	r2, #0
    4cf0:	805a      	strh	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:168
  DeviceDataPrv->InpDataNumReq = 0x00U; /* Clear the counter of characters to receive by ReceiveBlock() */
    4cf2:	68fb      	ldr	r3, [r7, #12]
    4cf4:	2200      	movs	r2, #0
    4cf6:	811a      	strh	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:169
  DeviceDataPrv->InpDataPtr = NULL;    /* Clear the buffer pointer for received characters */
    4cf8:	68fb      	ldr	r3, [r7, #12]
    4cfa:	2200      	movs	r2, #0
    4cfc:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:171
  /* Clear the transmit counters and pointer */
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters */
    4cfe:	68fb      	ldr	r3, [r7, #12]
    4d00:	2200      	movs	r2, #0
    4d02:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:172
  DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    4d04:	68fb      	ldr	r3, [r7, #12]
    4d06:	2200      	movs	r2, #0
    4d08:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:173
  DeviceDataPrv->OutDataPtr = NULL;    /* Clear the buffer pointer for data to be transmitted */
    4d0a:	68fb      	ldr	r3, [r7, #12]
    4d0c:	2200      	movs	r2, #0
    4d0e:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:174
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4d10:	68fb      	ldr	r3, [r7, #12]
    4d12:	687a      	ldr	r2, [r7, #4]
    4d14:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:177
  /* Allocate interrupt vectors */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_UART0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    4d16:	4b54      	ldr	r3, [pc, #336]	; (4e68 <SerialCom_Init+0x188>)
    4d18:	68fa      	ldr	r2, [r7, #12]
    4d1a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:179
  /* SIM_SCGC4: UART0=1 */
  SIM_SCGC4 |= SIM_SCGC4_UART0_MASK;
    4d1c:	4a53      	ldr	r2, [pc, #332]	; (4e6c <SerialCom_Init+0x18c>)
    4d1e:	4953      	ldr	r1, [pc, #332]	; (4e6c <SerialCom_Init+0x18c>)
    4d20:	4b53      	ldr	r3, [pc, #332]	; (4e70 <SerialCom_Init+0x190>)
    4d22:	58cb      	ldr	r3, [r1, r3]
    4d24:	2180      	movs	r1, #128	; 0x80
    4d26:	00c9      	lsls	r1, r1, #3
    4d28:	4319      	orrs	r1, r3
    4d2a:	4b51      	ldr	r3, [pc, #324]	; (4e70 <SerialCom_Init+0x190>)
    4d2c:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:181
  /* PORTA_PCR1: ISF=0,MUX=2 */
  PORTA_PCR1 = (uint32_t)((PORTA_PCR1 & (uint32_t)~(uint32_t)(
    4d2e:	4b51      	ldr	r3, [pc, #324]	; (4e74 <SerialCom_Init+0x194>)
    4d30:	4a50      	ldr	r2, [pc, #320]	; (4e74 <SerialCom_Init+0x194>)
    4d32:	6851      	ldr	r1, [r2, #4]
    4d34:	4a50      	ldr	r2, [pc, #320]	; (4e78 <SerialCom_Init+0x198>)
    4d36:	400a      	ands	r2, r1
    4d38:	2180      	movs	r1, #128	; 0x80
    4d3a:	0089      	lsls	r1, r1, #2
    4d3c:	430a      	orrs	r2, r1
    4d3e:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:188
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* PORTA_PCR2: ISF=0,MUX=2 */
  PORTA_PCR2 = (uint32_t)((PORTA_PCR2 & (uint32_t)~(uint32_t)(
    4d40:	4b4c      	ldr	r3, [pc, #304]	; (4e74 <SerialCom_Init+0x194>)
    4d42:	4a4c      	ldr	r2, [pc, #304]	; (4e74 <SerialCom_Init+0x194>)
    4d44:	6891      	ldr	r1, [r2, #8]
    4d46:	4a4c      	ldr	r2, [pc, #304]	; (4e78 <SerialCom_Init+0x198>)
    4d48:	400a      	ands	r2, r1
    4d4a:	2180      	movs	r1, #128	; 0x80
    4d4c:	0089      	lsls	r1, r1, #2
    4d4e:	430a      	orrs	r2, r1
    4d50:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:195
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* NVIC_IPR3: PRI_12=0x80 */
  NVIC_IPR3 = (uint32_t)((NVIC_IPR3 & (uint32_t)~(uint32_t)(
    4d52:	4a4a      	ldr	r2, [pc, #296]	; (4e7c <SerialCom_Init+0x19c>)
    4d54:	4949      	ldr	r1, [pc, #292]	; (4e7c <SerialCom_Init+0x19c>)
    4d56:	23c3      	movs	r3, #195	; 0xc3
    4d58:	009b      	lsls	r3, r3, #2
    4d5a:	58cb      	ldr	r3, [r1, r3]
    4d5c:	21c0      	movs	r1, #192	; 0xc0
    4d5e:	1c18      	adds	r0, r3, #0
    4d60:	4388      	bics	r0, r1
    4d62:	1c01      	adds	r1, r0, #0
    4d64:	23c3      	movs	r3, #195	; 0xc3
    4d66:	009b      	lsls	r3, r3, #2
    4d68:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:201
               NVIC_IP_PRI_12(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_12(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x1000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x1000);
    4d6a:	4b44      	ldr	r3, [pc, #272]	; (4e7c <SerialCom_Init+0x19c>)
    4d6c:	4a43      	ldr	r2, [pc, #268]	; (4e7c <SerialCom_Init+0x19c>)
    4d6e:	6812      	ldr	r2, [r2, #0]
    4d70:	2180      	movs	r1, #128	; 0x80
    4d72:	0149      	lsls	r1, r1, #5
    4d74:	430a      	orrs	r2, r1
    4d76:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:202
  UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_DISABLE); /* Disable transmitter. */
    4d78:	4b41      	ldr	r3, [pc, #260]	; (4e80 <SerialCom_Init+0x1a0>)
    4d7a:	4a41      	ldr	r2, [pc, #260]	; (4e80 <SerialCom_Init+0x1a0>)
    4d7c:	78d2      	ldrb	r2, [r2, #3]
    4d7e:	b2d2      	uxtb	r2, r2
    4d80:	2108      	movs	r1, #8
    4d82:	438a      	bics	r2, r1
    4d84:	b2d2      	uxtb	r2, r2
    4d86:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:203
  UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_DISABLE); /* Disable receiver. */
    4d88:	4b3d      	ldr	r3, [pc, #244]	; (4e80 <SerialCom_Init+0x1a0>)
    4d8a:	4a3d      	ldr	r2, [pc, #244]	; (4e80 <SerialCom_Init+0x1a0>)
    4d8c:	78d2      	ldrb	r2, [r2, #3]
    4d8e:	b2d2      	uxtb	r2, r2
    4d90:	2104      	movs	r1, #4
    4d92:	438a      	bics	r2, r1
    4d94:	b2d2      	uxtb	r2, r2
    4d96:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:204
  DeviceDataPrv->SerFlag = 0x00U;      /* Reset flags */
    4d98:	68fb      	ldr	r3, [r7, #12]
    4d9a:	2200      	movs	r2, #0
    4d9c:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:206
  /* UART0_C1: LOOPS=0,DOZEEN=0,RSRC=0,M=0,WAKE=0,ILT=0,PE=0,PT=0 */
  UART0_C1 = 0x00U;                    /*  Set the C1 register */
    4d9e:	4b38      	ldr	r3, [pc, #224]	; (4e80 <SerialCom_Init+0x1a0>)
    4da0:	2200      	movs	r2, #0
    4da2:	709a      	strb	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:208
  /* UART0_C3: R8T9=0,R9T8=0,TXDIR=0,TXINV=0,ORIE=0,NEIE=0,FEIE=0,PEIE=0 */
  UART0_C3 = 0x00U;                    /*  Set the C3 register */
    4da4:	4b36      	ldr	r3, [pc, #216]	; (4e80 <SerialCom_Init+0x1a0>)
    4da6:	2200      	movs	r2, #0
    4da8:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:210
  /* UART0_C4: MAEN1=0,MAEN2=0,M10=0,OSR=0 */
  UART0_C4 = UART0_C4_OSR(0x00);       /*  Set the C4 register */
    4daa:	4b35      	ldr	r3, [pc, #212]	; (4e80 <SerialCom_Init+0x1a0>)
    4dac:	2200      	movs	r2, #0
    4dae:	729a      	strb	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:212
  /* UART0_S2: LBKDIF=0,RXEDGIF=0,MSBF=0,RXINV=0,RWUID=0,BRK13=0,LBKDE=0,RAF=0 */
  UART0_S2 = 0x00U;                    /*  Set the S2 register */
    4db0:	4b33      	ldr	r3, [pc, #204]	; (4e80 <SerialCom_Init+0x1a0>)
    4db2:	2200      	movs	r2, #0
    4db4:	715a      	strb	r2, [r3, #5]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:213
  SIM_PDD_SetClockSourceUART0(SIM_BASE_PTR, SIM_PDD_UART0_PLL_FLL_CLOCK);
    4db6:	4a2d      	ldr	r2, [pc, #180]	; (4e6c <SerialCom_Init+0x18c>)
    4db8:	492c      	ldr	r1, [pc, #176]	; (4e6c <SerialCom_Init+0x18c>)
    4dba:	4b32      	ldr	r3, [pc, #200]	; (4e84 <SerialCom_Init+0x1a4>)
    4dbc:	58c9      	ldr	r1, [r1, r3]
    4dbe:	4b32      	ldr	r3, [pc, #200]	; (4e88 <SerialCom_Init+0x1a8>)
    4dc0:	400b      	ands	r3, r1
    4dc2:	2180      	movs	r1, #128	; 0x80
    4dc4:	04c9      	lsls	r1, r1, #19
    4dc6:	4319      	orrs	r1, r3
    4dc8:	4b2e      	ldr	r3, [pc, #184]	; (4e84 <SerialCom_Init+0x1a4>)
    4dca:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:214
  UART0_PDD_SetBaudRate(UART0_BASE_PTR, 46U); /* Set the baud rate register. */
    4dcc:	4b2c      	ldr	r3, [pc, #176]	; (4e80 <SerialCom_Init+0x1a0>)
    4dce:	4a2c      	ldr	r2, [pc, #176]	; (4e80 <SerialCom_Init+0x1a0>)
    4dd0:	7812      	ldrb	r2, [r2, #0]
    4dd2:	b2d2      	uxtb	r2, r2
    4dd4:	211f      	movs	r1, #31
    4dd6:	438a      	bics	r2, r1
    4dd8:	b2d2      	uxtb	r2, r2
    4dda:	701a      	strb	r2, [r3, #0]
    4ddc:	4b28      	ldr	r3, [pc, #160]	; (4e80 <SerialCom_Init+0x1a0>)
    4dde:	222e      	movs	r2, #46	; 0x2e
    4de0:	705a      	strb	r2, [r3, #1]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:215
  UART0_PDD_SetOversamplingRatio(UART0_BASE_PTR, 3U);
    4de2:	4b27      	ldr	r3, [pc, #156]	; (4e80 <SerialCom_Init+0x1a0>)
    4de4:	4a26      	ldr	r2, [pc, #152]	; (4e80 <SerialCom_Init+0x1a0>)
    4de6:	7a92      	ldrb	r2, [r2, #10]
    4de8:	b2d2      	uxtb	r2, r2
    4dea:	b2d2      	uxtb	r2, r2
    4dec:	211f      	movs	r1, #31
    4dee:	438a      	bics	r2, r1
    4df0:	b2d2      	uxtb	r2, r2
    4df2:	2103      	movs	r1, #3
    4df4:	430a      	orrs	r2, r1
    4df6:	b2d2      	uxtb	r2, r2
    4df8:	b2d2      	uxtb	r2, r2
    4dfa:	729a      	strb	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:216
  UART0_PDD_EnableSamplingOnBothEdges(UART0_BASE_PTR, PDD_ENABLE);
    4dfc:	4b20      	ldr	r3, [pc, #128]	; (4e80 <SerialCom_Init+0x1a0>)
    4dfe:	4a20      	ldr	r2, [pc, #128]	; (4e80 <SerialCom_Init+0x1a0>)
    4e00:	7ad2      	ldrb	r2, [r2, #11]
    4e02:	b2d2      	uxtb	r2, r2
    4e04:	b2d2      	uxtb	r2, r2
    4e06:	2102      	movs	r1, #2
    4e08:	430a      	orrs	r2, r1
    4e0a:	b2d2      	uxtb	r2, r2
    4e0c:	b2d2      	uxtb	r2, r2
    4e0e:	72da      	strb	r2, [r3, #11]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:217
  UART0_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_ENABLE); /* Enable transmitter */
    4e10:	4b1b      	ldr	r3, [pc, #108]	; (4e80 <SerialCom_Init+0x1a0>)
    4e12:	4a1b      	ldr	r2, [pc, #108]	; (4e80 <SerialCom_Init+0x1a0>)
    4e14:	78d2      	ldrb	r2, [r2, #3]
    4e16:	b2d2      	uxtb	r2, r2
    4e18:	b2d2      	uxtb	r2, r2
    4e1a:	2108      	movs	r1, #8
    4e1c:	430a      	orrs	r2, r1
    4e1e:	b2d2      	uxtb	r2, r2
    4e20:	b2d2      	uxtb	r2, r2
    4e22:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:218
  UART0_PDD_EnableReceiver(UART0_BASE_PTR, PDD_ENABLE); /* Enable receiver */
    4e24:	4b16      	ldr	r3, [pc, #88]	; (4e80 <SerialCom_Init+0x1a0>)
    4e26:	4a16      	ldr	r2, [pc, #88]	; (4e80 <SerialCom_Init+0x1a0>)
    4e28:	78d2      	ldrb	r2, [r2, #3]
    4e2a:	b2d2      	uxtb	r2, r2
    4e2c:	b2d2      	uxtb	r2, r2
    4e2e:	2104      	movs	r1, #4
    4e30:	430a      	orrs	r2, r1
    4e32:	b2d2      	uxtb	r2, r2
    4e34:	b2d2      	uxtb	r2, r2
    4e36:	70da      	strb	r2, [r3, #3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:219
  UART0_PDD_EnableInterrupt(UART0_BASE_PTR, ( UART0_PDD_INTERRUPT_RECEIVER )); /* Enable interrupts */
    4e38:	4b11      	ldr	r3, [pc, #68]	; (4e80 <SerialCom_Init+0x1a0>)
    4e3a:	4a11      	ldr	r2, [pc, #68]	; (4e80 <SerialCom_Init+0x1a0>)
    4e3c:	78d2      	ldrb	r2, [r2, #3]
    4e3e:	b2d2      	uxtb	r2, r2
    4e40:	2120      	movs	r1, #32
    4e42:	430a      	orrs	r2, r1
    4e44:	b2d2      	uxtb	r2, r2
    4e46:	70da      	strb	r2, [r3, #3]
    4e48:	4b0d      	ldr	r3, [pc, #52]	; (4e80 <SerialCom_Init+0x1a0>)
    4e4a:	4a0d      	ldr	r2, [pc, #52]	; (4e80 <SerialCom_Init+0x1a0>)
    4e4c:	7992      	ldrb	r2, [r2, #6]
    4e4e:	b2d2      	uxtb	r2, r2
    4e50:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:221
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_SerialCom_ID,DeviceDataPrv);
    4e52:	4b0e      	ldr	r3, [pc, #56]	; (4e8c <SerialCom_Init+0x1ac>)
    4e54:	68fa      	ldr	r2, [r7, #12]
    4e56:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:222
  return ((LDD_TDeviceData *)DeviceDataPrv);
    4e58:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:223
}
    4e5a:	1c18      	adds	r0, r3, #0
    4e5c:	46bd      	mov	sp, r7
    4e5e:	b004      	add	sp, #16
    4e60:	bd80      	pop	{r7, pc}
    4e62:	46c0      	nop			; (mov r8, r8)
    4e64:	1ffff160 	.word	0x1ffff160
    4e68:	1ffff178 	.word	0x1ffff178
    4e6c:	40047000 	.word	0x40047000
    4e70:	00001034 	.word	0x00001034
    4e74:	40049000 	.word	0x40049000
    4e78:	fefff8ff 	.word	0xfefff8ff
    4e7c:	e000e100 	.word	0xe000e100
    4e80:	4006a000 	.word	0x4006a000
    4e84:	00001004 	.word	0x00001004
    4e88:	f3ffffff 	.word	0xf3ffffff
    4e8c:	1ffff0cc 	.word	0x1ffff0cc

00004e90 <SerialCom_SendBlock>:
SerialCom_SendBlock():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:330
**                           ERR_BUSY - The previous transmit request is
**                           pending.
*/
/* ===================================================================*/
LDD_TError SerialCom_SendBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    4e90:	b580      	push	{r7, lr}
    4e92:	b086      	sub	sp, #24
    4e94:	af00      	add	r7, sp, #0
    4e96:	60f8      	str	r0, [r7, #12]
    4e98:	60b9      	str	r1, [r7, #8]
    4e9a:	1dbb      	adds	r3, r7, #6
    4e9c:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:331
  SerialCom_TDeviceDataPtr DeviceDataPrv = (SerialCom_TDeviceDataPtr)DeviceDataPtr;
    4e9e:	68fb      	ldr	r3, [r7, #12]
    4ea0:	617b      	str	r3, [r7, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:333

  if (Size == 0U) {                    /* Is the parameter Size within an expected range? */
    4ea2:	1dbb      	adds	r3, r7, #6
    4ea4:	881b      	ldrh	r3, [r3, #0]
    4ea6:	2b00      	cmp	r3, #0
    4ea8:	d101      	bne.n	4eae <SerialCom_SendBlock+0x1e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:334
    return ERR_PARAM_SIZE;             /* If no then error */
    4eaa:	2384      	movs	r3, #132	; 0x84
    4eac:	e048      	b.n	4f40 <SerialCom_SendBlock+0xb0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:336
  }
  if (DeviceDataPrv->OutDataNumReq != 0x00U) { /* Is the previous transmit operation pending? */
    4eae:	697b      	ldr	r3, [r7, #20]
    4eb0:	8a1b      	ldrh	r3, [r3, #16]
    4eb2:	2b00      	cmp	r3, #0
    4eb4:	d001      	beq.n	4eba <SerialCom_SendBlock+0x2a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:337
    return ERR_BUSY;                   /* If yes then error */
    4eb6:	2308      	movs	r3, #8
    4eb8:	e042      	b.n	4f40 <SerialCom_SendBlock+0xb0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:340
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    4eba:	1c3b      	adds	r3, r7, #0
    4ebc:	3313      	adds	r3, #19
    4ebe:	f3ef 8010 	mrs	r0, PRIMASK
    4ec2:	b672      	cpsid	i
    4ec4:	7018      	strb	r0, [r3, #0]
    4ec6:	4b20      	ldr	r3, [pc, #128]	; (4f48 <SerialCom_SendBlock+0xb8>)
    4ec8:	781b      	ldrb	r3, [r3, #0]
    4eca:	b2db      	uxtb	r3, r3
    4ecc:	3301      	adds	r3, #1
    4ece:	b2db      	uxtb	r3, r3
    4ed0:	4a1d      	ldr	r2, [pc, #116]	; (4f48 <SerialCom_SendBlock+0xb8>)
    4ed2:	1c19      	adds	r1, r3, #0
    4ed4:	7011      	strb	r1, [r2, #0]
    4ed6:	2b01      	cmp	r3, #1
    4ed8:	d104      	bne.n	4ee4 <SerialCom_SendBlock+0x54>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:340 (discriminator 1)
    4eda:	1c3b      	adds	r3, r7, #0
    4edc:	3313      	adds	r3, #19
    4ede:	781a      	ldrb	r2, [r3, #0]
    4ee0:	4b1a      	ldr	r3, [pc, #104]	; (4f4c <SerialCom_SendBlock+0xbc>)
    4ee2:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:341
  DeviceDataPrv->OutDataPtr = (uint8_t*)BufferPtr; /* Set a pointer to the output data. */
    4ee4:	697b      	ldr	r3, [r7, #20]
    4ee6:	68ba      	ldr	r2, [r7, #8]
    4ee8:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:342
  DeviceDataPrv->OutDataNumReq = Size; /* Set the counter of characters to be sent. */
    4eea:	697b      	ldr	r3, [r7, #20]
    4eec:	1dba      	adds	r2, r7, #6
    4eee:	8812      	ldrh	r2, [r2, #0]
    4ef0:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:343
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters. */
    4ef2:	697b      	ldr	r3, [r7, #20]
    4ef4:	2200      	movs	r2, #0
    4ef6:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:344
  DeviceDataPrv->SerFlag |= ENABLED_TX_INT; /* Set the flag ENABLED_TX_INT */
    4ef8:	697b      	ldr	r3, [r7, #20]
    4efa:	881b      	ldrh	r3, [r3, #0]
    4efc:	2201      	movs	r2, #1
    4efe:	4313      	orrs	r3, r2
    4f00:	b29a      	uxth	r2, r3
    4f02:	697b      	ldr	r3, [r7, #20]
    4f04:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:345
  UART0_PDD_EnableInterrupt(UART0_BASE_PTR, UART0_PDD_INTERRUPT_TRANSMITTER); /* Enable TX interrupt */
    4f06:	4b12      	ldr	r3, [pc, #72]	; (4f50 <SerialCom_SendBlock+0xc0>)
    4f08:	4a11      	ldr	r2, [pc, #68]	; (4f50 <SerialCom_SendBlock+0xc0>)
    4f0a:	78d2      	ldrb	r2, [r2, #3]
    4f0c:	b2d2      	uxtb	r2, r2
    4f0e:	2180      	movs	r1, #128	; 0x80
    4f10:	4249      	negs	r1, r1
    4f12:	430a      	orrs	r2, r1
    4f14:	b2d2      	uxtb	r2, r2
    4f16:	70da      	strb	r2, [r3, #3]
    4f18:	4b0d      	ldr	r3, [pc, #52]	; (4f50 <SerialCom_SendBlock+0xc0>)
    4f1a:	4a0d      	ldr	r2, [pc, #52]	; (4f50 <SerialCom_SendBlock+0xc0>)
    4f1c:	7992      	ldrb	r2, [r2, #6]
    4f1e:	b2d2      	uxtb	r2, r2
    4f20:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:347
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    4f22:	4b09      	ldr	r3, [pc, #36]	; (4f48 <SerialCom_SendBlock+0xb8>)
    4f24:	781b      	ldrb	r3, [r3, #0]
    4f26:	b2db      	uxtb	r3, r3
    4f28:	3b01      	subs	r3, #1
    4f2a:	b2db      	uxtb	r3, r3
    4f2c:	4a06      	ldr	r2, [pc, #24]	; (4f48 <SerialCom_SendBlock+0xb8>)
    4f2e:	1c19      	adds	r1, r3, #0
    4f30:	7011      	strb	r1, [r2, #0]
    4f32:	2b00      	cmp	r3, #0
    4f34:	d103      	bne.n	4f3e <SerialCom_SendBlock+0xae>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:347 (discriminator 1)
    4f36:	4b05      	ldr	r3, [pc, #20]	; (4f4c <SerialCom_SendBlock+0xbc>)
    4f38:	7818      	ldrb	r0, [r3, #0]
    4f3a:	f380 8810 	msr	PRIMASK, r0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:348
  return ERR_OK;                       /* OK */
    4f3e:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:349
}
    4f40:	1c18      	adds	r0, r3, #0
    4f42:	46bd      	mov	sp, r7
    4f44:	b006      	add	sp, #24
    4f46:	bd80      	pop	{r7, pc}
    4f48:	1ffff0c8 	.word	0x1ffff0c8
    4f4c:	1ffff34e 	.word	0x1ffff34e
    4f50:	4006a000 	.word	0x4006a000

00004f54 <InterruptRx>:
InterruptRx():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:362
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptRx(SerialCom_TDeviceDataPtr DeviceDataPrv)
{
    4f54:	b590      	push	{r4, r7, lr}
    4f56:	b083      	sub	sp, #12
    4f58:	af00      	add	r7, sp, #0
    4f5a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:365
  register uint16_t Data;              /* Temporary variable for data */

  Data = (uint16_t)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Read an 8-bit character from the receiver */
    4f5c:	4b10      	ldr	r3, [pc, #64]	; (4fa0 <InterruptRx+0x4c>)
    4f5e:	79db      	ldrb	r3, [r3, #7]
    4f60:	b2db      	uxtb	r3, r3
    4f62:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:366
  if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the receive block operation pending? */
    4f64:	687b      	ldr	r3, [r7, #4]
    4f66:	891b      	ldrh	r3, [r3, #8]
    4f68:	2b00      	cmp	r3, #0
    4f6a:	d015      	beq.n	4f98 <InterruptRx+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:367
    *(DeviceDataPrv->InpDataPtr++) = (uint8_t)Data; /* Put an 8-bit character to the receive buffer */
    4f6c:	687b      	ldr	r3, [r7, #4]
    4f6e:	685b      	ldr	r3, [r3, #4]
    4f70:	1c59      	adds	r1, r3, #1
    4f72:	687a      	ldr	r2, [r7, #4]
    4f74:	6051      	str	r1, [r2, #4]
    4f76:	b2e2      	uxtb	r2, r4
    4f78:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:368
    DeviceDataPrv->InpRecvDataNum++;   /* Increment received char. counter */
    4f7a:	687b      	ldr	r3, [r7, #4]
    4f7c:	885b      	ldrh	r3, [r3, #2]
    4f7e:	3301      	adds	r3, #1
    4f80:	b29a      	uxth	r2, r3
    4f82:	687b      	ldr	r3, [r7, #4]
    4f84:	805a      	strh	r2, [r3, #2]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:369
    if (DeviceDataPrv->InpRecvDataNum == DeviceDataPrv->InpDataNumReq) { /* Is the requested number of characters received? */
    4f86:	687b      	ldr	r3, [r7, #4]
    4f88:	885a      	ldrh	r2, [r3, #2]
    4f8a:	687b      	ldr	r3, [r7, #4]
    4f8c:	891b      	ldrh	r3, [r3, #8]
    4f8e:	429a      	cmp	r2, r3
    4f90:	d102      	bne.n	4f98 <InterruptRx+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:370
      DeviceDataPrv->InpDataNumReq = 0x00U; /* If yes then clear number of requested characters to be received. */
    4f92:	687b      	ldr	r3, [r7, #4]
    4f94:	2200      	movs	r2, #0
    4f96:	811a      	strh	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:373
    }
  }
}
    4f98:	46bd      	mov	sp, r7
    4f9a:	b003      	add	sp, #12
    4f9c:	bd90      	pop	{r4, r7, pc}
    4f9e:	46c0      	nop			; (mov r8, r8)
    4fa0:	4006a000 	.word	0x4006a000

00004fa4 <InterruptTx>:
InterruptTx():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:386
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptTx(SerialCom_TDeviceDataPtr DeviceDataPrv)
{
    4fa4:	b580      	push	{r7, lr}
    4fa6:	b082      	sub	sp, #8
    4fa8:	af00      	add	r7, sp, #0
    4faa:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:388

  if (DeviceDataPrv->OutSentDataNum < DeviceDataPrv->OutDataNumReq) { /* Is number of sent characters less than the number of requested incoming characters? */
    4fac:	687b      	ldr	r3, [r7, #4]
    4fae:	895a      	ldrh	r2, [r3, #10]
    4fb0:	687b      	ldr	r3, [r7, #4]
    4fb2:	8a1b      	ldrh	r3, [r3, #16]
    4fb4:	429a      	cmp	r2, r3
    4fb6:	d21c      	bcs.n	4ff2 <InterruptTx+0x4e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:389
    UART0_PDD_PutChar8(UART0_BASE_PTR, *(DeviceDataPrv->OutDataPtr++)); /* Put a 8-bit character to the transmit register */
    4fb8:	4919      	ldr	r1, [pc, #100]	; (5020 <InterruptTx+0x7c>)
    4fba:	687b      	ldr	r3, [r7, #4]
    4fbc:	68db      	ldr	r3, [r3, #12]
    4fbe:	1c58      	adds	r0, r3, #1
    4fc0:	687a      	ldr	r2, [r7, #4]
    4fc2:	60d0      	str	r0, [r2, #12]
    4fc4:	781b      	ldrb	r3, [r3, #0]
    4fc6:	71cb      	strb	r3, [r1, #7]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:390
    DeviceDataPrv->OutSentDataNum++;   /* Increment the counter of sent characters. */
    4fc8:	687b      	ldr	r3, [r7, #4]
    4fca:	895b      	ldrh	r3, [r3, #10]
    4fcc:	3301      	adds	r3, #1
    4fce:	b29a      	uxth	r2, r3
    4fd0:	687b      	ldr	r3, [r7, #4]
    4fd2:	815a      	strh	r2, [r3, #10]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:391
    if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
    4fd4:	687b      	ldr	r3, [r7, #4]
    4fd6:	895a      	ldrh	r2, [r3, #10]
    4fd8:	687b      	ldr	r3, [r7, #4]
    4fda:	8a1b      	ldrh	r3, [r3, #16]
    4fdc:	429a      	cmp	r2, r3
    4fde:	d11c      	bne.n	501a <InterruptTx+0x76>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:392
      DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    4fe0:	687b      	ldr	r3, [r7, #4]
    4fe2:	2200      	movs	r2, #0
    4fe4:	821a      	strh	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:393
      SerialCom_OnBlockSent(DeviceDataPrv->UserDataPtr);
    4fe6:	687b      	ldr	r3, [r7, #4]
    4fe8:	695b      	ldr	r3, [r3, #20]
    4fea:	1c18      	adds	r0, r3, #0
    4fec:	f7fe f8a2 	bl	3134 <SerialCom_OnBlockSent>
    4ff0:	e013      	b.n	501a <InterruptTx+0x76>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:396
    }
  } else {
    UART0_PDD_DisableInterrupt(UART0_BASE_PTR, UART0_PDD_INTERRUPT_TRANSMITTER); /* Disable TX interrupt */
    4ff2:	4b0b      	ldr	r3, [pc, #44]	; (5020 <InterruptTx+0x7c>)
    4ff4:	4a0a      	ldr	r2, [pc, #40]	; (5020 <InterruptTx+0x7c>)
    4ff6:	78d2      	ldrb	r2, [r2, #3]
    4ff8:	b2d1      	uxtb	r1, r2
    4ffa:	227f      	movs	r2, #127	; 0x7f
    4ffc:	400a      	ands	r2, r1
    4ffe:	b2d2      	uxtb	r2, r2
    5000:	70da      	strb	r2, [r3, #3]
    5002:	4b07      	ldr	r3, [pc, #28]	; (5020 <InterruptTx+0x7c>)
    5004:	4a06      	ldr	r2, [pc, #24]	; (5020 <InterruptTx+0x7c>)
    5006:	7992      	ldrb	r2, [r2, #6]
    5008:	b2d2      	uxtb	r2, r2
    500a:	719a      	strb	r2, [r3, #6]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:397
    DeviceDataPrv->SerFlag &= (uint16_t)(~(uint16_t)ENABLED_TX_INT); /* Clear the flag ENABLED_TX_INT */
    500c:	687b      	ldr	r3, [r7, #4]
    500e:	881b      	ldrh	r3, [r3, #0]
    5010:	2201      	movs	r2, #1
    5012:	4393      	bics	r3, r2
    5014:	b29a      	uxth	r2, r3
    5016:	687b      	ldr	r3, [r7, #4]
    5018:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:399
  }
}
    501a:	46bd      	mov	sp, r7
    501c:	b002      	add	sp, #8
    501e:	bd80      	pop	{r7, pc}
    5020:	4006a000 	.word	0x4006a000

00005024 <SerialCom_Interrupt>:
SerialCom_Interrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:412
**         interrupt. Calls InterruptTX/InterruptRX methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(SerialCom_Interrupt)
{
    5024:	b590      	push	{r4, r7, lr}
    5026:	b083      	sub	sp, #12
    5028:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:414
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  SerialCom_TDeviceDataPtr DeviceDataPrv = INT_UART0__DEFAULT_RTOS_ISRPARAM;
    502a:	4b15      	ldr	r3, [pc, #84]	; (5080 <SerialCom_Interrupt+0x5c>)
    502c:	681b      	ldr	r3, [r3, #0]
    502e:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:415
  register uint32_t StatReg = UART0_PDD_ReadInterruptStatusReg(UART0_BASE_PTR); /* Read status register */
    5030:	4b14      	ldr	r3, [pc, #80]	; (5084 <SerialCom_Interrupt+0x60>)
    5032:	791b      	ldrb	r3, [r3, #4]
    5034:	b2db      	uxtb	r3, r3
    5036:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:417

  if (StatReg & (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_FE_MASK | UART0_S1_PF_MASK)) { /* Is any error flag set? */
    5038:	230f      	movs	r3, #15
    503a:	4023      	ands	r3, r4
    503c:	d009      	beq.n	5052 <SerialCom_Interrupt+0x2e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:418
    UART0_PDD_ClearInterruptFlags(UART0_BASE_PTR, (UART0_S1_NF_MASK | UART0_S1_OR_MASK | UART0_S1_FE_MASK | UART0_S1_PF_MASK));
    503e:	4b11      	ldr	r3, [pc, #68]	; (5084 <SerialCom_Interrupt+0x60>)
    5040:	220f      	movs	r2, #15
    5042:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:419
    (void)UART0_PDD_GetChar8(UART0_BASE_PTR); /* Dummy read 8-bit character from receiver */
    5044:	4b0f      	ldr	r3, [pc, #60]	; (5084 <SerialCom_Interrupt+0x60>)
    5046:	79db      	ldrb	r3, [r3, #7]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:420
    StatReg &= (uint32_t)(~(uint32_t)UART0_S1_RDRF_MASK); /* Clear the receive data flag to discard the errorneous data */
    5048:	2320      	movs	r3, #32
    504a:	1c22      	adds	r2, r4, #0
    504c:	439a      	bics	r2, r3
    504e:	1c13      	adds	r3, r2, #0
    5050:	1c1c      	adds	r4, r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:422
  }
  if (StatReg & UART0_S1_RDRF_MASK) {  /* Is the receiver's interrupt flag set? */
    5052:	2320      	movs	r3, #32
    5054:	4023      	ands	r3, r4
    5056:	d003      	beq.n	5060 <SerialCom_Interrupt+0x3c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:423
    InterruptRx(DeviceDataPrv);        /* If yes, then invoke the internal service routine. This routine is inlined. */
    5058:	687b      	ldr	r3, [r7, #4]
    505a:	1c18      	adds	r0, r3, #0
    505c:	f7ff ff7a 	bl	4f54 <InterruptRx>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:425
  }
  if (DeviceDataPrv->SerFlag & ENABLED_TX_INT) { /* Is the transmitter interrupt enabled? */
    5060:	687b      	ldr	r3, [r7, #4]
    5062:	881b      	ldrh	r3, [r3, #0]
    5064:	1c1a      	adds	r2, r3, #0
    5066:	2301      	movs	r3, #1
    5068:	4013      	ands	r3, r2
    506a:	d006      	beq.n	507a <SerialCom_Interrupt+0x56>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:426
    if (StatReg & UART0_S1_TDRE_MASK) { /* Is the transmitter empty? */
    506c:	2380      	movs	r3, #128	; 0x80
    506e:	4023      	ands	r3, r4
    5070:	d003      	beq.n	507a <SerialCom_Interrupt+0x56>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:427
      InterruptTx(DeviceDataPrv);      /* If yes, then invoke the internal service routine. This routine is inlined. */
    5072:	687b      	ldr	r3, [r7, #4]
    5074:	1c18      	adds	r0, r3, #0
    5076:	f7ff ff95 	bl	4fa4 <InterruptTx>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/SerialCom.c:430
    }
  }
}
    507a:	46bd      	mov	sp, r7
    507c:	b003      	add	sp, #12
    507e:	bd90      	pop	{r4, r7, pc}
    5080:	1ffff178 	.word	0x1ffff178
    5084:	4006a000 	.word	0x4006a000

00005088 <TU1_Init>:
TU1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:153
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
{
    5088:	b580      	push	{r7, lr}
    508a:	b084      	sub	sp, #16
    508c:	af00      	add	r7, sp, #0
    508e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:156
  TU1_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID] == NULL) {
    5090:	4b2a      	ldr	r3, [pc, #168]	; (513c <TU1_Init+0xb4>)
    5092:	689b      	ldr	r3, [r3, #8]
    5094:	2b00      	cmp	r3, #0
    5096:	d140      	bne.n	511a <TU1_Init+0x92>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:159
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    5098:	4b29      	ldr	r3, [pc, #164]	; (5140 <TU1_Init+0xb8>)
    509a:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:160
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    509c:	68fb      	ldr	r3, [r7, #12]
    509e:	687a      	ldr	r2, [r7, #4]
    50a0:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:161
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    50a2:	68fb      	ldr	r3, [r7, #12]
    50a4:	2201      	movs	r2, #1
    50a6:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:172
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_PIT__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    50a8:	4b26      	ldr	r3, [pc, #152]	; (5144 <TU1_Init+0xbc>)
    50aa:	68fa      	ldr	r2, [r7, #12]
    50ac:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:174
  /* SIM_SCGC6: PIT=1 */
  SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;
    50ae:	4a26      	ldr	r2, [pc, #152]	; (5148 <TU1_Init+0xc0>)
    50b0:	4925      	ldr	r1, [pc, #148]	; (5148 <TU1_Init+0xc0>)
    50b2:	4b26      	ldr	r3, [pc, #152]	; (514c <TU1_Init+0xc4>)
    50b4:	58cb      	ldr	r3, [r1, r3]
    50b6:	2180      	movs	r1, #128	; 0x80
    50b8:	0409      	lsls	r1, r1, #16
    50ba:	4319      	orrs	r1, r3
    50bc:	4b23      	ldr	r3, [pc, #140]	; (514c <TU1_Init+0xc4>)
    50be:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:176
  /* PIT_MCR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MDIS=0,FRZ=0 */
  PIT_MCR = 0x00U;                     /* Enable device clock */
    50c0:	4b23      	ldr	r3, [pc, #140]	; (5150 <TU1_Init+0xc8>)
    50c2:	2200      	movs	r2, #0
    50c4:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:178
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=0,TEN=0 */
  PIT_TCTRL0 = 0x00U;                  /* Clear control register */
    50c6:	4a22      	ldr	r2, [pc, #136]	; (5150 <TU1_Init+0xc8>)
    50c8:	2384      	movs	r3, #132	; 0x84
    50ca:	005b      	lsls	r3, r3, #1
    50cc:	2100      	movs	r1, #0
    50ce:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:180
  /* PIT_TFLG0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TIF=1 */
  PIT_TFLG0 = PIT_TFLG_TIF_MASK;       /* Clear timer flag register */
    50d0:	4a1f      	ldr	r2, [pc, #124]	; (5150 <TU1_Init+0xc8>)
    50d2:	2386      	movs	r3, #134	; 0x86
    50d4:	005b      	lsls	r3, r3, #1
    50d6:	2101      	movs	r1, #1
    50d8:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:182
  /* PIT_LDVAL0: TSV=0xD1 */
  PIT_LDVAL0 = PIT_LDVAL_TSV(0xD1);    /* Set up load register */
    50da:	4a1d      	ldr	r2, [pc, #116]	; (5150 <TU1_Init+0xc8>)
    50dc:	2380      	movs	r3, #128	; 0x80
    50de:	005b      	lsls	r3, r3, #1
    50e0:	21d1      	movs	r1, #209	; 0xd1
    50e2:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:184
  /* NVIC_IPR5: PRI_22=0x80 */
  NVIC_IPR5 = (uint32_t)((NVIC_IPR5 & (uint32_t)~(uint32_t)(
    50e4:	4a1b      	ldr	r2, [pc, #108]	; (5154 <TU1_Init+0xcc>)
    50e6:	491b      	ldr	r1, [pc, #108]	; (5154 <TU1_Init+0xcc>)
    50e8:	23c5      	movs	r3, #197	; 0xc5
    50ea:	009b      	lsls	r3, r3, #2
    50ec:	58c9      	ldr	r1, [r1, r3]
    50ee:	4b1a      	ldr	r3, [pc, #104]	; (5158 <TU1_Init+0xd0>)
    50f0:	4019      	ands	r1, r3
    50f2:	23c5      	movs	r3, #197	; 0xc5
    50f4:	009b      	lsls	r3, r3, #2
    50f6:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:190
               NVIC_IP_PRI_22(0x7F)
              )) | (uint32_t)(
               NVIC_IP_PRI_22(0x80)
              ));
  /* NVIC_ISER: SETENA|=0x00400000 */
  NVIC_ISER |= NVIC_ISER_SETENA(0x00400000);
    50f8:	4b16      	ldr	r3, [pc, #88]	; (5154 <TU1_Init+0xcc>)
    50fa:	4a16      	ldr	r2, [pc, #88]	; (5154 <TU1_Init+0xcc>)
    50fc:	6812      	ldr	r2, [r2, #0]
    50fe:	2180      	movs	r1, #128	; 0x80
    5100:	03c9      	lsls	r1, r1, #15
    5102:	430a      	orrs	r2, r1
    5104:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:192
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=0,TEN=0 */
  PIT_TCTRL0 = 0x00U;                  /* Set up control register */
    5106:	4a12      	ldr	r2, [pc, #72]	; (5150 <TU1_Init+0xc8>)
    5108:	2384      	movs	r3, #132	; 0x84
    510a:	005b      	lsls	r3, r3, #1
    510c:	2100      	movs	r1, #0
    510e:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:194
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
    5110:	4b0a      	ldr	r3, [pc, #40]	; (513c <TU1_Init+0xb4>)
    5112:	68fa      	ldr	r2, [r7, #12]
    5114:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:195
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    5116:	68fb      	ldr	r3, [r7, #12]
    5118:	e00c      	b.n	5134 <TU1_Init+0xac>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:165
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU1_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU1_ID];
    511a:	4b08      	ldr	r3, [pc, #32]	; (513c <TU1_Init+0xb4>)
    511c:	689b      	ldr	r3, [r3, #8]
    511e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:166
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5120:	68fb      	ldr	r3, [r7, #12]
    5122:	687a      	ldr	r2, [r7, #4]
    5124:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:167
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    5126:	68fb      	ldr	r3, [r7, #12]
    5128:	781b      	ldrb	r3, [r3, #0]
    512a:	3301      	adds	r3, #1
    512c:	b2da      	uxtb	r2, r3
    512e:	68fb      	ldr	r3, [r7, #12]
    5130:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:168
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    5132:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:196
  /* PIT_TCTRL0: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHN=0,TIE=0,TEN=0 */
  PIT_TCTRL0 = 0x00U;                  /* Set up control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    5134:	1c18      	adds	r0, r3, #0
    5136:	46bd      	mov	sp, r7
    5138:	b004      	add	sp, #16
    513a:	bd80      	pop	{r7, pc}
    513c:	1ffff0cc 	.word	0x1ffff0cc
    5140:	1ffff17c 	.word	0x1ffff17c
    5144:	1ffff184 	.word	0x1ffff184
    5148:	40047000 	.word	0x40047000
    514c:	0000103c 	.word	0x0000103c
    5150:	40037000 	.word	0x40037000
    5154:	e000e100 	.word	0xe000e100
    5158:	ff3fffff 	.word	0xff3fffff

0000515c <TU1_Enable>:
TU1_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:218
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU1_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    515c:	b580      	push	{r7, lr}
    515e:	b082      	sub	sp, #8
    5160:	af00      	add	r7, sp, #0
    5162:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:220
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PIT_PDD_EnableDevice(PIT_BASE_PTR, PIT_PDD_CHANNEL_0, PDD_ENABLE); /* Enable the device */
    5164:	4a07      	ldr	r2, [pc, #28]	; (5184 <TU1_Enable+0x28>)
    5166:	4907      	ldr	r1, [pc, #28]	; (5184 <TU1_Enable+0x28>)
    5168:	2384      	movs	r3, #132	; 0x84
    516a:	005b      	lsls	r3, r3, #1
    516c:	58cb      	ldr	r3, [r1, r3]
    516e:	2101      	movs	r1, #1
    5170:	4319      	orrs	r1, r3
    5172:	2384      	movs	r3, #132	; 0x84
    5174:	005b      	lsls	r3, r3, #1
    5176:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:221
  return ERR_OK;
    5178:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:222
}
    517a:	1c18      	adds	r0, r3, #0
    517c:	46bd      	mov	sp, r7
    517e:	b002      	add	sp, #8
    5180:	bd80      	pop	{r7, pc}
    5182:	46c0      	nop			; (mov r8, r8)
    5184:	40037000 	.word	0x40037000

00005188 <TU1_SetEventMask>:
TU1_SetEventMask():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:277
**                           the active clock configuration
**                           ERR_PARAM_MASK - Event mask is not valid
*/
/* ===================================================================*/
LDD_TError TU1_SetEventMask(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask)
{
    5188:	b580      	push	{r7, lr}
    518a:	b082      	sub	sp, #8
    518c:	af00      	add	r7, sp, #0
    518e:	6078      	str	r0, [r7, #4]
    5190:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:281
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  /* Event mask test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((EventMask & ((LDD_TEventMask)~AVAILABLE_EVENTS_MASK)) != 0U) {
    5192:	683a      	ldr	r2, [r7, #0]
    5194:	4b17      	ldr	r3, [pc, #92]	; (51f4 <TU1_SetEventMask+0x6c>)
    5196:	4013      	ands	r3, r2
    5198:	d001      	beq.n	519e <TU1_SetEventMask+0x16>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:282
    return ERR_PARAM_MASK;
    519a:	2380      	movs	r3, #128	; 0x80
    519c:	e025      	b.n	51ea <TU1_SetEventMask+0x62>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:284
  }
  if ((EventMask & LDD_TIMERUNIT_ON_COUNTER_RESTART) != 0U) { /* Is the event enabled? */
    519e:	683a      	ldr	r2, [r7, #0]
    51a0:	2380      	movs	r3, #128	; 0x80
    51a2:	005b      	lsls	r3, r3, #1
    51a4:	4013      	ands	r3, r2
    51a6:	d013      	beq.n	51d0 <TU1_SetEventMask+0x48>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:285
    PIT_PDD_ClearInterruptFlag(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* If yes then clear flag */
    51a8:	4a13      	ldr	r2, [pc, #76]	; (51f8 <TU1_SetEventMask+0x70>)
    51aa:	2386      	movs	r3, #134	; 0x86
    51ac:	005b      	lsls	r3, r3, #1
    51ae:	2101      	movs	r1, #1
    51b0:	50d1      	str	r1, [r2, r3]
    51b2:	4a11      	ldr	r2, [pc, #68]	; (51f8 <TU1_SetEventMask+0x70>)
    51b4:	2380      	movs	r3, #128	; 0x80
    51b6:	005b      	lsls	r3, r3, #1
    51b8:	58d3      	ldr	r3, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:286
    PIT_PDD_EnableInterrupt(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* and enable interrupt */
    51ba:	4a0f      	ldr	r2, [pc, #60]	; (51f8 <TU1_SetEventMask+0x70>)
    51bc:	490e      	ldr	r1, [pc, #56]	; (51f8 <TU1_SetEventMask+0x70>)
    51be:	2384      	movs	r3, #132	; 0x84
    51c0:	005b      	lsls	r3, r3, #1
    51c2:	58cb      	ldr	r3, [r1, r3]
    51c4:	2102      	movs	r1, #2
    51c6:	4319      	orrs	r1, r3
    51c8:	2384      	movs	r3, #132	; 0x84
    51ca:	005b      	lsls	r3, r3, #1
    51cc:	50d1      	str	r1, [r2, r3]
    51ce:	e00b      	b.n	51e8 <TU1_SetEventMask+0x60>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:289
  }
  else {
    PIT_PDD_DisableInterrupt(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* Disable PIT interrupt */
    51d0:	4a09      	ldr	r2, [pc, #36]	; (51f8 <TU1_SetEventMask+0x70>)
    51d2:	4909      	ldr	r1, [pc, #36]	; (51f8 <TU1_SetEventMask+0x70>)
    51d4:	2384      	movs	r3, #132	; 0x84
    51d6:	005b      	lsls	r3, r3, #1
    51d8:	58cb      	ldr	r3, [r1, r3]
    51da:	2102      	movs	r1, #2
    51dc:	1c18      	adds	r0, r3, #0
    51de:	4388      	bics	r0, r1
    51e0:	1c01      	adds	r1, r0, #0
    51e2:	2384      	movs	r3, #132	; 0x84
    51e4:	005b      	lsls	r3, r3, #1
    51e6:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:291
  }
  return ERR_OK;
    51e8:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:292
}
    51ea:	1c18      	adds	r0, r3, #0
    51ec:	46bd      	mov	sp, r7
    51ee:	b002      	add	sp, #8
    51f0:	bd80      	pop	{r7, pc}
    51f2:	46c0      	nop			; (mov r8, r8)
    51f4:	fffffeff 	.word	0xfffffeff
    51f8:	40037000 	.word	0x40037000

000051fc <TU1_Interrupt>:
TU1_Interrupt():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:305
**         and eventually invokes event(s) of the component.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(TU1_Interrupt)
{
    51fc:	b580      	push	{r7, lr}
    51fe:	b082      	sub	sp, #8
    5200:	af00      	add	r7, sp, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:307
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  TU1_TDeviceDataPtr DeviceDataPrv = INT_PIT__DEFAULT_RTOS_ISRPARAM;
    5202:	4b0a      	ldr	r3, [pc, #40]	; (522c <TU1_Interrupt+0x30>)
    5204:	681b      	ldr	r3, [r3, #0]
    5206:	607b      	str	r3, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:309

  PIT_PDD_ClearInterruptFlag(PIT_BASE_PTR, PIT_PDD_CHANNEL_0); /* Clear interrupt flag */
    5208:	4a09      	ldr	r2, [pc, #36]	; (5230 <TU1_Interrupt+0x34>)
    520a:	2386      	movs	r3, #134	; 0x86
    520c:	005b      	lsls	r3, r3, #1
    520e:	2101      	movs	r1, #1
    5210:	50d1      	str	r1, [r2, r3]
    5212:	4a07      	ldr	r2, [pc, #28]	; (5230 <TU1_Interrupt+0x34>)
    5214:	2380      	movs	r3, #128	; 0x80
    5216:	005b      	lsls	r3, r3, #1
    5218:	58d3      	ldr	r3, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:310
  TU1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
    521a:	687b      	ldr	r3, [r7, #4]
    521c:	685b      	ldr	r3, [r3, #4]
    521e:	1c18      	adds	r0, r3, #0
    5220:	f000 fa0a 	bl	5638 <TU1_OnCounterRestart>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU1.c:311
}
    5224:	46bd      	mov	sp, r7
    5226:	b002      	add	sp, #8
    5228:	bd80      	pop	{r7, pc}
    522a:	46c0      	nop			; (mov r8, r8)
    522c:	1ffff184 	.word	0x1ffff184
    5230:	40037000 	.word	0x40037000

00005234 <TU2_Init>:
TU2_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:197
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr)
{
    5234:	b580      	push	{r7, lr}
    5236:	b084      	sub	sp, #16
    5238:	af00      	add	r7, sp, #0
    523a:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:200
  TU2_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID] == NULL) {
    523c:	4b42      	ldr	r3, [pc, #264]	; (5348 <TU2_Init+0x114>)
    523e:	69db      	ldr	r3, [r3, #28]
    5240:	2b00      	cmp	r3, #0
    5242:	d16f      	bne.n	5324 <TU2_Init+0xf0>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:203
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    5244:	4b41      	ldr	r3, [pc, #260]	; (534c <TU2_Init+0x118>)
    5246:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:204
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5248:	68fb      	ldr	r3, [r7, #12]
    524a:	687a      	ldr	r2, [r7, #4]
    524c:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:205
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    524e:	68fb      	ldr	r3, [r7, #12]
    5250:	2201      	movs	r2, #1
    5252:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:215
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* SIM_SCGC6: TPM0=1 */
  SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;
    5254:	4a3e      	ldr	r2, [pc, #248]	; (5350 <TU2_Init+0x11c>)
    5256:	493e      	ldr	r1, [pc, #248]	; (5350 <TU2_Init+0x11c>)
    5258:	4b3e      	ldr	r3, [pc, #248]	; (5354 <TU2_Init+0x120>)
    525a:	58cb      	ldr	r3, [r1, r3]
    525c:	2180      	movs	r1, #128	; 0x80
    525e:	0449      	lsls	r1, r1, #17
    5260:	4319      	orrs	r1, r3
    5262:	4b3c      	ldr	r3, [pc, #240]	; (5354 <TU2_Init+0x120>)
    5264:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:217
  /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=0 */
  TPM0_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
    5266:	4b3c      	ldr	r3, [pc, #240]	; (5358 <TU2_Init+0x124>)
    5268:	2200      	movs	r2, #0
    526a:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:219
  /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNT=0 */
  TPM0_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
    526c:	4b3a      	ldr	r3, [pc, #232]	; (5358 <TU2_Init+0x124>)
    526e:	2200      	movs	r2, #0
    5270:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:221
  /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
    5272:	4b39      	ldr	r3, [pc, #228]	; (5358 <TU2_Init+0x124>)
    5274:	2200      	movs	r2, #0
    5276:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:223
  /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
    5278:	4b37      	ldr	r3, [pc, #220]	; (5358 <TU2_Init+0x124>)
    527a:	2200      	movs	r2, #0
    527c:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:225
  /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
    527e:	4b36      	ldr	r3, [pc, #216]	; (5358 <TU2_Init+0x124>)
    5280:	2200      	movs	r2, #0
    5282:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:227
  /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
    5284:	4b34      	ldr	r3, [pc, #208]	; (5358 <TU2_Init+0x124>)
    5286:	2200      	movs	r2, #0
    5288:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:229
  /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
    528a:	4b33      	ldr	r3, [pc, #204]	; (5358 <TU2_Init+0x124>)
    528c:	2200      	movs	r2, #0
    528e:	62da      	str	r2, [r3, #44]	; 0x2c
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:231
  /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
    5290:	4b31      	ldr	r3, [pc, #196]	; (5358 <TU2_Init+0x124>)
    5292:	2200      	movs	r2, #0
    5294:	635a      	str	r2, [r3, #52]	; 0x34
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:233
  /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=0xFFFF */
  TPM0_MOD = TPM_MOD_MOD(0xFFFF);      /* Set up modulo register */
    5296:	4b30      	ldr	r3, [pc, #192]	; (5358 <TU2_Init+0x124>)
    5298:	4a30      	ldr	r2, [pc, #192]	; (535c <TU2_Init+0x128>)
    529a:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:235
  /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C2SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    529c:	4b2e      	ldr	r3, [pc, #184]	; (5358 <TU2_Init+0x124>)
    529e:	222c      	movs	r2, #44	; 0x2c
    52a0:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:237
  /* TPM0_C2V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C2V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    52a2:	4b2d      	ldr	r3, [pc, #180]	; (5358 <TU2_Init+0x124>)
    52a4:	4a2d      	ldr	r2, [pc, #180]	; (535c <TU2_Init+0x128>)
    52a6:	621a      	str	r2, [r3, #32]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:239
  /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C3SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    52a8:	4b2b      	ldr	r3, [pc, #172]	; (5358 <TU2_Init+0x124>)
    52aa:	222c      	movs	r2, #44	; 0x2c
    52ac:	625a      	str	r2, [r3, #36]	; 0x24
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:241
  /* TPM0_C3V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C3V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    52ae:	4b2a      	ldr	r3, [pc, #168]	; (5358 <TU2_Init+0x124>)
    52b0:	4a2a      	ldr	r2, [pc, #168]	; (535c <TU2_Init+0x128>)
    52b2:	629a      	str	r2, [r3, #40]	; 0x28
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:243
  /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C0SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    52b4:	4b28      	ldr	r3, [pc, #160]	; (5358 <TU2_Init+0x124>)
    52b6:	222c      	movs	r2, #44	; 0x2c
    52b8:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:245
  /* TPM0_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C0V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    52ba:	4b27      	ldr	r3, [pc, #156]	; (5358 <TU2_Init+0x124>)
    52bc:	4a27      	ldr	r2, [pc, #156]	; (535c <TU2_Init+0x128>)
    52be:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:247
  /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM0_C1SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    52c0:	4b25      	ldr	r3, [pc, #148]	; (5358 <TU2_Init+0x124>)
    52c2:	222c      	movs	r2, #44	; 0x2c
    52c4:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:249
  /* TPM0_C1V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xFFFF */
  TPM0_C1V = TPM_CnV_VAL(0xFFFF);      /* Set up channel value register */
    52c6:	4b24      	ldr	r3, [pc, #144]	; (5358 <TU2_Init+0x124>)
    52c8:	4a24      	ldr	r2, [pc, #144]	; (535c <TU2_Init+0x128>)
    52ca:	619a      	str	r2, [r3, #24]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:251
  /* PORTC_PCR3: ISF=0,MUX=4 */
  PORTC_PCR3 = (uint32_t)((PORTC_PCR3 & (uint32_t)~(uint32_t)(
    52cc:	4b24      	ldr	r3, [pc, #144]	; (5360 <TU2_Init+0x12c>)
    52ce:	4a24      	ldr	r2, [pc, #144]	; (5360 <TU2_Init+0x12c>)
    52d0:	68d1      	ldr	r1, [r2, #12]
    52d2:	4a24      	ldr	r2, [pc, #144]	; (5364 <TU2_Init+0x130>)
    52d4:	400a      	ands	r2, r1
    52d6:	2180      	movs	r1, #128	; 0x80
    52d8:	00c9      	lsls	r1, r1, #3
    52da:	430a      	orrs	r2, r1
    52dc:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:258
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* PORTC_PCR4: ISF=0,MUX=4 */
  PORTC_PCR4 = (uint32_t)((PORTC_PCR4 & (uint32_t)~(uint32_t)(
    52de:	4b20      	ldr	r3, [pc, #128]	; (5360 <TU2_Init+0x12c>)
    52e0:	4a1f      	ldr	r2, [pc, #124]	; (5360 <TU2_Init+0x12c>)
    52e2:	6911      	ldr	r1, [r2, #16]
    52e4:	4a1f      	ldr	r2, [pc, #124]	; (5364 <TU2_Init+0x130>)
    52e6:	400a      	ands	r2, r1
    52e8:	2180      	movs	r1, #128	; 0x80
    52ea:	00c9      	lsls	r1, r1, #3
    52ec:	430a      	orrs	r2, r1
    52ee:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:265
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* PORTC_PCR1: ISF=0,MUX=4 */
  PORTC_PCR1 = (uint32_t)((PORTC_PCR1 & (uint32_t)~(uint32_t)(
    52f0:	4b1b      	ldr	r3, [pc, #108]	; (5360 <TU2_Init+0x12c>)
    52f2:	4a1b      	ldr	r2, [pc, #108]	; (5360 <TU2_Init+0x12c>)
    52f4:	6851      	ldr	r1, [r2, #4]
    52f6:	4a1b      	ldr	r2, [pc, #108]	; (5364 <TU2_Init+0x130>)
    52f8:	400a      	ands	r2, r1
    52fa:	2180      	movs	r1, #128	; 0x80
    52fc:	00c9      	lsls	r1, r1, #3
    52fe:	430a      	orrs	r2, r1
    5300:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:272
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* PORTC_PCR2: ISF=0,MUX=4 */
  PORTC_PCR2 = (uint32_t)((PORTC_PCR2 & (uint32_t)~(uint32_t)(
    5302:	4b17      	ldr	r3, [pc, #92]	; (5360 <TU2_Init+0x12c>)
    5304:	4a16      	ldr	r2, [pc, #88]	; (5360 <TU2_Init+0x12c>)
    5306:	6891      	ldr	r1, [r2, #8]
    5308:	4a16      	ldr	r2, [pc, #88]	; (5364 <TU2_Init+0x130>)
    530a:	400a      	ands	r2, r1
    530c:	2180      	movs	r1, #128	; 0x80
    530e:	00c9      	lsls	r1, r1, #3
    5310:	430a      	orrs	r2, r1
    5312:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:279
                PORT_PCR_MUX(0x03)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x04)
               ));
  /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=1,PS=3 */
  TPM0_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control register */
    5314:	4b10      	ldr	r3, [pc, #64]	; (5358 <TU2_Init+0x124>)
    5316:	220b      	movs	r2, #11
    5318:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:281
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID,DeviceDataPrv);
    531a:	4b0b      	ldr	r3, [pc, #44]	; (5348 <TU2_Init+0x114>)
    531c:	68fa      	ldr	r2, [r7, #12]
    531e:	61da      	str	r2, [r3, #28]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:282
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    5320:	68fb      	ldr	r3, [r7, #12]
    5322:	e00c      	b.n	533e <TU2_Init+0x10a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:209
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU2_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
    5324:	4b08      	ldr	r3, [pc, #32]	; (5348 <TU2_Init+0x114>)
    5326:	69db      	ldr	r3, [r3, #28]
    5328:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:210
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    532a:	68fb      	ldr	r3, [r7, #12]
    532c:	687a      	ldr	r2, [r7, #4]
    532e:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:211
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    5330:	68fb      	ldr	r3, [r7, #12]
    5332:	781b      	ldrb	r3, [r3, #0]
    5334:	3301      	adds	r3, #1
    5336:	b2da      	uxtb	r2, r3
    5338:	68fb      	ldr	r3, [r7, #12]
    533a:	701a      	strb	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:212
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    533c:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:283
  /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=1,PS=3 */
  TPM0_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    533e:	1c18      	adds	r0, r3, #0
    5340:	46bd      	mov	sp, r7
    5342:	b004      	add	sp, #16
    5344:	bd80      	pop	{r7, pc}
    5346:	46c0      	nop			; (mov r8, r8)
    5348:	1ffff0cc 	.word	0x1ffff0cc
    534c:	1ffff188 	.word	0x1ffff188
    5350:	40047000 	.word	0x40047000
    5354:	0000103c 	.word	0x0000103c
    5358:	40038000 	.word	0x40038000
    535c:	0000ffff 	.word	0x0000ffff
    5360:	4004b000 	.word	0x4004b000
    5364:	fefff8ff 	.word	0xfefff8ff

00005368 <TU2_GetPeriodTicks>:
TU2_GetPeriodTicks():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:310
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU2_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU2_TValueType *TicksPtr)
{
    5368:	b580      	push	{r7, lr}
    536a:	b084      	sub	sp, #16
    536c:	af00      	add	r7, sp, #0
    536e:	6078      	str	r0, [r7, #4]
    5370:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:314
  uint16_t tmp;

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM0_BASE_PTR));
    5372:	4b0b      	ldr	r3, [pc, #44]	; (53a0 <TU2_GetPeriodTicks+0x38>)
    5374:	689a      	ldr	r2, [r3, #8]
    5376:	1c3b      	adds	r3, r7, #0
    5378:	330e      	adds	r3, #14
    537a:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:315
  *TicksPtr = (TU2_TValueType)++tmp;
    537c:	1c3b      	adds	r3, r7, #0
    537e:	330e      	adds	r3, #14
    5380:	1c3a      	adds	r2, r7, #0
    5382:	320e      	adds	r2, #14
    5384:	8812      	ldrh	r2, [r2, #0]
    5386:	3201      	adds	r2, #1
    5388:	801a      	strh	r2, [r3, #0]
    538a:	683b      	ldr	r3, [r7, #0]
    538c:	1c3a      	adds	r2, r7, #0
    538e:	320e      	adds	r2, #14
    5390:	8812      	ldrh	r2, [r2, #0]
    5392:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:316
  return ERR_OK;                       /* OK */
    5394:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:317
}
    5396:	1c18      	adds	r0, r3, #0
    5398:	46bd      	mov	sp, r7
    539a:	b004      	add	sp, #16
    539c:	bd80      	pop	{r7, pc}
    539e:	46c0      	nop			; (mov r8, r8)
    53a0:	40038000 	.word	0x40038000

000053a4 <TU2_SetOffsetTicks>:
TU2_SetOffsetTicks():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:375
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU2_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU2_TValueType Ticks)
{
    53a4:	b580      	push	{r7, lr}
    53a6:	b082      	sub	sp, #8
    53a8:	af00      	add	r7, sp, #0
    53aa:	6078      	str	r0, [r7, #4]
    53ac:	1cfb      	adds	r3, r7, #3
    53ae:	7019      	strb	r1, [r3, #0]
    53b0:	1c3b      	adds	r3, r7, #0
    53b2:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:379
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  /* Parameter test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
    53b4:	1cfb      	adds	r3, r7, #3
    53b6:	781b      	ldrb	r3, [r3, #0]
    53b8:	2b03      	cmp	r3, #3
    53ba:	d901      	bls.n	53c0 <TU2_SetOffsetTicks+0x1c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:380
    return ERR_PARAM_INDEX;            /* If yes then error */
    53bc:	2382      	movs	r3, #130	; 0x82
    53be:	e013      	b.n	53e8 <TU2_SetOffsetTicks+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:382
  }
  if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
    53c0:	1cfb      	adds	r3, r7, #3
    53c2:	781b      	ldrb	r3, [r3, #0]
    53c4:	4a0a      	ldr	r2, [pc, #40]	; (53f0 <TU2_SetOffsetTicks+0x4c>)
    53c6:	5cd3      	ldrb	r3, [r2, r3]
    53c8:	2b00      	cmp	r3, #0
    53ca:	d001      	beq.n	53d0 <TU2_SetOffsetTicks+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:383
    return ERR_NOTAVAIL;               /* If not then error */
    53cc:	2309      	movs	r3, #9
    53ce:	e00b      	b.n	53e8 <TU2_SetOffsetTicks+0x44>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:385
  }
  TPM_PDD_WriteChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
    53d0:	4908      	ldr	r1, [pc, #32]	; (53f4 <TU2_SetOffsetTicks+0x50>)
    53d2:	1cfb      	adds	r3, r7, #3
    53d4:	781b      	ldrb	r3, [r3, #0]
    53d6:	4a08      	ldr	r2, [pc, #32]	; (53f8 <TU2_SetOffsetTicks+0x54>)
    53d8:	5cd3      	ldrb	r3, [r2, r3]
    53da:	1c3a      	adds	r2, r7, #0
    53dc:	8812      	ldrh	r2, [r2, #0]
    53de:	3301      	adds	r3, #1
    53e0:	00db      	lsls	r3, r3, #3
    53e2:	18cb      	adds	r3, r1, r3
    53e4:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:386
  return ERR_OK;                       /* OK */
    53e6:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU2.c:387
}
    53e8:	1c18      	adds	r0, r3, #0
    53ea:	46bd      	mov	sp, r7
    53ec:	b002      	add	sp, #8
    53ee:	bd80      	pop	{r7, pc}
    53f0:	0000581c 	.word	0x0000581c
    53f4:	40038000 	.word	0x40038000
    53f8:	00005818 	.word	0x00005818

000053fc <TU3_Init>:
TU3_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:171
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU3_Init(LDD_TUserData *UserDataPtr)
{
    53fc:	b580      	push	{r7, lr}
    53fe:	b084      	sub	sp, #16
    5400:	af00      	add	r7, sp, #0
    5402:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:174
  TU3_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU3_ID] == NULL) {
    5404:	4b27      	ldr	r3, [pc, #156]	; (54a4 <TU3_Init+0xa8>)
    5406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    5408:	2b00      	cmp	r3, #0
    540a:	d139      	bne.n	5480 <TU3_Init+0x84>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:177
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    540c:	4b26      	ldr	r3, [pc, #152]	; (54a8 <TU3_Init+0xac>)
    540e:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:178
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5410:	68fb      	ldr	r3, [r7, #12]
    5412:	687a      	ldr	r2, [r7, #4]
    5414:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:179
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    5416:	68fb      	ldr	r3, [r7, #12]
    5418:	2201      	movs	r2, #1
    541a:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:189
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* SIM_SCGC6: TPM1=1 */
  SIM_SCGC6 |= SIM_SCGC6_TPM1_MASK;
    541c:	4a23      	ldr	r2, [pc, #140]	; (54ac <TU3_Init+0xb0>)
    541e:	4923      	ldr	r1, [pc, #140]	; (54ac <TU3_Init+0xb0>)
    5420:	4b23      	ldr	r3, [pc, #140]	; (54b0 <TU3_Init+0xb4>)
    5422:	58cb      	ldr	r3, [r1, r3]
    5424:	2180      	movs	r1, #128	; 0x80
    5426:	0489      	lsls	r1, r1, #18
    5428:	4319      	orrs	r1, r3
    542a:	4b21      	ldr	r3, [pc, #132]	; (54b0 <TU3_Init+0xb4>)
    542c:	50d1      	str	r1, [r2, r3]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:191
  /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=0 */
  TPM1_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
    542e:	4b21      	ldr	r3, [pc, #132]	; (54b4 <TU3_Init+0xb8>)
    5430:	2200      	movs	r2, #0
    5432:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:193
  /* TPM1_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNT=0 */
  TPM1_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
    5434:	4b1f      	ldr	r3, [pc, #124]	; (54b4 <TU3_Init+0xb8>)
    5436:	2200      	movs	r2, #0
    5438:	605a      	str	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:195
  /* TPM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM1_C0SC = 0x00U;                   /* Clear channel status and control register */
    543a:	4b1e      	ldr	r3, [pc, #120]	; (54b4 <TU3_Init+0xb8>)
    543c:	2200      	movs	r2, #0
    543e:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:197
  /* TPM1_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  TPM1_C1SC = 0x00U;                   /* Clear channel status and control register */
    5440:	4b1c      	ldr	r3, [pc, #112]	; (54b4 <TU3_Init+0xb8>)
    5442:	2200      	movs	r2, #0
    5444:	615a      	str	r2, [r3, #20]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:199
  /* TPM1_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=0xCCCC */
  TPM1_MOD = TPM_MOD_MOD(0xCCCC);      /* Set up modulo register */
    5446:	4b1b      	ldr	r3, [pc, #108]	; (54b4 <TU3_Init+0xb8>)
    5448:	4a1b      	ldr	r2, [pc, #108]	; (54b8 <TU3_Init+0xbc>)
    544a:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:201
  /* TPM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=1,MSA=0,ELSB=1,ELSA=1,??=0,DMA=0 */
  TPM1_C0SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel status and control register */
    544c:	4b19      	ldr	r3, [pc, #100]	; (54b4 <TU3_Init+0xb8>)
    544e:	222c      	movs	r2, #44	; 0x2c
    5450:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:203
  /* TPM1_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xBDF4 */
  TPM1_C0V = TPM_CnV_VAL(0xBDF4);      /* Set up channel value register */
    5452:	4b18      	ldr	r3, [pc, #96]	; (54b4 <TU3_Init+0xb8>)
    5454:	4a19      	ldr	r2, [pc, #100]	; (54bc <TU3_Init+0xc0>)
    5456:	611a      	str	r2, [r3, #16]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:205
  /* PORTB_PCR0: ISF=0,MUX=3 */
  PORTB_PCR0 = (uint32_t)((PORTB_PCR0 & (uint32_t)~(uint32_t)(
    5458:	4b19      	ldr	r3, [pc, #100]	; (54c0 <TU3_Init+0xc4>)
    545a:	4a19      	ldr	r2, [pc, #100]	; (54c0 <TU3_Init+0xc4>)
    545c:	6811      	ldr	r1, [r2, #0]
    545e:	4a19      	ldr	r2, [pc, #100]	; (54c4 <TU3_Init+0xc8>)
    5460:	400a      	ands	r2, r1
    5462:	21c0      	movs	r1, #192	; 0xc0
    5464:	0089      	lsls	r1, r1, #2
    5466:	430a      	orrs	r2, r1
    5468:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:211
                PORT_PCR_ISF_MASK |
                PORT_PCR_MUX(0x04)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x03)
               ));
  DeviceDataPrv->Source = TPM_PDD_SYSTEM; /* Store clock source */
    546a:	68fb      	ldr	r3, [r7, #12]
    546c:	2208      	movs	r2, #8
    546e:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:213
  /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=3 */
  TPM1_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x03)); /* Set up status and control register */
    5470:	4b10      	ldr	r3, [pc, #64]	; (54b4 <TU3_Init+0xb8>)
    5472:	2203      	movs	r2, #3
    5474:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:215
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID,DeviceDataPrv);
    5476:	4b0b      	ldr	r3, [pc, #44]	; (54a4 <TU3_Init+0xa8>)
    5478:	68fa      	ldr	r2, [r7, #12]
    547a:	631a      	str	r2, [r3, #48]	; 0x30
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:216
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    547c:	68fb      	ldr	r3, [r7, #12]
    547e:	e00c      	b.n	549a <TU3_Init+0x9e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:183
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU3_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU3_ID];
    5480:	4b08      	ldr	r3, [pc, #32]	; (54a4 <TU3_Init+0xa8>)
    5482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    5484:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:184
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5486:	68fb      	ldr	r3, [r7, #12]
    5488:	687a      	ldr	r2, [r7, #4]
    548a:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:185
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    548c:	68fb      	ldr	r3, [r7, #12]
    548e:	791b      	ldrb	r3, [r3, #4]
    5490:	3301      	adds	r3, #1
    5492:	b2da      	uxtb	r2, r3
    5494:	68fb      	ldr	r3, [r7, #12]
    5496:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:186
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    5498:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:217
  /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,DMA=0,TOF=0,TOIE=0,CPWMS=0,CMOD=0,PS=3 */
  TPM1_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x03)); /* Set up status and control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    549a:	1c18      	adds	r0, r3, #0
    549c:	46bd      	mov	sp, r7
    549e:	b004      	add	sp, #16
    54a0:	bd80      	pop	{r7, pc}
    54a2:	46c0      	nop			; (mov r8, r8)
    54a4:	1ffff0cc 	.word	0x1ffff0cc
    54a8:	1ffff190 	.word	0x1ffff190
    54ac:	40047000 	.word	0x40047000
    54b0:	0000103c 	.word	0x0000103c
    54b4:	40039000 	.word	0x40039000
    54b8:	0000cccc 	.word	0x0000cccc
    54bc:	0000bdf4 	.word	0x0000bdf4
    54c0:	4004a000 	.word	0x4004a000
    54c4:	fefff8ff 	.word	0xfefff8ff

000054c8 <TU3_Enable>:
TU3_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:239
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU3_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    54c8:	b580      	push	{r7, lr}
    54ca:	b084      	sub	sp, #16
    54cc:	af00      	add	r7, sp, #0
    54ce:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:240
  TU3_TDeviceData *DeviceDataPrv = (TU3_TDeviceData *)DeviceDataPtr;
    54d0:	687b      	ldr	r3, [r7, #4]
    54d2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:242

  TPM_PDD_SelectPrescalerSource(TPM1_BASE_PTR, DeviceDataPrv->Source); /* Enable the device */
    54d4:	4b07      	ldr	r3, [pc, #28]	; (54f4 <TU3_Enable+0x2c>)
    54d6:	4a07      	ldr	r2, [pc, #28]	; (54f4 <TU3_Enable+0x2c>)
    54d8:	6812      	ldr	r2, [r2, #0]
    54da:	2198      	movs	r1, #152	; 0x98
    54dc:	1c10      	adds	r0, r2, #0
    54de:	4388      	bics	r0, r1
    54e0:	1c01      	adds	r1, r0, #0
    54e2:	68fa      	ldr	r2, [r7, #12]
    54e4:	6812      	ldr	r2, [r2, #0]
    54e6:	430a      	orrs	r2, r1
    54e8:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:243
  return ERR_OK;
    54ea:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:244
}
    54ec:	1c18      	adds	r0, r3, #0
    54ee:	46bd      	mov	sp, r7
    54f0:	b004      	add	sp, #16
    54f2:	bd80      	pop	{r7, pc}
    54f4:	40039000 	.word	0x40039000

000054f8 <TU3_GetPeriodTicks>:
TU3_GetPeriodTicks():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:297
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU3_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU3_TValueType *TicksPtr)
{
    54f8:	b580      	push	{r7, lr}
    54fa:	b084      	sub	sp, #16
    54fc:	af00      	add	r7, sp, #0
    54fe:	6078      	str	r0, [r7, #4]
    5500:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:301
  uint16_t tmp;

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM1_BASE_PTR));
    5502:	4b0b      	ldr	r3, [pc, #44]	; (5530 <TU3_GetPeriodTicks+0x38>)
    5504:	689a      	ldr	r2, [r3, #8]
    5506:	1c3b      	adds	r3, r7, #0
    5508:	330e      	adds	r3, #14
    550a:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:302
  *TicksPtr = (TU3_TValueType)++tmp;
    550c:	1c3b      	adds	r3, r7, #0
    550e:	330e      	adds	r3, #14
    5510:	1c3a      	adds	r2, r7, #0
    5512:	320e      	adds	r2, #14
    5514:	8812      	ldrh	r2, [r2, #0]
    5516:	3201      	adds	r2, #1
    5518:	801a      	strh	r2, [r3, #0]
    551a:	683b      	ldr	r3, [r7, #0]
    551c:	1c3a      	adds	r2, r7, #0
    551e:	320e      	adds	r2, #14
    5520:	8812      	ldrh	r2, [r2, #0]
    5522:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:303
  return ERR_OK;                       /* OK */
    5524:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:304
}
    5526:	1c18      	adds	r0, r3, #0
    5528:	46bd      	mov	sp, r7
    552a:	b004      	add	sp, #16
    552c:	bd80      	pop	{r7, pc}
    552e:	46c0      	nop			; (mov r8, r8)
    5530:	40039000 	.word	0x40039000

00005534 <TU3_SetOffsetTicks>:
TU3_SetOffsetTicks():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:390
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU3_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU3_TValueType Ticks)
{
    5534:	b580      	push	{r7, lr}
    5536:	b082      	sub	sp, #8
    5538:	af00      	add	r7, sp, #0
    553a:	6078      	str	r0, [r7, #4]
    553c:	1cfb      	adds	r3, r7, #3
    553e:	7019      	strb	r1, [r3, #0]
    5540:	1c3b      	adds	r3, r7, #0
    5542:	801a      	strh	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:394
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  /* Parameter test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
    5544:	1cfb      	adds	r3, r7, #3
    5546:	781b      	ldrb	r3, [r3, #0]
    5548:	2b00      	cmp	r3, #0
    554a:	d001      	beq.n	5550 <TU3_SetOffsetTicks+0x1c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:395
    return ERR_PARAM_INDEX;            /* If yes then error */
    554c:	2382      	movs	r3, #130	; 0x82
    554e:	e00d      	b.n	556c <TU3_SetOffsetTicks+0x38>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:397
  }
  if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
    5550:	2300      	movs	r3, #0
    5552:	2b00      	cmp	r3, #0
    5554:	d001      	beq.n	555a <TU3_SetOffsetTicks+0x26>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:398
    return ERR_NOTAVAIL;               /* If not then error */
    5556:	2309      	movs	r3, #9
    5558:	e008      	b.n	556c <TU3_SetOffsetTicks+0x38>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:400
  }
  TPM_PDD_WriteChannelValueReg(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
    555a:	4906      	ldr	r1, [pc, #24]	; (5574 <TU3_SetOffsetTicks+0x40>)
    555c:	2300      	movs	r3, #0
    555e:	1c3a      	adds	r2, r7, #0
    5560:	8812      	ldrh	r2, [r2, #0]
    5562:	3301      	adds	r3, #1
    5564:	00db      	lsls	r3, r3, #3
    5566:	18cb      	adds	r3, r1, r3
    5568:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:401
  return ERR_OK;                       /* OK */
    556a:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TU3.c:402
}
    556c:	1c18      	adds	r0, r3, #0
    556e:	46bd      	mov	sp, r7
    5570:	b002      	add	sp, #8
    5572:	bd80      	pop	{r7, pc}
    5574:	40039000 	.word	0x40039000

00005578 <TimerIntLdd1_Init>:
TimerIntLdd1_Init():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:145
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TimerIntLdd1_Init(LDD_TUserData *UserDataPtr)
{
    5578:	b580      	push	{r7, lr}
    557a:	b084      	sub	sp, #16
    557c:	af00      	add	r7, sp, #0
    557e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:149
  /* Allocate device structure */
  TimerIntLdd1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    5580:	4b0f      	ldr	r3, [pc, #60]	; (55c0 <TimerIntLdd1_Init+0x48>)
    5582:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:150
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5584:	68fb      	ldr	r3, [r7, #12]
    5586:	687a      	ldr	r2, [r7, #4]
    5588:	609a      	str	r2, [r3, #8]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:151
  DeviceDataPrv->EnUser = FALSE;       /* Set the flag "device disabled" */
    558a:	68fb      	ldr	r3, [r7, #12]
    558c:	2200      	movs	r2, #0
    558e:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:153
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID,DeviceDataPrv);
    5590:	4b0c      	ldr	r3, [pc, #48]	; (55c4 <TimerIntLdd1_Init+0x4c>)
    5592:	68fa      	ldr	r2, [r7, #12]
    5594:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:154
  DeviceDataPrv->LinkedDeviceDataPtr = TU1_Init((LDD_TUserData *)NULL);
    5596:	2000      	movs	r0, #0
    5598:	f7ff fd76 	bl	5088 <TU1_Init>
    559c:	1c02      	adds	r2, r0, #0
    559e:	68fb      	ldr	r3, [r7, #12]
    55a0:	601a      	str	r2, [r3, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:155
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    55a2:	68fb      	ldr	r3, [r7, #12]
    55a4:	681b      	ldr	r3, [r3, #0]
    55a6:	2b00      	cmp	r3, #0
    55a8:	d104      	bne.n	55b4 <TimerIntLdd1_Init+0x3c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:157
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID);
    55aa:	4b06      	ldr	r3, [pc, #24]	; (55c4 <TimerIntLdd1_Init+0x4c>)
    55ac:	2200      	movs	r2, #0
    55ae:	60da      	str	r2, [r3, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:160
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the TimerInt initialization is also unsuccessful */
    55b0:	2300      	movs	r3, #0
    55b2:	e000      	b.n	55b6 <TimerIntLdd1_Init+0x3e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:162
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    55b4:	68fb      	ldr	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:163
}
    55b6:	1c18      	adds	r0, r3, #0
    55b8:	46bd      	mov	sp, r7
    55ba:	b004      	add	sp, #16
    55bc:	bd80      	pop	{r7, pc}
    55be:	46c0      	nop			; (mov r8, r8)
    55c0:	1ffff19c 	.word	0x1ffff19c
    55c4:	1ffff0cc 	.word	0x1ffff0cc

000055c8 <TimerIntLdd1_Enable>:
TimerIntLdd1_Enable():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:184
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TimerIntLdd1_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    55c8:	b580      	push	{r7, lr}
    55ca:	b084      	sub	sp, #16
    55cc:	af00      	add	r7, sp, #0
    55ce:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:185
  TimerIntLdd1_TDeviceData *DeviceDataPrv = (TimerIntLdd1_TDeviceData *)DeviceDataPtr;
    55d0:	687b      	ldr	r3, [r7, #4]
    55d2:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:187

  if (!DeviceDataPrv->EnUser) {        /* Is the device disabled by user? */
    55d4:	68fb      	ldr	r3, [r7, #12]
    55d6:	791b      	ldrb	r3, [r3, #4]
    55d8:	2b00      	cmp	r3, #0
    55da:	d107      	bne.n	55ec <TimerIntLdd1_Enable+0x24>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:188
    DeviceDataPrv->EnUser = TRUE;      /* If yes then set the flag "device enabled" */
    55dc:	68fb      	ldr	r3, [r7, #12]
    55de:	2201      	movs	r2, #1
    55e0:	711a      	strb	r2, [r3, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:189
    (void)TU1_Enable(DeviceDataPrv->LinkedDeviceDataPtr); /* Enable TimerUnit */
    55e2:	68fb      	ldr	r3, [r7, #12]
    55e4:	681b      	ldr	r3, [r3, #0]
    55e6:	1c18      	adds	r0, r3, #0
    55e8:	f7ff fdb8 	bl	515c <TU1_Enable>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:191
  }
  return ERR_OK;
    55ec:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:192
}
    55ee:	1c18      	adds	r0, r3, #0
    55f0:	46bd      	mov	sp, r7
    55f2:	b004      	add	sp, #16
    55f4:	bd80      	pop	{r7, pc}
    55f6:	46c0      	nop			; (mov r8, r8)

000055f8 <TimerIntLdd1_SetEventMask>:
TimerIntLdd1_SetEventMask():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:250
**                           the active clock configuration
**                           ERR_PARAM_MASK - Event mask is not valid
*/
/* ===================================================================*/
LDD_TError TimerIntLdd1_SetEventMask(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask)
{
    55f8:	b580      	push	{r7, lr}
    55fa:	b084      	sub	sp, #16
    55fc:	af00      	add	r7, sp, #0
    55fe:	6078      	str	r0, [r7, #4]
    5600:	6039      	str	r1, [r7, #0]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:251
  TimerIntLdd1_TDeviceData *DeviceDataPrv = (TimerIntLdd1_TDeviceData *)DeviceDataPtr;
    5602:	687b      	ldr	r3, [r7, #4]
    5604:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:255

  /* Event mask test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((EventMask & ((LDD_TEventMask)~AVAILABLE_EVENTS_MASK)) != 0U) {
    5606:	683b      	ldr	r3, [r7, #0]
    5608:	2201      	movs	r2, #1
    560a:	4393      	bics	r3, r2
    560c:	d001      	beq.n	5612 <TimerIntLdd1_SetEventMask+0x1a>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:256
    return ERR_PARAM_MASK;
    560e:	2380      	movs	r3, #128	; 0x80
    5610:	e00e      	b.n	5630 <TimerIntLdd1_SetEventMask+0x38>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258
  }
  return TU1_SetEventMask(DeviceDataPrv->LinkedDeviceDataPtr, ((EventMask & LDD_TIMERINT_ON_INTERRUPT) != 0U) ? LDD_TIMERUNIT_ON_COUNTER_RESTART : (LDD_TEventMask)0U);
    5612:	68fb      	ldr	r3, [r7, #12]
    5614:	681a      	ldr	r2, [r3, #0]
    5616:	6839      	ldr	r1, [r7, #0]
    5618:	2301      	movs	r3, #1
    561a:	400b      	ands	r3, r1
    561c:	d002      	beq.n	5624 <TimerIntLdd1_SetEventMask+0x2c>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258 (discriminator 1)
    561e:	2380      	movs	r3, #128	; 0x80
    5620:	005b      	lsls	r3, r3, #1
    5622:	e000      	b.n	5626 <TimerIntLdd1_SetEventMask+0x2e>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258 (discriminator 2)
    5624:	2300      	movs	r3, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:258 (discriminator 3)
    5626:	1c10      	adds	r0, r2, #0
    5628:	1c19      	adds	r1, r3, #0
    562a:	f7ff fdad 	bl	5188 <TU1_SetEventMask>
    562e:	1c03      	adds	r3, r0, #0
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:259
}
    5630:	1c18      	adds	r0, r3, #0
    5632:	46bd      	mov	sp, r7
    5634:	b004      	add	sp, #16
    5636:	bd80      	pop	{r7, pc}

00005638 <TU1_OnCounterRestart>:
TU1_OnCounterRestart():
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:272
**         eventually invokes event TimerIntLdd1_OnInterrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TU1_OnCounterRestart(LDD_TUserData *UserDataPtr)
{
    5638:	b580      	push	{r7, lr}
    563a:	b084      	sub	sp, #16
    563c:	af00      	add	r7, sp, #0
    563e:	6078      	str	r0, [r7, #4]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:273
  TimerIntLdd1_TDeviceData *DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TimerIntLdd1_ID];
    5640:	4b05      	ldr	r3, [pc, #20]	; (5658 <TU1_OnCounterRestart+0x20>)
    5642:	68db      	ldr	r3, [r3, #12]
    5644:	60fb      	str	r3, [r7, #12]
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:276

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  TimerIntLdd1_OnInterrupt(DeviceDataPrv->UserDataPtr); /* Invoke OnInterrupt event */
    5646:	68fb      	ldr	r3, [r7, #12]
    5648:	689b      	ldr	r3, [r3, #8]
    564a:	1c18      	adds	r0, r3, #0
    564c:	f7fe ff72 	bl	4534 <TimerIntLdd1_OnInterrupt>
/home/marcelo/Documentos/GER/SDP/SDP-2016/KDS/SDP-2016/Debug/../Generated_Code/TimerIntLdd1.c:277
}
    5650:	46bd      	mov	sp, r7
    5652:	b004      	add	sp, #16
    5654:	bd80      	pop	{r7, pc}
    5656:	46c0      	nop			; (mov r8, r8)
    5658:	1ffff0cc 	.word	0x1ffff0cc

0000565c <exit>:
exit():
    565c:	4b08      	ldr	r3, [pc, #32]	; (5680 <exit+0x24>)
    565e:	b510      	push	{r4, lr}
    5660:	1c04      	adds	r4, r0, #0
    5662:	2b00      	cmp	r3, #0
    5664:	d002      	beq.n	566c <exit+0x10>
    5666:	2100      	movs	r1, #0
    5668:	e000      	b.n	566c <exit+0x10>
    566a:	bf00      	nop
    566c:	4b05      	ldr	r3, [pc, #20]	; (5684 <exit+0x28>)
    566e:	6818      	ldr	r0, [r3, #0]
    5670:	6a83      	ldr	r3, [r0, #40]	; 0x28
    5672:	2b00      	cmp	r3, #0
    5674:	d000      	beq.n	5678 <exit+0x1c>
    5676:	4798      	blx	r3
    5678:	1c20      	adds	r0, r4, #0
    567a:	f000 f833 	bl	56e4 <_exit>
    567e:	46c0      	nop			; (mov r8, r8)
    5680:	00000000 	.word	0x00000000
    5684:	00005824 	.word	0x00005824

00005688 <__libc_init_array>:
__libc_init_array():
    5688:	b570      	push	{r4, r5, r6, lr}
    568a:	4b0e      	ldr	r3, [pc, #56]	; (56c4 <__libc_init_array+0x3c>)
    568c:	4d0e      	ldr	r5, [pc, #56]	; (56c8 <__libc_init_array+0x40>)
    568e:	2400      	movs	r4, #0
    5690:	1aed      	subs	r5, r5, r3
    5692:	10ad      	asrs	r5, r5, #2
    5694:	1c1e      	adds	r6, r3, #0
    5696:	42ac      	cmp	r4, r5
    5698:	d004      	beq.n	56a4 <__libc_init_array+0x1c>
    569a:	00a3      	lsls	r3, r4, #2
    569c:	58f3      	ldr	r3, [r6, r3]
    569e:	4798      	blx	r3
    56a0:	3401      	adds	r4, #1
    56a2:	e7f8      	b.n	5696 <__libc_init_array+0xe>
    56a4:	f000 f8c0 	bl	5828 <_init>
    56a8:	4b08      	ldr	r3, [pc, #32]	; (56cc <__libc_init_array+0x44>)
    56aa:	4d09      	ldr	r5, [pc, #36]	; (56d0 <__libc_init_array+0x48>)
    56ac:	2400      	movs	r4, #0
    56ae:	1aed      	subs	r5, r5, r3
    56b0:	10ad      	asrs	r5, r5, #2
    56b2:	1c1e      	adds	r6, r3, #0
    56b4:	42ac      	cmp	r4, r5
    56b6:	d004      	beq.n	56c2 <__libc_init_array+0x3a>
    56b8:	00a3      	lsls	r3, r4, #2
    56ba:	58f3      	ldr	r3, [r6, r3]
    56bc:	4798      	blx	r3
    56be:	3401      	adds	r4, #1
    56c0:	e7f8      	b.n	56b4 <__libc_init_array+0x2c>
    56c2:	bd70      	pop	{r4, r5, r6, pc}
    56c4:	00005848 	.word	0x00005848
    56c8:	00005848 	.word	0x00005848
    56cc:	00005848 	.word	0x00005848
    56d0:	0000584c 	.word	0x0000584c

000056d4 <memset>:
memset():
    56d4:	1c03      	adds	r3, r0, #0
    56d6:	1882      	adds	r2, r0, r2
    56d8:	4293      	cmp	r3, r2
    56da:	d002      	beq.n	56e2 <memset+0xe>
    56dc:	7019      	strb	r1, [r3, #0]
    56de:	3301      	adds	r3, #1
    56e0:	e7fa      	b.n	56d8 <memset+0x4>
    56e2:	4770      	bx	lr

000056e4 <_exit>:
_exit():
    56e4:	e7fe      	b.n	56e4 <_exit>
    56e6:	46c0      	nop			; (mov r8, r8)
$d():
    56e8:	654c0d0a 	.word	0x654c0d0a
    56ec:	203a7466 	.word	0x203a7466
    56f0:	00000000 	.word	0x00000000
    56f4:	69520d0a 	.word	0x69520d0a
    56f8:	00203a67 	.word	0x00203a67
    56fc:	00000b8c 	.word	0x00000b8c
    5700:	00000b3e 	.word	0x00000b3e
    5704:	00000b6c 	.word	0x00000b6c
    5708:	00000ac6 	.word	0x00000ac6
    570c:	00000b6c 	.word	0x00000b6c
    5710:	00000b62 	.word	0x00000b62
    5714:	00000b6c 	.word	0x00000b6c
    5718:	00000ac6 	.word	0x00000ac6
    571c:	00000b3e 	.word	0x00000b3e
    5720:	00000b3e 	.word	0x00000b3e
    5724:	00000b62 	.word	0x00000b62
    5728:	00000ac6 	.word	0x00000ac6
    572c:	00000abe 	.word	0x00000abe
    5730:	00000abe 	.word	0x00000abe
    5734:	00000abe 	.word	0x00000abe
    5738:	00000b72 	.word	0x00000b72
    573c:	00000f30 	.word	0x00000f30
    5740:	00000f2a 	.word	0x00000f2a
    5744:	00000f2a 	.word	0x00000f2a
    5748:	00000f20 	.word	0x00000f20
    574c:	00000e80 	.word	0x00000e80
    5750:	00000e80 	.word	0x00000e80
    5754:	00000f16 	.word	0x00000f16
    5758:	00000f20 	.word	0x00000f20
    575c:	00000e80 	.word	0x00000e80
    5760:	00000f16 	.word	0x00000f16
    5764:	00000e80 	.word	0x00000e80
    5768:	00000f20 	.word	0x00000f20
    576c:	00000e7e 	.word	0x00000e7e
    5770:	00000e7e 	.word	0x00000e7e
    5774:	00000e7e 	.word	0x00000e7e
    5778:	00000fb8 	.word	0x00000fb8
    577c:	00001d0c 	.word	0x00001d0c
    5780:	00001ca8 	.word	0x00001ca8
    5784:	00001cf0 	.word	0x00001cf0
    5788:	00001bd6 	.word	0x00001bd6
    578c:	00001cf0 	.word	0x00001cf0
    5790:	00001ce4 	.word	0x00001ce4
    5794:	00001cf0 	.word	0x00001cf0
    5798:	00001bd6 	.word	0x00001bd6
    579c:	00001ca8 	.word	0x00001ca8
    57a0:	00001ca8 	.word	0x00001ca8
    57a4:	00001ce4 	.word	0x00001ce4
    57a8:	00001bd6 	.word	0x00001bd6
    57ac:	00001bcc 	.word	0x00001bcc
    57b0:	00001bcc 	.word	0x00001bcc
    57b4:	00001bcc 	.word	0x00001bcc
    57b8:	00001f30 	.word	0x00001f30
    57bc:	000025dc 	.word	0x000025dc
    57c0:	000027ca 	.word	0x000027ca
    57c4:	000027ca 	.word	0x000027ca
    57c8:	000025bc 	.word	0x000025bc
    57cc:	000024a6 	.word	0x000024a6
    57d0:	000024a6 	.word	0x000024a6
    57d4:	000025ae 	.word	0x000025ae
    57d8:	000025bc 	.word	0x000025bc
    57dc:	000024a6 	.word	0x000024a6
    57e0:	000025ae 	.word	0x000025ae
    57e4:	000024a6 	.word	0x000024a6
    57e8:	000025bc 	.word	0x000025bc
    57ec:	000024a4 	.word	0x000024a4
    57f0:	000024a4 	.word	0x000024a4
    57f4:	000024a4 	.word	0x000024a4
    57f8:	000027d2 	.word	0x000027d2
    57fc:	00003040 	.word	0x00003040
    5800:	0000306e 	.word	0x0000306e
    5804:	000030a2 	.word	0x000030a2
    5808:	00002ff8 	.word	0x00002ff8
    580c:	000030c6 	.word	0x000030c6

00005810 <Table>:
    5810:	00000201                                ....

00005814 <ChannelToPin>:
    5814:	00004446                                FD..

00005818 <ChannelDevice>:
    5818:	01000302                                ....

0000581c <ChannelMode>:
    581c:	00000000 00000043                       ....C...

00005824 <_global_impure_ptr>:
    5824:	1ffff000                                ....

00005828 <_init>:
$t():
    5828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    582a:	46c0      	nop			; (mov r8, r8)
    582c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    582e:	bc08      	pop	{r3}
    5830:	469e      	mov	lr, r3
    5832:	4770      	bx	lr

00005834 <_fini>:
    5834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5836:	46c0      	nop			; (mov r8, r8)
    5838:	bcf8      	pop	{r3, r4, r5, r6, r7}
    583a:	bc08      	pop	{r3}
    583c:	469e      	mov	lr, r3
    583e:	4770      	bx	lr
